[{"db_id": "concert_singer", "query": "SELECT count(*) from singer ORDER BY  age DESC", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "singer", "ORDER", "BY", "age", "DESC"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "singer", "ORDER", "BY", "age", "DESC"], "question": "Show name, country, age for all singers ordered by age from the oldest to the youngest.", "question_toks": ["Show", "name", ",", "country", ",", "age", "for", "all", "singers", "ordered", "by", "age", "from", "the", "oldest", "to", "the", "youngest", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 13, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "concert_singer", "query": "SELECT count(*) from singer ORDER BY  age DESC", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "singer", "ORDER", "BY", "age", "DESC"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "singer", "ORDER", "BY", "age", "DESC"], "question": "What are the names, countries, and ages for every singer in descending order of age?", "question_toks": ["What", "are", "the", "names", ",", "countries", ",", "and", "ages", "for", "every", "singer", "in", "descending", "order", "of", "age", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 13, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "concert_singer", "query": "SELECT count(*) from singer WHERE  country  =  'France'", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "singer", "WHERE", "country", "=", "'France", "'"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "singer", "WHERE", "country", "=", "value"], "question": "What is the average, minimum, and maximum age of all singers from France?", "question_toks": ["What", "is", "the", "average", ",", "minimum", ",", "and", "maximum", "age", "of", "all", "singers", "from", "France", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"France\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "concert_singer", "query": "SELECT count(*) from singer WHERE  country  =  'France'", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "singer", "WHERE", "country", "=", "'France", "'"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "singer", "WHERE", "country", "=", "value"], "question": "What is the average, minimum, and maximum age for all French singers?", "question_toks": ["What", "is", "the", "average", ",", "minimum", ",", "and", "maximum", "age", "for", "all", "French", "singers", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"France\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "concert_singer", "query": "SELECT count(*) from singer ORDER BY  age LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "singer", "ORDER", "BY", "age", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "singer", "ORDER", "BY", "age", "LIMIT", "1"], "question": "Show the name and the release year of the song by the youngest singer.", "question_toks": ["Show", "the", "name", "and", "the", "release", "year", "of", "the", "song", "by", "the", "youngest", "singer", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 13, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "concert_singer", "query": "SELECT count(*) from singer ORDER BY  age LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "singer", "ORDER", "BY", "age", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "singer", "ORDER", "BY", "age", "LIMIT", "1"], "question": "What are the names and release years for all the songs of the youngest singer?", "question_toks": ["What", "are", "the", "names", "and", "release", "years", "for", "all", "the", "songs", "of", "the", "youngest", "singer", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 13, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "concert_singer", "query": "SELECT count(*) from singer GROUP BY  country", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "singer", "GROUP", "BY", "country"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "singer", "GROUP", "BY", "country"], "question": "Show all countries and the number of singers in each country.", "question_toks": ["Show", "all", "countries", "and", "the", "number", "of", "singers", "in", "each", "country", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "concert_singer", "query": "SELECT count(*) from singer GROUP BY  country", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "singer", "GROUP", "BY", "country"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "singer", "GROUP", "BY", "country"], "question": "How many singers are from each country?", "question_toks": ["How", "many", "singers", "are", "from", "each", "country", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "concert_singer", "query": "SELECT count(*) from stadium WHERE  capacity BETWEEN 5000 AND 10000", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "stadium", "WHERE", "capacity", "BETWEEN", "5000", "AND", "10000"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "stadium", "WHERE", "capacity", "BETWEEN", "5000", "AND", "10000"], "question": "Show location and name for all stadiums with a capacity between 5000 and 10000.", "question_toks": ["Show", "location", "and", "name", "for", "all", "stadiums", "with", "a", "capacity", "between", "5000", "and", "10000", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 1, [0, [0, 4, false], null], 5000.0, 10000.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "concert_singer", "query": "SELECT count(*) from stadium WHERE  capacity BETWEEN 5000 AND 10000", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "stadium", "WHERE", "capacity", "BETWEEN", "5000", "AND", "10000"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "stadium", "WHERE", "capacity", "BETWEEN", "5000", "AND", "10000"], "question": "What are the locations and names of all stations with capacity between 5000 and 10000?", "question_toks": ["What", "are", "the", "locations", "and", "names", "of", "all", "stations", "with", "capacity", "between", "5000", "and", "10000", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 1, [0, [0, 4, false], null], 5000.0, 10000.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "concert_singer", "query": "SELECT count(*) from stadium ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "stadium"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "stadium"], "question": "What is the maximum capacity and the average of all stadiums ?", "question_toks": ["What", "is", "the", "maximum", "capacity", "and", "the", "average", "of", "all", "stadiums", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "concert_singer", "query": "SELECT count(*) from stadium ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "stadium"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "stadium"], "question": "What is the average and maximum capacities for all stadiums ?", "question_toks": ["What", "is", "the", "average", "and", "maximum", "capacities", "for", "all", "stadiums", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "concert_singer", "query": "SELECT count(*) from stadium ORDER BY  average DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "stadium", "ORDER", "BY", "average", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "stadium", "ORDER", "BY", "average", "DESC", "LIMIT", "1"], "question": "What is the name and capacity for the stadium with highest average attendance?", "question_toks": ["What", "is", "the", "name", "and", "capacity", "for", "the", "stadium", "with", "highest", "average", "attendance", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 7, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "concert_singer", "query": "SELECT count(*) from stadium ORDER BY  average DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "stadium", "ORDER", "BY", "average", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "stadium", "ORDER", "BY", "average", "DESC", "LIMIT", "1"], "question": "What is the name and capacity for the stadium with the highest average attendance?", "question_toks": ["What", "is", "the", "name", "and", "capacity", "for", "the", "stadium", "with", "the", "highest", "average", "attendance", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 7, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "concert_singer", "query": "SELECT count(*) from concert GROUP BY  concert.stadium_id", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "concert", "GROUP", "BY", "concert.stadium_id"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "concert", "GROUP", "BY", "concert.stadium_id"], "question": "Show the stadium name and the number of concerts in each stadium.", "question_toks": ["Show", "the", "stadium", "name", "and", "the", "number", "of", "concerts", "in", "each", "stadium", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "concert_singer", "query": "SELECT count(*) from concert GROUP BY  concert.stadium_id", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "concert", "GROUP", "BY", "concert.stadium_id"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "concert", "GROUP", "BY", "concert.stadium_id"], "question": "For each stadium, how many concerts play there?", "question_toks": ["For", "each", "stadium", ",", "how", "many", "concerts", "play", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "concert_singer", "query": "SELECT count(*) from stadium join concert on stadium.Stadium_ID = concert.Stadium_ID WHERE  concert.year  >=  2014 GROUP BY stadium.stadium_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "stadium", "join", "concert", "on", "stadium.Stadium_ID", "=", "concert.Stadium_ID", "WHERE", "concert.year", ">", "=", "2014", "GROUP", "BY", "stadium.stadium_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "stadium", "join", "concert", "on", "stadium.Stadium_ID", "=", "value", "WHERE", "concert.year", ">", "=", "2014", "GROUP", "BY", "stadium.stadium_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "question": "Show the stadium name and capacity with most number of concerts in year 2014 or after.", "question_toks": ["Show", "the", "stadium", "name", "and", "capacity", "with", "most", "number", "of", "concerts", "in", "year", "2014", "or", "after", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 18, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 5, [0, [0, 19, false], null], 2014.0, null]], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "concert_singer", "query": "SELECT count(*) from stadium join concert on stadium.Stadium_ID = concert.Stadium_ID WHERE  concert.year  >  2013 group by stadium.stadium_id order by count(*) desc limit 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "stadium", "join", "concert", "on", "stadium.Stadium_ID", "=", "concert.Stadium_ID", "WHERE", "concert.year", ">", "2013", "group", "by", "stadium.stadium_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "stadium", "join", "concert", "on", "stadium.Stadium_ID", "=", "value", "WHERE", "concert.year", ">", "value", "group", "by", "stadium.stadium_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1"], "question": "What is the name and capacity of the stadium with the most concerts after 2013 ?", "question_toks": ["What", "is", "the", "name", "and", "capacity", "of", "the", "stadium", "with", "the", "most", "concerts", "after", "2013", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 18, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 19, false], null], 2013.0, null]], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "concert_singer", "query": "SELECT count(*) from concert GROUP BY  concert.concert_id", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "concert", "GROUP", "BY", "concert.concert_id"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "concert", "GROUP", "BY", "concert.concert_id"], "question": "Show the name and theme for all concerts and the number of singers in each concert.", "question_toks": ["Show", "the", "name", "and", "theme", "for", "all", "concerts", "and", "the", "number", "of", "singers", "in", "each", "concert", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "concert_singer", "query": "SELECT count(*) from stadium ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "stadium"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "stadium"], "question": "What are the names , themes , and number of singers for every concert ?", "question_toks": ["What", "are", "the", "names", ",", "themes", ",", "and", "number", "of", "singers", "for", "every", "concert", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "concert_singer", "query": "SELECT count(*) from singer GROUP BY  singer.singer_id", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "singer", "GROUP", "BY", "singer.singer_id"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "singer", "GROUP", "BY", "singer.singer_id"], "question": "List singer names and number of concerts for each singer.", "question_toks": ["List", "singer", "names", "and", "number", "of", "concerts", "for", "each", "singer", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "concert_singer", "query": "SELECT count(*) from singer GROUP BY  singer.singer_id", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "singer", "GROUP", "BY", "singer.singer_id"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "singer", "GROUP", "BY", "singer.singer_id"], "question": "What are the names of the singers and number of concerts for each person?", "question_toks": ["What", "are", "the", "names", "of", "the", "singers", "and", "number", "of", "concerts", "for", "each", "person", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "concert_singer", "query": "SELECT count(*) from singer WHERE  song_name LIKE '%Hey%'", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "singer", "WHERE", "song_name", "LIKE", "'", "%", "Hey", "%", "'"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "singer", "WHERE", "song_name", "LIKE", "'", "%", "Hey", "%", "'"], "question": "what is the name and nation of the singer who have a song having 'Hey' in its name?", "question_toks": ["what", "is", "the", "name", "and", "nation", "of", "the", "singer", "who", "have", "a", "song", "having", "'Hey", "'", "in", "its", "name", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 9, [0, [0, 11, false], null], "\"%Hey%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "concert_singer", "query": "SELECT count(*) from singer WHERE  song_name LIKE '%Hey%'", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "singer", "WHERE", "song_name", "LIKE", "'", "%", "Hey", "%", "'"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "singer", "WHERE", "song_name", "LIKE", "'", "%", "Hey", "%", "'"], "question": "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?", "question_toks": ["What", "is", "the", "name", "and", "country", "of", "origin", "of", "every", "singer", "who", "has", "a", "song", "with", "the", "word", "'Hey", "'", "in", "its", "title", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 9, [0, [0, 11, false], null], "\"%Hey%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "pets_1", "query": "SELECT count(*) from pets GROUP BY  petType", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "pets", "GROUP", "BY", "petType"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "pets", "GROUP", "BY", "petType"], "question": "Find the maximum weight for each type of pet. List the maximum weight and pet type.", "question_toks": ["Find", "the", "maximum", "weight", "for", "each", "type", "of", "pet", ".", "List", "the", "maximum", "weight", "and", "pet", "type", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "pets_1", "query": "SELECT count(*) from pets GROUP BY  petType", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "pets", "GROUP", "BY", "petType"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "pets", "GROUP", "BY", "petType"], "question": "List the maximum weight and type for each type of pet.", "question_toks": ["List", "the", "maximum", "weight", "and", "type", "for", "each", "type", "of", "pet", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "pets_1", "query": "SELECT count(*) from pets ORDER BY  pet_age LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "pets", "ORDER", "BY", "pet_age", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "pets", "ORDER", "BY", "pet_age", "LIMIT", "1"], "question": "Find the type and weight of the youngest pet.", "question_toks": ["Find", "the", "type", "and", "weight", "of", "the", "youngest", "pet", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 13, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "pets_1", "query": "SELECT count(*) from pets ORDER BY  pet_age LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "pets", "ORDER", "BY", "pet_age", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "pets", "ORDER", "BY", "pet_age", "LIMIT", "1"], "question": "What type of pet is the youngest animal, and how much does it weigh?", "question_toks": ["What", "type", "of", "pet", "is", "the", "youngest", "animal", ",", "and", "how", "much", "does", "it", "weigh", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 13, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "pets_1", "query": "SELECT count(*) from pets WHERE  pet_age  >  1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "pets", "WHERE", "pet_age", ">", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "pets", "WHERE", "pet_age", ">", "value"], "question": "Find the id and weight of all pets whose age is older than 1.", "question_toks": ["Find", "the", "id", "and", "weight", "of", "all", "pets", "whose", "age", "is", "older", "than", "1", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "pets_1", "query": "SELECT count(*) from pets WHERE  pet_age  >  1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "pets", "WHERE", "pet_age", ">", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "pets", "WHERE", "pet_age", ">", "value"], "question": "What is the id and weight of every pet who is older than 1?", "question_toks": ["What", "is", "the", "id", "and", "weight", "of", "every", "pet", "who", "is", "older", "than", "1", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "pets_1", "query": "SELECT count(*) from pets GROUP BY  pettype", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "pets", "GROUP", "BY", "pettype"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "pets", "GROUP", "BY", "pettype"], "question": "Find the average and maximum age for each type of pet.", "question_toks": ["Find", "the", "average", "and", "maximum", "age", "for", "each", "type", "of", "pet", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "pets_1", "query": "SELECT count(*) from pets GROUP BY  pettype", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "pets", "GROUP", "BY", "pettype"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "pets", "GROUP", "BY", "pettype"], "question": "What is the average and maximum age for each pet type?", "question_toks": ["What", "is", "the", "average", "and", "maximum", "age", "for", "each", "pet", "type", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "pets_1", "query": "SELECT count(*) from pets GROUP BY  pettype", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "pets", "GROUP", "BY", "pettype"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "pets", "GROUP", "BY", "pettype"], "question": "Find the average weight for each pet type.", "question_toks": ["Find", "the", "average", "weight", "for", "each", "pet", "type", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "pets_1", "query": "SELECT count(*) from pets GROUP BY  pettype", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "pets", "GROUP", "BY", "pettype"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "pets", "GROUP", "BY", "pettype"], "question": "What is the average weight for each type of pet?", "question_toks": ["What", "is", "the", "average", "weight", "for", "each", "type", "of", "pet", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "pets_1", "query": "SELECT count(*) from Student ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Student"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Student"], "question": "Find the first name and age of students who have a pet.", "question_toks": ["Find", "the", "first", "name", "and", "age", "of", "students", "who", "have", "a", "pet", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "pets_1", "query": "SELECT count(*) from Student ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Student"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Student"], "question": "What are the different first names and ages of the students who do have pets?", "question_toks": ["What", "are", "the", "different", "first", "names", "and", "ages", "of", "the", "students", "who", "do", "have", "pets", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "pets_1", "query": "SELECT count(*) from Student GROUP BY  student.stuid", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Student", "GROUP", "BY", "student.stuid"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Student", "GROUP", "BY", "student.stuid"], "question": "Find the number of pets for each student who has any pet and student id.", "question_toks": ["Find", "the", "number", "of", "pets", "for", "each", "student", "who", "has", "any", "pet", "and", "student", "id", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "pets_1", "query": "SELECT count(*) from Student ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Student"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Student"], "question": "For students who have pets , how many pets does each student have ? list their ids instead of names .", "question_toks": ["For", "students", "who", "have", "pets", ",", "how", "many", "pets", "does", "each", "student", "have", "?", "list", "their", "ids", "instead", "of", "names", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "pets_1", "query": "SELECT count(*) from Student GROUP BY  student.stuid HAVING count(*)  >  1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Student", "GROUP", "BY", "student.stuid", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Student", "GROUP", "BY", "student.stuid", "HAVING", "count", "(", "*", ")", ">", "value"], "question": "Find the first name and gender of student who have more than one pet.", "question_toks": ["Find", "the", "first", "name", "and", "gender", "of", "student", "who", "have", "more", "than", "one", "pet", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "pets_1", "query": "SELECT count(*) from Student GROUP BY  student.stuid HAVING count(*)  >  1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Student", "GROUP", "BY", "student.stuid", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Student", "GROUP", "BY", "student.stuid", "HAVING", "count", "(", "*", ")", ">", "value"], "question": "What is the first name and gender of the all the students who have more than one pet?", "question_toks": ["What", "is", "the", "first", "name", "and", "gender", "of", "the", "all", "the", "students", "who", "have", "more", "than", "one", "pet", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "car_1", "query": "SELECT count(*) from continents GROUP BY  CONTINENTS.ContId;", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "continents", "GROUP", "BY", "CONTINENTS.ContId", ";"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "continents", "GROUP", "BY", "CONTINENTS.ContId", ";"], "question": "How many countries does each continent have? List the continent id, continent name and the number of countries.", "question_toks": ["How", "many", "countries", "does", "each", "continent", "have", "?", "List", "the", "continent", "id", ",", "continent", "name", "and", "the", "number", "of", "countries", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "car_1", "query": "SELECT count(*) from continents GROUP BY  CONTINENTS.ContId;", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "continents", "GROUP", "BY", "CONTINENTS.ContId", ";"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "continents", "GROUP", "BY", "CONTINENTS.ContId", ";"], "question": "For each continent, list its id, name, and how many countries it has?", "question_toks": ["For", "each", "continent", ",", "list", "its", "id", ",", "name", ",", "and", "how", "many", "countries", "it", "has", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "car_1", "query": "SELECT count(*) from car_makers GROUP BY  CAR_MAKERS.Id;", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "car_makers", "GROUP", "BY", "CAR_MAKERS.Id", ";"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "car_makers", "GROUP", "BY", "CAR_MAKERS.Id", ";"], "question": "How many models does each car maker produce? List maker full name, id and the number.", "question_toks": ["How", "many", "models", "does", "each", "car", "maker", "produce", "?", "List", "maker", "full", "name", ",", "id", "and", "the", "number", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "car_1", "query": "SELECT count(*) from car_makers GROUP BY  CAR_MAKERS.Id;", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "car_makers", "GROUP", "BY", "CAR_MAKERS.Id", ";"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "car_makers", "GROUP", "BY", "CAR_MAKERS.Id", ";"], "question": "What is the full name of each car maker, along with its id and how many models it produces?", "question_toks": ["What", "is", "the", "full", "name", "of", "each", "car", "maker", ",", "along", "with", "its", "id", "and", "how", "many", "models", "it", "produces", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "car_1", "query": "SELECT count(*) from continents GROUP BY  CONTINENTS.Continent;", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "continents", "GROUP", "BY", "CONTINENTS.Continent", ";"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "continents", "GROUP", "BY", "CONTINENTS.Continent", ";"], "question": "How many car makers are there in each continents? List the continent name and the count.", "question_toks": ["How", "many", "car", "makers", "are", "there", "in", "each", "continents", "?", "List", "the", "continent", "name", "and", "the", "count", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "car_1", "query": "SELECT count(*) from continents GROUP BY  CONTINENTS.Continent;", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "continents", "GROUP", "BY", "CONTINENTS.Continent", ";"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "continents", "GROUP", "BY", "CONTINENTS.Continent", ";"], "question": "What is the name of each continent and how many car makers are there in each one?", "question_toks": ["What", "is", "the", "name", "of", "each", "continent", "and", "how", "many", "car", "makers", "are", "there", "in", "each", "one", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "car_1", "query": "SELECT count(*) from continents ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "continents"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "continents"], "question": "How many car models are produced by each maker ? Only list the count and the maker full name .", "question_toks": ["How", "many", "car", "models", "are", "produced", "by", "each", "maker", "?", "Only", "list", "the", "count", "and", "the", "maker", "full", "name", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "car_1", "query": "SELECT count(*) from car_makers GROUP BY  CAR_MAKERS.id;", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "car_makers", "GROUP", "BY", "CAR_MAKERS.id", ";"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "car_makers", "GROUP", "BY", "CAR_MAKERS.id", ";"], "question": "What is the number of car models that are produced by each maker and what is the id and full name of each maker?", "question_toks": ["What", "is", "the", "number", "of", "car", "models", "that", "are", "produced", "by", "each", "maker", "and", "what", "is", "the", "id", "and", "full", "name", "of", "each", "maker", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "car_1", "query": "SELECT count(*) from MODEL_LIST; ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "MODEL_LIST", ";"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "MODEL_LIST", ";"], "question": "What are all the makers and models?", "question_toks": ["What", "are", "all", "the", "makers", "and", "models", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "car_1", "query": "SELECT count(*) from MODEL_LIST; ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "MODEL_LIST", ";"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "MODEL_LIST", ";"], "question": "What are the makers and models?", "question_toks": ["What", "are", "the", "makers", "and", "models", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "car_1", "query": "SELECT count(*) from countries GROUP BY  COUNTRIES.CountryId HAVING count(*)  >=  1;", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "countries", "GROUP", "BY", "COUNTRIES.CountryId", "HAVING", "count", "(", "*", ")", ">", "=", "1", ";"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "countries", "GROUP", "BY", "COUNTRIES.CountryId", "HAVING", "count", "(", "*", ")", ">", "=", "1", ";"], "question": "What are the countries having at least one car maker? List name and id.", "question_toks": ["What", "are", "the", "countries", "having", "at", "least", "one", "car", "maker", "?", "List", "name", "and", "id", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 5, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "car_1", "query": "SELECT count(*) from countries GROUP BY  COUNTRIES.CountryId HAVING count(*)  >=  1;", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "countries", "GROUP", "BY", "COUNTRIES.CountryId", "HAVING", "count", "(", "*", ")", ">", "=", "1", ";"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "countries", "GROUP", "BY", "COUNTRIES.CountryId", "HAVING", "count", "(", "*", ")", ">", "=", "1", ";"], "question": "What are the names and ids of all countries with at least one car maker?", "question_toks": ["What", "are", "the", "names", "and", "ids", "of", "all", "countries", "with", "at", "least", "one", "car", "maker", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 5, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "car_1", "query": "SELECT count(*) from CARS_DATA GROUP BY  YEAR;", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "CARS_DATA", "GROUP", "BY", "YEAR", ";"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "CARS_DATA", "GROUP", "BY", "YEAR", ";"], "question": "What is the average weight of cars each year?", "question_toks": ["What", "is", "the", "average", "weight", "of", "cars", "each", "year", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "car_1", "query": "SELECT count(*) from CARS_DATA GROUP BY  YEAR;", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "CARS_DATA", "GROUP", "BY", "YEAR", ";"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "CARS_DATA", "GROUP", "BY", "YEAR", ";"], "question": "What is the average weight and year for each year?", "question_toks": ["What", "is", "the", "average", "weight", "and", "year", "for", "each", "year", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "car_1", "query": "SELECT count(*) from cars_data WHERE  CARS_DATA.cylinders  =  3 ORDER BY CARS_DATA.horsepower DESC LIMIT 1;", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "cars_data", "WHERE", "CARS_DATA.cylinders", "=", "3", "ORDER", "BY", "CARS_DATA.horsepower", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "cars_data", "WHERE", "CARS_DATA.cylinders", "=", "value", "ORDER", "BY", "CARS_DATA.horsepower", "DESC", "LIMIT", "1", ";"], "question": "What is the maximum horsepower and the make of the car models with 3 cylinders?", "question_toks": ["What", "is", "the", "maximum", "horsepower", "and", "the", "make", "of", "the", "car", "models", "with", "3", "cylinders", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 3.0, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "car_1", "query": "SELECT count(*) from cars_data WHERE  CARS_DATA.cylinders  =  3 ORDER BY CARS_DATA.horsepower DESC LIMIT 1;", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "cars_data", "WHERE", "CARS_DATA.cylinders", "=", "3", "ORDER", "BY", "CARS_DATA.horsepower", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "cars_data", "WHERE", "CARS_DATA.cylinders", "=", "value", "ORDER", "BY", "CARS_DATA.horsepower", "DESC", "LIMIT", "1", ";"], "question": "What is the largest amount of horsepower for the models with 3 cylinders and what make is it?", "question_toks": ["What", "is", "the", "largest", "amount", "of", "horsepower", "for", "the", "models", "with", "3", "cylinders", "and", "what", "make", "is", "it", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 3.0, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "car_1", "query": "SELECT count(*) from CARS_DATA GROUP BY  Cylinders;", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "CARS_DATA", "GROUP", "BY", "Cylinders", ";"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "CARS_DATA", "GROUP", "BY", "Cylinders", ";"], "question": "What is the maximum accelerate for different number of cylinders?", "question_toks": ["What", "is", "the", "maximum", "accelerate", "for", "different", "number", "of", "cylinders", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "car_1", "query": "SELECT count(*) from CARS_DATA GROUP BY  Cylinders;", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "CARS_DATA", "GROUP", "BY", "Cylinders", ";"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "CARS_DATA", "GROUP", "BY", "Cylinders", ";"], "question": "What is the maximum accelerate for all the different cylinders?", "question_toks": ["What", "is", "the", "maximum", "accelerate", "for", "all", "the", "different", "cylinders", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "car_1", "query": "SELECT count(*) from car_makers GROUP BY  CAR_MAKERS.Id HAVING count(*)  >  3;", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "car_makers", "GROUP", "BY", "CAR_MAKERS.Id", "HAVING", "count", "(", "*", ")", ">", "3", ";"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "car_makers", "GROUP", "BY", "CAR_MAKERS.Id", "HAVING", "count", "(", "*", ")", ">", "value"], "question": "Which makers designed more than 3 car models? List full name and the id.", "question_toks": ["Which", "makers", "designed", "more", "than", "3", "car", "models", "?", "List", "full", "name", "and", "the", "id", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "car_1", "query": "SELECT count(*) from car_makers GROUP BY  CAR_MAKERS.Id HAVING count(*)  >  3;", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "car_makers", "GROUP", "BY", "CAR_MAKERS.Id", "HAVING", "count", "(", "*", ")", ">", "3", ";"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "car_makers", "GROUP", "BY", "CAR_MAKERS.Id", "HAVING", "count", "(", "*", ")", ">", "value"], "question": "What are the names and ids of all makers with more than 3 models?", "question_toks": ["What", "are", "the", "names", "and", "ids", "of", "all", "makers", "with", "more", "than", "3", "models", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "car_1", "query": "SELECT count(*) from continents ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "continents"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "continents"], "question": "Which are the car makers which produce at least 2 models and more than 3 car makers ? List the id and the maker .", "question_toks": ["Which", "are", "the", "car", "makers", "which", "produce", "at", "least", "2", "models", "and", "more", "than", "3", "car", "makers", "?", "List", "the", "id", "and", "the", "maker", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "car_1", "query": "SELECT count(*) from continents ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "continents"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "continents"], "question": "What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ?", "question_toks": ["What", "are", "the", "ids", "and", "names", "of", "all", "countries", "that", "either", "have", "more", "than", "3", "car", "makers", "or", "produce", "fiat", "model", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "flight_2", "query": "SELECT count(*) from AIRLINES WHERE  Country  =  \"USA\"", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "AIRLINES", "WHERE", "Country", "=", "``", "USA", "''"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "AIRLINES", "WHERE", "Country", "=", "value"], "question": "List all airline names and their abbreviations in \"USA\".", "question_toks": ["List", "all", "airline", "names", "and", "their", "abbreviations", "in", "``", "USA", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "flight_2", "query": "SELECT count(*) from AIRLINES WHERE  Country  =  \"USA\"", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "AIRLINES", "WHERE", "Country", "=", "``", "USA", "''"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "AIRLINES", "WHERE", "Country", "=", "value"], "question": "What are the airline names and abbreviations for airlines in the USA?", "question_toks": ["What", "are", "the", "airline", "names", "and", "abbreviations", "for", "airlines", "in", "the", "USA", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "flight_2", "query": "SELECT count(*) from AIRPORTS WHERE  city  =  \"Anthony\"", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "AIRPORTS", "WHERE", "city", "=", "``", "Anthony", "''"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "AIRPORTS", "WHERE", "city", "=", "value"], "question": "List the airport code and name in the city of Anthony.", "question_toks": ["List", "the", "airport", "code", "and", "name", "in", "the", "city", "of", "Anthony", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Anthony\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "flight_2", "query": "SELECT count(*) from AIRPORTS WHERE  city  =  \"Anthony\"", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "AIRPORTS", "WHERE", "city", "=", "``", "Anthony", "''"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "AIRPORTS", "WHERE", "city", "=", "value"], "question": "Give the airport code and airport name corresonding to the city Anthony.", "question_toks": ["Give", "the", "airport", "code", "and", "airport", "name", "corresonding", "to", "the", "city", "Anthony", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Anthony\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "flight_2", "query": "SELECT count(*) from AIRPORTS WHERE  AirportName  =  \"Alton\"", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "AIRPORTS", "WHERE", "AirportName", "=", "``", "Alton", "''"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "AIRPORTS", "WHERE", "AirportName", "=", "value"], "question": "Which city and country is the Alton airport at?", "question_toks": ["Which", "city", "and", "country", "is", "the", "Alton", "airport", "at", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Alton\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "flight_2", "query": "SELECT count(*) from AIRPORTS WHERE  AirportName  =  \"Alton\"", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "AIRPORTS", "WHERE", "AirportName", "=", "``", "Alton", "''"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "AIRPORTS", "WHERE", "AirportName", "=", "value"], "question": "Give the city and country for the Alton airport.", "question_toks": ["Give", "the", "city", "and", "country", "for", "the", "Alton", "airport", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Alton\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "flight_2", "query": "SELECT count(*) from airlines GROUP BY  AIRLINES.Airline ORDER BY count(*) LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "airlines", "GROUP", "BY", "AIRLINES.Airline", "ORDER", "BY", "count", "(", "*", ")", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "airlines", "GROUP", "BY", "AIRLINES.Airline", "ORDER", "BY", "count", "(", "*", ")", "LIMIT", "1"], "question": "Find the abbreviation and country of the airline that has fewest number of flights?", "question_toks": ["Find", "the", "abbreviation", "and", "country", "of", "the", "airline", "that", "has", "fewest", "number", "of", "flights", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "flight_2", "query": "SELECT count(*) from airlines GROUP BY  AIRLINES.Airline ORDER BY count(*) LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "airlines", "GROUP", "BY", "AIRLINES.Airline", "ORDER", "BY", "count", "(", "*", ")", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "airlines", "GROUP", "BY", "AIRLINES.Airline", "ORDER", "BY", "count", "(", "*", ")", "LIMIT", "1"], "question": "What is the abbreviation of the airilne has the fewest flights and what country is it in?", "question_toks": ["What", "is", "the", "abbreviation", "of", "the", "airilne", "has", "the", "fewest", "flights", "and", "what", "country", "is", "it", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "employee_hire_evaluation", "query": "SELECT count(*) from employee GROUP BY  city", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "employee", "GROUP", "BY", "city"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "employee", "GROUP", "BY", "city"], "question": "What is the number of employees from each city?", "question_toks": ["What", "is", "the", "number", "of", "employees", "from", "each", "city", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "employee_hire_evaluation", "query": "SELECT count(*) from employee GROUP BY  city", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "employee", "GROUP", "BY", "city"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "employee", "GROUP", "BY", "city"], "question": "Count the number of employees for each city.", "question_toks": ["Count", "the", "number", "of", "employees", "for", "each", "city", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "employee_hire_evaluation", "query": "SELECT count(*) from shop GROUP BY  LOCATION", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "shop", "GROUP", "BY", "LOCATION"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "shop", "GROUP", "BY", "LOCATION"], "question": "Find the number of shops in each location.", "question_toks": ["Find", "the", "number", "of", "shops", "in", "each", "location", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "employee_hire_evaluation", "query": "SELECT count(*) from shop GROUP BY  LOCATION", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "shop", "GROUP", "BY", "LOCATION"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "shop", "GROUP", "BY", "LOCATION"], "question": "How many shops are there in each location?", "question_toks": ["How", "many", "shops", "are", "there", "in", "each", "location", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "employee_hire_evaluation", "query": "SELECT count(*) from shop ORDER BY  number_products DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "shop", "ORDER", "BY", "number_products", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "shop", "ORDER", "BY", "number_products", "DESC", "LIMIT", "1"], "question": "Find the manager name and district of the shop whose number of products is the largest.", "question_toks": ["Find", "the", "manager", "name", "and", "district", "of", "the", "shop", "whose", "number", "of", "products", "is", "the", "largest", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 9, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "employee_hire_evaluation", "query": "SELECT count(*) from shop ORDER BY  number_products DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "shop", "ORDER", "BY", "number_products", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "shop", "ORDER", "BY", "number_products", "DESC", "LIMIT", "1"], "question": "What are the manager name and district of the shop that sells the largest number of products?", "question_toks": ["What", "are", "the", "manager", "name", "and", "district", "of", "the", "shop", "that", "sells", "the", "largest", "number", "of", "products", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 9, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "employee_hire_evaluation", "query": "SELECT count(*) from shop ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "shop"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "shop"], "question": "find the minimum and maximum number of products of all stores.", "question_toks": ["find", "the", "minimum", "and", "maximum", "number", "of", "products", "of", "all", "stores", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "employee_hire_evaluation", "query": "SELECT count(*) from shop ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "shop"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "shop"], "question": "What are the minimum and maximum number of products across all the shops?", "question_toks": ["What", "are", "the", "minimum", "and", "maximum", "number", "of", "products", "across", "all", "the", "shops", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "employee_hire_evaluation", "query": "SELECT count(*) from shop ORDER BY  number_products DESC", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "shop", "ORDER", "BY", "number_products", "DESC"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "shop", "ORDER", "BY", "number_products", "DESC"], "question": "Return the name, location and district of all shops in descending order of number of products.", "question_toks": ["Return", "the", "name", ",", "location", "and", "district", "of", "all", "shops", "in", "descending", "order", "of", "number", "of", "products", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 9, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "employee_hire_evaluation", "query": "SELECT count(*) from shop ORDER BY  number_products DESC", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "shop", "ORDER", "BY", "number_products", "DESC"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "shop", "ORDER", "BY", "number_products", "DESC"], "question": "Sort all the shops by number products in descending order, and return the name, location and district of each shop.", "question_toks": ["Sort", "all", "the", "shops", "by", "number", "products", "in", "descending", "order", ",", "and", "return", "the", "name", ",", "location", "and", "district", "of", "each", "shop", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 9, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "employee_hire_evaluation", "query": "SELECT count(*) from shop GROUP BY  shop.name", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "shop", "GROUP", "BY", "shop.name"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "shop", "GROUP", "BY", "shop.name"], "question": "Find the number of employees hired in each shop; show the shop name as well.", "question_toks": ["Find", "the", "number", "of", "employees", "hired", "in", "each", "shop", ";", "show", "the", "shop", "name", "as", "well", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "employee_hire_evaluation", "query": "SELECT count(*) from shop GROUP BY  shop.name", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "shop", "GROUP", "BY", "shop.name"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "shop", "GROUP", "BY", "shop.name"], "question": "For each shop, return the number of employees working there and the name of the shop.", "question_toks": ["For", "each", "shop", ",", "return", "the", "number", "of", "employees", "working", "there", "and", "the", "name", "of", "the", "shop", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) from Documents ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Documents"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Documents"], "question": "List document IDs, document names, and document descriptions for all documents.", "question_toks": ["List", "document", "IDs", ",", "document", "names", ",", "and", "document", "descriptions", "for", "all", "documents", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) from Documents ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Documents"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Documents"], "question": "What are the ids, names, and descriptions for all documents?", "question_toks": ["What", "are", "the", "ids", ",", "names", ",", "and", "descriptions", "for", "all", "documents", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) from Documents WHERE  Document_Description LIKE \"%w%\"", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Documents", "WHERE", "Document_Description", "LIKE", "``", "%", "w", "%", "''"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Documents", "WHERE", "Document_Description", "LIKE", "``", "%", "w", "%", "''"], "question": "What is the document name and template id for document with description with the letter 'w' in it?", "question_toks": ["What", "is", "the", "document", "name", "and", "template", "id", "for", "document", "with", "description", "with", "the", "letter", "'w", "'", "in", "it", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 9, [0, [0, 12, false], null], "\"%w%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) from Documents WHERE  Document_Description LIKE \"%w%\"", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Documents", "WHERE", "Document_Description", "LIKE", "``", "%", "w", "%", "''"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Documents", "WHERE", "Document_Description", "LIKE", "``", "%", "w", "%", "''"], "question": "Return the names and template ids for documents that contain the letter w in their description.", "question_toks": ["Return", "the", "names", "and", "template", "ids", "for", "documents", "that", "contain", "the", "letter", "w", "in", "their", "description", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 9, [0, [0, 12, false], null], "\"%w%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) from Documents WHERE  document_name  =  \"Robbin CV\"", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Documents", "WHERE", "document_name", "=", "``", "Robbin", "CV", "''"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Documents", "WHERE", "document_name", "=", "value", "CV", "''"], "question": "What is the document id, template id and description for document named \"Robbin CV\"?", "question_toks": ["What", "is", "the", "document", "id", ",", "template", "id", "and", "description", "for", "document", "named", "``", "Robbin", "CV", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Robbin CV\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) from Documents WHERE  document_name  =  \"Robbin CV\"", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Documents", "WHERE", "document_name", "=", "``", "Robbin", "CV", "''"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Documents", "WHERE", "document_name", "=", "value", "CV", "''"], "question": "Return the document id, template id, and description for the document with the name Robbin CV.", "question_toks": ["Return", "the", "document", "id", ",", "template", "id", ",", "and", "description", "for", "the", "document", "with", "the", "name", "Robbin", "CV", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Robbin CV\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) from Documents GROUP BY  template_id", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Documents", "GROUP", "BY", "template_id"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Documents", "GROUP", "BY", "template_id"], "question": "Show all template ids and number of documents using each template.", "question_toks": ["Show", "all", "template", "ids", "and", "number", "of", "documents", "using", "each", "template", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) from Documents GROUP BY  template_id", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Documents", "GROUP", "BY", "template_id"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Documents", "GROUP", "BY", "template_id"], "question": "What are all different template ids used for documents, and how many times were each of them used?", "question_toks": ["What", "are", "all", "different", "template", "ids", "used", "for", "documents", ",", "and", "how", "many", "times", "were", "each", "of", "them", "used", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) from Documents GROUP BY  Documents.template_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Documents", "GROUP", "BY", "Documents.template_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Documents", "GROUP", "BY", "Documents.template_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "question": "What is the id and type code for the template used by the most documents?", "question_toks": ["What", "is", "the", "id", "and", "type", "code", "for", "the", "template", "used", "by", "the", "most", "documents", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) from Documents GROUP BY  Documents.template_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Documents", "GROUP", "BY", "Documents.template_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Documents", "GROUP", "BY", "Documents.template_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "question": "Return the id and type code of the template that is used for the greatest number of documents.", "question_toks": ["Return", "the", "id", "and", "type", "code", "of", "the", "template", "that", "is", "used", "for", "the", "greatest", "number", "of", "documents", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) from Templates ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Templates"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Templates"], "question": "Show template ids, version numbers, and template type codes for all templates.", "question_toks": ["Show", "template", "ids", ",", "version", "numbers", ",", "and", "template", "type", "codes", "for", "all", "templates", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) from Templates ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Templates"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Templates"], "question": "What are the ids, version numbers, and type codes for each template?", "question_toks": ["What", "are", "the", "ids", ",", "version", "numbers", ",", "and", "type", "codes", "for", "each", "template", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) from Templates WHERE  version_number  >  5", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Templates", "WHERE", "version_number", ">", "5"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Templates", "WHERE", "version_number", ">", "value"], "question": "What is the version number and template type code for the template with version number later than 5?", "question_toks": ["What", "is", "the", "version", "number", "and", "template", "type", "code", "for", "the", "template", "with", "version", "number", "later", "than", "5", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 5.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) from Templates WHERE  version_number  >  5", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Templates", "WHERE", "version_number", ">", "5"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Templates", "WHERE", "version_number", ">", "value"], "question": "Return the version numbers and template type codes of templates with a version number greater than 5.", "question_toks": ["Return", "the", "version", "numbers", "and", "template", "type", "codes", "of", "templates", "with", "a", "version", "number", "greater", "than", "5", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 5.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) from Templates GROUP BY  template_type_code", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Templates", "GROUP", "BY", "template_type_code"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Templates", "GROUP", "BY", "template_type_code"], "question": "Show all template type codes and number of templates for each.", "question_toks": ["Show", "all", "template", "type", "codes", "and", "number", "of", "templates", "for", "each", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) from Templates GROUP BY  template_type_code", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Templates", "GROUP", "BY", "template_type_code"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Templates", "GROUP", "BY", "template_type_code"], "question": "What are the different template type codes, and how many templates correspond to each?", "question_toks": ["What", "are", "the", "different", "template", "type", "codes", ",", "and", "how", "many", "templates", "correspond", "to", "each", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) from Templates ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Templates"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Templates"], "question": "What the smallest version number and its template type code?", "question_toks": ["What", "the", "smallest", "version", "number", "and", "its", "template", "type", "code", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) from Templates ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Templates"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Templates"], "question": "Return the lowest version number, along with its corresponding template type code.", "question_toks": ["Return", "the", "lowest", "version", "number", ",", "along", "with", "its", "corresponding", "template", "type", "code", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) from Templates GROUP BY  Templates.template_type_code", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Templates", "GROUP", "BY", "Templates.template_type_code"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Templates", "GROUP", "BY", "Templates.template_type_code"], "question": "Show all template type codes and the number of documents using each type.", "question_toks": ["Show", "all", "template", "type", "codes", "and", "the", "number", "of", "documents", "using", "each", "type", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) from Templates GROUP BY  Templates.template_type_code", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Templates", "GROUP", "BY", "Templates.template_type_code"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Templates", "GROUP", "BY", "Templates.template_type_code"], "question": "What are the different template type codes, and how many documents use each type?", "question_toks": ["What", "are", "the", "different", "template", "type", "codes", ",", "and", "how", "many", "documents", "use", "each", "type", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) from Ref_template_types ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Ref_template_types"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Ref_template_types"], "question": "Show all template type codes and descriptions.", "question_toks": ["Show", "all", "template", "type", "codes", "and", "descriptions", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) from Ref_template_types ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Ref_template_types"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Ref_template_types"], "question": "What are the type codes and descriptions for all template types?", "question_toks": ["What", "are", "the", "type", "codes", "and", "descriptions", "for", "all", "template", "types", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) from Documents WHERE  Documents.Document_Name  =  'Welcome to NY'", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Documents", "WHERE", "Documents.Document_Name", "=", "'Welcome", "to", "NY", "'"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Documents", "WHERE", "Documents.Document_Name", "=", "value", "to", "NY", "'"], "question": "Show all paragraph ids and texts for the document with name 'Welcome to NY'.", "question_toks": ["Show", "all", "paragraph", "ids", "and", "texts", "for", "the", "document", "with", "name", "'Welcome", "to", "NY", "'", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Welcome to NY\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) from Documents WHERE  Documents.Document_Name  =  'Welcome to NY'", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Documents", "WHERE", "Documents.Document_Name", "=", "'Welcome", "to", "NY", "'"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Documents", "WHERE", "Documents.Document_Name", "=", "value", "to", "NY", "'"], "question": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?", "question_toks": ["What", "are", "the", "ids", "and", "texts", "of", "paragraphs", "in", "the", "document", "titled", "'Welcome", "to", "NY", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Welcome to NY\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) from Paragraphs GROUP BY  document_id ORDER BY document_id", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Paragraphs", "GROUP", "BY", "document_id", "ORDER", "BY", "document_id"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Paragraphs", "GROUP", "BY", "document_id", "ORDER", "BY", "document_id"], "question": "Show all document ids and the number of paragraphs in each document. Order by document id.", "question_toks": ["Show", "all", "document", "ids", "and", "the", "number", "of", "paragraphs", "in", "each", "document", ".", "Order", "by", "document", "id", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": ["asc", [[0, [0, 15, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) from Paragraphs GROUP BY  document_id ORDER BY document_id", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Paragraphs", "GROUP", "BY", "document_id", "ORDER", "BY", "document_id"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Paragraphs", "GROUP", "BY", "document_id", "ORDER", "BY", "document_id"], "question": "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.", "question_toks": ["Return", "the", "different", "document", "ids", "along", "with", "the", "number", "of", "paragraphs", "corresponding", "to", "each", ",", "ordered", "by", "id", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": ["asc", [[0, [0, 15, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) from Paragraphs GROUP BY  Paragraphs.document_id", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Paragraphs", "GROUP", "BY", "Paragraphs.document_id"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Paragraphs", "GROUP", "BY", "Paragraphs.document_id"], "question": "Show all document ids, names and the number of paragraphs in each document.", "question_toks": ["Show", "all", "document", "ids", ",", "names", "and", "the", "number", "of", "paragraphs", "in", "each", "document", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) from Paragraphs GROUP BY  Paragraphs.document_id", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Paragraphs", "GROUP", "BY", "Paragraphs.document_id"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Paragraphs", "GROUP", "BY", "Paragraphs.document_id"], "question": "What are the ids and names of each document, as well as the number of paragraphs in each?", "question_toks": ["What", "are", "the", "ids", "and", "names", "of", "each", "document", ",", "as", "well", "as", "the", "number", "of", "paragraphs", "in", "each", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) from Paragraphs GROUP BY  Paragraphs.document_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Paragraphs", "GROUP", "BY", "Paragraphs.document_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Paragraphs", "GROUP", "BY", "Paragraphs.document_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "question": "What is the document id and name with greatest number of paragraphs?", "question_toks": ["What", "is", "the", "document", "id", "and", "name", "with", "greatest", "number", "of", "paragraphs", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT count(*) from Paragraphs GROUP BY  Paragraphs.document_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Paragraphs", "GROUP", "BY", "Paragraphs.document_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Paragraphs", "GROUP", "BY", "Paragraphs.document_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "question": "Return the id and name of the document with the most paragraphs.", "question_toks": ["Return", "the", "id", "and", "name", "of", "the", "document", "with", "the", "most", "paragraphs", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "course_teach", "query": "SELECT count(*) from teacher ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "teacher"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "teacher"], "question": "What are the age and hometown of teachers?", "question_toks": ["What", "are", "the", "age", "and", "hometown", "of", "teachers", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "course_teach", "query": "SELECT count(*) from teacher ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "teacher"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "teacher"], "question": "What is the age and hometown of every teacher?", "question_toks": ["What", "is", "the", "age", "and", "hometown", "of", "every", "teacher", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "course_teach", "query": "SELECT count(*) from teacher GROUP BY  Hometown", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "teacher", "GROUP", "BY", "Hometown"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "teacher", "GROUP", "BY", "Hometown"], "question": "Show different hometown of teachers and the number of teachers from each hometown.", "question_toks": ["Show", "different", "hometown", "of", "teachers", "and", "the", "number", "of", "teachers", "from", "each", "hometown", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "course_teach", "query": "SELECT count(*) from teacher GROUP BY  Hometown", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "teacher", "GROUP", "BY", "Hometown"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "teacher", "GROUP", "BY", "Hometown"], "question": "For each hometown, how many teachers are there?", "question_toks": ["For", "each", "hometown", ",", "how", "many", "teachers", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "course_teach", "query": "SELECT count(*) from course ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "course"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "course"], "question": "Show names of teachers and the courses they are arranged to teach.", "question_toks": ["Show", "names", "of", "teachers", "and", "the", "courses", "they", "are", "arranged", "to", "teach", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "course_teach", "query": "SELECT count(*) from course ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "course"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "course"], "question": "What is the name of each teacher and what course they teach?", "question_toks": ["What", "is", "the", "name", "of", "each", "teacher", "and", "what", "course", "they", "teach", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "course_teach", "query": "SELECT count(*) from teacher ORDER BY  teacher.Name", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "teacher", "ORDER", "BY", "teacher.Name"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "teacher", "ORDER", "BY", "teacher.Name"], "question": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.", "question_toks": ["Show", "names", "of", "teachers", "and", "the", "courses", "they", "are", "arranged", "to", "teach", "in", "ascending", "alphabetical", "order", "of", "the", "teacher", "'s", "name", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "course_teach", "query": "SELECT count(*) from teacher ORDER BY  teacher.Name", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "teacher", "ORDER", "BY", "teacher.Name"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "teacher", "ORDER", "BY", "teacher.Name"], "question": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?", "question_toks": ["What", "are", "the", "names", "of", "the", "teachers", "and", "the", "courses", "they", "teach", "in", "ascending", "alphabetical", "order", "by", "the", "name", "of", "the", "teacher", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "course_teach", "query": "SELECT count(*) from teacher GROUP BY  teacher.Name", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "teacher", "GROUP", "BY", "teacher.Name"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "teacher", "GROUP", "BY", "teacher.Name"], "question": "Show names of teachers and the number of courses they teach.", "question_toks": ["Show", "names", "of", "teachers", "and", "the", "number", "of", "courses", "they", "teach", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "course_teach", "query": "SELECT count(*) from teacher GROUP BY  teacher.Name", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "teacher", "GROUP", "BY", "teacher.Name"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "teacher", "GROUP", "BY", "teacher.Name"], "question": "What are the names of the teachers and how many courses do they teach?", "question_toks": ["What", "are", "the", "names", "of", "the", "teachers", "and", "how", "many", "courses", "do", "they", "teach", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "museum_visit", "query": "SELECT count(*) from visitor WHERE  Level_of_membership  >  4 ORDER BY age DESC", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "visitor", "WHERE", "Level_of_membership", ">", "4", "ORDER", "BY", "age", "DESC"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "visitor", "WHERE", "Level_of_membership", ">", "value", "ORDER", "BY", "age", "DESC"], "question": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.", "question_toks": ["Find", "the", "name", "and", "membership", "level", "of", "the", "visitors", "whose", "membership", "level", "is", "higher", "than", "4", ",", "and", "sort", "by", "their", "age", "from", "old", "to", "young", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 7, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 8, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "museum_visit", "query": "SELECT count(*) from museum ORDER BY  num_of_staff DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "museum", "ORDER", "BY", "num_of_staff", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "museum", "ORDER", "BY", "num_of_staff", "DESC", "LIMIT", "1"], "question": "Find the id and name of the museum that has the most staff members?", "question_toks": ["Find", "the", "id", "and", "name", "of", "the", "museum", "that", "has", "the", "most", "staff", "members", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 3, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "museum_visit", "query": "SELECT count(*) from museum WHERE  name  =  'Plaza Museum'", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "museum", "WHERE", "name", "=", "'Plaza", "Museum", "'"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "museum", "WHERE", "name", "=", "value", "Museum", "'"], "question": "What are the opening year and staff number of the museum named Plaza Museum?", "question_toks": ["What", "are", "the", "opening", "year", "and", "staff", "number", "of", "the", "museum", "named", "Plaza", "Museum", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Plaza Museum\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "museum_visit", "query": "SELECT count(*) from visitor GROUP BY  visitor.id HAVING count(*)  >  1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "visitor", "GROUP", "BY", "visitor.id", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "visitor", "GROUP", "BY", "visitor.id", "HAVING", "count", "(", "*", ")", ">", "value"], "question": "find the id, name and age for visitors who visited some museums more than once.", "question_toks": ["find", "the", "id", ",", "name", "and", "age", "for", "visitors", "who", "visited", "some", "museums", "more", "than", "once", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "museum_visit", "query": "SELECT count(*) from visit GROUP BY  visit.visitor_id ORDER BY sum(visit.Total_spent) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "visit", "GROUP", "BY", "visit.visitor_id", "ORDER", "BY", "sum", "(", "visit.Total_spent", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "visit", "GROUP", "BY", "visit.visitor_id", "ORDER", "BY", "sum", "(", "visit.Total_spent", ")", "DESC", "LIMIT", "1"], "question": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?", "question_toks": ["What", "are", "the", "id", ",", "name", "and", "membership", "level", "of", "visitors", "who", "have", "spent", "the", "largest", "amount", "of", "money", "in", "total", "in", "all", "museum", "tickets", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [4, 12, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "museum_visit", "query": "SELECT count(*) from visit GROUP BY  visit.Museum_ID ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "visit", "GROUP", "BY", "visit.Museum_ID", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "visit", "GROUP", "BY", "visit.Museum_ID", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "question": "What are the id and name of the museum visited most times?", "question_toks": ["What", "are", "the", "id", "and", "name", "of", "the", "museum", "visited", "most", "times", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "museum_visit", "query": "SELECT count(*) from visit ORDER BY  visit.num_of_ticket DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "visit", "ORDER", "BY", "visit.num_of_ticket", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "visit", "ORDER", "BY", "visit.num_of_ticket", "DESC", "LIMIT", "1"], "question": "Find the name and age of the visitor who bought the most tickets at once.", "question_toks": ["Find", "the", "name", "and", "age", "of", "the", "visitor", "who", "bought", "the", "most", "tickets", "at", "once", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 11, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "museum_visit", "query": "SELECT count(*) from visit ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "visit"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "visit"], "question": "What are the average and maximum number of tickets bought in all visits?", "question_toks": ["What", "are", "the", "average", "and", "maximum", "number", "of", "tickets", "bought", "in", "all", "visits", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "wta_1", "query": "SELECT count(*) from players WHERE  country_code  =  'USA'", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "players", "WHERE", "country_code", "=", "'USA", "'"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "players", "WHERE", "country_code", "=", "value"], "question": "List the first name and birth date of all players from the country with code USA.", "question_toks": ["List", "the", "first", "name", "and", "birth", "date", "of", "all", "players", "from", "the", "country", "with", "code", "USA", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "wta_1", "query": "SELECT count(*) from players WHERE  country_code  =  'USA'", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "players", "WHERE", "country_code", "=", "'USA", "'"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "players", "WHERE", "country_code", "=", "value"], "question": "What are the first names and birth dates of players from the USA?", "question_toks": ["What", "are", "the", "first", "names", "and", "birth", "dates", "of", "players", "from", "the", "USA", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "wta_1", "query": "SELECT count(*) from matches ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "matches"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "matches"], "question": "Find the average age of losers and winners of all matches.", "question_toks": ["Find", "the", "average", "age", "of", "losers", "and", "winners", "of", "all", "matches", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "wta_1", "query": "SELECT count(*) from matches ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "matches"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "matches"], "question": "What are the average ages of losers and winners across matches?", "question_toks": ["What", "are", "the", "average", "ages", "of", "losers", "and", "winners", "across", "matches", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "wta_1", "query": "SELECT count(*) from players ORDER BY  birth_date LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "players", "ORDER", "BY", "birth_date", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "players", "ORDER", "BY", "birth_date", "LIMIT", "1"], "question": "Find the first name and country code of the oldest player.", "question_toks": ["Find", "the", "first", "name", "and", "country", "code", "of", "the", "oldest", "player", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "wta_1", "query": "SELECT count(*) from players ORDER BY  birth_date LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "players", "ORDER", "BY", "birth_date", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "players", "ORDER", "BY", "birth_date", "LIMIT", "1"], "question": "What is the first name and country code of the oldest player?", "question_toks": ["What", "is", "the", "first", "name", "and", "country", "code", "of", "the", "oldest", "player", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "wta_1", "query": "SELECT count(*) from players ORDER BY  birth_date", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "players", "ORDER", "BY", "birth_date"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "players", "ORDER", "BY", "birth_date"], "question": "List the first and last name of all players in the order of birth date.", "question_toks": ["List", "the", "first", "and", "last", "name", "of", "all", "players", "in", "the", "order", "of", "birth", "date", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "wta_1", "query": "SELECT count(*) from players ORDER BY  birth_date", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "players", "ORDER", "BY", "birth_date"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "players", "ORDER", "BY", "birth_date"], "question": "What are the full names of all players, sorted by birth date?", "question_toks": ["What", "are", "the", "full", "names", "of", "all", "players", ",", "sorted", "by", "birth", "date", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "wta_1", "query": "SELECT count(*) from players WHERE  hand  =  'L' ORDER BY birth_date", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "players", "WHERE", "hand", "=", "'", "L", "'", "ORDER", "BY", "birth_date"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "players", "WHERE", "hand", "=", "value", "ORDER", "BY", "birth_date"], "question": "List the first and last name of all players who are left / L hand in the order of birth date.", "question_toks": ["List", "the", "first", "and", "last", "name", "of", "all", "players", "who", "are", "left", "/", "L", "hand", "in", "the", "order", "of", "birth", "date", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"L\"", null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "wta_1", "query": "SELECT count(*) from players WHERE  hand  =  'L' ORDER BY birth_date", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "players", "WHERE", "hand", "=", "'", "L", "'", "ORDER", "BY", "birth_date"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "players", "WHERE", "hand", "=", "value", "ORDER", "BY", "birth_date"], "question": "What are the full names of all left handed players, in order of birth date?", "question_toks": ["What", "are", "the", "full", "names", "of", "all", "left", "handed", "players", ",", "in", "order", "of", "birth", "date", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"L\"", null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "wta_1", "query": "SELECT count(*) from rankings ORDER BY  rankings.tours DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "rankings", "ORDER", "BY", "rankings.tours", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "rankings", "ORDER", "BY", "rankings.tours", "DESC", "LIMIT", "1"], "question": "Find the first name and country code of the player who did the most number of tours.", "question_toks": ["Find", "the", "first", "name", "and", "country", "code", "of", "the", "player", "who", "did", "the", "most", "number", "of", "tours", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 43, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "wta_1", "query": "SELECT count(*) from rankings ORDER BY  rankings.tours DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "rankings", "ORDER", "BY", "rankings.tours", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "rankings", "ORDER", "BY", "rankings.tours", "DESC", "LIMIT", "1"], "question": "What is the first name and country code of the player with the most tours?", "question_toks": ["What", "is", "the", "first", "name", "and", "country", "code", "of", "the", "player", "with", "the", "most", "tours", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 43, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "wta_1", "query": "SELECT count(*) from matches GROUP BY  winner_name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "matches", "GROUP", "BY", "winner_name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "matches", "GROUP", "BY", "winner_name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "question": "Find the name and rank points of the winner who won the most times.", "question_toks": ["Find", "the", "name", "and", "rank", "points", "of", "the", "winner", "who", "won", "the", "most", "times", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 34, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "wta_1", "query": "SELECT count(*) from matches GROUP BY  winner_name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "matches", "GROUP", "BY", "winner_name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "matches", "GROUP", "BY", "winner_name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "question": "What is the name of the winner who has won the most matches, and how many rank points does this player have?", "question_toks": ["What", "is", "the", "name", "of", "the", "winner", "who", "has", "won", "the", "most", "matches", ",", "and", "how", "many", "rank", "points", "does", "this", "player", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 34, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "wta_1", "query": "SELECT count(*) from matches ORDER BY  minutes DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "matches", "ORDER", "BY", "minutes", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "matches", "ORDER", "BY", "minutes", "DESC", "LIMIT", "1"], "question": "find the names of loser and winner who played in the match with greatest number of minutes.", "question_toks": ["find", "the", "names", "of", "loser", "and", "winner", "who", "played", "in", "the", "match", "with", "greatest", "number", "of", "minutes", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "wta_1", "query": "SELECT count(*) from matches ORDER BY  minutes DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "matches", "ORDER", "BY", "minutes", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "matches", "ORDER", "BY", "minutes", "DESC", "LIMIT", "1"], "question": "What are the names of the winner and loser who played in the longest match?", "question_toks": ["What", "are", "the", "names", "of", "the", "winner", "and", "loser", "who", "played", "in", "the", "longest", "match", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "wta_1", "query": "SELECT count(*) from players GROUP BY  players.first_name", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "players", "GROUP", "BY", "players.first_name"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "players", "GROUP", "BY", "players.first_name"], "question": "Find the average ranking for each player and their first name.", "question_toks": ["Find", "the", "average", "ranking", "for", "each", "player", "and", "their", "first", "name", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "wta_1", "query": "SELECT count(*) from players GROUP BY  players.first_name", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "players", "GROUP", "BY", "players.first_name"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "players", "GROUP", "BY", "players.first_name"], "question": "What are the first names of all players, and their average rankings?", "question_toks": ["What", "are", "the", "first", "names", "of", "all", "players", ",", "and", "their", "average", "rankings", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "wta_1", "query": "SELECT count(*) from players GROUP BY  players.first_name", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "players", "GROUP", "BY", "players.first_name"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "players", "GROUP", "BY", "players.first_name"], "question": "Find the total ranking points for each player and their first name.", "question_toks": ["Find", "the", "total", "ranking", "points", "for", "each", "player", "and", "their", "first", "name", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "wta_1", "query": "SELECT count(*) from players GROUP BY  players.first_name", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "players", "GROUP", "BY", "players.first_name"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "players", "GROUP", "BY", "players.first_name"], "question": "What are the first names of all players, and their total ranking points?", "question_toks": ["What", "are", "the", "first", "names", "of", "all", "players", ",", "and", "their", "total", "ranking", "points", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "wta_1", "query": "SELECT count(*) from players GROUP BY  country_code", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "players", "GROUP", "BY", "country_code"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "players", "GROUP", "BY", "country_code"], "question": "find the number of players for each country.", "question_toks": ["find", "the", "number", "of", "players", "for", "each", "country", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "wta_1", "query": "SELECT count(*) from players GROUP BY  country_code", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "players", "GROUP", "BY", "country_code"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "players", "GROUP", "BY", "country_code"], "question": "How many players are from each country?", "question_toks": ["How", "many", "players", "are", "from", "each", "country", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "wta_1", "query": "SELECT count(*) from rankings GROUP BY  ranking_date", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "rankings", "GROUP", "BY", "ranking_date"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "rankings", "GROUP", "BY", "ranking_date"], "question": "Find the total number of tours for each ranking date.", "question_toks": ["Find", "the", "total", "number", "of", "tours", "for", "each", "ranking", "date", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 39, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "wta_1", "query": "SELECT count(*) from rankings GROUP BY  ranking_date", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "rankings", "GROUP", "BY", "ranking_date"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "rankings", "GROUP", "BY", "ranking_date"], "question": "How many total tours were there for each ranking date?", "question_toks": ["How", "many", "total", "tours", "were", "there", "for", "each", "ranking", "date", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 39, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "wta_1", "query": "SELECT count(*) from matches GROUP BY  YEAR", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "matches", "GROUP", "BY", "YEAR"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "matches", "GROUP", "BY", "YEAR"], "question": "Find the number of matches happened in each year.", "question_toks": ["Find", "the", "number", "of", "matches", "happened", "in", "each", "year", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 38, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "wta_1", "query": "SELECT count(*) from matches GROUP BY  YEAR", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "matches", "GROUP", "BY", "YEAR"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "matches", "GROUP", "BY", "YEAR"], "question": "How many matches were played in each year?", "question_toks": ["How", "many", "matches", "were", "played", "in", "each", "year", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 38, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "wta_1", "query": "SELECT count(*) from matches ORDER BY  winner_age LIMIT 3", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "matches", "ORDER", "BY", "winner_age", "LIMIT", "3"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "matches", "ORDER", "BY", "winner_age", "LIMIT", "3"], "question": "Find the name and rank of the 3 youngest winners across all matches.", "question_toks": ["Find", "the", "name", "and", "rank", "of", "the", "3", "youngest", "winners", "across", "all", "matches", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 28, false], null]]], "limit": 3, "intersect": null, "union": null, "except": null}}, {"db_id": "wta_1", "query": "SELECT count(*) from matches ORDER BY  winner_age LIMIT 3", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "matches", "ORDER", "BY", "winner_age", "LIMIT", "3"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "matches", "ORDER", "BY", "winner_age", "LIMIT", "3"], "question": "What are the names and ranks of the three youngest winners across all matches?", "question_toks": ["What", "are", "the", "names", "and", "ranks", "of", "the", "three", "youngest", "winners", "across", "all", "matches", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 28, false], null]]], "limit": 3, "intersect": null, "union": null, "except": null}}, {"db_id": "wta_1", "query": "SELECT count(*) from matches ORDER BY  matches.winner_rank_points DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "matches", "ORDER", "BY", "matches.winner_rank_points", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "matches", "ORDER", "BY", "matches.winner_rank_points", "DESC", "LIMIT", "1"], "question": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches.", "question_toks": ["Find", "the", "first", "name", ",", "country", "code", "and", "birth", "date", "of", "the", "winner", "who", "has", "the", "highest", "rank", "points", "in", "all", "matches", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 36, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "wta_1", "query": "SELECT count(*) from matches ORDER BY  matches.winner_rank_points DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "matches", "ORDER", "BY", "matches.winner_rank_points", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "matches", "ORDER", "BY", "matches.winner_rank_points", "DESC", "LIMIT", "1"], "question": "What is the first name, country code, and birth date of the player with the most winner rank points across all matches?", "question_toks": ["What", "is", "the", "first", "name", ",", "country", "code", ",", "and", "birth", "date", "of", "the", "player", "with", "the", "most", "winner", "rank", "points", "across", "all", "matches", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 36, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "wta_1", "query": "SELECT count(*) from players GROUP BY  hand", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "players", "GROUP", "BY", "hand"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "players", "GROUP", "BY", "hand"], "question": "Find the number of players for each hand type.", "question_toks": ["Find", "the", "number", "of", "players", "for", "each", "hand", "type", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "wta_1", "query": "SELECT count(*) from players GROUP BY  hand", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "players", "GROUP", "BY", "hand"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "players", "GROUP", "BY", "hand"], "question": "How many players are there for each hand type?", "question_toks": ["How", "many", "players", "are", "there", "for", "each", "hand", "type", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "battle_death", "query": "SELECT count(*) from ship ORDER BY  name DESC", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "ship", "ORDER", "BY", "name", "DESC"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "ship", "ORDER", "BY", "name", "DESC"], "question": "List the name and tonnage ordered by in descending alphaetical order for the names.", "question_toks": ["List", "the", "name", "and", "tonnage", "ordered", "by", "in", "descending", "alphaetical", "order", "for", "the", "names", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 9, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "battle_death", "query": "SELECT count(*) from battle ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "battle"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "battle"], "question": "List the name, date and result of each battle.", "question_toks": ["List", "the", "name", ",", "date", "and", "result", "of", "each", "battle", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "battle_death", "query": "SELECT count(*) from death ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "death"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "death"], "question": "What is maximum and minimum death toll caused each time?", "question_toks": ["What", "is", "maximum", "and", "minimum", "death", "toll", "caused", "each", "time", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "battle_death", "query": "SELECT count(*) from battle WHERE  bulgarian_commander != 'Boril'", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "battle", "WHERE", "bulgarian_commander", "!", "=", "'Boril", "'"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "battle", "WHERE", "bulgarian_commander", "!", "=", "'Boril", "'"], "question": "What are the name and results of the battles when the bulgarian commander is not 'Boril'", "question_toks": ["What", "are", "the", "name", "and", "results", "of", "the", "battles", "when", "the", "bulgarian", "commander", "is", "not", "'Boril", "'"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 7, [0, [0, 4, false], null], "\"Boril\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "battle_death", "query": "SELECT count(*) from ship WHERE  ship.ship_type  =  'Brig'", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "ship", "WHERE", "ship.ship_type", "=", "'Brig", "'"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "ship", "WHERE", "ship.ship_type", "=", "value"], "question": "What are the different ids and names of the battles that lost any 'Brig' type shipes?", "question_toks": ["What", "are", "the", "different", "ids", "and", "names", "of", "the", "battles", "that", "lost", "any", "'Brig", "'", "type", "shipes", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Brig\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "battle_death", "query": "SELECT count(*) from battle GROUP BY  battle.id HAVING sum(death.killed)  >  10", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "battle", "GROUP", "BY", "battle.id", "HAVING", "sum", "(", "death.killed", ")", ">", "10"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "battle", "GROUP", "BY", "battle.id", "HAVING", "sum", "(", "death.killed", ")", ">", "value"], "question": "What are the ids and names of the battles that led to more than 10 people killed in total.", "question_toks": ["What", "are", "the", "ids", "and", "names", "of", "the", "battles", "that", "led", "to", "more", "than", "10", "people", "killed", "in", "total", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 3, [0, [4, 17, false], null], 10.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "battle_death", "query": "SELECT count(*) from battle ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "battle"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "battle"], "question": "Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.", "question_toks": ["Show", "names", ",", "results", "and", "bulgarian", "commanders", "of", "the", "battles", "with", "no", "ships", "lost", "in", "the", "'English", "Channel", "'", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) from addresses ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "addresses"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "addresses"], "question": "what are all the addresses including line 1 and line 2?", "question_toks": ["what", "are", "all", "the", "addresses", "including", "line", "1", "and", "line", "2", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) from addresses ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "addresses"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "addresses"], "question": "What is the first and second line for all addresses?", "question_toks": ["What", "is", "the", "first", "and", "second", "line", "for", "all", "addresses", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) from Degree_Programs GROUP BY  Degree_Programs.department_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Degree_Programs", "GROUP", "BY", "Degree_Programs.department_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Degree_Programs", "GROUP", "BY", "Degree_Programs.department_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "question": "Which department offers the most number of degrees? List department name and id.", "question_toks": ["Which", "department", "offers", "the", "most", "number", "of", "degrees", "?", "List", "department", "name", "and", "id", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 19, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) from Addresses ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Addresses"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Addresses"], "question": "What is the name and id of the department with the most number of degrees ?", "question_toks": ["What", "is", "the", "name", "and", "id", "of", "the", "department", "with", "the", "most", "number", "of", "degrees", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) from Sections ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Sections"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Sections"], "question": "What are the names and descriptions of all the sections?", "question_toks": ["What", "are", "the", "names", "and", "descriptions", "of", "all", "the", "sections", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) from Sections ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Sections"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Sections"], "question": "What are the names and descriptions for all the sections?", "question_toks": ["What", "are", "the", "names", "and", "descriptions", "for", "all", "the", "sections", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) from Courses GROUP BY  Courses.course_id HAVING count(*)  <=  2", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Courses", "GROUP", "BY", "Courses.course_id", "HAVING", "count", "(", "*", ")", "<", "=", "2"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Courses", "GROUP", "BY", "Courses.course_id", "HAVING", "count", "(", "*", ")", "<", "=", "2"], "question": "What are the names and id of courses having at most 2 sections?", "question_toks": ["What", "are", "the", "names", "and", "id", "of", "courses", "having", "at", "most", "2", "sections", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [[false, 6, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) from Courses GROUP BY  Courses.course_id HAVING count(*)  <=  2", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Courses", "GROUP", "BY", "Courses.course_id", "HAVING", "count", "(", "*", ")", "<", "=", "2"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Courses", "GROUP", "BY", "Courses.course_id", "HAVING", "count", "(", "*", ")", "<", "=", "2"], "question": "What are the names and ids of every course with less than 2 sections?", "question_toks": ["What", "are", "the", "names", "and", "ids", "of", "every", "course", "with", "less", "than", "2", "sections", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [[false, 6, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) from Semesters GROUP BY  Semesters.semester_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Semesters", "GROUP", "BY", "Semesters.semester_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Semesters", "GROUP", "BY", "Semesters.semester_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "question": "What is the semester which most student registered in? Show both the name and the id.", "question_toks": ["What", "is", "the", "semester", "which", "most", "student", "registered", "in", "?", "Show", "both", "the", "name", "and", "the", "id", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 28, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) from Semesters GROUP BY  Semesters.semester_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Semesters", "GROUP", "BY", "Semesters.semester_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Semesters", "GROUP", "BY", "Semesters.semester_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "question": "For each semester, what is the name and id of the one with the most students registered?", "question_toks": ["For", "each", "semester", ",", "what", "is", "the", "name", "and", "id", "of", "the", "one", "with", "the", "most", "students", "registered", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 28, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) from Students GROUP BY  Students.student_id HAVING count(*)  =  2", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Students", "GROUP", "BY", "Students.student_id", "HAVING", "count", "(", "*", ")", "=", "2"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Students", "GROUP", "BY", "Students.student_id", "HAVING", "count", "(", "*", ")", "=", "value"], "question": "Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.", "question_toks": ["Who", "are", "enrolled", "in", "2", "degree", "programs", "in", "one", "semester", "?", "List", "the", "first", "name", ",", "middle", "name", "and", "last", "name", "and", "the", "id", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 32, false]], "having": [[false, 2, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) from Students GROUP BY  Students.student_id HAVING count(*)  =  2", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Students", "GROUP", "BY", "Students.student_id", "HAVING", "count", "(", "*", ")", "=", "2"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Students", "GROUP", "BY", "Students.student_id", "HAVING", "count", "(", "*", ")", "=", "value"], "question": "What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?", "question_toks": ["What", "are", "the", "first", ",", "middle", ",", "and", "last", "names", ",", "along", "with", "the", "ids", ",", "of", "all", "students", "who", "enrolled", "in", "2", "degree", "programs", "in", "one", "semester", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 32, false]], "having": [[false, 2, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) from Degree_Programs WHERE  Degree_Programs.degree_summary_name  =  'Bachelor'", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Degree_Programs", "WHERE", "Degree_Programs.degree_summary_name", "=", "'Bachelor", "'"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Degree_Programs", "WHERE", "Degree_Programs.degree_summary_name", "=", "value"], "question": "Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.", "question_toks": ["Who", "is", "enrolled", "in", "a", "Bachelor", "degree", "program", "?", "List", "the", "first", "name", ",", "middle", "name", ",", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Bachelor\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) from Degree_Programs WHERE  Degree_Programs.degree_summary_name  =  'Bachelor'", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Degree_Programs", "WHERE", "Degree_Programs.degree_summary_name", "=", "'Bachelor", "'"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Degree_Programs", "WHERE", "Degree_Programs.degree_summary_name", "=", "value"], "question": "What are the first, middle, and last names for everybody enrolled in a Bachelors program?", "question_toks": ["What", "are", "the", "first", ",", "middle", ",", "and", "last", "names", "for", "everybody", "enrolled", "in", "a", "Bachelors", "program", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Bachelor\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) from Degree_Programs GROUP BY  Degree_Programs.degree_program_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Degree_Programs", "GROUP", "BY", "Degree_Programs.degree_program_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Degree_Programs", "GROUP", "BY", "Degree_Programs.degree_program_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "question": "Find the program which most number of students are enrolled in. List both the id and the summary.", "question_toks": ["Find", "the", "program", "which", "most", "number", "of", "students", "are", "enrolled", "in", ".", "List", "both", "the", "id", "and", "the", "summary", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) from Degree_Programs GROUP BY  Degree_Programs.degree_program_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Degree_Programs", "GROUP", "BY", "Degree_Programs.degree_program_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Degree_Programs", "GROUP", "BY", "Degree_Programs.degree_program_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "question": "What is the program id and the summary of the degree that has the most students enrolled?", "question_toks": ["What", "is", "the", "program", "id", "and", "the", "summary", "of", "the", "degree", "that", "has", "the", "most", "students", "enrolled", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) from Students GROUP BY  Students.student_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Students", "GROUP", "BY", "Students.student_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Students", "GROUP", "BY", "Students.student_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "question": "Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.", "question_toks": ["Which", "student", "has", "enrolled", "for", "the", "most", "times", "in", "any", "program", "?", "List", "the", "id", ",", "first", "name", ",", "middle", "name", ",", "last", "name", ",", "the", "number", "of", "enrollments", "and", "student", "id", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 32, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) from Students GROUP BY  Students.student_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Students", "GROUP", "BY", "Students.student_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Students", "GROUP", "BY", "Students.student_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "question": "What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?", "question_toks": ["What", "is", "the", "first", ",", "middle", ",", "and", "last", "name", ",", "along", "with", "the", "id", "and", "number", "of", "enrollments", ",", "for", "the", "student", "who", "enrolled", "the", "most", "in", "any", "program", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 32, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) from Transcript_Contents GROUP BY  Transcript_Contents.transcript_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Transcript_Contents", "GROUP", "BY", "Transcript_Contents.transcript_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Transcript_Contents", "GROUP", "BY", "Transcript_Contents.transcript_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "question": "Show the date and id of the transcript with at least 2 course results.", "question_toks": ["Show", "the", "date", "and", "id", "of", "the", "transcript", "with", "at", "least", "2", "course", "results", "."], "sql": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 56, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) from Transcript_Contents GROUP BY  Transcript_Contents.transcript_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Transcript_Contents", "GROUP", "BY", "Transcript_Contents.transcript_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Transcript_Contents", "GROUP", "BY", "Transcript_Contents.transcript_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "question": "What is the date and id of the transcript with at least 2 courses listed?", "question_toks": ["What", "is", "the", "date", "and", "id", "of", "the", "transcript", "with", "at", "least", "2", "courses", "listed", "?"], "sql": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 56, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) from Students ORDER BY  date_first_registered ASC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Students", "ORDER", "BY", "date_first_registered", "ASC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Students", "ORDER", "BY", "date_first_registered", "ASC", "LIMIT", "1"], "question": "Who is the first student to register? List the first name, middle name and last name.", "question_toks": ["Who", "is", "the", "first", "student", "to", "register", "?", "List", "the", "first", "name", ",", "middle", "name", "and", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 41, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) from Students ORDER BY  date_first_registered ASC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Students", "ORDER", "BY", "date_first_registered", "ASC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Students", "ORDER", "BY", "date_first_registered", "ASC", "LIMIT", "1"], "question": "What is the first, middle, and last name of the first student to register?", "question_toks": ["What", "is", "the", "first", ",", "middle", ",", "and", "last", "name", "of", "the", "first", "student", "to", "register", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 41, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) from Students ORDER BY  date_left ASC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Students", "ORDER", "BY", "date_left", "ASC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Students", "ORDER", "BY", "date_left", "ASC", "LIMIT", "1"], "question": "Who is the earliest graduate of the school? List the first name, middle name and last name.", "question_toks": ["Who", "is", "the", "earliest", "graduate", "of", "the", "school", "?", "List", "the", "first", "name", ",", "middle", "name", "and", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 42, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) from Students ORDER BY  date_left ASC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Students", "ORDER", "BY", "date_left", "ASC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Students", "ORDER", "BY", "date_left", "ASC", "LIMIT", "1"], "question": "What is the first, middle, and last name of the earliest school graduate?", "question_toks": ["What", "is", "the", "first", ",", "middle", ",", "and", "last", "name", "of", "the", "earliest", "school", "graduate", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 42, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) from Addresses GROUP BY  Addresses.address_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Addresses", "GROUP", "BY", "Addresses.address_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Addresses", "GROUP", "BY", "Addresses.address_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "question": "Which address holds the most number of students currently? List the address id and all lines.", "question_toks": ["Which", "address", "holds", "the", "most", "number", "of", "students", "currently", "?", "List", "the", "address", "id", "and", "all", "lines", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) from Addresses GROUP BY  Addresses.address_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Addresses", "GROUP", "BY", "Addresses.address_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Addresses", "GROUP", "BY", "Addresses.address_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "question": "What is the id, line 1, and line 2 of the address with the most students?", "question_toks": ["What", "is", "the", "id", ",", "line", "1", ",", "and", "line", "2", "of", "the", "address", "with", "the", "most", "students", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) from Transcripts ORDER BY  transcript_date ASC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Transcripts", "ORDER", "BY", "transcript_date", "ASC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Transcripts", "ORDER", "BY", "transcript_date", "ASC", "LIMIT", "1"], "question": "When is the first transcript released? List the date and details.", "question_toks": ["When", "is", "the", "first", "transcript", "released", "?", "List", "the", "date", "and", "details", "."], "sql": {"from": {"table_units": [["table_unit", 9]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 53, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) from Transcripts ORDER BY  transcript_date ASC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Transcripts", "ORDER", "BY", "transcript_date", "ASC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Transcripts", "ORDER", "BY", "transcript_date", "ASC", "LIMIT", "1"], "question": "What is the earliest date of a transcript release, and what details can you tell me?", "question_toks": ["What", "is", "the", "earliest", "date", "of", "a", "transcript", "release", ",", "and", "what", "details", "can", "you", "tell", "me", "?"], "sql": {"from": {"table_units": [["table_unit", 9]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 53, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) from Transcript_Contents GROUP BY  student_course_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Transcript_Contents", "GROUP", "BY", "student_course_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Transcript_Contents", "GROUP", "BY", "student_course_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "question": "How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.", "question_toks": ["How", "many", "times", "at", "most", "can", "a", "course", "enrollment", "result", "show", "in", "different", "transcripts", "?", "Also", "show", "the", "course", "enrollment", "id", "."], "sql": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 55, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) from Transcript_Contents GROUP BY  student_course_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Transcript_Contents", "GROUP", "BY", "student_course_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Transcript_Contents", "GROUP", "BY", "student_course_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "question": "What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?", "question_toks": ["What", "is", "the", "maximum", "number", "of", "times", "that", "a", "course", "shows", "up", "in", "different", "transcripts", "and", "what", "is", "that", "course", "'s", "enrollment", "id", "?"], "sql": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 55, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) from Transcript_Contents GROUP BY  Transcript_Contents.transcript_id ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Transcript_Contents", "GROUP", "BY", "Transcript_Contents.transcript_id", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Transcript_Contents", "GROUP", "BY", "Transcript_Contents.transcript_id", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "question": "Show the date of the transcript which shows the least number of results, also list the id.", "question_toks": ["Show", "the", "date", "of", "the", "transcript", "which", "shows", "the", "least", "number", "of", "results", ",", "also", "list", "the", "id", "."], "sql": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 56, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) from Transcript_Contents GROUP BY  Transcript_Contents.transcript_id ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Transcript_Contents", "GROUP", "BY", "Transcript_Contents.transcript_id", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Transcript_Contents", "GROUP", "BY", "Transcript_Contents.transcript_id", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "question": "What is the date and id of the transcript with the least number of results?", "question_toks": ["What", "is", "the", "date", "and", "id", "of", "the", "transcript", "with", "the", "least", "number", "of", "results", "?"], "sql": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 56, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "tvshow", "query": "SELECT count(*) from Cartoon ORDER BY  Original_air_date", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Cartoon", "ORDER", "BY", "Original_air_date"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Cartoon", "ORDER", "BY", "Original_air_date"], "question": "list all cartoon titles and their directors ordered by their air date", "question_toks": ["list", "all", "cartoon", "titles", "and", "their", "directors", "ordered", "by", "their", "air", "date"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 23, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "tvshow", "query": "SELECT count(*) from Cartoon ORDER BY  Original_air_date", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Cartoon", "ORDER", "BY", "Original_air_date"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Cartoon", "ORDER", "BY", "Original_air_date"], "question": "What is the name and directors of all the cartoons that are ordered by air date?", "question_toks": ["What", "is", "the", "name", "and", "directors", "of", "all", "the", "cartoons", "that", "are", "ordered", "by", "air", "date", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 23, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "tvshow", "query": "SELECT count(*) from TV_Channel GROUP BY  Country ORDER BY count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "TV_Channel", "GROUP", "BY", "Country", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "TV_Channel", "GROUP", "BY", "Country", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "question": "Which country has the most of TV Channels? List the country and number of TV Channels it has.", "question_toks": ["Which", "country", "has", "the", "most", "of", "TV", "Channels", "?", "List", "the", "country", "and", "number", "of", "TV", "Channels", "it", "has", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "tvshow", "query": "SELECT count(*) from TV_Channel GROUP BY  Country ORDER BY count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "TV_Channel", "GROUP", "BY", "Country", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "TV_Channel", "GROUP", "BY", "Country", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "question": "What is the country with the most number of TV Channels and how many does it have?", "question_toks": ["What", "is", "the", "country", "with", "the", "most", "number", "of", "TV", "Channels", "and", "how", "many", "does", "it", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "tvshow", "query": "SELECT count(*) from TV_Channel; ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "TV_Channel", ";"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "TV_Channel", ";"], "question": "List the number of different series names and contents in the TV Channel table.", "question_toks": ["List", "the", "number", "of", "different", "series", "names", "and", "contents", "in", "the", "TV", "Channel", "table", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "tvshow", "query": "SELECT count(*) from TV_Channel; ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "TV_Channel", ";"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "TV_Channel", ";"], "question": "How many different series and contents are listed in the TV Channel table?", "question_toks": ["How", "many", "different", "series", "and", "contents", "are", "listed", "in", "the", "TV", "Channel", "table", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "tvshow", "query": "SELECT count(*) from TV_Channel GROUP BY  LANGUAGE ORDER BY count(*) ASC LIMIT 1;", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "TV_Channel", "GROUP", "BY", "LANGUAGE", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1", ";"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "TV_Channel", "GROUP", "BY", "LANGUAGE", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1", ";"], "question": "List the language used least number of TV Channel. List language and number of TV Channel.", "question_toks": ["List", "the", "language", "used", "least", "number", "of", "TV", "Channel", ".", "List", "language", "and", "number", "of", "TV", "Channel", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "tvshow", "query": "SELECT count(*) from TV_Channel GROUP BY  LANGUAGE ORDER BY count(*) ASC LIMIT 1;", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "TV_Channel", "GROUP", "BY", "LANGUAGE", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1", ";"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "TV_Channel", "GROUP", "BY", "LANGUAGE", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1", ";"], "question": "What are the languages used by the least number of TV Channels and how many channels use it?", "question_toks": ["What", "are", "the", "languages", "used", "by", "the", "least", "number", "of", "TV", "Channels", "and", "how", "many", "channels", "use", "it", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "tvshow", "query": "SELECT count(*) from TV_Channel GROUP BY  LANGUAGE", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "TV_Channel", "GROUP", "BY", "LANGUAGE"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "TV_Channel", "GROUP", "BY", "LANGUAGE"], "question": "List each language and the number of TV Channels using it.", "question_toks": ["List", "each", "language", "and", "the", "number", "of", "TV", "Channels", "using", "it", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "tvshow", "query": "SELECT count(*) from TV_Channel GROUP BY  LANGUAGE", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "TV_Channel", "GROUP", "BY", "LANGUAGE"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "TV_Channel", "GROUP", "BY", "LANGUAGE"], "question": "For each language, list the number of TV Channels that use it.", "question_toks": ["For", "each", "language", ",", "list", "the", "number", "of", "TV", "Channels", "that", "use", "it", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "tvshow", "query": "SELECT count(*) from TV_series ORDER BY  Rating DESC LIMIT 3;", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "TV_series", "ORDER", "BY", "Rating", "DESC", "LIMIT", "3", ";"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "TV_series", "ORDER", "BY", "Rating", "DESC", "LIMIT", "3", ";"], "question": "List top 3 highest Rating  TV series. List the TV series's Episode and Rating.", "question_toks": ["List", "top", "3", "highest", "Rating", "TV", "series", ".", "List", "the", "TV", "series", "'s", "Episode", "and", "Rating", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 13, false], null]]], "limit": 3, "intersect": null, "union": null, "except": null}}, {"db_id": "tvshow", "query": "SELECT count(*) from TV_series ORDER BY  Rating DESC LIMIT 3;", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "TV_series", "ORDER", "BY", "Rating", "DESC", "LIMIT", "3", ";"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "TV_series", "ORDER", "BY", "Rating", "DESC", "LIMIT", "3", ";"], "question": "What are 3 most highly rated episodes in the TV series table and what were those ratings?", "question_toks": ["What", "are", "3", "most", "highly", "rated", "episodes", "in", "the", "TV", "series", "table", "and", "what", "were", "those", "ratings", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 13, false], null]]], "limit": 3, "intersect": null, "union": null, "except": null}}, {"db_id": "tvshow", "query": "SELECT count(*) from TV_series; ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "TV_series", ";"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "TV_series", ";"], "question": "What is minimum and maximum share of TV series?", "question_toks": ["What", "is", "minimum", "and", "maximum", "share", "of", "TV", "series", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "tvshow", "query": "SELECT count(*) from TV_series; ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "TV_series", ";"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "TV_series", ";"], "question": "What is the maximum and minimum share for the TV series?", "question_toks": ["What", "is", "the", "maximum", "and", "minimum", "share", "for", "the", "TV", "series", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "tvshow", "query": "SELECT count(*) from cartoon GROUP BY  Directed_by", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "cartoon", "GROUP", "BY", "Directed_by"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "cartoon", "GROUP", "BY", "Directed_by"], "question": "Find the number of cartoons directed by each of the listed directors.", "question_toks": ["Find", "the", "number", "of", "cartoons", "directed", "by", "each", "of", "the", "listed", "directors", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 21, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "tvshow", "query": "SELECT count(*) from cartoon GROUP BY  Directed_by", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "cartoon", "GROUP", "BY", "Directed_by"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "cartoon", "GROUP", "BY", "Directed_by"], "question": "How many cartoons did each director create?", "question_toks": ["How", "many", "cartoons", "did", "each", "director", "create", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 21, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "tvshow", "query": "SELECT count(*) from cartoon ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "cartoon"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "cartoon"], "question": "Find the production code and channel of the most recently aired cartoon .", "question_toks": ["Find", "the", "production", "code", "and", "channel", "of", "the", "most", "recently", "aired", "cartoon", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "tvshow", "query": "SELECT count(*) from cartoon ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "cartoon"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "cartoon"], "question": "What is the produdction code and channel of the most recent cartoon ?", "question_toks": ["What", "is", "the", "produdction", "code", "and", "channel", "of", "the", "most", "recent", "cartoon", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "tvshow", "query": "SELECT count(*) from TV_Channel WHERE  hight_definition_TV  =  \"yes\"", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "TV_Channel", "WHERE", "hight_definition_TV", "=", "``", "yes", "''"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "TV_Channel", "WHERE", "hight_definition_TV", "=", "value"], "question": "Find the package choice and series name of the TV channel that has high definition TV.", "question_toks": ["Find", "the", "package", "choice", "and", "series", "name", "of", "the", "TV", "channel", "that", "has", "high", "definition", "TV", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"yes\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "tvshow", "query": "SELECT count(*) from TV_Channel WHERE  hight_definition_TV  =  \"yes\"", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "TV_Channel", "WHERE", "hight_definition_TV", "=", "``", "yes", "''"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "TV_Channel", "WHERE", "hight_definition_TV", "=", "value"], "question": "What are the package options and the name of the series for the TV Channel that supports high definition TV?", "question_toks": ["What", "are", "the", "package", "options", "and", "the", "name", "of", "the", "series", "for", "the", "TV", "Channel", "that", "supports", "high", "definition", "TV", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"yes\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "tvshow", "query": "SELECT count(*) from tv_channel WHERE  LANGUAGE != 'English'", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "tv_channel", "WHERE", "LANGUAGE", "!", "=", "'English", "'"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "tv_channel", "WHERE", "LANGUAGE", "!", "=", "'English", "'"], "question": "find the pixel aspect ratio and nation of the tv channels that do not use English.", "question_toks": ["find", "the", "pixel", "aspect", "ratio", "and", "nation", "of", "the", "tv", "channels", "that", "do", "not", "use", "English", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 7, [0, [0, 4, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "tvshow", "query": "SELECT count(*) from tv_channel WHERE  LANGUAGE != 'English'", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "tv_channel", "WHERE", "LANGUAGE", "!", "=", "'English", "'"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "tv_channel", "WHERE", "LANGUAGE", "!", "=", "'English", "'"], "question": "What is the pixel aspect ratio and country of origin for all TV channels that do not use English?", "question_toks": ["What", "is", "the", "pixel", "aspect", "ratio", "and", "country", "of", "origin", "for", "all", "TV", "channels", "that", "do", "not", "use", "English", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 7, [0, [0, 4, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "poker_player", "query": "SELECT count(*) from poker_player ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "poker_player"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "poker_player"], "question": "List the final tables made and the best finishes of poker players.", "question_toks": ["List", "the", "final", "tables", "made", "and", "the", "best", "finishes", "of", "poker", "players", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "poker_player", "query": "SELECT count(*) from poker_player ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "poker_player"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "poker_player"], "question": "What are the final tables made and best finishes for all poker players?", "question_toks": ["What", "are", "the", "final", "tables", "made", "and", "best", "finishes", "for", "all", "poker", "players", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "poker_player", "query": "SELECT count(*) from people GROUP BY  Nationality", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "people", "GROUP", "BY", "Nationality"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "people", "GROUP", "BY", "Nationality"], "question": "What are different nationalities of people and the corresponding number of people from each nation?", "question_toks": ["What", "are", "different", "nationalities", "of", "people", "and", "the", "corresponding", "number", "of", "people", "from", "each", "nation", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "poker_player", "query": "SELECT count(*) from people GROUP BY  Nationality", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "people", "GROUP", "BY", "Nationality"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "people", "GROUP", "BY", "Nationality"], "question": "How many people are there of each nationality?", "question_toks": ["How", "many", "people", "are", "there", "of", "each", "nationality", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "poker_player", "query": "SELECT count(*) from people ORDER BY  Name ASC", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "people", "ORDER", "BY", "Name", "ASC"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "people", "ORDER", "BY", "Name", "ASC"], "question": "List the names and birth dates of people in ascending alphabetical order of name.", "question_toks": ["List", "the", "names", "and", "birth", "dates", "of", "people", "in", "ascending", "alphabetical", "order", "of", "name", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 9, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "poker_player", "query": "SELECT count(*) from people ORDER BY  Name ASC", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "people", "ORDER", "BY", "Name", "ASC"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "people", "ORDER", "BY", "Name", "ASC"], "question": "What are the names and birth dates of people, ordered by their names in alphabetical order?", "question_toks": ["What", "are", "the", "names", "and", "birth", "dates", "of", "people", ",", "ordered", "by", "their", "names", "in", "alphabetical", "order", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 9, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "voter_1", "query": "SELECT count(*) from contestants ORDER BY  contestant_name DESC", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "contestants", "ORDER", "BY", "contestant_name", "DESC"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "contestants", "ORDER", "BY", "contestant_name", "DESC"], "question": "List the contestant numbers and names, ordered by contestant name descending.", "question_toks": ["List", "the", "contestant", "numbers", "and", "names", ",", "ordered", "by", "contestant", "name", "descending", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 4, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "voter_1", "query": "SELECT count(*) from votes ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "votes"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "votes"], "question": "List the vote ids, phone numbers and states of all votes.", "question_toks": ["List", "the", "vote", "ids", ",", "phone", "numbers", "and", "states", "of", "all", "votes", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "voter_1", "query": "SELECT count(*) from area_code_state ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "area_code_state"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "area_code_state"], "question": "What are the maximum and minimum values of area codes?", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "values", "of", "area", "codes", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "voter_1", "query": "SELECT count(*) from votes ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "votes"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "votes"], "question": "What are the distinct states and create time of all votes?", "question_toks": ["What", "are", "the", "distinct", "states", "and", "create", "time", "of", "all", "votes", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "voter_1", "query": "SELECT count(*) from CONTESTANTS GROUP BY  contestants.contestant_number HAVING count(*)  >=  2", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "CONTESTANTS", "GROUP", "BY", "contestants.contestant_number", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "CONTESTANTS", "GROUP", "BY", "contestants.contestant_number", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "question": "What are the contestant numbers and names of the contestants who had at least two votes?", "question_toks": ["What", "are", "the", "contestant", "numbers", "and", "names", "of", "the", "contestants", "who", "had", "at", "least", "two", "votes", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "voter_1", "query": "SELECT count(*) from CONTESTANTS GROUP BY  contestants.contestant_number ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "CONTESTANTS", "GROUP", "BY", "contestants.contestant_number", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "CONTESTANTS", "GROUP", "BY", "contestants.contestant_number", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "question": "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?", "question_toks": ["Of", "all", "the", "contestants", "who", "got", "voted", ",", "what", "is", "the", "contestant", "number", "and", "name", "of", "the", "contestant", "who", "got", "least", "votes", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "voter_1", "query": "SELECT count(*) from CONTESTANTS WHERE  contestants.contestant_name  =  'Tabatha Gehling'", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "CONTESTANTS", "WHERE", "contestants.contestant_name", "=", "'Tabatha", "Gehling", "'"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "CONTESTANTS", "WHERE", "contestants.contestant_name", "=", "value", "Gehling", "'"], "question": "What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?", "question_toks": ["What", "are", "the", "create", "dates", ",", "states", ",", "and", "phone", "numbers", "of", "the", "votes", "that", "were", "for", "the", "contestant", "named", "'Tabatha", "Gehling", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Tabatha Gehling\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT count(*) from country WHERE  Name  =  \"Brazil\"", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "country", "WHERE", "Name", "=", "``", "Brazil", "''"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "country", "WHERE", "Name", "=", "value"], "question": "What are the population and life expectancies in Brazil?", "question_toks": ["What", "are", "the", "population", "and", "life", "expectancies", "in", "Brazil", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Brazil\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT count(*) from country WHERE  Name  =  \"Brazil\"", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "country", "WHERE", "Name", "=", "``", "Brazil", "''"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "country", "WHERE", "Name", "=", "value"], "question": "Give me Brazil\u2019s population and life expectancies.", "question_toks": ["Give", "me", "Brazil\u2019s", "population", "and", "life", "expectancies", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Brazil\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT count(*) from country WHERE  Name  =  \"Angola\"", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "country", "WHERE", "Name", "=", "``", "Angola", "''"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "country", "WHERE", "Name", "=", "value"], "question": "What are the region and population of Angola?", "question_toks": ["What", "are", "the", "region", "and", "population", "of", "Angola", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Angola\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT count(*) from country WHERE  Name  =  \"Angola\"", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "country", "WHERE", "Name", "=", "``", "Angola", "''"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "country", "WHERE", "Name", "=", "value"], "question": "What region does Angola belong to and what is its population?", "question_toks": ["What", "region", "does", "Angola", "belong", "to", "and", "what", "is", "its", "population", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Angola\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT count(*) from country WHERE  Continent  =  \"Asia\"", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "country", "WHERE", "Continent", "=", "``", "Asia", "''"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "country", "WHERE", "Continent", "=", "value"], "question": "What is the total population and maximum GNP in Asia?", "question_toks": ["What", "is", "the", "total", "population", "and", "maximum", "GNP", "in", "Asia", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT count(*) from country WHERE  Continent  =  \"Asia\"", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "country", "WHERE", "Continent", "=", "``", "Asia", "''"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "country", "WHERE", "Continent", "=", "value"], "question": "How many people live in Asia, and what is the largest GNP among them?", "question_toks": ["How", "many", "people", "live", "in", "Asia", ",", "and", "what", "is", "the", "largest", "GNP", "among", "them", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT count(*) from country WHERE  GovernmentForm  =  \"US Territory\"", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "country", "WHERE", "GovernmentForm", "=", "``", "US", "Territory", "''"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "country", "WHERE", "GovernmentForm", "=", "value", "Territory", "''"], "question": "What is the average GNP and total population in all nations whose government is US territory?", "question_toks": ["What", "is", "the", "average", "GNP", "and", "total", "population", "in", "all", "nations", "whose", "government", "is", "US", "territory", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"US Territory\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT count(*) from country WHERE  GovernmentForm  =  \"US Territory\"", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "country", "WHERE", "GovernmentForm", "=", "``", "US", "Territory", "''"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "country", "WHERE", "GovernmentForm", "=", "value", "Territory", "''"], "question": "Give the mean GNP and total population of nations which are considered US territory.", "question_toks": ["Give", "the", "mean", "GNP", "and", "total", "population", "of", "nations", "which", "are", "considered", "US", "territory", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"US Territory\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT count(*) from countrylanguage WHERE  countrylanguage.Language  =  \"English\" ORDER BY city.Population DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "countrylanguage", "WHERE", "countrylanguage.Language", "=", "``", "English", "''", "ORDER", "BY", "city.Population", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "countrylanguage", "WHERE", "countrylanguage.Language", "=", "value", "ORDER", "BY", "city.Population", "DESC", "LIMIT", "1"], "question": "Find the city with the largest population that uses English.", "question_toks": ["Find", "the", "city", "with", "the", "largest", "population", "that", "uses", "English", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 5, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT count(*) from countrylanguage WHERE  countrylanguage.Language  =  \"English\" ORDER BY city.Population DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "countrylanguage", "WHERE", "countrylanguage.Language", "=", "``", "English", "''", "ORDER", "BY", "city.Population", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "countrylanguage", "WHERE", "countrylanguage.Language", "=", "value", "ORDER", "BY", "city.Population", "DESC", "LIMIT", "1"], "question": "What is the most populace city that speaks English?", "question_toks": ["What", "is", "the", "most", "populace", "city", "that", "speaks", "English", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 5, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT count(*) from country WHERE  Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "country", "WHERE", "Continent", "=", "``", "Asia", "''", "ORDER", "BY", "SurfaceArea", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "country", "WHERE", "Continent", "=", "value", "ORDER", "BY", "SurfaceArea", "DESC", "LIMIT", "1"], "question": "Find the name, population and expected life length of asian country with the largest area?", "question_toks": ["Find", "the", "name", ",", "population", "and", "expected", "life", "length", "of", "asian", "country", "with", "the", "largest", "area", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 12, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT count(*) from country WHERE  Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "country", "WHERE", "Continent", "=", "``", "Asia", "''", "ORDER", "BY", "SurfaceArea", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "country", "WHERE", "Continent", "=", "value", "ORDER", "BY", "SurfaceArea", "DESC", "LIMIT", "1"], "question": "What are the name, population, and life expectancy of the largest Asian country by land?", "question_toks": ["What", "are", "the", "name", ",", "population", ",", "and", "life", "expectancy", "of", "the", "largest", "Asian", "country", "by", "land", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 12, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT count(*) from country ORDER BY  Population LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "country", "ORDER", "BY", "Population", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "country", "ORDER", "BY", "Population", "LIMIT", "1"], "question": "What are the name, independence year, and surface area of the country with the smallest population?", "question_toks": ["What", "are", "the", "name", ",", "independence", "year", ",", "and", "surface", "area", "of", "the", "country", "with", "the", "smallest", "population", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 14, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT count(*) from country ORDER BY  Population LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "country", "ORDER", "BY", "Population", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "country", "ORDER", "BY", "Population", "LIMIT", "1"], "question": "Give the name, year of independence, and surface area of the country that has the lowest population.", "question_toks": ["Give", "the", "name", ",", "year", "of", "independence", ",", "and", "surface", "area", "of", "the", "country", "that", "has", "the", "lowest", "population", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 14, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT count(*) from country ORDER BY  SurfaceArea DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "country", "ORDER", "BY", "SurfaceArea", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "country", "ORDER", "BY", "SurfaceArea", "DESC", "LIMIT", "1"], "question": "What are the population, name and leader of the country with the largest area?", "question_toks": ["What", "are", "the", "population", ",", "name", "and", "leader", "of", "the", "country", "with", "the", "largest", "area", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 12, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT count(*) from country ORDER BY  SurfaceArea DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "country", "ORDER", "BY", "SurfaceArea", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "country", "ORDER", "BY", "SurfaceArea", "DESC", "LIMIT", "1"], "question": "Give the name, population, and head of state for the country that has the largest area.", "question_toks": ["Give", "the", "name", ",", "population", ",", "and", "head", "of", "state", "for", "the", "country", "that", "has", "the", "largest", "area", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 12, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT count(*) from country GROUP BY  country.Name HAVING COUNT(*)  >  2", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "country", "GROUP", "BY", "country.Name", "HAVING", "COUNT", "(", "*", ")", ">", "2"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "country", "GROUP", "BY", "country.Name", "HAVING", "COUNT", "(", "*", ")", ">", "value"], "question": "Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.", "question_toks": ["Return", "the", "country", "name", "and", "the", "numbers", "of", "languages", "spoken", "for", "each", "country", "that", "speaks", "at", "least", "3", "languages", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT count(*) from country GROUP BY  country.Name HAVING COUNT(*)  >  2", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "country", "GROUP", "BY", "country.Name", "HAVING", "COUNT", "(", "*", ")", ">", "2"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "country", "GROUP", "BY", "country.Name", "HAVING", "COUNT", "(", "*", ")", ">", "value"], "question": "What are the names of countries that speak more than 2 languages, as well as how many languages they speak?", "question_toks": ["What", "are", "the", "names", "of", "countries", "that", "speak", "more", "than", "2", "languages", ",", "as", "well", "as", "how", "many", "languages", "they", "speak", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT count(*) from country GROUP BY  GovernmentForm HAVING avg(LifeExpectancy)  >  72", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "country", "GROUP", "BY", "GovernmentForm", "HAVING", "avg", "(", "LifeExpectancy", ")", ">", "72"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "country", "GROUP", "BY", "GovernmentForm", "HAVING", "avg", "(", "LifeExpectancy", ")", ">", "value"], "question": "Find the government form name and total population for each government form whose average life expectancy is longer than 72.", "question_toks": ["Find", "the", "government", "form", "name", "and", "total", "population", "for", "each", "government", "form", "whose", "average", "life", "expectancy", "is", "longer", "than", "72", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 19, false]], "having": [[false, 3, [0, [5, 15, false], null], 72.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT count(*) from country GROUP BY  GovernmentForm HAVING avg(LifeExpectancy)  >  72", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "country", "GROUP", "BY", "GovernmentForm", "HAVING", "avg", "(", "LifeExpectancy", ")", ">", "72"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "country", "GROUP", "BY", "GovernmentForm", "HAVING", "avg", "(", "LifeExpectancy", ")", ">", "value"], "question": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?", "question_toks": ["What", "are", "the", "different", "government", "forms", "and", "what", "is", "the", "total", "population", "of", "each", "for", "government", "forms", "that", "have", "an", "average", "life", "expectancy", "greater", "than", "72", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 19, false]], "having": [[false, 3, [0, [5, 15, false], null], 72.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT count(*) from country GROUP BY  Continent HAVING avg(LifeExpectancy)  <  72", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "country", "GROUP", "BY", "Continent", "HAVING", "avg", "(", "LifeExpectancy", ")", "<", "72"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "country", "GROUP", "BY", "Continent", "HAVING", "avg", "(", "LifeExpectancy", ")", "<", "value"], "question": "Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?", "question_toks": ["Find", "the", "average", "life", "expectancy", "and", "total", "population", "for", "each", "continent", "where", "the", "average", "life", "expectancy", "is", "shorter", "than", "72", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [[false, 4, [0, [5, 15, false], null], 72.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT count(*) from country GROUP BY  Continent HAVING avg(LifeExpectancy)  <  72", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "country", "GROUP", "BY", "Continent", "HAVING", "avg", "(", "LifeExpectancy", ")", "<", "72"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "country", "GROUP", "BY", "Continent", "HAVING", "avg", "(", "LifeExpectancy", ")", "<", "value"], "question": "What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?", "question_toks": ["What", "are", "the", "different", "continents", "and", "the", "total", "popuation", "and", "average", "life", "expectancy", "corresponding", "to", "each", ",", "for", "continents", "that", "have", "an", "average", "life", "expectancy", "less", "than", "72", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [[false, 4, [0, [5, 15, false], null], 72.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT count(*) from country ORDER BY  SurfaceArea DESC LIMIT 5", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "country", "ORDER", "BY", "SurfaceArea", "DESC", "LIMIT", "5"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "country", "ORDER", "BY", "SurfaceArea", "DESC", "LIMIT", "5"], "question": "What are the names and areas of countries with the top 5 largest area?", "question_toks": ["What", "are", "the", "names", "and", "areas", "of", "countries", "with", "the", "top", "5", "largest", "area", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 12, false], null]]], "limit": 5, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT count(*) from country ORDER BY  SurfaceArea DESC LIMIT 5", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "country", "ORDER", "BY", "SurfaceArea", "DESC", "LIMIT", "5"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "country", "ORDER", "BY", "SurfaceArea", "DESC", "LIMIT", "5"], "question": "Return the names and surface areas of the 5 largest countries.", "question_toks": ["Return", "the", "names", "and", "surface", "areas", "of", "the", "5", "largest", "countries", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 12, false], null]]], "limit": 5, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT count(*) from country WHERE  continent  =  \"north america\" and surfacearea  >  3000", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "country", "WHERE", "continent", "=", "``", "north", "america", "''", "and", "surfacearea", ">", "3000"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "country", "WHERE", "continent", "=", "value", "america", "''", "and", "surfacearea", ">", "value"], "question": "What is the total population and average area of countries in the continent of North America whose area is bigger than 3000 ?", "question_toks": ["What", "is", "the", "total", "population", "and", "average", "area", "of", "countries", "in", "the", "continent", "of", "North", "America", "whose", "area", "is", "bigger", "than", "3000", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"north america\"", null], "and", [false, 3, [0, [0, 12, false], null], 3000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT count(*) from country WHERE  continent  =  \"north america\" and surfacearea  >  3000", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "country", "WHERE", "continent", "=", "``", "north", "america", "''", "and", "surfacearea", ">", "3000"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "country", "WHERE", "continent", "=", "value", "america", "''", "and", "surfacearea", ">", "value"], "question": "Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000 .", "question_toks": ["Give", "the", "total", "population", "and", "average", "surface", "area", "corresponding", "to", "countries", "in", "North", "America", "that", "have", "a", "surface", "area", "greater", "than", "3000", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"north america\"", null], "and", [false, 3, [0, [0, 12, false], null], 3000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT count(*) from countrylanguage GROUP BY  CountryCode", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "countrylanguage", "GROUP", "BY", "CountryCode"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "countrylanguage", "GROUP", "BY", "CountryCode"], "question": "What is the language spoken by the largest percentage of people in each country?", "question_toks": ["What", "is", "the", "language", "spoken", "by", "the", "largest", "percentage", "of", "people", "in", "each", "country", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT count(*) from countrylanguage GROUP BY  CountryCode", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "countrylanguage", "GROUP", "BY", "CountryCode"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "countrylanguage", "GROUP", "BY", "CountryCode"], "question": "What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?", "question_toks": ["What", "are", "the", "country", "codes", "of", "the", "different", "countries", ",", "and", "what", "are", "the", "languages", "spoken", "by", "the", "greatest", "percentage", "of", "people", "for", "each", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT count(*) from countrylanguage WHERE  LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "countrylanguage", "WHERE", "LANGUAGE", "=", "``", "Spanish", "''", "GROUP", "BY", "CountryCode"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "countrylanguage", "WHERE", "LANGUAGE", "=", "value", "GROUP", "BY", "CountryCode"], "question": "What is the total number of countries where Spanish is spoken by the largest percentage of people?", "question_toks": ["What", "is", "the", "total", "number", "of", "countries", "where", "Spanish", "is", "spoken", "by", "the", "largest", "percentage", "of", "people", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Spanish\"", null]], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT count(*) from countrylanguage WHERE  LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "countrylanguage", "WHERE", "LANGUAGE", "=", "``", "Spanish", "''", "GROUP", "BY", "CountryCode"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "countrylanguage", "WHERE", "LANGUAGE", "=", "value", "GROUP", "BY", "CountryCode"], "question": "Count the number of countries for which Spanish is the predominantly spoken language.", "question_toks": ["Count", "the", "number", "of", "countries", "for", "which", "Spanish", "is", "the", "predominantly", "spoken", "language", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Spanish\"", null]], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT count(*) from countrylanguage WHERE  LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "countrylanguage", "WHERE", "LANGUAGE", "=", "``", "Spanish", "''", "GROUP", "BY", "CountryCode"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "countrylanguage", "WHERE", "LANGUAGE", "=", "value", "GROUP", "BY", "CountryCode"], "question": "What are the codes of countries where Spanish is spoken by the largest percentage of people?", "question_toks": ["What", "are", "the", "codes", "of", "countries", "where", "Spanish", "is", "spoken", "by", "the", "largest", "percentage", "of", "people", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Spanish\"", null]], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT count(*) from countrylanguage WHERE  LANGUAGE  =  \"Spanish\" GROUP BY CountryCode", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "countrylanguage", "WHERE", "LANGUAGE", "=", "``", "Spanish", "''", "GROUP", "BY", "CountryCode"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "countrylanguage", "WHERE", "LANGUAGE", "=", "value", "GROUP", "BY", "CountryCode"], "question": "Return the codes of countries for which Spanish is the predominantly spoken language.", "question_toks": ["Return", "the", "codes", "of", "countries", "for", "which", "Spanish", "is", "the", "predominantly", "spoken", "language", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Spanish\"", null]], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "orchestra", "query": "SELECT count(*) from performance WHERE  TYPE != \"Live final\"", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "performance", "WHERE", "TYPE", "!", "=", "``", "Live", "final", "''"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "performance", "WHERE", "TYPE", "!", "=", "``", "Live", "final", "''"], "question": "What are the maximum and minimum share of performances whose type is not \"Live final\".", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "share", "of", "performances", "whose", "type", "is", "not", "``", "Live", "final", "''", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 7, [0, [0, 14, false], null], "\"Live final\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "orchestra", "query": "SELECT count(*) from performance WHERE  TYPE != \"Live final\"", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "performance", "WHERE", "TYPE", "!", "=", "``", "Live", "final", "''"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "performance", "WHERE", "TYPE", "!", "=", "``", "Live", "final", "''"], "question": "Return the maximum and minimum shares for performances that do not have the type \"Live final\".", "question_toks": ["Return", "the", "maximum", "and", "minimum", "shares", "for", "performances", "that", "do", "not", "have", "the", "type", "``", "Live", "final", "''", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 7, [0, [0, 14, false], null], "\"Live final\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "orchestra", "query": "SELECT count(*) from conductor ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "conductor"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "conductor"], "question": "Show the names of conductors and the orchestras they have conducted.", "question_toks": ["Show", "the", "names", "of", "conductors", "and", "the", "orchestras", "they", "have", "conducted", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "orchestra", "query": "SELECT count(*) from conductor ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "conductor"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "conductor"], "question": "What are the names of conductors as well as the corresonding orchestras that they have conducted?", "question_toks": ["What", "are", "the", "names", "of", "conductors", "as", "well", "as", "the", "corresonding", "orchestras", "that", "they", "have", "conducted", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "orchestra", "query": "SELECT count(*) from orchestra GROUP BY  Record_Company", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "orchestra", "GROUP", "BY", "Record_Company"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "orchestra", "GROUP", "BY", "Record_Company"], "question": "Please show the different record companies and the corresponding number of orchestras.", "question_toks": ["Please", "show", "the", "different", "record", "companies", "and", "the", "corresponding", "number", "of", "orchestras", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "orchestra", "query": "SELECT count(*) from orchestra GROUP BY  Record_Company", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "orchestra", "GROUP", "BY", "Record_Company"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "orchestra", "GROUP", "BY", "Record_Company"], "question": "How many orchestras does each record company manage?", "question_toks": ["How", "many", "orchestras", "does", "each", "record", "company", "manage", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "network_1", "query": "SELECT count(*) from Highschooler ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Highschooler"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Highschooler"], "question": "Show the names and grades of each high schooler.", "question_toks": ["Show", "the", "names", "and", "grades", "of", "each", "high", "schooler", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "network_1", "query": "SELECT count(*) from Highschooler ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Highschooler"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Highschooler"], "question": "What are the names and grades for each high schooler?", "question_toks": ["What", "are", "the", "names", "and", "grades", "for", "each", "high", "schooler", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "network_1", "query": "SELECT count(*) from Highschooler GROUP BY  grade", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Highschooler", "GROUP", "BY", "grade"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Highschooler", "GROUP", "BY", "grade"], "question": "Show the number of high schoolers for each grade.", "question_toks": ["Show", "the", "number", "of", "high", "schoolers", "for", "each", "grade", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "network_1", "query": "SELECT count(*) from Highschooler GROUP BY  grade", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Highschooler", "GROUP", "BY", "grade"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Highschooler", "GROUP", "BY", "grade"], "question": "How many high schoolers are in each grade?", "question_toks": ["How", "many", "high", "schoolers", "are", "in", "each", "grade", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "network_1", "query": "SELECT count(*) from Friend GROUP BY  student_id", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Friend", "GROUP", "BY", "student_id"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Friend", "GROUP", "BY", "student_id"], "question": "Show the student IDs and numbers of friends corresponding to each.", "question_toks": ["Show", "the", "student", "IDs", "and", "numbers", "of", "friends", "corresponding", "to", "each", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "network_1", "query": "SELECT count(*) from Friend GROUP BY  student_id", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Friend", "GROUP", "BY", "student_id"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Friend", "GROUP", "BY", "student_id"], "question": "How many friends does each student have?", "question_toks": ["How", "many", "friends", "does", "each", "student", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "network_1", "query": "SELECT count(*) from Friend GROUP BY  Friend.student_id", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Friend", "GROUP", "BY", "Friend.student_id"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Friend", "GROUP", "BY", "Friend.student_id"], "question": "Show the names of high school students and their corresponding number of friends.", "question_toks": ["Show", "the", "names", "of", "high", "school", "students", "and", "their", "corresponding", "number", "of", "friends", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "network_1", "query": "SELECT count(*) from Friend GROUP BY  Friend.student_id", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Friend", "GROUP", "BY", "Friend.student_id"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Friend", "GROUP", "BY", "Friend.student_id"], "question": "What are the names of the high schoolers and how many friends does each have?", "question_toks": ["What", "are", "the", "names", "of", "the", "high", "schoolers", "and", "how", "many", "friends", "does", "each", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "network_1", "query": "SELECT count(*) from Likes GROUP BY  student_id", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Likes", "GROUP", "BY", "student_id"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Likes", "GROUP", "BY", "student_id"], "question": "Count the number of likes for each student id.", "question_toks": ["Count", "the", "number", "of", "likes", "for", "each", "student", "id", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "network_1", "query": "SELECT count(*) from Likes GROUP BY  student_id", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Likes", "GROUP", "BY", "student_id"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Likes", "GROUP", "BY", "student_id"], "question": "How many likes correspond to each student id?", "question_toks": ["How", "many", "likes", "correspond", "to", "each", "student", "id", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "network_1", "query": "SELECT count(*) from Likes GROUP BY  Likes.student_id", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Likes", "GROUP", "BY", "Likes.student_id"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Likes", "GROUP", "BY", "Likes.student_id"], "question": "Show the names of high schoolers who have likes, and numbers of likes for each.", "question_toks": ["Show", "the", "names", "of", "high", "schoolers", "who", "have", "likes", ",", "and", "numbers", "of", "likes", "for", "each", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "network_1", "query": "SELECT count(*) from Likes GROUP BY  Likes.student_id", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Likes", "GROUP", "BY", "Likes.student_id"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Likes", "GROUP", "BY", "Likes.student_id"], "question": "What are the names of high schoolers who have likes, and how many likes does each have?", "question_toks": ["What", "are", "the", "names", "of", "high", "schoolers", "who", "have", "likes", ",", "and", "how", "many", "likes", "does", "each", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Professionals ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Professionals"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Professionals"], "question": "Which professional did not operate any treatment on dogs? List the professional's id, role and email.", "question_toks": ["Which", "professional", "did", "not", "operate", "any", "treatment", "on", "dogs", "?", "List", "the", "professional", "'s", "id", ",", "role", "and", "email", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Professionals ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Professionals"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Professionals"], "question": "Give me the id, role and email of the professionals who did not perform any treatment on dogs.", "question_toks": ["Give", "me", "the", "id", ",", "role", "and", "email", "of", "the", "professionals", "who", "did", "not", "perform", "any", "treatment", "on", "dogs", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Dogs GROUP BY  Dogs.owner_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Dogs", "GROUP", "BY", "Dogs.owner_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Dogs", "GROUP", "BY", "Dogs.owner_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "question": "Which owner owns the most dogs? List the owner id, first name and last name.", "question_toks": ["Which", "owner", "owns", "the", "most", "dogs", "?", "List", "the", "owner", "id", ",", "first", "name", "and", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 21, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Dogs GROUP BY  Dogs.owner_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Dogs", "GROUP", "BY", "Dogs.owner_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Dogs", "GROUP", "BY", "Dogs.owner_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "question": "Return the owner id, first name and last name of the owner who has the most dogs.", "question_toks": ["Return", "the", "owner", "id", ",", "first", "name", "and", "last", "name", "of", "the", "owner", "who", "has", "the", "most", "dogs", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 21, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Professionals GROUP BY  Professionals.professional_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Professionals", "GROUP", "BY", "Professionals.professional_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Professionals", "GROUP", "BY", "Professionals.professional_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "question": "Which professionals have done at least two treatments? List the professional's id, role, and first name.", "question_toks": ["Which", "professionals", "have", "done", "at", "least", "two", "treatments", "?", "List", "the", "professional", "'s", "id", ",", "role", ",", "and", "first", "name", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 33, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Professionals GROUP BY  Professionals.professional_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Professionals", "GROUP", "BY", "Professionals.professional_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Professionals", "GROUP", "BY", "Professionals.professional_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "question": "What are the id, role, and first name of the professionals who have performed two or more treatments?", "question_toks": ["What", "are", "the", "id", ",", "role", ",", "and", "first", "name", "of", "the", "professionals", "who", "have", "performed", "two", "or", "more", "treatments", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 33, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Owners GROUP BY  Owners.owner_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Owners", "GROUP", "BY", "Owners.owner_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Owners", "GROUP", "BY", "Owners.owner_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "question": "Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.", "question_toks": ["Which", "owner", "has", "paid", "for", "the", "most", "treatments", "on", "his", "or", "her", "dogs", "?", "List", "the", "owner", "id", "and", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Owners GROUP BY  Owners.owner_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Owners", "GROUP", "BY", "Owners.owner_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Owners", "GROUP", "BY", "Owners.owner_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "question": "Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.", "question_toks": ["Tell", "me", "the", "owner", "id", "and", "last", "name", "of", "the", "owner", "who", "spent", "the", "most", "on", "treatments", "of", "his", "or", "her", "dogs", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Owners GROUP BY  Owners.owner_id ORDER BY sum(Treatments.cost_of_treatment) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Owners", "GROUP", "BY", "Owners.owner_id", "ORDER", "BY", "sum", "(", "Treatments.cost_of_treatment", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Owners", "GROUP", "BY", "Owners.owner_id", "ORDER", "BY", "sum", "(", "Treatments.cost_of_treatment", ")", "DESC", "LIMIT", "1"], "question": "Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.", "question_toks": ["Which", "owner", "has", "paid", "the", "largest", "amount", "of", "money", "in", "total", "for", "their", "dogs", "?", "Show", "the", "owner", "id", "and", "zip", "code", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [4, 49, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Owners GROUP BY  Owners.owner_id ORDER BY sum(Treatments.cost_of_treatment) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Owners", "GROUP", "BY", "Owners.owner_id", "ORDER", "BY", "sum", "(", "Treatments.cost_of_treatment", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Owners", "GROUP", "BY", "Owners.owner_id", "ORDER", "BY", "sum", "(", "Treatments.cost_of_treatment", ")", "DESC", "LIMIT", "1"], "question": "Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.", "question_toks": ["Find", "the", "owner", "id", "and", "zip", "code", "of", "the", "owner", "who", "spent", "the", "most", "money", "in", "total", "for", "his", "or", "her", "dogs", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [4, 49, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Professionals GROUP BY  Professionals.professional_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Professionals", "GROUP", "BY", "Professionals.professional_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Professionals", "GROUP", "BY", "Professionals.professional_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "question": "Which professionals have done at least two types of treatments? List the professional id and cell phone.", "question_toks": ["Which", "professionals", "have", "done", "at", "least", "two", "types", "of", "treatments", "?", "List", "the", "professional", "id", "and", "cell", "phone", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 33, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Professionals GROUP BY  Professionals.professional_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Professionals", "GROUP", "BY", "Professionals.professional_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Professionals", "GROUP", "BY", "Professionals.professional_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "question": "Find the id and cell phone of the professionals who operate two or more types of treatments.", "question_toks": ["Find", "the", "id", "and", "cell", "phone", "of", "the", "professionals", "who", "operate", "two", "or", "more", "types", "of", "treatments", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 33, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Breeds ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Breeds"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Breeds"], "question": "List the date of each treatment, together with the first name of the professional who operated it.", "question_toks": ["List", "the", "date", "of", "each", "treatment", ",", "together", "with", "the", "first", "name", "of", "the", "professional", "who", "operated", "it", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Breeds ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Breeds"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Breeds"], "question": "What are the date and the operating professional's first name of each treatment?", "question_toks": ["What", "are", "the", "date", "and", "the", "operating", "professional", "'s", "first", "name", "of", "each", "treatment", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Breeds ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Breeds"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Breeds"], "question": "List the cost of each treatment and the corresponding treatment type description.", "question_toks": ["List", "the", "cost", "of", "each", "treatment", "and", "the", "corresponding", "treatment", "type", "description", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Breeds ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Breeds"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Breeds"], "question": "What are the cost and treatment type description of each treatment?", "question_toks": ["What", "are", "the", "cost", "and", "treatment", "type", "description", "of", "each", "treatment", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Breeds ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Breeds"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Breeds"], "question": "List each owner's first name, last name, and the size of his for her dog.", "question_toks": ["List", "each", "owner", "'s", "first", "name", ",", "last", "name", ",", "and", "the", "size", "of", "his", "for", "her", "dog", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Breeds ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Breeds"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Breeds"], "question": "What are each owner's first name, last name, and the size of their dog?", "question_toks": ["What", "are", "each", "owner", "'s", "first", "name", ",", "last", "name", ",", "and", "the", "size", "of", "their", "dog", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Breeds ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Breeds"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Breeds"], "question": "List pairs of the owner's first name and the dogs's name.", "question_toks": ["List", "pairs", "of", "the", "owner", "'s", "first", "name", "and", "the", "dogs", "'s", "name", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Breeds ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Breeds"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Breeds"], "question": "What are each owner's first name and their dogs's name?", "question_toks": ["What", "are", "each", "owner", "'s", "first", "name", "and", "their", "dogs", "'s", "name", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Owners WHERE  Owners.state  =  'Virginia'", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Owners", "WHERE", "Owners.state", "=", "'Virginia", "'"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Owners", "WHERE", "Owners.state", "=", "value"], "question": "Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name.", "question_toks": ["Which", "dogs", "are", "owned", "by", "someone", "who", "lives", "in", "Virginia", "?", "List", "the", "owner", "'s", "first", "name", "and", "the", "dog", "'s", "name", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Virginia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Owners WHERE  Owners.state  =  'Virginia'", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Owners", "WHERE", "Owners.state", "=", "'Virginia", "'"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Owners", "WHERE", "Owners.state", "=", "value"], "question": "Find the first names of owners living in Virginia and the names of dogs they own.", "question_toks": ["Find", "the", "first", "names", "of", "owners", "living", "in", "Virginia", "and", "the", "names", "of", "dogs", "they", "own", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Virginia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Breeds ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Breeds"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Breeds"], "question": "What are the arriving date and the departing date of the dogs who have gone through a treatment?", "question_toks": ["What", "are", "the", "arriving", "date", "and", "the", "departing", "date", "of", "the", "dogs", "who", "have", "gone", "through", "a", "treatment", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Breeds ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Breeds"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Breeds"], "question": "Find the arriving date and the departing date of the dogs that received a treatment.", "question_toks": ["Find", "the", "arriving", "date", "and", "the", "departing", "date", "of", "the", "dogs", "that", "received", "a", "treatment", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Dogs ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Dogs"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Dogs"], "question": "What are the arriving date and the departing date of all the dogs?", "question_toks": ["What", "are", "the", "arriving", "date", "and", "the", "departing", "date", "of", "all", "the", "dogs", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Dogs ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Dogs"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Dogs"], "question": "List the arrival date and the departure date for all the dogs.", "question_toks": ["List", "the", "arrival", "date", "and", "the", "departure", "date", "for", "all", "the", "dogs", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from professionals WHERE  city LIKE '%West%'", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "professionals", "WHERE", "city", "LIKE", "'", "%", "West", "%", "'"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "professionals", "WHERE", "city", "LIKE", "'", "%", "West", "%", "'"], "question": "Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.", "question_toks": ["Which", "professionals", "live", "in", "a", "city", "containing", "the", "substring", "'West", "'", "?", "List", "his", "or", "her", "role", ",", "street", ",", "city", "and", "state", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 9, [0, [0, 37, false], null], "\"%West%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from professionals WHERE  city LIKE '%West%'", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "professionals", "WHERE", "city", "LIKE", "'", "%", "West", "%", "'"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "professionals", "WHERE", "city", "LIKE", "'", "%", "West", "%", "'"], "question": "Find the role, street, city and state of the professionals living in a city that contains the substring 'West'.", "question_toks": ["Find", "the", "role", ",", "street", ",", "city", "and", "state", "of", "the", "professionals", "living", "in", "a", "city", "that", "contains", "the", "substring", "'West", "'", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 9, [0, [0, 37, false], null], "\"%West%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Owners WHERE  state LIKE '%North%'", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Owners", "WHERE", "state", "LIKE", "'", "%", "North", "%", "'"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Owners", "WHERE", "state", "LIKE", "'", "%", "North", "%", "'"], "question": "Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email.", "question_toks": ["Which", "owners", "live", "in", "the", "state", "whose", "name", "contains", "the", "substring", "'North", "'", "?", "List", "his", "first", "name", ",", "last", "name", "and", "email", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 9, [0, [0, 15, false], null], "\"%North%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Owners WHERE  state LIKE '%North%'", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Owners", "WHERE", "state", "LIKE", "'", "%", "North", "%", "'"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Owners", "WHERE", "state", "LIKE", "'", "%", "North", "%", "'"], "question": "Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'.", "question_toks": ["Return", "the", "first", "name", ",", "last", "name", "and", "email", "of", "the", "owners", "living", "in", "a", "state", "whose", "name", "contains", "the", "substring", "'North", "'", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 9, [0, [0, 15, false], null], "\"%North%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Dogs WHERE  abandoned_yn  =  1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Dogs", "WHERE", "abandoned_yn", "=", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Dogs", "WHERE", "abandoned_yn", "=", "value"], "question": "List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.", "question_toks": ["List", "the", "dog", "name", ",", "age", "and", "weight", "of", "the", "dogs", "who", "have", "been", "abandoned", "?", "1", "stands", "for", "yes", ",", "and", "0", "stands", "for", "no", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Dogs WHERE  abandoned_yn  =  1", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Dogs", "WHERE", "abandoned_yn", "=", "1"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Dogs", "WHERE", "abandoned_yn", "=", "value"], "question": "What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.", "question_toks": ["What", "are", "the", "dog", "name", ",", "age", "and", "weight", "of", "the", "dogs", "that", "were", "abandoned", "?", "Note", "that", "1", "stands", "for", "yes", ",", "and", "0", "stands", "for", "no", "in", "the", "tables", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Charges ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Charges"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Charges"], "question": "How much does each charge type costs? List both charge type and amount.", "question_toks": ["How", "much", "does", "each", "charge", "type", "costs", "?", "List", "both", "charge", "type", "and", "amount", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Charges ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Charges"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Charges"], "question": "List each charge type and its amount.", "question_toks": ["List", "each", "charge", "type", "and", "its", "amount", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from professionals ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "professionals"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "professionals"], "question": "List the email, cell phone and home phone of all the professionals.", "question_toks": ["List", "the", "email", ",", "cell", "phone", "and", "home", "phone", "of", "all", "the", "professionals", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from professionals ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "professionals"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "professionals"], "question": "What are the email, cell phone and home phone of each professional?", "question_toks": ["What", "are", "the", "email", ",", "cell", "phone", "and", "home", "phone", "of", "each", "professional", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from dogs ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "dogs"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "dogs"], "question": "What are all the possible breed type and size type combinations?", "question_toks": ["What", "are", "all", "the", "possible", "breed", "type", "and", "size", "type", "combinations", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from dogs ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "dogs"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "dogs"], "question": "Find the distinct breed type and size type combinations for dogs.", "question_toks": ["Find", "the", "distinct", "breed", "type", "and", "size", "type", "combinations", "for", "dogs", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Breeds ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Breeds"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Breeds"], "question": "List the first name of all the professionals along with the description of the treatment they have done.", "question_toks": ["List", "the", "first", "name", "of", "all", "the", "professionals", "along", "with", "the", "description", "of", "the", "treatment", "they", "have", "done", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT count(*) from Breeds ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "Breeds"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "Breeds"], "question": "What are each professional's first name and description of the treatment they have performed?", "question_toks": ["What", "are", "each", "professional", "'s", "first", "name", "and", "description", "of", "the", "treatment", "they", "have", "performed", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "singer", "query": "SELECT count(*) from singer ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "singer"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "singer"], "question": "What are the birth year and citizenship of singers?", "question_toks": ["What", "are", "the", "birth", "year", "and", "citizenship", "of", "singers", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "singer", "query": "SELECT count(*) from singer ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "singer"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "singer"], "question": "What are the birth years and citizenships of the singers?", "question_toks": ["What", "are", "the", "birth", "years", "and", "citizenships", "of", "the", "singers", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "singer", "query": "SELECT count(*) from singer GROUP BY  Citizenship", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "singer", "GROUP", "BY", "Citizenship"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "singer", "GROUP", "BY", "Citizenship"], "question": "Show different citizenship of singers and the number of singers of each citizenship.", "question_toks": ["Show", "different", "citizenship", "of", "singers", "and", "the", "number", "of", "singers", "of", "each", "citizenship", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "singer", "query": "SELECT count(*) from singer GROUP BY  Citizenship", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "singer", "GROUP", "BY", "Citizenship"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "singer", "GROUP", "BY", "Citizenship"], "question": "For each citizenship, how many singers are from that country?", "question_toks": ["For", "each", "citizenship", ",", "how", "many", "singers", "are", "from", "that", "country", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "singer", "query": "SELECT count(*) from singer GROUP BY  Citizenship", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "singer", "GROUP", "BY", "Citizenship"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "singer", "GROUP", "BY", "Citizenship"], "question": "Show different citizenships and the maximum net worth of singers of each citizenship.", "question_toks": ["Show", "different", "citizenships", "and", "the", "maximum", "net", "worth", "of", "singers", "of", "each", "citizenship", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "singer", "query": "SELECT count(*) from singer GROUP BY  Citizenship", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "singer", "GROUP", "BY", "Citizenship"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "singer", "GROUP", "BY", "Citizenship"], "question": "For each citizenship, what is the maximum net worth?", "question_toks": ["For", "each", "citizenship", ",", "what", "is", "the", "maximum", "net", "worth", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "singer", "query": "SELECT count(*) from singer ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "singer"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "singer"], "question": "Show titles of songs and names of singers.", "question_toks": ["Show", "titles", "of", "songs", "and", "names", "of", "singers", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "singer", "query": "SELECT count(*) from singer ", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "singer"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "singer"], "question": "What are the song titles and singer names?", "question_toks": ["What", "are", "the", "song", "titles", "and", "singer", "names", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "singer", "query": "SELECT count(*) from singer GROUP BY  singer.Name", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "singer", "GROUP", "BY", "singer.Name"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "singer", "GROUP", "BY", "singer.Name"], "question": "Show the names of singers and the total sales of their songs.", "question_toks": ["Show", "the", "names", "of", "singers", "and", "the", "total", "sales", "of", "their", "songs", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "singer", "query": "SELECT count(*) from singer GROUP BY  singer.Name", "query_toks": ["SELECT", "count", "(", "*", ")", "from", "singer", "GROUP", "BY", "singer.Name"], "query_toks_no_value": ["SELECT", "count", "(", "*", ")", "from", "singer", "GROUP", "BY", "singer.Name"], "question": "For each singer name, what is the total sales for their songs?", "question_toks": ["For", "each", "singer", "name", ",", "what", "is", "the", "total", "sales", "for", "their", "songs", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}]