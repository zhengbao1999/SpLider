[{"db_id": "department_management", "query": "SELECT name ,  born_state ,  age FROM head ORDER BY age", "query_toks": ["SELECT", "name", ",", "born_state", ",", "age", "FROM", "head", "ORDER", "BY", "age"], "query_toks_no_value": ["select", "name", ",", "born_state", ",", "age", "from", "head", "order", "by", "age"], "question": "List the name, born state and age of the heads of departments ordered by age.", "question_toks": ["List", "the", "name", ",", "born", "state", "and", "age", "of", "the", "heads", "of", "departments", "ordered", "by", "age", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 10, false], null]]], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "department_management", "query": "SELECT creation ,  name ,  budget_in_billions FROM department", "query_toks": ["SELECT", "creation", ",", "name", ",", "budget_in_billions", "FROM", "department"], "query_toks_no_value": ["select", "creation", ",", "name", ",", "budget_in_billions", "from", "department"], "question": "List the creation year, name and budget of each department.", "question_toks": ["List", "the", "creation", "year", ",", "name", "and", "budget", "of", "each", "department", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "department_management", "query": "SELECT max(budget_in_billions) ,  min(budget_in_billions) FROM department", "query_toks": ["SELECT", "max", "(", "budget_in_billions", ")", ",", "min", "(", "budget_in_billions", ")", "FROM", "department"], "query_toks_no_value": ["select", "max", "(", "budget_in_billions", ")", ",", "min", "(", "budget_in_billions", ")", "from", "department"], "question": "What are the maximum and minimum budget of the departments?", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "budget", "of", "the", "departments", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 5, false], null]], [2, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "department_management", "query": "SELECT T1.name ,  T1.num_employees FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id WHERE T2.temporary_acting  =  'Yes'", "query_toks": ["SELECT", "T1.name", ",", "T1.num_employees", "FROM", "department", "AS", "T1", "JOIN", "management", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "WHERE", "T2.temporary_acting", "=", "'Yes", "'"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "num_employees", "from", "department", "as", "t1", "join", "management", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "where", "t2", ".", "temporary_acting", "=", "value"], "question": "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes'?", "question_toks": ["Show", "the", "name", "and", "number", "of", "employees", "for", "the", "departments", "managed", "by", "heads", "whose", "temporary", "acting", "value", "is", "'Yes", "'", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 11, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 13, false], null], "\"Yes\"", null]]}}, {"db_id": "department_management", "query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1", "query_toks": ["SELECT", "T1.department_id", ",", "T1.name", ",", "count", "(", "*", ")", "FROM", "management", "AS", "T2", "JOIN", "department", "AS", "T1", "ON", "T1.department_id", "=", "T2.department_id", "GROUP", "BY", "T1.department_id", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "department_id", ",", "t1", ".", "name", ",", "count", "(", "*", ")", "from", "management", "as", "t2", "join", "department", "as", "t1", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "group", "by", "t1", ".", "department_id", "having", "count", "(", "*", ")", ">", "value"], "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.", "question_toks": ["Which", "department", "has", "more", "than", "1", "head", "at", "a", "time", "?", "List", "the", "id", ",", "name", "and", "the", "number", "of", "heads", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 11, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 1, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "department_management", "query": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'", "query_toks": ["SELECT", "head_id", ",", "name", "FROM", "head", "WHERE", "name", "LIKE", "'", "%", "Ha", "%", "'"], "query_toks_no_value": ["select", "head_id", ",", "name", "from", "head", "where", "name", "like", "value"], "question": "Which head's name has the substring 'Ha'? List the id and name.", "question_toks": ["Which", "head", "'s", "name", "has", "the", "substring", "'Ha", "'", "?", "List", "the", "id", "and", "name", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 8, false], null], "\"%Ha%\"", null]]}}, {"db_id": "farm", "query": "SELECT max(Cows) ,  min(Cows) FROM farm", "query_toks": ["SELECT", "max", "(", "Cows", ")", ",", "min", "(", "Cows", ")", "FROM", "farm"], "query_toks_no_value": ["select", "max", "(", "cows", ")", ",", "min", "(", "cows", ")", "from", "farm"], "question": "What are the maximum and minimum number of cows across all farms.", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "number", "of", "cows", "across", "all", "farms", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 14, false], null]], [2, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "farm", "query": "SELECT max(Cows) ,  min(Cows) FROM farm", "query_toks": ["SELECT", "max", "(", "Cows", ")", ",", "min", "(", "Cows", ")", "FROM", "farm"], "query_toks_no_value": ["select", "max", "(", "cows", ")", ",", "min", "(", "cows", ")", "from", "farm"], "question": "Return the maximum and minimum number of cows across all farms.", "question_toks": ["Return", "the", "maximum", "and", "minimum", "number", "of", "cows", "across", "all", "farms", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 14, false], null]], [2, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "farm", "query": "SELECT Official_Name ,  Status FROM city ORDER BY Population DESC LIMIT 1", "query_toks": ["SELECT", "Official_Name", ",", "Status", "FROM", "city", "ORDER", "BY", "Population", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "official_name", ",", "status", "from", "city", "order", "by", "population", "desc", "limit", "value"], "question": "List the official name and status of the city with the largest population.", "question_toks": ["List", "the", "official", "name", "and", "status", "of", "the", "city", "with", "the", "largest", "population", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "farm", "query": "SELECT Official_Name ,  Status FROM city ORDER BY Population DESC LIMIT 1", "query_toks": ["SELECT", "Official_Name", ",", "Status", "FROM", "city", "ORDER", "BY", "Population", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "official_name", ",", "status", "from", "city", "order", "by", "population", "desc", "limit", "value"], "question": "What is the official name and status of the city with the most residents?", "question_toks": ["What", "is", "the", "official", "name", "and", "status", "of", "the", "city", "with", "the", "most", "residents", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "farm", "query": "SELECT T2.Year ,  T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID", "query_toks": ["SELECT", "T2.Year", ",", "T1.Official_Name", "FROM", "city", "AS", "T1", "JOIN", "farm_competition", "AS", "T2", "ON", "T1.City_ID", "=", "T2.Host_city_ID"], "query_toks_no_value": ["select", "t2", ".", "year", ",", "t1", ".", "official_name", "from", "city", "as", "t1", "join", "farm_competition", "as", "t2", "on", "t1", ".", "city_id", "=", "t2", ".", "host_city_id"], "question": "Show the years and the official names of the host cities of competitions.", "question_toks": ["Show", "the", "years", "and", "the", "official", "names", "of", "the", "host", "cities", "of", "competitions", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 20, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "farm", "query": "SELECT T2.Year ,  T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID", "query_toks": ["SELECT", "T2.Year", ",", "T1.Official_Name", "FROM", "city", "AS", "T1", "JOIN", "farm_competition", "AS", "T2", "ON", "T1.City_ID", "=", "T2.Host_city_ID"], "query_toks_no_value": ["select", "t2", ".", "year", ",", "t1", ".", "official_name", "from", "city", "as", "t1", "join", "farm_competition", "as", "t2", "on", "t1", ".", "city_id", "=", "t2", ".", "host_city_id"], "question": "Give the years and official names of the cities of each competition.", "question_toks": ["Give", "the", "years", "and", "official", "names", "of", "the", "cities", "of", "each", "competition", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 20, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "farm", "query": "SELECT Status ,  avg(Population) FROM city GROUP BY Status", "query_toks": ["SELECT", "Status", ",", "avg", "(", "Population", ")", "FROM", "city", "GROUP", "BY", "Status"], "query_toks_no_value": ["select", "status", ",", "avg", "(", "population", ")", "from", "city", "group", "by", "status"], "question": "Please show the different statuses of cities and the average population of cities with each status.", "question_toks": ["Please", "show", "the", "different", "statuses", "of", "cities", "and", "the", "average", "population", "of", "cities", "with", "each", "status", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [5, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "farm", "query": "SELECT Status ,  avg(Population) FROM city GROUP BY Status", "query_toks": ["SELECT", "Status", ",", "avg", "(", "Population", ")", "FROM", "city", "GROUP", "BY", "Status"], "query_toks_no_value": ["select", "status", ",", "avg", "(", "population", ")", "from", "city", "group", "by", "status"], "question": "What are the statuses and average populations of each city?", "question_toks": ["What", "are", "the", "statuses", "and", "average", "populations", "of", "each", "city", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [5, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "student_assessment", "query": "SELECT T2.first_name ,  T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id", "query_toks": ["SELECT", "T2.first_name", ",", "T2.last_name", "FROM", "candidates", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.candidate_id", "=", "T2.person_id"], "query_toks_no_value": ["select", "t2", ".", "first_name", ",", "t2", ".", "last_name", "from", "candidates", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "candidate_id", "=", "t2", ".", "person_id"], "question": "what are the first name and last name of all candidates?", "question_toks": ["what", "are", "the", "first", "name", "and", "last", "name", "of", "all", "candidates", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 33, false], null], [0, 8, false], null]], "table_units": [["table_unit", 7], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "student_assessment", "query": "SELECT T2.first_name ,  T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id", "query_toks": ["SELECT", "T2.first_name", ",", "T2.last_name", "FROM", "candidates", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.candidate_id", "=", "T2.person_id"], "query_toks_no_value": ["select", "t2", ".", "first_name", ",", "t2", ".", "last_name", "from", "candidates", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "candidate_id", "=", "t2", ".", "person_id"], "question": "What are the first and last names of all the candidates?", "question_toks": ["What", "are", "the", "first", "and", "last", "names", "of", "all", "the", "candidates", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 33, false], null], [0, 8, false], null]], "table_units": [["table_unit", 7], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "student_assessment", "query": "SELECT T1.student_id ,  T2.course_name FROM student_course_registrations AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id", "query_toks": ["SELECT", "T1.student_id", ",", "T2.course_name", "FROM", "student_course_registrations", "AS", "T1", "JOIN", "courses", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id"], "query_toks_no_value": ["select", "t1", ".", "student_id", ",", "t2", ".", "course_name", "from", "student_course_registrations", "as", "t1", "join", "courses", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id"], "question": "What are the ids of all students for courses and what are the names of those courses?", "question_toks": ["What", "are", "the", "ids", "of", "all", "students", "for", "courses", "and", "what", "are", "the", "names", "of", "those", "courses", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 28, false], null], [0, 18, false], null]], "table_units": [["table_unit", 5], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 27, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": []}}, {"db_id": "student_assessment", "query": "SELECT T1.student_id ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id", "query_toks": ["SELECT", "T1.student_id", ",", "count", "(", "*", ")", "FROM", "students", "AS", "T1", "JOIN", "student_course_registrations", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "GROUP", "BY", "T1.student_id"], "query_toks_no_value": ["select", "t1", ".", "student_id", ",", "count", "(", "*", ")", "from", "students", "as", "t1", "join", "student_course_registrations", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "group", "by", "t1", ".", "student_id"], "question": "List the id of students who registered some courses and the number of their registered courses?", "question_toks": ["List", "the", "id", "of", "students", "who", "registered", "some", "courses", "and", "the", "number", "of", "their", "registered", "courses", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 16, false], null], [0, 27, false], null]], "table_units": [["table_unit", 2], ["table_unit", 5]]}, "groupBy": [[0, 16, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "student_assessment", "query": "SELECT T1.student_id ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id", "query_toks": ["SELECT", "T1.student_id", ",", "count", "(", "*", ")", "FROM", "students", "AS", "T1", "JOIN", "student_course_registrations", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "GROUP", "BY", "T1.student_id"], "query_toks_no_value": ["select", "t1", ".", "student_id", ",", "count", "(", "*", ")", "from", "students", "as", "t1", "join", "student_course_registrations", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "group", "by", "t1", ".", "student_id"], "question": "For every student who is registered for some course, how many courses are they registered for?", "question_toks": ["For", "every", "student", "who", "is", "registered", "for", "some", "course", ",", "how", "many", "courses", "are", "they", "registered", "for", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 16, false], null], [0, 27, false], null]], "table_units": [["table_unit", 2], ["table_unit", 5]]}, "groupBy": [[0, 16, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "student_assessment", "query": "SELECT T3.course_name ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id", "query_toks": ["SELECT", "T3.course_name", ",", "count", "(", "*", ")", "FROM", "students", "AS", "T1", "JOIN", "student_course_registrations", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "JOIN", "courses", "AS", "T3", "ON", "T2.course_id", "=", "T3.course_id", "GROUP", "BY", "T2.course_id"], "query_toks_no_value": ["select", "t3", ".", "course_name", ",", "count", "(", "*", ")", "from", "students", "as", "t1", "join", "student_course_registrations", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "join", "courses", "as", "t3", "on", "t2", ".", "course_id", "=", "t3", ".", "course_id", "group", "by", "t2", ".", "course_id"], "question": "How many registed students do each course have? List course name and the number of their registered students?", "question_toks": ["How", "many", "registed", "students", "do", "each", "course", "have", "?", "List", "course", "name", "and", "the", "number", "of", "their", "registered", "students", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 16, false], null], [0, 27, false], null]], "table_units": [["table_unit", 2], ["table_unit", 5]]}, "groupBy": [[0, 28, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "student_assessment", "query": "SELECT T3.course_name ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id", "query_toks": ["SELECT", "T3.course_name", ",", "count", "(", "*", ")", "FROM", "students", "AS", "T1", "JOIN", "student_course_registrations", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "JOIN", "courses", "AS", "T3", "ON", "T2.course_id", "=", "T3.course_id", "GROUP", "BY", "T2.course_id"], "query_toks_no_value": ["select", "t3", ".", "course_name", ",", "count", "(", "*", ")", "from", "students", "as", "t1", "join", "student_course_registrations", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "join", "courses", "as", "t3", "on", "t2", ".", "course_id", "=", "t3", ".", "course_id", "group", "by", "t2", ".", "course_id"], "question": "For each course id, how many students are registered and what are the course names?", "question_toks": ["For", "each", "course", "id", ",", "how", "many", "students", "are", "registered", "and", "what", "are", "the", "course", "names", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 16, false], null], [0, 27, false], null]], "table_units": [["table_unit", 2], ["table_unit", 5]]}, "groupBy": [[0, 28, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "bike_1", "query": "SELECT city ,  max(lat) FROM station GROUP BY city", "query_toks": ["SELECT", "city", ",", "max", "(", "lat", ")", "FROM", "station", "GROUP", "BY", "city"], "query_toks_no_value": ["select", "city", ",", "max", "(", "lat", ")", "from", "station", "group", "by", "city"], "question": "For each city, return the highest latitude among its stations.", "question_toks": ["For", "each", "city", ",", "return", "the", "highest", "latitude", "among", "its", "stations", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [1, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "bike_1", "query": "SELECT city ,  max(lat) FROM station GROUP BY city", "query_toks": ["SELECT", "city", ",", "max", "(", "lat", ")", "FROM", "station", "GROUP", "BY", "city"], "query_toks_no_value": ["select", "city", ",", "max", "(", "lat", ")", "from", "station", "group", "by", "city"], "question": "For each city, what is the highest latitude for its stations?", "question_toks": ["For", "each", "city", ",", "what", "is", "the", "highest", "latitude", "for", "its", "stations", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [1, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "bike_1", "query": "SELECT start_station_name ,  end_station_name FROM trip ORDER BY id LIMIT 3", "query_toks": ["SELECT", "start_station_name", ",", "end_station_name", "FROM", "trip", "ORDER", "BY", "id", "LIMIT", "3"], "query_toks_no_value": ["select", "start_station_name", ",", "end_station_name", "from", "trip", "order", "by", "id", "limit", "value"], "question": "Give me the start station and end station for the trips with the three oldest id.", "question_toks": ["Give", "me", "the", "start", "station", "and", "end", "station", "for", "the", "trips", "with", "the", "three", "oldest", "id", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 3, "orderBy": ["asc", [[0, [0, 12, false], null]]], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": []}}, {"db_id": "bike_1", "query": "SELECT start_station_name ,  end_station_name FROM trip ORDER BY id LIMIT 3", "query_toks": ["SELECT", "start_station_name", ",", "end_station_name", "FROM", "trip", "ORDER", "BY", "id", "LIMIT", "3"], "query_toks_no_value": ["select", "start_station_name", ",", "end_station_name", "from", "trip", "order", "by", "id", "limit", "value"], "question": "What is the station station and end station for the trips with the three smallest ids?", "question_toks": ["What", "is", "the", "station", "station", "and", "end", "station", "for", "the", "trips", "with", "the", "three", "smallest", "ids", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 3, "orderBy": ["asc", [[0, [0, 12, false], null]]], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": []}}, {"db_id": "bike_1", "query": "SELECT avg(lat) ,  avg(long) FROM station WHERE city  =  \"San Jose\"", "query_toks": ["SELECT", "avg", "(", "lat", ")", ",", "avg", "(", "long", ")", "FROM", "station", "WHERE", "city", "=", "``", "San", "Jose", "''"], "query_toks_no_value": ["select", "avg", "(", "lat", ")", ",", "avg", "(", "long", ")", "from", "station", "where", "city", "=", "value"], "question": "What is the average latitude and longitude of stations located in San Jose city?", "question_toks": ["What", "is", "the", "average", "latitude", "and", "longitude", "of", "stations", "located", "in", "San", "Jose", "city", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 3, false], null]], [5, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"San Jose\"", null]]}}, {"db_id": "bike_1", "query": "SELECT avg(lat) ,  avg(long) FROM station WHERE city  =  \"San Jose\"", "query_toks": ["SELECT", "avg", "(", "lat", ")", ",", "avg", "(", "long", ")", "FROM", "station", "WHERE", "city", "=", "``", "San", "Jose", "''"], "query_toks_no_value": ["select", "avg", "(", "lat", ")", ",", "avg", "(", "long", ")", "from", "station", "where", "city", "=", "value"], "question": "What is the average latitude and longitude in San Jose?", "question_toks": ["What", "is", "the", "average", "latitude", "and", "longitude", "in", "San", "Jose", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 3, false], null]], [5, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"San Jose\"", null]]}}, {"db_id": "bike_1", "query": "SELECT sum(duration) ,  max(duration) FROM trip WHERE bike_id  =  636", "query_toks": ["SELECT", "sum", "(", "duration", ")", ",", "max", "(", "duration", ")", "FROM", "trip", "WHERE", "bike_id", "=", "636"], "query_toks_no_value": ["select", "sum", "(", "duration", ")", ",", "max", "(", "duration", ")", "from", "trip", "where", "bike_id", "=", "value"], "question": "What is the total and maximum duration of trips with bike id 636?", "question_toks": ["What", "is", "the", "total", "and", "maximum", "duration", "of", "trips", "with", "bike", "id", "636", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 13, false], null]], [1, [0, [0, 13, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 20, false], null], 636.0, null]]}}, {"db_id": "bike_1", "query": "SELECT sum(duration) ,  max(duration) FROM trip WHERE bike_id  =  636", "query_toks": ["SELECT", "sum", "(", "duration", ")", ",", "max", "(", "duration", ")", "FROM", "trip", "WHERE", "bike_id", "=", "636"], "query_toks_no_value": ["select", "sum", "(", "duration", ")", ",", "max", "(", "duration", ")", "from", "trip", "where", "bike_id", "=", "value"], "question": "What is the total and maximum duration for all trips with the bike id 636?", "question_toks": ["What", "is", "the", "total", "and", "maximum", "duration", "for", "all", "trips", "with", "the", "bike", "id", "636", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 13, false], null]], [1, [0, [0, 13, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 20, false], null], 636.0, null]]}}, {"db_id": "bike_1", "query": "SELECT zip_code  ,  avg(mean_temperature_f) FROM weather WHERE date LIKE \"8/%\" GROUP BY zip_code", "query_toks": ["SELECT", "zip_code", ",", "avg", "(", "mean_temperature_f", ")", "FROM", "weather", "WHERE", "date", "LIKE", "``", "8/", "%", "''", "GROUP", "BY", "zip_code"], "query_toks_no_value": ["select", "zip_code", ",", "avg", "(", "mean_temperature_f", ")", "from", "weather", "where", "date", "like", "value", "group", "by", "zip_code"], "question": "For each zip code, return the average mean temperature of August there.", "question_toks": ["For", "each", "zip", "code", ",", "return", "the", "average", "mean", "temperature", "of", "August", "there", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 46, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 46, false], null]], [5, [0, [0, 25, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 23, false], null], "\"8/%\"", null]]}}, {"db_id": "bike_1", "query": "SELECT zip_code  ,  avg(mean_temperature_f) FROM weather WHERE date LIKE \"8/%\" GROUP BY zip_code", "query_toks": ["SELECT", "zip_code", ",", "avg", "(", "mean_temperature_f", ")", "FROM", "weather", "WHERE", "date", "LIKE", "``", "8/", "%", "''", "GROUP", "BY", "zip_code"], "query_toks_no_value": ["select", "zip_code", ",", "avg", "(", "mean_temperature_f", ")", "from", "weather", "where", "date", "like", "value", "group", "by", "zip_code"], "question": "For each zip code, what is the average mean temperature for all dates that start with '8'?", "question_toks": ["For", "each", "zip", "code", ",", "what", "is", "the", "average", "mean", "temperature", "for", "all", "dates", "that", "start", "with", "'8", "'", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 46, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 46, false], null]], [5, [0, [0, 25, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 23, false], null], "\"8/%\"", null]]}}, {"db_id": "bike_1", "query": "SELECT start_station_name ,  start_station_id FROM trip WHERE start_date LIKE \"8/%\" GROUP BY start_station_name ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "start_station_name", ",", "start_station_id", "FROM", "trip", "WHERE", "start_date", "LIKE", "``", "8/", "%", "''", "GROUP", "BY", "start_station_name", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "start_station_name", ",", "start_station_id", "from", "trip", "where", "start_date", "like", "value", "group", "by", "start_station_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which start station had the most trips starting from August? Give me the name and id of the station.", "question_toks": ["Which", "start", "station", "had", "the", "most", "trips", "starting", "from", "August", "?", "Give", "me", "the", "name", "and", "id", "of", "the", "station", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 14, false], null], "\"8/%\"", null]]}}, {"db_id": "bike_1", "query": "SELECT start_station_name ,  start_station_id FROM trip WHERE start_date LIKE \"8/%\" GROUP BY start_station_name ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "start_station_name", ",", "start_station_id", "FROM", "trip", "WHERE", "start_date", "LIKE", "``", "8/", "%", "''", "GROUP", "BY", "start_station_name", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "start_station_name", ",", "start_station_id", "from", "trip", "where", "start_date", "like", "value", "group", "by", "start_station_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the start station's name and id for the one that had the most start trips in August?", "question_toks": ["What", "are", "the", "start", "station", "'s", "name", "and", "id", "for", "the", "one", "that", "had", "the", "most", "start", "trips", "in", "August", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 14, false], null], "\"8/%\"", null]]}}, {"db_id": "bike_1", "query": "SELECT T1.lat ,  T1.long ,  T1.city FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id ORDER BY T2.duration LIMIT 1", "query_toks": ["SELECT", "T1.lat", ",", "T1.long", ",", "T1.city", "FROM", "station", "AS", "T1", "JOIN", "trip", "AS", "T2", "ON", "T1.id", "=", "T2.start_station_id", "ORDER", "BY", "T2.duration", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "lat", ",", "t1", ".", "long", ",", "t1", ".", "city", "from", "station", "as", "t1", "join", "trip", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "start_station_id", "order", "by", "t2", ".", "duration", "limit", "value"], "question": "What is the latitude, longitude, city of the station from which the shortest trip started?", "question_toks": ["What", "is", "the", "latitude", ",", "longitude", ",", "city", "of", "the", "station", "from", "which", "the", "shortest", "trip", "started", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 16, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 13, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "bike_1", "query": "SELECT T1.lat ,  T1.long ,  T1.city FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id ORDER BY T2.duration LIMIT 1", "query_toks": ["SELECT", "T1.lat", ",", "T1.long", ",", "T1.city", "FROM", "station", "AS", "T1", "JOIN", "trip", "AS", "T2", "ON", "T1.id", "=", "T2.start_station_id", "ORDER", "BY", "T2.duration", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "lat", ",", "t1", ".", "long", ",", "t1", ".", "city", "from", "station", "as", "t1", "join", "trip", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "start_station_id", "order", "by", "t2", ".", "duration", "limit", "value"], "question": "What is the latitude, longitude, and city of the station from which the trip with smallest duration started?", "question_toks": ["What", "is", "the", "latitude", ",", "longitude", ",", "and", "city", "of", "the", "station", "from", "which", "the", "trip", "with", "smallest", "duration", "started", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 16, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 13, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "bike_1", "query": "SELECT T1.name ,  T1.id FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(T2.bikes_available)  >  14 UNION SELECT name ,  id FROM station WHERE installation_date LIKE \"12/%\"", "query_toks": ["SELECT", "T1.name", ",", "T1.id", "FROM", "station", "AS", "T1", "JOIN", "status", "AS", "T2", "ON", "T1.id", "=", "T2.station_id", "GROUP", "BY", "T2.station_id", "HAVING", "avg", "(", "T2.bikes_available", ")", ">", "14", "UNION", "SELECT", "name", ",", "id", "FROM", "station", "WHERE", "installation_date", "LIKE", "``", "12/", "%", "''"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "id", "from", "station", "as", "t1", "join", "status", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "station_id", "group", "by", "t2", ".", "station_id", "having", "avg", "(", "t2", ".", "bikes_available", ")", ">", "value", "union", "select", "name", ",", "id", "from", "station", "where", "installation_date", "like", "value"], "question": "What are the names and ids of stations that had more than 14 bikes available on average or were installed in December?", "question_toks": ["What", "are", "the", "names", "and", "ids", "of", "stations", "that", "had", "more", "than", "14", "bikes", "available", "on", "average", "or", "were", "installed", "in", "December", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [[false, 3, [0, [5, 9, false], null], 14.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "union": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 7, false], null], "\"12/%\"", null]]}, "where": []}}, {"db_id": "bike_1", "query": "SELECT T1.name ,  T1.id FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(T2.bikes_available)  >  14 UNION SELECT name ,  id FROM station WHERE installation_date LIKE \"12/%\"", "query_toks": ["SELECT", "T1.name", ",", "T1.id", "FROM", "station", "AS", "T1", "JOIN", "status", "AS", "T2", "ON", "T1.id", "=", "T2.station_id", "GROUP", "BY", "T2.station_id", "HAVING", "avg", "(", "T2.bikes_available", ")", ">", "14", "UNION", "SELECT", "name", ",", "id", "FROM", "station", "WHERE", "installation_date", "LIKE", "``", "12/", "%", "''"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "id", "from", "station", "as", "t1", "join", "status", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "station_id", "group", "by", "t2", ".", "station_id", "having", "avg", "(", "t2", ".", "bikes_available", ")", ">", "value", "union", "select", "name", ",", "id", "from", "station", "where", "installation_date", "like", "value"], "question": "What are the names and ids of all stations that have more than 14 bikes available on average or had bikes installed in December?", "question_toks": ["What", "are", "the", "names", "and", "ids", "of", "all", "stations", "that", "have", "more", "than", "14", "bikes", "available", "on", "average", "or", "had", "bikes", "installed", "in", "December", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [[false, 3, [0, [5, 9, false], null], 14.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "union": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 7, false], null], "\"12/%\"", null]]}, "where": []}}, {"db_id": "bike_1", "query": "SELECT date ,  zip_code FROM weather WHERE max_temperature_f  >=  80", "query_toks": ["SELECT", "date", ",", "zip_code", "FROM", "weather", "WHERE", "max_temperature_f", ">", "=", "80"], "query_toks_no_value": ["select", "date", ",", "zip_code", "from", "weather", "where", "max_temperature_f", ">", "=", "value"], "question": "When and in what zip code did max temperature reach 80?", "question_toks": ["When", "and", "in", "what", "zip", "code", "did", "max", "temperature", "reach", "80", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 46, false], null]]]], "union": null, "where": [[false, 5, [0, [0, 24, false], null], 80.0, null]]}}, {"db_id": "bike_1", "query": "SELECT date ,  zip_code FROM weather WHERE max_temperature_f  >=  80", "query_toks": ["SELECT", "date", ",", "zip_code", "FROM", "weather", "WHERE", "max_temperature_f", ">", "=", "80"], "query_toks_no_value": ["select", "date", ",", "zip_code", "from", "weather", "where", "max_temperature_f", ">", "=", "value"], "question": "What zip codes have a station with a max temperature greater than or equal to 80 and when did it reach that temperature?", "question_toks": ["What", "zip", "codes", "have", "a", "station", "with", "a", "max", "temperature", "greater", "than", "or", "equal", "to", "80", "and", "when", "did", "it", "reach", "that", "temperature", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 46, false], null]]]], "union": null, "where": [[false, 5, [0, [0, 24, false], null], 80.0, null]]}}, {"db_id": "bike_1", "query": "SELECT zip_code , count(*) FROM weather WHERE max_wind_Speed_mph  >=  25 GROUP BY zip_code", "query_toks": ["SELECT", "zip_code", ",", "count", "(", "*", ")", "FROM", "weather", "WHERE", "max_wind_Speed_mph", ">", "=", "25", "GROUP", "BY", "zip_code"], "query_toks_no_value": ["select", "zip_code", ",", "count", "(", "*", ")", "from", "weather", "where", "max_wind_speed_mph", ">", "=", "value", "group", "by", "zip_code"], "question": "For each zip code, return how many times max wind speed reached 25?", "question_toks": ["For", "each", "zip", "code", ",", "return", "how", "many", "times", "max", "wind", "speed", "reached", "25", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 46, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 46, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 5, [0, [0, 39, false], null], 25.0, null]]}}, {"db_id": "bike_1", "query": "SELECT zip_code , count(*) FROM weather WHERE max_wind_Speed_mph  >=  25 GROUP BY zip_code", "query_toks": ["SELECT", "zip_code", ",", "count", "(", "*", ")", "FROM", "weather", "WHERE", "max_wind_Speed_mph", ">", "=", "25", "GROUP", "BY", "zip_code"], "query_toks_no_value": ["select", "zip_code", ",", "count", "(", "*", ")", "from", "weather", "where", "max_wind_speed_mph", ">", "=", "value", "group", "by", "zip_code"], "question": "For each zip code, how many times has the maximum wind speed reached 25 mph?", "question_toks": ["For", "each", "zip", "code", ",", "how", "many", "times", "has", "the", "maximum", "wind", "speed", "reached", "25", "mph", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 46, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 46, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 5, [0, [0, 39, false], null], 25.0, null]]}}, {"db_id": "bike_1", "query": "SELECT date ,  zip_code FROM weather WHERE min_dew_point_f  <  (SELECT min(min_dew_point_f) FROM weather WHERE zip_code  =  94107)", "query_toks": ["SELECT", "date", ",", "zip_code", "FROM", "weather", "WHERE", "min_dew_point_f", "<", "(", "SELECT", "min", "(", "min_dew_point_f", ")", "FROM", "weather", "WHERE", "zip_code", "=", "94107", ")"], "query_toks_no_value": ["select", "date", ",", "zip_code", "from", "weather", "where", "min_dew_point_f", "<", "(", "select", "min", "(", "min_dew_point_f", ")", "from", "weather", "where", "zip_code", "=", "value", ")"], "question": "On which day and in which zip code was the min dew point lower than any day in zip code 94107?", "question_toks": ["On", "which", "day", "and", "in", "which", "zip", "code", "was", "the", "min", "dew", "point", "lower", "than", "any", "day", "in", "zip", "code", "94107", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 46, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 29, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 29, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 46, false], null], 94107.0, null]]}, null]]}}, {"db_id": "bike_1", "query": "SELECT date ,  zip_code FROM weather WHERE min_dew_point_f  <  (SELECT min(min_dew_point_f) FROM weather WHERE zip_code  =  94107)", "query_toks": ["SELECT", "date", ",", "zip_code", "FROM", "weather", "WHERE", "min_dew_point_f", "<", "(", "SELECT", "min", "(", "min_dew_point_f", ")", "FROM", "weather", "WHERE", "zip_code", "=", "94107", ")"], "query_toks_no_value": ["select", "date", ",", "zip_code", "from", "weather", "where", "min_dew_point_f", "<", "(", "select", "min", "(", "min_dew_point_f", ")", "from", "weather", "where", "zip_code", "=", "value", ")"], "question": "Which days had a minimum dew point smaller than any day in zip code 94107, and in which zip codes were those measurements taken?", "question_toks": ["Which", "days", "had", "a", "minimum", "dew", "point", "smaller", "than", "any", "day", "in", "zip", "code", "94107", ",", "and", "in", "which", "zip", "codes", "were", "those", "measurements", "taken", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 46, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 29, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 29, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 46, false], null], 94107.0, null]]}, null]]}}, {"db_id": "bike_1", "query": "SELECT T1.id ,  T2.installation_date FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id", "query_toks": ["SELECT", "T1.id", ",", "T2.installation_date", "FROM", "trip", "AS", "T1", "JOIN", "station", "AS", "T2", "ON", "T1.end_station_id", "=", "T2.id"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t2", ".", "installation_date", "from", "trip", "as", "t1", "join", "station", "as", "t2", "on", "t1", ".", "end_station_id", "=", "t2", ".", "id"], "question": "For each trip, return its ending station's installation date.", "question_toks": ["For", "each", "trip", ",", "return", "its", "ending", "station", "'s", "installation", "date", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 19, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "bike_1", "query": "SELECT T1.id ,  T2.installation_date FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id", "query_toks": ["SELECT", "T1.id", ",", "T2.installation_date", "FROM", "trip", "AS", "T1", "JOIN", "station", "AS", "T2", "ON", "T1.end_station_id", "=", "T2.id"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t2", ".", "installation_date", "from", "trip", "as", "t1", "join", "station", "as", "t2", "on", "t1", ".", "end_station_id", "=", "t2", ".", "id"], "question": "What is the installation date for each ending station on all the trips?", "question_toks": ["What", "is", "the", "installation", "date", "for", "each", "ending", "station", "on", "all", "the", "trips", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 19, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "bike_1", "query": "SELECT name ,  lat ,  city FROM station ORDER BY lat LIMIT 1", "query_toks": ["SELECT", "name", ",", "lat", ",", "city", "FROM", "station", "ORDER", "BY", "lat", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "lat", ",", "city", "from", "station", "order", "by", "lat", "limit", "value"], "question": "What are the name, latitude, and city of the station with the lowest latitude?", "question_toks": ["What", "are", "the", "name", ",", "latitude", ",", "and", "city", "of", "the", "station", "with", "the", "lowest", "latitude", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 3, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "bike_1", "query": "SELECT name ,  lat ,  city FROM station ORDER BY lat LIMIT 1", "query_toks": ["SELECT", "name", ",", "lat", ",", "city", "FROM", "station", "ORDER", "BY", "lat", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "lat", ",", "city", "from", "station", "order", "by", "lat", "limit", "value"], "question": "What is the name, latitude, and city of the station that is located the furthest South?", "question_toks": ["What", "is", "the", "name", ",", "latitude", ",", "and", "city", "of", "the", "station", "that", "is", "located", "the", "furthest", "South", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 3, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "bike_1", "query": "SELECT date ,  mean_temperature_f ,  mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3", "query_toks": ["SELECT", "date", ",", "mean_temperature_f", ",", "mean_humidity", "FROM", "weather", "ORDER", "BY", "max_gust_speed_mph", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "date", ",", "mean_temperature_f", ",", "mean_humidity", "from", "weather", "order", "by", "max_gust_speed_mph", "desc", "limit", "value"], "question": "What are the date, mean temperature and mean humidity for the top 3 days with the largest max gust speeds?", "question_toks": ["What", "are", "the", "date", ",", "mean", "temperature", "and", "mean", "humidity", "for", "the", "top", "3", "days", "with", "the", "largest", "max", "gust", "speeds", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": 3, "orderBy": ["desc", [[0, [0, 41, false], null]]], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 25, false], null]], [0, [0, [0, 31, false], null]]]], "union": null, "where": []}}, {"db_id": "bike_1", "query": "SELECT date ,  mean_temperature_f ,  mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3", "query_toks": ["SELECT", "date", ",", "mean_temperature_f", ",", "mean_humidity", "FROM", "weather", "ORDER", "BY", "max_gust_speed_mph", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "date", ",", "mean_temperature_f", ",", "mean_humidity", "from", "weather", "order", "by", "max_gust_speed_mph", "desc", "limit", "value"], "question": "What is the date, average temperature and mean humidity for the days with the 3 largest maximum gust speeds?", "question_toks": ["What", "is", "the", "date", ",", "average", "temperature", "and", "mean", "humidity", "for", "the", "days", "with", "the", "3", "largest", "maximum", "gust", "speeds", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": 3, "orderBy": ["desc", [[0, [0, 41, false], null]]], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 25, false], null]], [0, [0, [0, 31, false], null]]]], "union": null, "where": []}}, {"db_id": "bike_1", "query": "SELECT city ,  COUNT(*) FROM station GROUP BY city HAVING COUNT(*)  >=  15", "query_toks": ["SELECT", "city", ",", "COUNT", "(", "*", ")", "FROM", "station", "GROUP", "BY", "city", "HAVING", "COUNT", "(", "*", ")", ">", "=", "15"], "query_toks_no_value": ["select", "city", ",", "count", "(", "*", ")", "from", "station", "group", "by", "city", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "List the name and the number of stations for all the cities that have at least 15 stations.", "question_toks": ["List", "the", "name", "and", "the", "number", "of", "stations", "for", "all", "the", "cities", "that", "have", "at", "least", "15", "stations", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [[false, 5, [0, [3, 0, false], null], 15.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "bike_1", "query": "SELECT city ,  COUNT(*) FROM station GROUP BY city HAVING COUNT(*)  >=  15", "query_toks": ["SELECT", "city", ",", "COUNT", "(", "*", ")", "FROM", "station", "GROUP", "BY", "city", "HAVING", "COUNT", "(", "*", ")", ">", "=", "15"], "query_toks_no_value": ["select", "city", ",", "count", "(", "*", ")", "from", "station", "group", "by", "city", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What is the name of every city that has at least 15 stations and how many stations does it have?", "question_toks": ["What", "is", "the", "name", "of", "every", "city", "that", "has", "at", "least", "15", "stations", "and", "how", "many", "stations", "does", "it", "have", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [[false, 5, [0, [3, 0, false], null], 15.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "bike_1", "query": "SELECT start_station_id ,  start_station_name FROM trip GROUP BY start_station_name HAVING COUNT(*)  >=  200", "query_toks": ["SELECT", "start_station_id", ",", "start_station_name", "FROM", "trip", "GROUP", "BY", "start_station_name", "HAVING", "COUNT", "(", "*", ")", ">", "=", "200"], "query_toks_no_value": ["select", "start_station_id", ",", "start_station_name", "from", "trip", "group", "by", "start_station_name", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Find the ids and names of stations from which at least 200 trips started.", "question_toks": ["Find", "the", "ids", "and", "names", "of", "stations", "from", "which", "at", "least", "200", "trips", "started", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 15, false]], "having": [[false, 5, [0, [3, 0, false], null], 200.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": []}}, {"db_id": "bike_1", "query": "SELECT start_station_id ,  start_station_name FROM trip GROUP BY start_station_name HAVING COUNT(*)  >=  200", "query_toks": ["SELECT", "start_station_id", ",", "start_station_name", "FROM", "trip", "GROUP", "BY", "start_station_name", "HAVING", "COUNT", "(", "*", ")", ">", "=", "200"], "query_toks_no_value": ["select", "start_station_id", ",", "start_station_name", "from", "trip", "group", "by", "start_station_name", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the ids and names of all start stations that were the beginning of at least 200 trips?", "question_toks": ["What", "are", "the", "ids", "and", "names", "of", "all", "start", "stations", "that", "were", "the", "beginning", "of", "at", "least", "200", "trips", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 15, false]], "having": [[false, 5, [0, [3, 0, false], null], 200.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": []}}, {"db_id": "bike_1", "query": "SELECT date ,  cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5", "query_toks": ["SELECT", "date", ",", "cloud_cover", "FROM", "weather", "ORDER", "BY", "cloud_cover", "DESC", "LIMIT", "5"], "query_toks_no_value": ["select", "date", ",", "cloud_cover", "from", "weather", "order", "by", "cloud_cover", "desc", "limit", "value"], "question": "What are the dates that had the top 5 cloud cover rates? Also tell me the cloud cover rate.", "question_toks": ["What", "are", "the", "dates", "that", "had", "the", "top", "5", "cloud", "cover", "rates", "?", "Also", "tell", "me", "the", "cloud", "cover", "rate", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": 5, "orderBy": ["desc", [[0, [0, 43, false], null]]], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 43, false], null]]]], "union": null, "where": []}}, {"db_id": "bike_1", "query": "SELECT date ,  cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5", "query_toks": ["SELECT", "date", ",", "cloud_cover", "FROM", "weather", "ORDER", "BY", "cloud_cover", "DESC", "LIMIT", "5"], "query_toks_no_value": ["select", "date", ",", "cloud_cover", "from", "weather", "order", "by", "cloud_cover", "desc", "limit", "value"], "question": "What are the dates that have the 5 highest cloud cover rates and what are the rates?", "question_toks": ["What", "are", "the", "dates", "that", "have", "the", "5", "highest", "cloud", "cover", "rates", "and", "what", "are", "the", "rates", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": 5, "orderBy": ["desc", [[0, [0, 43, false], null]]], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 43, false], null]]]], "union": null, "where": []}}, {"db_id": "bike_1", "query": "SELECT id ,  duration FROM trip ORDER BY duration DESC LIMIT 3", "query_toks": ["SELECT", "id", ",", "duration", "FROM", "trip", "ORDER", "BY", "duration", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "id", ",", "duration", "from", "trip", "order", "by", "duration", "desc", "limit", "value"], "question": "What are the ids and durations of the trips with the top 3 durations?", "question_toks": ["What", "are", "the", "ids", "and", "durations", "of", "the", "trips", "with", "the", "top", "3", "durations", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 3, "orderBy": ["desc", [[0, [0, 13, false], null]]], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "bike_1", "query": "SELECT id ,  duration FROM trip ORDER BY duration DESC LIMIT 3", "query_toks": ["SELECT", "id", ",", "duration", "FROM", "trip", "ORDER", "BY", "duration", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "id", ",", "duration", "from", "trip", "order", "by", "duration", "desc", "limit", "value"], "question": "What are the ids of the trips that lasted the longest and how long did they last?", "question_toks": ["What", "are", "the", "ids", "of", "the", "trips", "that", "lasted", "the", "longest", "and", "how", "long", "did", "they", "last", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 3, "orderBy": ["desc", [[0, [0, 13, false], null]]], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "bike_1", "query": "SELECT T1.name ,  T1.long ,  avg(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id GROUP BY T2.start_station_id", "query_toks": ["SELECT", "T1.name", ",", "T1.long", ",", "avg", "(", "T2.duration", ")", "FROM", "station", "AS", "T1", "JOIN", "trip", "AS", "T2", "ON", "T1.id", "=", "T2.start_station_id", "GROUP", "BY", "T2.start_station_id"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "long", ",", "avg", "(", "t2", ".", "duration", ")", "from", "station", "as", "t1", "join", "trip", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "start_station_id", "group", "by", "t2", ".", "start_station_id"], "question": "For each station, return its longitude and the average duration of trips that started from the station.", "question_toks": ["For", "each", "station", ",", "return", "its", "longitude", "and", "the", "average", "duration", "of", "trips", "that", "started", "from", "the", "station", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 16, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 16, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]], [5, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "bike_1", "query": "SELECT T1.name ,  T1.long ,  avg(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id GROUP BY T2.start_station_id", "query_toks": ["SELECT", "T1.name", ",", "T1.long", ",", "avg", "(", "T2.duration", ")", "FROM", "station", "AS", "T1", "JOIN", "trip", "AS", "T2", "ON", "T1.id", "=", "T2.start_station_id", "GROUP", "BY", "T2.start_station_id"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "long", ",", "avg", "(", "t2", ".", "duration", ")", "from", "station", "as", "t1", "join", "trip", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "start_station_id", "group", "by", "t2", ".", "start_station_id"], "question": "For each start station id, what is its name, longitude and average duration of trips started there?", "question_toks": ["For", "each", "start", "station", "id", ",", "what", "is", "its", "name", ",", "longitude", "and", "average", "duration", "of", "trips", "started", "there", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 16, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 16, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]], [5, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "bike_1", "query": "SELECT T1.name ,  T1.lat ,  min(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.end_station_id GROUP BY T2.end_station_id", "query_toks": ["SELECT", "T1.name", ",", "T1.lat", ",", "min", "(", "T2.duration", ")", "FROM", "station", "AS", "T1", "JOIN", "trip", "AS", "T2", "ON", "T1.id", "=", "T2.end_station_id", "GROUP", "BY", "T2.end_station_id"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "lat", ",", "min", "(", "t2", ".", "duration", ")", "from", "station", "as", "t1", "join", "trip", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "end_station_id", "group", "by", "t2", ".", "end_station_id"], "question": "For each station, find its latitude and the minimum duration of trips that ended at the station.", "question_toks": ["For", "each", "station", ",", "find", "its", "latitude", "and", "the", "minimum", "duration", "of", "trips", "that", "ended", "at", "the", "station", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 19, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [2, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "bike_1", "query": "SELECT T1.name ,  T1.lat ,  min(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.end_station_id GROUP BY T2.end_station_id", "query_toks": ["SELECT", "T1.name", ",", "T1.lat", ",", "min", "(", "T2.duration", ")", "FROM", "station", "AS", "T1", "JOIN", "trip", "AS", "T2", "ON", "T1.id", "=", "T2.end_station_id", "GROUP", "BY", "T2.end_station_id"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "lat", ",", "min", "(", "t2", ".", "duration", ")", "from", "station", "as", "t1", "join", "trip", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "end_station_id", "group", "by", "t2", ".", "end_station_id"], "question": "For each end station id, what is its name, latitude, and minimum duration for trips ended there?", "question_toks": ["For", "each", "end", "station", "id", ",", "what", "is", "its", "name", ",", "latitude", ",", "and", "minimum", "duration", "for", "trips", "ended", "there", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 19, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [2, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "bike_1", "query": "SELECT date ,  max_temperature_f - min_temperature_f FROM weather ORDER BY max_temperature_f - min_temperature_f LIMIT 1", "query_toks": ["SELECT", "date", ",", "max_temperature_f", "-", "min_temperature_f", "FROM", "weather", "ORDER", "BY", "max_temperature_f", "-", "min_temperature_f", "LIMIT", "1"], "query_toks_no_value": ["select", "date", ",", "max_temperature_f", "-", "min_temperature_f", "from", "weather", "order", "by", "max_temperature_f", "-", "min_temperature_f", "limit", "value"], "question": "Find the day in which the difference between the max temperature and min temperature was the smallest. Also report the difference.", "question_toks": ["Find", "the", "day", "in", "which", "the", "difference", "between", "the", "max", "temperature", "and", "min", "temperature", "was", "the", "smallest", ".", "Also", "report", "the", "difference", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[1, [0, 24, false], [0, 26, false]]]], "select": [false, [[0, [0, [0, 23, false], null]], [0, [1, [0, 24, false], [0, 26, false]]]]], "union": null, "where": []}}, {"db_id": "bike_1", "query": "SELECT date ,  max_temperature_f - min_temperature_f FROM weather ORDER BY max_temperature_f - min_temperature_f LIMIT 1", "query_toks": ["SELECT", "date", ",", "max_temperature_f", "-", "min_temperature_f", "FROM", "weather", "ORDER", "BY", "max_temperature_f", "-", "min_temperature_f", "LIMIT", "1"], "query_toks_no_value": ["select", "date", ",", "max_temperature_f", "-", "min_temperature_f", "from", "weather", "order", "by", "max_temperature_f", "-", "min_temperature_f", "limit", "value"], "question": "What are the days that had the smallest temperature range, and what was that range?", "question_toks": ["What", "are", "the", "days", "that", "had", "the", "smallest", "temperature", "range", ",", "and", "what", "was", "that", "range", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[1, [0, 24, false], [0, 26, false]]]], "select": [false, [[0, [0, [0, 23, false], null]], [0, [1, [0, 24, false], [0, 26, false]]]]], "union": null, "where": []}}, {"db_id": "bike_1", "query": "SELECT DISTINCT T1.id ,  T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  >  12", "query_toks": ["SELECT", "DISTINCT", "T1.id", ",", "T1.name", "FROM", "station", "AS", "T1", "JOIN", "status", "AS", "T2", "ON", "T1.id", "=", "T2.station_id", "WHERE", "T2.bikes_available", ">", "12"], "query_toks_no_value": ["select", "distinct", "t1", ".", "id", ",", "t1", ".", "name", "from", "station", "as", "t1", "join", "status", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "station_id", "where", "t2", ".", "bikes_available", ">", "value"], "question": "What are the id and name of the stations that have ever had more than 12 bikes available?", "question_toks": ["What", "are", "the", "id", "and", "name", "of", "the", "stations", "that", "have", "ever", "had", "more", "than", "12", "bikes", "available", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 9, false], null], 12.0, null]]}}, {"db_id": "bike_1", "query": "SELECT DISTINCT T1.id ,  T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  >  12", "query_toks": ["SELECT", "DISTINCT", "T1.id", ",", "T1.name", "FROM", "station", "AS", "T1", "JOIN", "status", "AS", "T2", "ON", "T1.id", "=", "T2.station_id", "WHERE", "T2.bikes_available", ">", "12"], "query_toks_no_value": ["select", "distinct", "t1", ".", "id", ",", "t1", ".", "name", "from", "station", "as", "t1", "join", "status", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "station_id", "where", "t2", ".", "bikes_available", ">", "value"], "question": "What are the different ids and names of the stations that have had more than 12 bikes available?", "question_toks": ["What", "are", "the", "different", "ids", "and", "names", "of", "the", "stations", "that", "have", "had", "more", "than", "12", "bikes", "available", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 9, false], null], 12.0, null]]}}, {"db_id": "bike_1", "query": "SELECT avg(T1.lat) ,  avg(T1.long) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id", "query_toks": ["SELECT", "avg", "(", "T1.lat", ")", ",", "avg", "(", "T1.long", ")", "FROM", "station", "AS", "T1", "JOIN", "trip", "AS", "T2", "ON", "T1.id", "=", "T2.start_station_id"], "query_toks_no_value": ["select", "avg", "(", "t1", ".", "lat", ")", ",", "avg", "(", "t1", ".", "long", ")", "from", "station", "as", "t1", "join", "trip", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "start_station_id"], "question": "What is the average latitude and longitude of the starting points of all trips?", "question_toks": ["What", "is", "the", "average", "latitude", "and", "longitude", "of", "the", "starting", "points", "of", "all", "trips", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 16, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 3, false], null]], [5, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "bike_1", "query": "SELECT avg(T1.lat) ,  avg(T1.long) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id", "query_toks": ["SELECT", "avg", "(", "T1.lat", ")", ",", "avg", "(", "T1.long", ")", "FROM", "station", "AS", "T1", "JOIN", "trip", "AS", "T2", "ON", "T1.id", "=", "T2.start_station_id"], "query_toks_no_value": ["select", "avg", "(", "t1", ".", "lat", ")", ",", "avg", "(", "t1", ".", "long", ")", "from", "station", "as", "t1", "join", "trip", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "start_station_id"], "question": "What is the average latitude and longitude of all starting stations for the trips?", "question_toks": ["What", "is", "the", "average", "latitude", "and", "longitude", "of", "all", "starting", "stations", "for", "the", "trips", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 16, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 3, false], null]], [5, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "book_2", "query": "SELECT Title ,  Issues FROM book", "query_toks": ["SELECT", "Title", ",", "Issues", "FROM", "book"], "query_toks_no_value": ["select", "title", ",", "issues", "from", "book"], "question": "What are the title and issues of the books?", "question_toks": ["What", "are", "the", "title", "and", "issues", "of", "the", "books", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "book_2", "query": "SELECT T1.Title ,  T2.Publication_Date FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID  =  T2.Book_ID", "query_toks": ["SELECT", "T1.Title", ",", "T2.Publication_Date", "FROM", "book", "AS", "T1", "JOIN", "publication", "AS", "T2", "ON", "T1.Book_ID", "=", "T2.Book_ID"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t2", ".", "publication_date", "from", "book", "as", "t1", "join", "publication", "as", "t2", "on", "t1", ".", "book_id", "=", "t2", ".", "book_id"], "question": "Show the title and publication dates of books.", "question_toks": ["Show", "the", "title", "and", "publication", "dates", "of", "books", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 2, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "book_2", "query": "SELECT Publisher ,  COUNT(*) FROM publication GROUP BY Publisher", "query_toks": ["SELECT", "Publisher", ",", "COUNT", "(", "*", ")", "FROM", "publication", "GROUP", "BY", "Publisher"], "query_toks_no_value": ["select", "publisher", ",", "count", "(", "*", ")", "from", "publication", "group", "by", "publisher"], "question": "Show different publishers together with the number of publications they have.", "question_toks": ["Show", "different", "publishers", "together", "with", "the", "number", "of", "publications", "they", "have", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "musical", "query": "SELECT Character ,  Duration FROM actor", "query_toks": ["SELECT", "Character", ",", "Duration", "FROM", "actor"], "query_toks_no_value": ["select", "character", ",", "duration", "from", "actor"], "question": "What are the characters and duration of actors?", "question_toks": ["What", "are", "the", "characters", "and", "duration", "of", "actors", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "musical", "query": "SELECT Character ,  Duration FROM actor", "query_toks": ["SELECT", "Character", ",", "Duration", "FROM", "actor"], "query_toks_no_value": ["select", "character", ",", "duration", "from", "actor"], "question": "Return the characters and durations for each actor.", "question_toks": ["Return", "the", "characters", "and", "durations", "for", "each", "actor", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "musical", "query": "SELECT T1.Name ,  T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID", "query_toks": ["SELECT", "T1.Name", ",", "T2.Name", "FROM", "actor", "AS", "T1", "JOIN", "musical", "AS", "T2", "ON", "T1.Musical_ID", "=", "T2.Musical_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "name", "from", "actor", "as", "t1", "join", "musical", "as", "t2", "on", "t1", ".", "musical_id", "=", "t2", ".", "musical_id"], "question": "Show names of actors and names of musicals they are in.", "question_toks": ["Show", "names", "of", "actors", "and", "names", "of", "musicals", "they", "are", "in", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "musical", "query": "SELECT T1.Name ,  T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID", "query_toks": ["SELECT", "T1.Name", ",", "T2.Name", "FROM", "actor", "AS", "T1", "JOIN", "musical", "AS", "T2", "ON", "T1.Musical_ID", "=", "T2.Musical_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "name", "from", "actor", "as", "t1", "join", "musical", "as", "t2", "on", "t1", ".", "musical_id", "=", "t2", ".", "musical_id"], "question": "What are the names of actors and the musicals that they are in?", "question_toks": ["What", "are", "the", "names", "of", "actors", "and", "the", "musicals", "that", "they", "are", "in", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "musical", "query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID", "query_toks": ["SELECT", "T2.Name", ",", "COUNT", "(", "*", ")", "FROM", "actor", "AS", "T1", "JOIN", "musical", "AS", "T2", "ON", "T1.Musical_ID", "=", "T2.Musical_ID", "GROUP", "BY", "T1.Musical_ID"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "actor", "as", "t1", "join", "musical", "as", "t2", "on", "t1", ".", "musical_id", "=", "t2", ".", "musical_id", "group", "by", "t1", ".", "musical_id"], "question": "Show names of musicals and the number of actors who have appeared in the musicals.", "question_toks": ["Show", "names", "of", "musicals", "and", "the", "number", "of", "actors", "who", "have", "appeared", "in", "the", "musicals", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "musical", "query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID", "query_toks": ["SELECT", "T2.Name", ",", "COUNT", "(", "*", ")", "FROM", "actor", "AS", "T1", "JOIN", "musical", "AS", "T2", "ON", "T1.Musical_ID", "=", "T2.Musical_ID", "GROUP", "BY", "T1.Musical_ID"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "actor", "as", "t1", "join", "musical", "as", "t2", "on", "t1", ".", "musical_id", "=", "t2", ".", "musical_id", "group", "by", "t1", ".", "musical_id"], "question": "How many actors have appeared in each musical?", "question_toks": ["How", "many", "actors", "have", "appeared", "in", "each", "musical", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "musical", "query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee", "query_toks": ["SELECT", "Nominee", ",", "COUNT", "(", "*", ")", "FROM", "musical", "GROUP", "BY", "Nominee"], "query_toks_no_value": ["select", "nominee", ",", "count", "(", "*", ")", "from", "musical", "group", "by", "nominee"], "question": "Show different nominees and the number of musicals they have been nominated.", "question_toks": ["Show", "different", "nominees", "and", "the", "number", "of", "musicals", "they", "have", "been", "nominated", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "musical", "query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee", "query_toks": ["SELECT", "Nominee", ",", "COUNT", "(", "*", ")", "FROM", "musical", "GROUP", "BY", "Nominee"], "query_toks_no_value": ["select", "nominee", ",", "count", "(", "*", ")", "from", "musical", "group", "by", "nominee"], "question": "How many musicals has each nominee been nominated for?", "question_toks": ["How", "many", "musicals", "has", "each", "nominee", "been", "nominated", "for", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "twitter_1", "query": "SELECT name ,  email FROM user_profiles WHERE name LIKE '%Swift%'", "query_toks": ["SELECT", "name", ",", "email", "FROM", "user_profiles", "WHERE", "name", "LIKE", "'", "%", "Swift", "%", "'"], "query_toks_no_value": ["select", "name", ",", "email", "from", "user_profiles", "where", "name", "like", "value"], "question": "Find the name and email of the user whose name contains the word \u2018Swift\u2019.", "question_toks": ["Find", "the", "name", "and", "email", "of", "the", "user", "whose", "name", "contains", "the", "word", "\u2018Swift\u2019", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 8, false], null], "\"%Swift%\"", null]]}}, {"db_id": "twitter_1", "query": "SELECT name ,  email FROM user_profiles WHERE followers  >  1000", "query_toks": ["SELECT", "name", ",", "email", "FROM", "user_profiles", "WHERE", "followers", ">", "1000"], "query_toks_no_value": ["select", "name", ",", "email", "from", "user_profiles", "where", "followers", ">", "value"], "question": "Find the name and email of the users who have more than 1000 followers.", "question_toks": ["Find", "the", "name", "and", "email", "of", "the", "users", "who", "have", "more", "than", "1000", "followers", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 11, false], null], 1000.0, null]]}}, {"db_id": "twitter_1", "query": "SELECT T1.name ,  T1.email FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f1 GROUP BY T2.f1 HAVING count(*)  >  1", "query_toks": ["SELECT", "T1.name", ",", "T1.email", "FROM", "user_profiles", "AS", "T1", "JOIN", "follows", "AS", "T2", "ON", "T1.uid", "=", "T2.f1", "GROUP", "BY", "T2.f1", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "email", "from", "user_profiles", "as", "t1", "join", "follows", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "f1", "group", "by", "t2", ".", "f1", "having", "count", "(", "*", ")", ">", "value"], "question": "Find the name and email for the users who have more than one follower.", "question_toks": ["Find", "the", "name", "and", "email", "for", "the", "users", "who", "have", "more", "than", "one", "follower", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 1, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "twitter_1", "query": "SELECT name ,  email FROM user_profiles ORDER BY followers LIMIT 1", "query_toks": ["SELECT", "name", ",", "email", "FROM", "user_profiles", "ORDER", "BY", "followers", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "email", "from", "user_profiles", "order", "by", "followers", "limit", "value"], "question": "Find the name and email of the user followed by the least number of people.", "question_toks": ["Find", "the", "name", "and", "email", "of", "the", "user", "followed", "by", "the", "least", "number", "of", "people", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 11, false], null]]], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "twitter_1", "query": "SELECT name ,  followers FROM user_profiles ORDER BY followers DESC", "query_toks": ["SELECT", "name", ",", "followers", "FROM", "user_profiles", "ORDER", "BY", "followers", "DESC"], "query_toks_no_value": ["select", "name", ",", "followers", "from", "user_profiles", "order", "by", "followers", "desc"], "question": "List the name and number of followers for each user, and sort the results by the number of followers in descending order.", "question_toks": ["List", "the", "name", "and", "number", "of", "followers", "for", "each", "user", ",", "and", "sort", "the", "results", "by", "the", "number", "of", "followers", "in", "descending", "order", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 11, false], null]]], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "twitter_1", "query": "SELECT T1.name ,  count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid", "query_toks": ["SELECT", "T1.name", ",", "count", "(", "*", ")", "FROM", "user_profiles", "AS", "T1", "JOIN", "tweets", "AS", "T2", "ON", "T1.uid", "=", "T2.uid", "GROUP", "BY", "T2.uid"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "count", "(", "*", ")", "from", "user_profiles", "as", "t1", "join", "tweets", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "uid", "group", "by", "t2", ".", "uid"], "question": "Find the name of each user and number of tweets tweeted by each of them.", "question_toks": ["Find", "the", "name", "of", "each", "user", "and", "number", "of", "tweets", "tweeted", "by", "each", "of", "them", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 4, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "twitter_1", "query": "SELECT T1.name ,  T1.partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  <  2", "query_toks": ["SELECT", "T1.name", ",", "T1.partitionid", "FROM", "user_profiles", "AS", "T1", "JOIN", "tweets", "AS", "T2", "ON", "T1.uid", "=", "T2.uid", "GROUP", "BY", "T2.uid", "HAVING", "count", "(", "*", ")", "<", "2"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "partitionid", "from", "user_profiles", "as", "t1", "join", "tweets", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "uid", "group", "by", "t2", ".", "uid", "having", "count", "(", "*", ")", "<", "value"], "question": "Find the name and partition id for users who tweeted less than twice.", "question_toks": ["Find", "the", "name", "and", "partition", "id", "for", "users", "who", "tweeted", "less", "than", "twice", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 4, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 4, false]], "having": [[false, 4, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "twitter_1", "query": "SELECT T1.name ,  count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  >  1", "query_toks": ["SELECT", "T1.name", ",", "count", "(", "*", ")", "FROM", "user_profiles", "AS", "T1", "JOIN", "tweets", "AS", "T2", "ON", "T1.uid", "=", "T2.uid", "GROUP", "BY", "T2.uid", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "count", "(", "*", ")", "from", "user_profiles", "as", "t1", "join", "tweets", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "uid", "group", "by", "t2", ".", "uid", "having", "count", "(", "*", ")", ">", "value"], "question": "Find the name of the user who tweeted more than once, and number of tweets tweeted by them.", "question_toks": ["Find", "the", "name", "of", "the", "user", "who", "tweeted", "more", "than", "once", ",", "and", "number", "of", "tweets", "tweeted", "by", "them", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 4, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 4, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "twitter_1", "query": "SELECT max(followers) ,  sum(followers) FROM user_profiles", "query_toks": ["SELECT", "max", "(", "followers", ")", ",", "sum", "(", "followers", ")", "FROM", "user_profiles"], "query_toks_no_value": ["select", "max", "(", "followers", ")", ",", "sum", "(", "followers", ")", "from", "user_profiles"], "question": "Find the maximum and total number of followers of all users.", "question_toks": ["Find", "the", "maximum", "and", "total", "number", "of", "followers", "of", "all", "users", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 11, false], null]], [4, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "product_catalog", "query": "SELECT catalog_level_name ,  catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10", "query_toks": ["SELECT", "catalog_level_name", ",", "catalog_level_number", "FROM", "Catalog_Structure", "WHERE", "catalog_level_number", "BETWEEN", "5", "AND", "10"], "query_toks_no_value": ["select", "catalog_level_name", ",", "catalog_level_number", "from", "catalog_structure", "where", "catalog_level_number", "between", "value", "and", "value"], "question": "Find the name and level of catalog structure with level between 5 and 10.", "question_toks": ["Find", "the", "name", "and", "level", "of", "catalog", "structure", "with", "level", "between", "5", "and", "10", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 1, [0, [0, 9, false], null], 5.0, 10.0]]}}, {"db_id": "product_catalog", "query": "SELECT catalog_level_name ,  catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10", "query_toks": ["SELECT", "catalog_level_name", ",", "catalog_level_number", "FROM", "Catalog_Structure", "WHERE", "catalog_level_number", "BETWEEN", "5", "AND", "10"], "query_toks_no_value": ["select", "catalog_level_name", ",", "catalog_level_number", "from", "catalog_structure", "where", "catalog_level_number", "between", "value", "and", "value"], "question": "What are the name and level of catalog structure with level number between 5 and 10", "question_toks": ["What", "are", "the", "name", "and", "level", "of", "catalog", "structure", "with", "level", "number", "between", "5", "and", "10"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 1, [0, [0, 9, false], null], 5.0, 10.0]]}}, {"db_id": "product_catalog", "query": "SELECT t1.catalog_name ,  t1.date_of_publication FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id  =  t2.catalog_id WHERE catalog_level_number  >  5", "query_toks": ["SELECT", "t1.catalog_name", ",", "t1.date_of_publication", "FROM", "catalogs", "AS", "t1", "JOIN", "catalog_structure", "AS", "t2", "ON", "t1.catalog_id", "=", "t2.catalog_id", "WHERE", "catalog_level_number", ">", "5"], "query_toks_no_value": ["select", "t1", ".", "catalog_name", ",", "t1", ".", "date_of_publication", "from", "catalogs", "as", "t1", "join", "catalog_structure", "as", "t2", "on", "t1", ".", "catalog_id", "=", "t2", ".", "catalog_id", "where", "catalog_level_number", ">", "value"], "question": "Find the names and publication dates of all catalogs that have catalog level number greater than 5.", "question_toks": ["Find", "the", "names", "and", "publication", "dates", "of", "all", "catalogs", "that", "have", "catalog", "level", "number", "greater", "than", "5", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 10, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 9, false], null], 5.0, null]]}}, {"db_id": "product_catalog", "query": "SELECT t1.catalog_name ,  t1.date_of_publication FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id  =  t2.catalog_id WHERE catalog_level_number  >  5", "query_toks": ["SELECT", "t1.catalog_name", ",", "t1.date_of_publication", "FROM", "catalogs", "AS", "t1", "JOIN", "catalog_structure", "AS", "t2", "ON", "t1.catalog_id", "=", "t2.catalog_id", "WHERE", "catalog_level_number", ">", "5"], "query_toks_no_value": ["select", "t1", ".", "catalog_name", ",", "t1", ".", "date_of_publication", "from", "catalogs", "as", "t1", "join", "catalog_structure", "as", "t2", "on", "t1", ".", "catalog_id", "=", "t2", ".", "catalog_id", "where", "catalog_level_number", ">", "value"], "question": "What are the name and publication date of the catalogs with catalog level number above 5?", "question_toks": ["What", "are", "the", "name", "and", "publication", "date", "of", "the", "catalogs", "with", "catalog", "level", "number", "above", "5", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 10, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 9, false], null], 5.0, null]]}}, {"db_id": "product_catalog", "query": "SELECT avg(price_in_euros) ,  min(price_in_euros) FROM catalog_contents", "query_toks": ["SELECT", "avg", "(", "price_in_euros", ")", ",", "min", "(", "price_in_euros", ")", "FROM", "catalog_contents"], "query_toks_no_value": ["select", "avg", "(", "price_in_euros", ")", ",", "min", "(", "price_in_euros", ")", "from", "catalog_contents"], "question": "What are the average and minimum price (in Euro) of all products?", "question_toks": ["What", "are", "the", "average", "and", "minimum", "price", "(", "in", "Euro", ")", "of", "all", "products", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 20, false], null]], [2, [0, [0, 20, false], null]]]], "union": null, "where": []}}, {"db_id": "product_catalog", "query": "SELECT avg(price_in_euros) ,  min(price_in_euros) FROM catalog_contents", "query_toks": ["SELECT", "avg", "(", "price_in_euros", ")", ",", "min", "(", "price_in_euros", ")", "FROM", "catalog_contents"], "query_toks_no_value": ["select", "avg", "(", "price_in_euros", ")", ",", "min", "(", "price_in_euros", ")", "from", "catalog_contents"], "question": "Give me the average and minimum price (in Euro) of the products.", "question_toks": ["Give", "me", "the", "average", "and", "minimum", "price", "(", "in", "Euro", ")", "of", "the", "products", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 20, false], null]], [2, [0, [0, 20, false], null]]]], "union": null, "where": []}}, {"db_id": "product_catalog", "query": "SELECT t1.attribute_name ,  t1.attribute_id FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id  =  t2.attribute_id WHERE t2.attribute_value  =  0", "query_toks": ["SELECT", "t1.attribute_name", ",", "t1.attribute_id", "FROM", "Attribute_Definitions", "AS", "t1", "JOIN", "Catalog_Contents_Additional_Attributes", "AS", "t2", "ON", "t1.attribute_id", "=", "t2.attribute_id", "WHERE", "t2.attribute_value", "=", "0"], "query_toks_no_value": ["select", "t1", ".", "attribute_name", ",", "t1", ".", "attribute_id", "from", "attribute_definitions", "as", "t1", "join", "catalog_contents_additional_attributes", "as", "t2", "on", "t1", ".", "attribute_id", "=", "t2", ".", "attribute_id", "where", "t2", ".", "attribute_value", "=", "value"], "question": "Find the name and attribute ID of the attribute definitions with attribute value 0.", "question_toks": ["Find", "the", "name", "and", "attribute", "ID", "of", "the", "attribute", "definitions", "with", "attribute", "value", "0", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 28, false], null]], "table_units": [["table_unit", 0], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 29, false], null], 0.0, null]]}}, {"db_id": "product_catalog", "query": "SELECT t1.attribute_name ,  t1.attribute_id FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id  =  t2.attribute_id WHERE t2.attribute_value  =  0", "query_toks": ["SELECT", "t1.attribute_name", ",", "t1.attribute_id", "FROM", "Attribute_Definitions", "AS", "t1", "JOIN", "Catalog_Contents_Additional_Attributes", "AS", "t2", "ON", "t1.attribute_id", "=", "t2.attribute_id", "WHERE", "t2.attribute_value", "=", "0"], "query_toks_no_value": ["select", "t1", ".", "attribute_name", ",", "t1", ".", "attribute_id", "from", "attribute_definitions", "as", "t1", "join", "catalog_contents_additional_attributes", "as", "t2", "on", "t1", ".", "attribute_id", "=", "t2", ".", "attribute_id", "where", "t2", ".", "attribute_value", "=", "value"], "question": "Which attribute definitions have attribute value 0? Give me the attribute name and attribute ID.", "question_toks": ["Which", "attribute", "definitions", "have", "attribute", "value", "0", "?", "Give", "me", "the", "attribute", "name", "and", "attribute", "ID", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 28, false], null]], "table_units": [["table_unit", 0], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 29, false], null], 0.0, null]]}}, {"db_id": "product_catalog", "query": "SELECT catalog_entry_name ,  capacity FROM Catalog_Contents WHERE price_in_dollars  >  700", "query_toks": ["SELECT", "catalog_entry_name", ",", "capacity", "FROM", "Catalog_Contents", "WHERE", "price_in_dollars", ">", "700"], "query_toks_no_value": ["select", "catalog_entry_name", ",", "capacity", "from", "catalog_contents", "where", "price_in_dollars", ">", "value"], "question": "Find the name and capacity of products with price greater than 700 (in USD).", "question_toks": ["Find", "the", "name", "and", "capacity", "of", "products", "with", "price", "greater", "than", "700", "(", "in", "USD", ")", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 22, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 19, false], null], 700.0, null]]}}, {"db_id": "product_catalog", "query": "SELECT catalog_entry_name ,  capacity FROM Catalog_Contents WHERE price_in_dollars  >  700", "query_toks": ["SELECT", "catalog_entry_name", ",", "capacity", "FROM", "Catalog_Contents", "WHERE", "price_in_dollars", ">", "700"], "query_toks_no_value": ["select", "catalog_entry_name", ",", "capacity", "from", "catalog_contents", "where", "price_in_dollars", ">", "value"], "question": "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities.", "question_toks": ["Which", "catalog", "contents", "has", "price", "above", "700", "dollars", "?", "Show", "their", "catalog", "entry", "names", "and", "capacities", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 22, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 19, false], null], 700.0, null]]}}, {"db_id": "flight_1", "query": "SELECT name ,  distance FROM Aircraft", "query_toks": ["SELECT", "name", ",", "distance", "FROM", "Aircraft"], "query_toks_no_value": ["select", "name", ",", "distance", "from", "aircraft"], "question": "Show name and distance for all aircrafts.", "question_toks": ["Show", "name", "and", "distance", "for", "all", "aircrafts", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_1", "query": "SELECT name ,  distance FROM Aircraft", "query_toks": ["SELECT", "name", ",", "distance", "FROM", "Aircraft"], "query_toks_no_value": ["select", "name", ",", "distance", "from", "aircraft"], "question": "What are the names and distances for all airplanes?", "question_toks": ["What", "are", "the", "names", "and", "distances", "for", "all", "airplanes", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_1", "query": "SELECT name ,  distance FROM Aircraft WHERE aid  =  12", "query_toks": ["SELECT", "name", ",", "distance", "FROM", "Aircraft", "WHERE", "aid", "=", "12"], "query_toks_no_value": ["select", "name", ",", "distance", "from", "aircraft", "where", "aid", "=", "value"], "question": "What is the name and distance for aircraft with id 12?", "question_toks": ["What", "is", "the", "name", "and", "distance", "for", "aircraft", "with", "id", "12", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], 12.0, null]]}}, {"db_id": "flight_1", "query": "SELECT name ,  distance FROM Aircraft WHERE aid  =  12", "query_toks": ["SELECT", "name", ",", "distance", "FROM", "Aircraft", "WHERE", "aid", "=", "12"], "query_toks_no_value": ["select", "name", ",", "distance", "from", "aircraft", "where", "aid", "=", "value"], "question": "What is the name and distance for the aircraft that has an id of 12?", "question_toks": ["What", "is", "the", "name", "and", "distance", "for", "the", "aircraft", "that", "has", "an", "id", "of", "12", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], 12.0, null]]}}, {"db_id": "flight_1", "query": "SELECT min(distance) ,  avg(distance) ,  max(distance) FROM Aircraft", "query_toks": ["SELECT", "min", "(", "distance", ")", ",", "avg", "(", "distance", ")", ",", "max", "(", "distance", ")", "FROM", "Aircraft"], "query_toks_no_value": ["select", "min", "(", "distance", ")", ",", "avg", "(", "distance", ")", ",", "max", "(", "distance", ")", "from", "aircraft"], "question": "What is the minimum, average, and maximum distance of all aircrafts.", "question_toks": ["What", "is", "the", "minimum", ",", "average", ",", "and", "maximum", "distance", "of", "all", "aircrafts", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 11, false], null]], [5, [0, [0, 11, false], null]], [1, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_1", "query": "SELECT min(distance) ,  avg(distance) ,  max(distance) FROM Aircraft", "query_toks": ["SELECT", "min", "(", "distance", ")", ",", "avg", "(", "distance", ")", ",", "max", "(", "distance", ")", "FROM", "Aircraft"], "query_toks_no_value": ["select", "min", "(", "distance", ")", ",", "avg", "(", "distance", ")", ",", "max", "(", "distance", ")", "from", "aircraft"], "question": "Return the minimum, average and maximum distances traveled across all aircrafts.", "question_toks": ["Return", "the", "minimum", ",", "average", "and", "maximum", "distances", "traveled", "across", "all", "aircrafts", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 11, false], null]], [5, [0, [0, 11, false], null]], [1, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_1", "query": "SELECT aid ,  name FROM Aircraft ORDER BY distance DESC LIMIT 1", "query_toks": ["SELECT", "aid", ",", "name", "FROM", "Aircraft", "ORDER", "BY", "distance", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "aid", ",", "name", "from", "aircraft", "order", "by", "distance", "desc", "limit", "value"], "question": "Show the id and name of the aircraft with the maximum distance.", "question_toks": ["Show", "the", "id", "and", "name", "of", "the", "aircraft", "with", "the", "maximum", "distance", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 11, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_1", "query": "SELECT aid ,  name FROM Aircraft ORDER BY distance DESC LIMIT 1", "query_toks": ["SELECT", "aid", ",", "name", "FROM", "Aircraft", "ORDER", "BY", "distance", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "aid", ",", "name", "from", "aircraft", "order", "by", "distance", "desc", "limit", "value"], "question": "What is the id and name of the aircraft that can cover the maximum distance?", "question_toks": ["What", "is", "the", "id", "and", "name", "of", "the", "aircraft", "that", "can", "cover", "the", "maximum", "distance", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 11, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_1", "query": "SELECT name ,  salary FROM Employee ORDER BY salary", "query_toks": ["SELECT", "name", ",", "salary", "FROM", "Employee", "ORDER", "BY", "salary"], "query_toks_no_value": ["select", "name", ",", "salary", "from", "employee", "order", "by", "salary"], "question": "Show name and salary for all employees sorted by salary.", "question_toks": ["Show", "name", "and", "salary", "for", "all", "employees", "sorted", "by", "salary", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 14, false], null]]], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_1", "query": "SELECT name ,  salary FROM Employee ORDER BY salary", "query_toks": ["SELECT", "name", ",", "salary", "FROM", "Employee", "ORDER", "BY", "salary"], "query_toks_no_value": ["select", "name", ",", "salary", "from", "employee", "order", "by", "salary"], "question": "What is the name and salary of all employees in order of salary?", "question_toks": ["What", "is", "the", "name", "and", "salary", "of", "all", "employees", "in", "order", "of", "salary", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 14, false], null]]], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_1", "query": "SELECT name ,  salary FROM Employee WHERE eid  =  242518965", "query_toks": ["SELECT", "name", ",", "salary", "FROM", "Employee", "WHERE", "eid", "=", "242518965"], "query_toks_no_value": ["select", "name", ",", "salary", "from", "employee", "where", "eid", "=", "value"], "question": "What is the name and salary for employee with id 242518965?", "question_toks": ["What", "is", "the", "name", "and", "salary", "for", "employee", "with", "id", "242518965", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], 242518965.0, null]]}}, {"db_id": "flight_1", "query": "SELECT name ,  salary FROM Employee WHERE eid  =  242518965", "query_toks": ["SELECT", "name", ",", "salary", "FROM", "Employee", "WHERE", "eid", "=", "242518965"], "query_toks_no_value": ["select", "name", ",", "salary", "from", "employee", "where", "eid", "=", "value"], "question": "What is the name and salary of the employee with the id 242518965?", "question_toks": ["What", "is", "the", "name", "and", "salary", "of", "the", "employee", "with", "the", "id", "242518965", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], 242518965.0, null]]}}, {"db_id": "flight_1", "query": "SELECT avg(salary) ,  max(salary) FROM Employee", "query_toks": ["SELECT", "avg", "(", "salary", ")", ",", "max", "(", "salary", ")", "FROM", "Employee"], "query_toks_no_value": ["select", "avg", "(", "salary", ")", ",", "max", "(", "salary", ")", "from", "employee"], "question": "What is average and maximum salary of all employees.", "question_toks": ["What", "is", "average", "and", "maximum", "salary", "of", "all", "employees", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 14, false], null]], [1, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_1", "query": "SELECT avg(salary) ,  max(salary) FROM Employee", "query_toks": ["SELECT", "avg", "(", "salary", ")", ",", "max", "(", "salary", ")", "FROM", "Employee"], "query_toks_no_value": ["select", "avg", "(", "salary", ")", ",", "max", "(", "salary", ")", "from", "employee"], "question": "What is the average and largest salary of all employees?", "question_toks": ["What", "is", "the", "average", "and", "largest", "salary", "of", "all", "employees", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 14, false], null]], [1, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_1", "query": "SELECT eid ,  name FROM Employee ORDER BY salary DESC LIMIT 1", "query_toks": ["SELECT", "eid", ",", "name", "FROM", "Employee", "ORDER", "BY", "salary", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "eid", ",", "name", "from", "employee", "order", "by", "salary", "desc", "limit", "value"], "question": "Show the id and name of the employee with maximum salary.", "question_toks": ["Show", "the", "id", "and", "name", "of", "the", "employee", "with", "maximum", "salary", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 14, false], null]]], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_1", "query": "SELECT eid ,  name FROM Employee ORDER BY salary DESC LIMIT 1", "query_toks": ["SELECT", "eid", ",", "name", "FROM", "Employee", "ORDER", "BY", "salary", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "eid", ",", "name", "from", "employee", "order", "by", "salary", "desc", "limit", "value"], "question": "What is the id and name of the employee with the highest salary?", "question_toks": ["What", "is", "the", "id", "and", "name", "of", "the", "employee", "with", "the", "highest", "salary", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 14, false], null]]], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_1", "query": "SELECT eid ,  salary FROM Employee WHERE name  =  'Mark Young'", "query_toks": ["SELECT", "eid", ",", "salary", "FROM", "Employee", "WHERE", "name", "=", "'Mark", "Young", "'"], "query_toks_no_value": ["select", "eid", ",", "salary", "from", "employee", "where", "name", "=", "value"], "question": "Show the id and salary of Mark Young.", "question_toks": ["Show", "the", "id", "and", "salary", "of", "Mark", "Young", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 13, false], null], "\"Mark Young\"", null]]}}, {"db_id": "flight_1", "query": "SELECT eid ,  salary FROM Employee WHERE name  =  'Mark Young'", "query_toks": ["SELECT", "eid", ",", "salary", "FROM", "Employee", "WHERE", "name", "=", "'Mark", "Young", "'"], "query_toks_no_value": ["select", "eid", ",", "salary", "from", "employee", "where", "name", "=", "value"], "question": "What is the id and salary of the employee named Mark Young?", "question_toks": ["What", "is", "the", "id", "and", "salary", "of", "the", "employee", "named", "Mark", "Young", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 13, false], null], "\"Mark Young\"", null]]}}, {"db_id": "flight_1", "query": "SELECT flno ,  origin ,  destination FROM Flight ORDER BY origin", "query_toks": ["SELECT", "flno", ",", "origin", ",", "destination", "FROM", "Flight", "ORDER", "BY", "origin"], "query_toks_no_value": ["select", "flno", ",", "origin", ",", "destination", "from", "flight", "order", "by", "origin"], "question": "Show flight number, origin, destination of all flights in the alphabetical order of the departure cities.", "question_toks": ["Show", "flight", "number", ",", "origin", ",", "destination", "of", "all", "flights", "in", "the", "alphabetical", "order", "of", "the", "departure", "cities", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 2, false], null]]], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_1", "query": "SELECT flno ,  origin ,  destination FROM Flight ORDER BY origin", "query_toks": ["SELECT", "flno", ",", "origin", ",", "destination", "FROM", "Flight", "ORDER", "BY", "origin"], "query_toks_no_value": ["select", "flno", ",", "origin", ",", "destination", "from", "flight", "order", "by", "origin"], "question": "What is the flight number, origin, and destination for all flights in alphabetical order by departure cities?", "question_toks": ["What", "is", "the", "flight", "number", ",", "origin", ",", "and", "destination", "for", "all", "flights", "in", "alphabetical", "order", "by", "departure", "cities", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 2, false], null]]], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_1", "query": "SELECT departure_date ,  arrival_date FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\"", "query_toks": ["SELECT", "departure_date", ",", "arrival_date", "FROM", "Flight", "WHERE", "origin", "=", "``", "Los", "Angeles", "''", "AND", "destination", "=", "``", "Honolulu", "''"], "query_toks_no_value": ["select", "departure_date", ",", "arrival_date", "from", "flight", "where", "origin", "=", "value", "and", "destination", "=", "value"], "question": "Show me the departure date and arrival date for all flights from Los Angeles to Honolulu.", "question_toks": ["Show", "me", "the", "departure", "date", "and", "arrival", "date", "for", "all", "flights", "from", "Los", "Angeles", "to", "Honolulu", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Los Angeles\"", null], "and", [false, 2, [0, [0, 3, false], null], "\"Honolulu\"", null]]}}, {"db_id": "flight_1", "query": "SELECT departure_date ,  arrival_date FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\"", "query_toks": ["SELECT", "departure_date", ",", "arrival_date", "FROM", "Flight", "WHERE", "origin", "=", "``", "Los", "Angeles", "''", "AND", "destination", "=", "``", "Honolulu", "''"], "query_toks_no_value": ["select", "departure_date", ",", "arrival_date", "from", "flight", "where", "origin", "=", "value", "and", "destination", "=", "value"], "question": "What are the departure and arrival dates of all flights from LA to Honolulu?", "question_toks": ["What", "are", "the", "departure", "and", "arrival", "dates", "of", "all", "flights", "from", "LA", "to", "Honolulu", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Los Angeles\"", null], "and", [false, 2, [0, [0, 3, false], null], "\"Honolulu\"", null]]}}, {"db_id": "flight_1", "query": "SELECT origin ,  destination FROM Flight WHERE price  >  300", "query_toks": ["SELECT", "origin", ",", "destination", "FROM", "Flight", "WHERE", "price", ">", "300"], "query_toks_no_value": ["select", "origin", ",", "destination", "from", "flight", "where", "price", ">", "value"], "question": "Show origin and destination for flights with price higher than 300.", "question_toks": ["Show", "origin", "and", "destination", "for", "flights", "with", "price", "higher", "than", "300", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 7, false], null], 300.0, null]]}}, {"db_id": "flight_1", "query": "SELECT origin ,  destination FROM Flight WHERE price  >  300", "query_toks": ["SELECT", "origin", ",", "destination", "FROM", "Flight", "WHERE", "price", ">", "300"], "query_toks_no_value": ["select", "origin", ",", "destination", "from", "flight", "where", "price", ">", "value"], "question": "What is the origin and destination for all flights whose price is higher than 300?", "question_toks": ["What", "is", "the", "origin", "and", "destination", "for", "all", "flights", "whose", "price", "is", "higher", "than", "300", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 7, false], null], 300.0, null]]}}, {"db_id": "flight_1", "query": "SELECT flno ,  distance FROM Flight ORDER BY price DESC LIMIT 1", "query_toks": ["SELECT", "flno", ",", "distance", "FROM", "Flight", "ORDER", "BY", "price", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "flno", ",", "distance", "from", "flight", "order", "by", "price", "desc", "limit", "value"], "question": "Show the flight number and distance of the flight with maximum price.", "question_toks": ["Show", "the", "flight", "number", "and", "distance", "of", "the", "flight", "with", "maximum", "price", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 7, false], null]]], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_1", "query": "SELECT flno ,  distance FROM Flight ORDER BY price DESC LIMIT 1", "query_toks": ["SELECT", "flno", ",", "distance", "FROM", "Flight", "ORDER", "BY", "price", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "flno", ",", "distance", "from", "flight", "order", "by", "price", "desc", "limit", "value"], "question": "What is the flight number and its distance for the one with the maximum price?", "question_toks": ["What", "is", "the", "flight", "number", "and", "its", "distance", "for", "the", "one", "with", "the", "maximum", "price", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 7, false], null]]], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_1", "query": "SELECT avg(distance) ,  avg(price) FROM Flight WHERE origin  =  \"Los Angeles\"", "query_toks": ["SELECT", "avg", "(", "distance", ")", ",", "avg", "(", "price", ")", "FROM", "Flight", "WHERE", "origin", "=", "``", "Los", "Angeles", "''"], "query_toks_no_value": ["select", "avg", "(", "distance", ")", ",", "avg", "(", "price", ")", "from", "flight", "where", "origin", "=", "value"], "question": "What is the average distance and average price for flights from Los Angeles.", "question_toks": ["What", "is", "the", "average", "distance", "and", "average", "price", "for", "flights", "from", "Los", "Angeles", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]], [5, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Los Angeles\"", null]]}}, {"db_id": "flight_1", "query": "SELECT avg(distance) ,  avg(price) FROM Flight WHERE origin  =  \"Los Angeles\"", "query_toks": ["SELECT", "avg", "(", "distance", ")", ",", "avg", "(", "price", ")", "FROM", "Flight", "WHERE", "origin", "=", "``", "Los", "Angeles", "''"], "query_toks_no_value": ["select", "avg", "(", "distance", ")", ",", "avg", "(", "price", ")", "from", "flight", "where", "origin", "=", "value"], "question": "What is the average distance and price for all flights from LA?", "question_toks": ["What", "is", "the", "average", "distance", "and", "price", "for", "all", "flights", "from", "LA", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]], [5, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Los Angeles\"", null]]}}, {"db_id": "flight_1", "query": "SELECT origin ,  count(*) FROM Flight GROUP BY origin", "query_toks": ["SELECT", "origin", ",", "count", "(", "*", ")", "FROM", "Flight", "GROUP", "BY", "origin"], "query_toks_no_value": ["select", "origin", ",", "count", "(", "*", ")", "from", "flight", "group", "by", "origin"], "question": "Show all origins and the number of flights from each origin.", "question_toks": ["Show", "all", "origins", "and", "the", "number", "of", "flights", "from", "each", "origin", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_1", "query": "SELECT origin ,  count(*) FROM Flight GROUP BY origin", "query_toks": ["SELECT", "origin", ",", "count", "(", "*", ")", "FROM", "Flight", "GROUP", "BY", "origin"], "query_toks_no_value": ["select", "origin", ",", "count", "(", "*", ")", "from", "flight", "group", "by", "origin"], "question": "For each origin, how many flights came from there?", "question_toks": ["For", "each", "origin", ",", "how", "many", "flights", "came", "from", "there", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_1", "query": "SELECT destination ,  count(*) FROM Flight GROUP BY destination", "query_toks": ["SELECT", "destination", ",", "count", "(", "*", ")", "FROM", "Flight", "GROUP", "BY", "destination"], "query_toks_no_value": ["select", "destination", ",", "count", "(", "*", ")", "from", "flight", "group", "by", "destination"], "question": "Show all destinations and the number of flights to each destination.", "question_toks": ["Show", "all", "destinations", "and", "the", "number", "of", "flights", "to", "each", "destination", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_1", "query": "SELECT destination ,  count(*) FROM Flight GROUP BY destination", "query_toks": ["SELECT", "destination", ",", "count", "(", "*", ")", "FROM", "Flight", "GROUP", "BY", "destination"], "query_toks_no_value": ["select", "destination", ",", "count", "(", "*", ")", "from", "flight", "group", "by", "destination"], "question": "What are the destinations and number of flights to each one?", "question_toks": ["What", "are", "the", "destinations", "and", "number", "of", "flights", "to", "each", "one", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_1", "query": "SELECT T2.name ,  count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "Flight", "AS", "T1", "JOIN", "Aircraft", "AS", "T2", "ON", "T1.aid", "=", "T2.aid", "GROUP", "BY", "T1.aid"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "flight", "as", "t1", "join", "aircraft", "as", "t2", "on", "t1", ".", "aid", "=", "t2", ".", "aid", "group", "by", "t1", ".", "aid"], "question": "Show aircraft names and number of flights for each aircraft.", "question_toks": ["Show", "aircraft", "names", "and", "number", "of", "flights", "for", "each", "aircraft", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_1", "query": "SELECT T2.name ,  count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "Flight", "AS", "T1", "JOIN", "Aircraft", "AS", "T2", "ON", "T1.aid", "=", "T2.aid", "GROUP", "BY", "T1.aid"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "flight", "as", "t1", "join", "aircraft", "as", "t2", "on", "t1", ".", "aid", "=", "t2", ".", "aid", "group", "by", "t1", ".", "aid"], "question": "What is the name of each aircraft and how many flights does each one complete?", "question_toks": ["What", "is", "the", "name", "of", "each", "aircraft", "and", "how", "many", "flights", "does", "each", "one", "complete", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_1", "query": "SELECT T1.name ,  T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", ",", "T1.salary", "FROM", "Employee", "AS", "T1", "JOIN", "Certificate", "AS", "T2", "ON", "T1.eid", "=", "T2.eid", "GROUP", "BY", "T1.eid", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "salary", "from", "employee", "as", "t1", "join", "certificate", "as", "t2", "on", "t1", ".", "eid", "=", "t2", ".", "eid", "group", "by", "t1", ".", "eid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "what is the salary and name of the employee who has the most number of aircraft certificates?", "question_toks": ["what", "is", "the", "salary", "and", "name", "of", "the", "employee", "who", "has", "the", "most", "number", "of", "aircraft", "certificates", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 12, false], null], [0, 15, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_1", "query": "SELECT T1.name ,  T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", ",", "T1.salary", "FROM", "Employee", "AS", "T1", "JOIN", "Certificate", "AS", "T2", "ON", "T1.eid", "=", "T2.eid", "GROUP", "BY", "T1.eid", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "salary", "from", "employee", "as", "t1", "join", "certificate", "as", "t2", "on", "t1", ".", "eid", "=", "t2", ".", "eid", "group", "by", "t1", ".", "eid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the salaray and name of the employee that is certified to fly the most planes?", "question_toks": ["What", "is", "the", "salaray", "and", "name", "of", "the", "employee", "that", "is", "certified", "to", "fly", "the", "most", "planes", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 12, false], null], [0, 15, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "allergy_1", "query": "SELECT allergy ,  allergytype FROM Allergy_type", "query_toks": ["SELECT", "allergy", ",", "allergytype", "FROM", "Allergy_type"], "query_toks_no_value": ["select", "allergy", ",", "allergytype", "from", "allergy_type"], "question": "Show all allergies and their types.", "question_toks": ["Show", "all", "allergies", "and", "their", "types", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "allergy_1", "query": "SELECT allergy ,  allergytype FROM Allergy_type", "query_toks": ["SELECT", "allergy", ",", "allergytype", "FROM", "Allergy_type"], "query_toks_no_value": ["select", "allergy", ",", "allergytype", "from", "allergy_type"], "question": "What are the allergies and their types?", "question_toks": ["What", "are", "the", "allergies", "and", "their", "types", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "allergy_1", "query": "SELECT allergytype ,  count(*) FROM Allergy_type GROUP BY allergytype", "query_toks": ["SELECT", "allergytype", ",", "count", "(", "*", ")", "FROM", "Allergy_type", "GROUP", "BY", "allergytype"], "query_toks_no_value": ["select", "allergytype", ",", "count", "(", "*", ")", "from", "allergy_type", "group", "by", "allergytype"], "question": "Show all allergy types and the number of allergies in each type.", "question_toks": ["Show", "all", "allergy", "types", "and", "the", "number", "of", "allergies", "in", "each", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "allergy_1", "query": "SELECT allergytype ,  count(*) FROM Allergy_type GROUP BY allergytype", "query_toks": ["SELECT", "allergytype", ",", "count", "(", "*", ")", "FROM", "Allergy_type", "GROUP", "BY", "allergytype"], "query_toks_no_value": ["select", "allergytype", ",", "count", "(", "*", ")", "from", "allergy_type", "group", "by", "allergytype"], "question": "What are the allergy types and how many allergies correspond to each one?", "question_toks": ["What", "are", "the", "allergy", "types", "and", "how", "many", "allergies", "correspond", "to", "each", "one", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "allergy_1", "query": "SELECT Fname ,  Lname FROM Student", "query_toks": ["SELECT", "Fname", ",", "Lname", "FROM", "Student"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "student"], "question": "Show first name and last name for all students.", "question_toks": ["Show", "first", "name", "and", "last", "name", "for", "all", "students", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "allergy_1", "query": "SELECT Fname ,  Lname FROM Student", "query_toks": ["SELECT", "Fname", ",", "Lname", "FROM", "Student"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "student"], "question": "What are the full names of all students", "question_toks": ["What", "are", "the", "full", "names", "of", "all", "students"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "allergy_1", "query": "SELECT Fname ,  Lname ,  Age FROM Student WHERE Sex  =  'F'", "query_toks": ["SELECT", "Fname", ",", "Lname", ",", "Age", "FROM", "Student", "WHERE", "Sex", "=", "'F", "'"], "query_toks_no_value": ["select", "fname", ",", "lname", ",", "age", "from", "student", "where", "sex", "=", "value"], "question": "Show first name, last name, age for all female students. Their sex is F.", "question_toks": ["Show", "first", "name", ",", "last", "name", ",", "age", "for", "all", "female", "students", ".", "Their", "sex", "is", "F", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], "\"F\"", null]]}}, {"db_id": "allergy_1", "query": "SELECT Fname ,  Lname ,  Age FROM Student WHERE Sex  =  'F'", "query_toks": ["SELECT", "Fname", ",", "Lname", ",", "Age", "FROM", "Student", "WHERE", "Sex", "=", "'F", "'"], "query_toks_no_value": ["select", "fname", ",", "lname", ",", "age", "from", "student", "where", "sex", "=", "value"], "question": "What are the full names and ages for all female students whose sex is F?", "question_toks": ["What", "are", "the", "full", "names", "and", "ages", "for", "all", "female", "students", "whose", "sex", "is", "F", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], "\"F\"", null]]}}, {"db_id": "allergy_1", "query": "SELECT min(age) ,  avg(age) ,  max(age) FROM Student", "query_toks": ["SELECT", "min", "(", "age", ")", ",", "avg", "(", "age", ")", ",", "max", "(", "age", ")", "FROM", "Student"], "query_toks_no_value": ["select", "min", "(", "age", ")", ",", "avg", "(", "age", ")", ",", "max", "(", "age", ")", "from", "student"], "question": "Show the minimum, average, and maximum age of all students.", "question_toks": ["Show", "the", "minimum", ",", "average", ",", "and", "maximum", "age", "of", "all", "students", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 8, false], null]], [5, [0, [0, 8, false], null]], [1, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "allergy_1", "query": "SELECT min(age) ,  avg(age) ,  max(age) FROM Student", "query_toks": ["SELECT", "min", "(", "age", ")", ",", "avg", "(", "age", ")", ",", "max", "(", "age", ")", "FROM", "Student"], "query_toks_no_value": ["select", "min", "(", "age", ")", ",", "avg", "(", "age", ")", ",", "max", "(", "age", ")", "from", "student"], "question": "What is the minimum, mean, and maximum age across all students?", "question_toks": ["What", "is", "the", "minimum", ",", "mean", ",", "and", "maximum", "age", "across", "all", "students", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 8, false], null]], [5, [0, [0, 8, false], null]], [1, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "allergy_1", "query": "SELECT major ,  count(*) FROM Student GROUP BY major", "query_toks": ["SELECT", "major", ",", "count", "(", "*", ")", "FROM", "Student", "GROUP", "BY", "major"], "query_toks_no_value": ["select", "major", ",", "count", "(", "*", ")", "from", "student", "group", "by", "major"], "question": "Show all majors and corresponding number of students.", "question_toks": ["Show", "all", "majors", "and", "corresponding", "number", "of", "students", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "allergy_1", "query": "SELECT major ,  count(*) FROM Student GROUP BY major", "query_toks": ["SELECT", "major", ",", "count", "(", "*", ")", "FROM", "Student", "GROUP", "BY", "major"], "query_toks_no_value": ["select", "major", ",", "count", "(", "*", ")", "from", "student", "group", "by", "major"], "question": "How many students are there for each major?", "question_toks": ["How", "many", "students", "are", "there", "for", "each", "major", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "allergy_1", "query": "SELECT age ,  count(*) FROM Student GROUP BY age", "query_toks": ["SELECT", "age", ",", "count", "(", "*", ")", "FROM", "Student", "GROUP", "BY", "age"], "query_toks_no_value": ["select", "age", ",", "count", "(", "*", ")", "from", "student", "group", "by", "age"], "question": "Show all ages and corresponding number of students.", "question_toks": ["Show", "all", "ages", "and", "corresponding", "number", "of", "students", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "allergy_1", "query": "SELECT age ,  count(*) FROM Student GROUP BY age", "query_toks": ["SELECT", "age", ",", "count", "(", "*", ")", "FROM", "Student", "GROUP", "BY", "age"], "query_toks_no_value": ["select", "age", ",", "count", "(", "*", ")", "from", "student", "group", "by", "age"], "question": "How old is each student and how many students are each age?", "question_toks": ["How", "old", "is", "each", "student", "and", "how", "many", "students", "are", "each", "age", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "allergy_1", "query": "SELECT avg(age) ,  sex FROM Student GROUP BY sex", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "sex", "FROM", "Student", "GROUP", "BY", "sex"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "sex", "from", "student", "group", "by", "sex"], "question": "Show the average age for male and female students.", "question_toks": ["Show", "the", "average", "age", "for", "male", "and", "female", "students", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "allergy_1", "query": "SELECT avg(age) ,  sex FROM Student GROUP BY sex", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "sex", "FROM", "Student", "GROUP", "BY", "sex"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "sex", "from", "student", "group", "by", "sex"], "question": "What are the average ages for male and female students?", "question_toks": ["What", "are", "the", "average", "ages", "for", "male", "and", "female", "students", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "allergy_1", "query": "SELECT city_code ,  count(*) FROM Student GROUP BY city_code", "query_toks": ["SELECT", "city_code", ",", "count", "(", "*", ")", "FROM", "Student", "GROUP", "BY", "city_code"], "query_toks_no_value": ["select", "city_code", ",", "count", "(", "*", ")", "from", "student", "group", "by", "city_code"], "question": "Show all cities and corresponding number of students.", "question_toks": ["Show", "all", "cities", "and", "corresponding", "number", "of", "students", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "allergy_1", "query": "SELECT city_code ,  count(*) FROM Student GROUP BY city_code", "query_toks": ["SELECT", "city_code", ",", "count", "(", "*", ")", "FROM", "Student", "GROUP", "BY", "city_code"], "query_toks_no_value": ["select", "city_code", ",", "count", "(", "*", ")", "from", "student", "group", "by", "city_code"], "question": "How many students live in each city?", "question_toks": ["How", "many", "students", "live", "in", "each", "city", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "allergy_1", "query": "SELECT advisor ,  count(*) FROM Student GROUP BY advisor", "query_toks": ["SELECT", "advisor", ",", "count", "(", "*", ")", "FROM", "Student", "GROUP", "BY", "advisor"], "query_toks_no_value": ["select", "advisor", ",", "count", "(", "*", ")", "from", "student", "group", "by", "advisor"], "question": "Show all advisors and corresponding number of students.", "question_toks": ["Show", "all", "advisors", "and", "corresponding", "number", "of", "students", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 11, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "allergy_1", "query": "SELECT advisor ,  count(*) FROM Student GROUP BY advisor", "query_toks": ["SELECT", "advisor", ",", "count", "(", "*", ")", "FROM", "Student", "GROUP", "BY", "advisor"], "query_toks_no_value": ["select", "advisor", ",", "count", "(", "*", ")", "from", "student", "group", "by", "advisor"], "question": "How many students does each advisor have?", "question_toks": ["How", "many", "students", "does", "each", "advisor", "have", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 11, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "allergy_1", "query": "SELECT Allergy ,  count(*) FROM Has_allergy GROUP BY Allergy", "query_toks": ["SELECT", "Allergy", ",", "count", "(", "*", ")", "FROM", "Has_allergy", "GROUP", "BY", "Allergy"], "query_toks_no_value": ["select", "allergy", ",", "count", "(", "*", ")", "from", "has_allergy", "group", "by", "allergy"], "question": "Show all allergies with number of students affected.", "question_toks": ["Show", "all", "allergies", "with", "number", "of", "students", "affected", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "allergy_1", "query": "SELECT Allergy ,  count(*) FROM Has_allergy GROUP BY Allergy", "query_toks": ["SELECT", "Allergy", ",", "count", "(", "*", ")", "FROM", "Has_allergy", "GROUP", "BY", "Allergy"], "query_toks_no_value": ["select", "allergy", ",", "count", "(", "*", ")", "from", "has_allergy", "group", "by", "allergy"], "question": "How many students have each different allergy?", "question_toks": ["How", "many", "students", "have", "each", "different", "allergy", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "allergy_1", "query": "SELECT T2.allergytype ,  count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy GROUP BY T2.allergytype", "query_toks": ["SELECT", "T2.allergytype", ",", "count", "(", "*", ")", "FROM", "Has_allergy", "AS", "T1", "JOIN", "Allergy_type", "AS", "T2", "ON", "T1.allergy", "=", "T2.allergy", "GROUP", "BY", "T2.allergytype"], "query_toks_no_value": ["select", "t2", ".", "allergytype", ",", "count", "(", "*", ")", "from", "has_allergy", "as", "t1", "join", "allergy_type", "as", "t2", "on", "t1", ".", "allergy", "=", "t2", ".", "allergy", "group", "by", "t2", ".", "allergytype"], "question": "Show all allergy type with number of students affected.", "question_toks": ["Show", "all", "allergy", "type", "with", "number", "of", "students", "affected", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "allergy_1", "query": "SELECT T2.allergytype ,  count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy GROUP BY T2.allergytype", "query_toks": ["SELECT", "T2.allergytype", ",", "count", "(", "*", ")", "FROM", "Has_allergy", "AS", "T1", "JOIN", "Allergy_type", "AS", "T2", "ON", "T1.allergy", "=", "T2.allergy", "GROUP", "BY", "T2.allergytype"], "query_toks_no_value": ["select", "t2", ".", "allergytype", ",", "count", "(", "*", ")", "from", "has_allergy", "as", "t1", "join", "allergy_type", "as", "t2", "on", "t1", ".", "allergy", "=", "t2", ".", "allergy", "group", "by", "t2", ".", "allergytype"], "question": "How many students are affected by each allergy type?", "question_toks": ["How", "many", "students", "are", "affected", "by", "each", "allergy", "type", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "allergy_1", "query": "SELECT lname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Milk\" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Cat\")", "query_toks": ["SELECT", "lname", ",", "age", "FROM", "Student", "WHERE", "StuID", "IN", "(", "SELECT", "StuID", "FROM", "Has_allergy", "WHERE", "Allergy", "=", "``", "Milk", "''", "INTERSECT", "SELECT", "StuID", "FROM", "Has_allergy", "WHERE", "Allergy", "=", "``", "Cat", "''", ")"], "query_toks_no_value": ["select", "lname", ",", "age", "from", "student", "where", "stuid", "in", "(", "select", "stuid", "from", "has_allergy", "where", "allergy", "=", "value", "intersect", "select", "stuid", "from", "has_allergy", "where", "allergy", "=", "value", ")"], "question": "Find the last name and age of the student who has allergy to both milk and cat.", "question_toks": ["Find", "the", "last", "name", "and", "age", "of", "the", "student", "who", "has", "allergy", "to", "both", "milk", "and", "cat", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 8, [0, [0, 5, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"Cat\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"Milk\"", null]]}, null]]}}, {"db_id": "allergy_1", "query": "SELECT lname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Milk\" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Cat\")", "query_toks": ["SELECT", "lname", ",", "age", "FROM", "Student", "WHERE", "StuID", "IN", "(", "SELECT", "StuID", "FROM", "Has_allergy", "WHERE", "Allergy", "=", "``", "Milk", "''", "INTERSECT", "SELECT", "StuID", "FROM", "Has_allergy", "WHERE", "Allergy", "=", "``", "Cat", "''", ")"], "query_toks_no_value": ["select", "lname", ",", "age", "from", "student", "where", "stuid", "in", "(", "select", "stuid", "from", "has_allergy", "where", "allergy", "=", "value", "intersect", "select", "stuid", "from", "has_allergy", "where", "allergy", "=", "value", ")"], "question": "What are the last names and ages of the students who are allergic to milk and cat?", "question_toks": ["What", "are", "the", "last", "names", "and", "ages", "of", "the", "students", "who", "are", "allergic", "to", "milk", "and", "cat", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 8, [0, [0, 5, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"Cat\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"Milk\"", null]]}, null]]}}, {"db_id": "allergy_1", "query": "SELECT T1.Allergy ,  T1.AllergyType FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy  =  T2.Allergy JOIN Student AS T3 ON T3.StuID  =  T2.StuID WHERE T3.Fname  =  \"Lisa\" ORDER BY T1.Allergy", "query_toks": ["SELECT", "T1.Allergy", ",", "T1.AllergyType", "FROM", "Allergy_type", "AS", "T1", "JOIN", "Has_allergy", "AS", "T2", "ON", "T1.Allergy", "=", "T2.Allergy", "JOIN", "Student", "AS", "T3", "ON", "T3.StuID", "=", "T2.StuID", "WHERE", "T3.Fname", "=", "``", "Lisa", "''", "ORDER", "BY", "T1.Allergy"], "query_toks_no_value": ["select", "t1", ".", "allergy", ",", "t1", ".", "allergytype", "from", "allergy_type", "as", "t1", "join", "has_allergy", "as", "t2", "on", "t1", ".", "allergy", "=", "t2", ".", "allergy", "join", "student", "as", "t3", "on", "t3", ".", "stuid", "=", "t2", ".", "stuid", "where", "t3", ".", "fname", "=", "value", "order", "by", "t1", ".", "allergy"], "question": "What are the allergies and their types that the student with first name Lisa has? And order the result by name of allergies.", "question_toks": ["What", "are", "the", "allergies", "and", "their", "types", "that", "the", "student", "with", "first", "name", "Lisa", "has", "?", "And", "order", "the", "result", "by", "name", "of", "allergies", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 4, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 1, false], null]]], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"Lisa\"", null]]}}, {"db_id": "allergy_1", "query": "SELECT T1.Allergy ,  T1.AllergyType FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy  =  T2.Allergy JOIN Student AS T3 ON T3.StuID  =  T2.StuID WHERE T3.Fname  =  \"Lisa\" ORDER BY T1.Allergy", "query_toks": ["SELECT", "T1.Allergy", ",", "T1.AllergyType", "FROM", "Allergy_type", "AS", "T1", "JOIN", "Has_allergy", "AS", "T2", "ON", "T1.Allergy", "=", "T2.Allergy", "JOIN", "Student", "AS", "T3", "ON", "T3.StuID", "=", "T2.StuID", "WHERE", "T3.Fname", "=", "``", "Lisa", "''", "ORDER", "BY", "T1.Allergy"], "query_toks_no_value": ["select", "t1", ".", "allergy", ",", "t1", ".", "allergytype", "from", "allergy_type", "as", "t1", "join", "has_allergy", "as", "t2", "on", "t1", ".", "allergy", "=", "t2", ".", "allergy", "join", "student", "as", "t3", "on", "t3", ".", "stuid", "=", "t2", ".", "stuid", "where", "t3", ".", "fname", "=", "value", "order", "by", "t1", ".", "allergy"], "question": "What are the allergies the girl named Lisa has? And what are the types of them? Order the result by allergy names.", "question_toks": ["What", "are", "the", "allergies", "the", "girl", "named", "Lisa", "has", "?", "And", "what", "are", "the", "types", "of", "them", "?", "Order", "the", "result", "by", "allergy", "names", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 4, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 1, false], null]]], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"Lisa\"", null]]}}, {"db_id": "allergy_1", "query": "SELECT fname ,  sex FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Milk\" EXCEPT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Cat\")", "query_toks": ["SELECT", "fname", ",", "sex", "FROM", "Student", "WHERE", "StuID", "IN", "(", "SELECT", "StuID", "FROM", "Has_allergy", "WHERE", "Allergy", "=", "``", "Milk", "''", "EXCEPT", "SELECT", "StuID", "FROM", "Has_allergy", "WHERE", "Allergy", "=", "``", "Cat", "''", ")"], "query_toks_no_value": ["select", "fname", ",", "sex", "from", "student", "where", "stuid", "in", "(", "select", "stuid", "from", "has_allergy", "where", "allergy", "=", "value", "except", "select", "stuid", "from", "has_allergy", "where", "allergy", "=", "value", ")"], "question": "Find the first name and gender of the student who has allergy to milk but not cat.", "question_toks": ["Find", "the", "first", "name", "and", "gender", "of", "the", "student", "who", "has", "allergy", "to", "milk", "but", "not", "cat", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 8, [0, [0, 5, false], null], {"except": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"Cat\"", null]]}, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"Milk\"", null]]}, null]]}}, {"db_id": "allergy_1", "query": "SELECT fname ,  sex FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Milk\" EXCEPT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Cat\")", "query_toks": ["SELECT", "fname", ",", "sex", "FROM", "Student", "WHERE", "StuID", "IN", "(", "SELECT", "StuID", "FROM", "Has_allergy", "WHERE", "Allergy", "=", "``", "Milk", "''", "EXCEPT", "SELECT", "StuID", "FROM", "Has_allergy", "WHERE", "Allergy", "=", "``", "Cat", "''", ")"], "query_toks_no_value": ["select", "fname", ",", "sex", "from", "student", "where", "stuid", "in", "(", "select", "stuid", "from", "has_allergy", "where", "allergy", "=", "value", "except", "select", "stuid", "from", "has_allergy", "where", "allergy", "=", "value", ")"], "question": "What are the first name and gender of the students who have allergy to milk but can put up with cats?", "question_toks": ["What", "are", "the", "first", "name", "and", "gender", "of", "the", "students", "who", "have", "allergy", "to", "milk", "but", "can", "put", "up", "with", "cats", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 8, [0, [0, 5, false], null], {"except": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"Cat\"", null]]}, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"Milk\"", null]]}, null]]}}, {"db_id": "allergy_1", "query": "SELECT fname ,  lname FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\")", "query_toks": ["SELECT", "fname", ",", "lname", "FROM", "Student", "WHERE", "StuID", "NOT", "IN", "(", "SELECT", "T1.StuID", "FROM", "Has_allergy", "AS", "T1", "JOIN", "Allergy_Type", "AS", "T2", "ON", "T1.Allergy", "=", "T2.Allergy", "WHERE", "T2.allergytype", "=", "``", "food", "''", ")"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "student", "where", "stuid", "not", "in", "(", "select", "t1", ".", "stuid", "from", "has_allergy", "as", "t1", "join", "allergy_type", "as", "t2", "on", "t1", ".", "allergy", "=", "t2", ".", "allergy", "where", "t2", ".", "allergytype", "=", "value", ")"], "question": "List the first and last name of the students who do not have any food type allergy.", "question_toks": ["List", "the", "first", "and", "last", "name", "of", "the", "students", "who", "do", "not", "have", "any", "food", "type", "allergy", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 5, false], null], {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"food\"", null]]}, null]]}}, {"db_id": "allergy_1", "query": "SELECT fname ,  lname FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\")", "query_toks": ["SELECT", "fname", ",", "lname", "FROM", "Student", "WHERE", "StuID", "NOT", "IN", "(", "SELECT", "T1.StuID", "FROM", "Has_allergy", "AS", "T1", "JOIN", "Allergy_Type", "AS", "T2", "ON", "T1.Allergy", "=", "T2.Allergy", "WHERE", "T2.allergytype", "=", "``", "food", "''", ")"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "student", "where", "stuid", "not", "in", "(", "select", "t1", ".", "stuid", "from", "has_allergy", "as", "t1", "join", "allergy_type", "as", "t2", "on", "t1", ".", "allergy", "=", "t2", ".", "allergy", "where", "t2", ".", "allergytype", "=", "value", ")"], "question": "What is the full name of each student who is not allergic to any type of food.", "question_toks": ["What", "is", "the", "full", "name", "of", "each", "student", "who", "is", "not", "allergic", "to", "any", "type", "of", "food", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 5, false], null], {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"food\"", null]]}, null]]}}, {"db_id": "allergy_1", "query": "SELECT DISTINCT T1.fname ,  T1.city_code FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid  =  T2.stuid WHERE T2.Allergy  =  \"Milk\" OR T2.Allergy  =  \"Cat\"", "query_toks": ["SELECT", "DISTINCT", "T1.fname", ",", "T1.city_code", "FROM", "Student", "AS", "T1", "JOIN", "Has_Allergy", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "WHERE", "T2.Allergy", "=", "``", "Milk", "''", "OR", "T2.Allergy", "=", "``", "Cat", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", ",", "t1", ".", "city_code", "from", "student", "as", "t1", "join", "has_allergy", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t2", ".", "allergy", "=", "value", "or", "t2", ".", "allergy", "=", "value"], "question": "Find the different first names and cities of the students who have allergy to milk or cat.", "question_toks": ["Find", "the", "different", "first", "names", "and", "cities", "of", "the", "students", "who", "have", "allergy", "to", "milk", "or", "cat", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 5, false], null], [0, 3, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 7, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"Milk\"", null], "or", [false, 2, [0, [0, 4, false], null], "\"Cat\"", null]]}}, {"db_id": "allergy_1", "query": "SELECT DISTINCT T1.fname ,  T1.city_code FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid  =  T2.stuid WHERE T2.Allergy  =  \"Milk\" OR T2.Allergy  =  \"Cat\"", "query_toks": ["SELECT", "DISTINCT", "T1.fname", ",", "T1.city_code", "FROM", "Student", "AS", "T1", "JOIN", "Has_Allergy", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "WHERE", "T2.Allergy", "=", "``", "Milk", "''", "OR", "T2.Allergy", "=", "``", "Cat", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", ",", "t1", ".", "city_code", "from", "student", "as", "t1", "join", "has_allergy", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t2", ".", "allergy", "=", "value", "or", "t2", ".", "allergy", "=", "value"], "question": "What are the distinct first names and cities of the students who have allergy either to milk or to cat?", "question_toks": ["What", "are", "the", "distinct", "first", "names", "and", "cities", "of", "the", "students", "who", "have", "allergy", "either", "to", "milk", "or", "to", "cat", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 5, false], null], [0, 3, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 7, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"Milk\"", null], "or", [false, 2, [0, [0, 4, false], null], "\"Cat\"", null]]}}, {"db_id": "allergy_1", "query": "SELECT fname ,  major FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Soy\")", "query_toks": ["SELECT", "fname", ",", "major", "FROM", "Student", "WHERE", "StuID", "NOT", "IN", "(", "SELECT", "StuID", "FROM", "Has_allergy", "WHERE", "Allergy", "=", "``", "Soy", "''", ")"], "query_toks_no_value": ["select", "fname", ",", "major", "from", "student", "where", "stuid", "not", "in", "(", "select", "stuid", "from", "has_allergy", "where", "allergy", "=", "value", ")"], "question": "Find the first name and major of the students who are not allegry to soy.", "question_toks": ["Find", "the", "first", "name", "and", "major", "of", "the", "students", "who", "are", "not", "allegry", "to", "soy", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 5, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"Soy\"", null]]}, null]]}}, {"db_id": "allergy_1", "query": "SELECT fname ,  major FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Soy\")", "query_toks": ["SELECT", "fname", ",", "major", "FROM", "Student", "WHERE", "StuID", "NOT", "IN", "(", "SELECT", "StuID", "FROM", "Has_allergy", "WHERE", "Allergy", "=", "``", "Soy", "''", ")"], "query_toks_no_value": ["select", "fname", ",", "major", "from", "student", "where", "stuid", "not", "in", "(", "select", "stuid", "from", "has_allergy", "where", "allergy", "=", "value", ")"], "question": "What are the first name and major of the students who are able to consume soy?", "question_toks": ["What", "are", "the", "first", "name", "and", "major", "of", "the", "students", "who", "are", "able", "to", "consume", "soy", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 5, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"Soy\"", null]]}, null]]}}, {"db_id": "store_1", "query": "SELECT billing_country ,  COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5;", "query_toks": ["SELECT", "billing_country", ",", "COUNT", "(", "*", ")", "FROM", "invoices", "GROUP", "BY", "billing_country", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "5", ";"], "query_toks_no_value": ["select", "billing_country", ",", "count", "(", "*", ")", "from", "invoices", "group", "by", "billing_country", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "A list of the top 5 countries by number of invoices. List country name and number of invoices.", "question_toks": ["A", "list", "of", "the", "top", "5", "countries", "by", "number", "of", "invoices", ".", "List", "country", "name", "and", "number", "of", "invoices", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 44, false]], "having": [], "intersect": null, "limit": 5, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 44, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "store_1", "query": "SELECT billing_country ,  COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5;", "query_toks": ["SELECT", "billing_country", ",", "COUNT", "(", "*", ")", "FROM", "invoices", "GROUP", "BY", "billing_country", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "5", ";"], "query_toks_no_value": ["select", "billing_country", ",", "count", "(", "*", ")", "from", "invoices", "group", "by", "billing_country", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the top 5 countries by number of invoices and how many do they have?", "question_toks": ["What", "are", "the", "top", "5", "countries", "by", "number", "of", "invoices", "and", "how", "many", "do", "they", "have", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 44, false]], "having": [], "intersect": null, "limit": 5, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 44, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "store_1", "query": "SELECT billing_country ,  SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8;", "query_toks": ["SELECT", "billing_country", ",", "SUM", "(", "total", ")", "FROM", "invoices", "GROUP", "BY", "billing_country", "ORDER", "BY", "SUM", "(", "total", ")", "DESC", "LIMIT", "8", ";"], "query_toks_no_value": ["select", "billing_country", ",", "sum", "(", "total", ")", "from", "invoices", "group", "by", "billing_country", "order", "by", "sum", "(", "total", ")", "desc", "limit", "value"], "question": "A list of the top 8 countries by gross/total invoice size. List country name and gross invoice size.", "question_toks": ["A", "list", "of", "the", "top", "8", "countries", "by", "gross/total", "invoice", "size", ".", "List", "country", "name", "and", "gross", "invoice", "size", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 44, false]], "having": [], "intersect": null, "limit": 8, "orderBy": ["desc", [[0, [4, 46, false], null]]], "select": [false, [[0, [0, [0, 44, false], null]], [4, [0, [0, 46, false], null]]]], "union": null, "where": []}}, {"db_id": "store_1", "query": "SELECT billing_country ,  SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8;", "query_toks": ["SELECT", "billing_country", ",", "SUM", "(", "total", ")", "FROM", "invoices", "GROUP", "BY", "billing_country", "ORDER", "BY", "SUM", "(", "total", ")", "DESC", "LIMIT", "8", ";"], "query_toks_no_value": ["select", "billing_country", ",", "sum", "(", "total", ")", "from", "invoices", "group", "by", "billing_country", "order", "by", "sum", "(", "total", ")", "desc", "limit", "value"], "question": "What are the names of the top 8 countries by total invoice size and what are those sizes?", "question_toks": ["What", "are", "the", "names", "of", "the", "top", "8", "countries", "by", "total", "invoice", "size", "and", "what", "are", "those", "sizes", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 44, false]], "having": [], "intersect": null, "limit": 8, "orderBy": ["desc", [[0, [4, 46, false], null]]], "select": [false, [[0, [0, [0, 44, false], null]], [4, [0, [0, 46, false], null]]]], "union": null, "where": []}}, {"db_id": "store_1", "query": "SELECT billing_country ,  AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10;", "query_toks": ["SELECT", "billing_country", ",", "AVG", "(", "total", ")", "FROM", "invoices", "GROUP", "BY", "billing_country", "ORDER", "BY", "AVG", "(", "total", ")", "DESC", "LIMIT", "10", ";"], "query_toks_no_value": ["select", "billing_country", ",", "avg", "(", "total", ")", "from", "invoices", "group", "by", "billing_country", "order", "by", "avg", "(", "total", ")", "desc", "limit", "value"], "question": "A list of the top 10 countries by average invoice size. List country name and average invoice size.", "question_toks": ["A", "list", "of", "the", "top", "10", "countries", "by", "average", "invoice", "size", ".", "List", "country", "name", "and", "average", "invoice", "size", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 44, false]], "having": [], "intersect": null, "limit": 10, "orderBy": ["desc", [[0, [5, 46, false], null]]], "select": [false, [[0, [0, [0, 44, false], null]], [5, [0, [0, 46, false], null]]]], "union": null, "where": []}}, {"db_id": "store_1", "query": "SELECT billing_country ,  AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10;", "query_toks": ["SELECT", "billing_country", ",", "AVG", "(", "total", ")", "FROM", "invoices", "GROUP", "BY", "billing_country", "ORDER", "BY", "AVG", "(", "total", ")", "DESC", "LIMIT", "10", ";"], "query_toks_no_value": ["select", "billing_country", ",", "avg", "(", "total", ")", "from", "invoices", "group", "by", "billing_country", "order", "by", "avg", "(", "total", ")", "desc", "limit", "value"], "question": "What are the names of the countries and average invoice size of the top countries by size?", "question_toks": ["What", "are", "the", "names", "of", "the", "countries", "and", "average", "invoice", "size", "of", "the", "top", "countries", "by", "size", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 44, false]], "having": [], "intersect": null, "limit": 10, "orderBy": ["desc", [[0, [5, 46, false], null]]], "select": [false, [[0, [0, [0, 44, false], null]], [5, [0, [0, 46, false], null]]]], "union": null, "where": []}}, {"db_id": "store_1", "query": "SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY T2.invoice_date DESC LIMIT 5;", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", "FROM", "customers", "AS", "T1", "JOIN", "invoices", "AS", "T2", "ON", "T2.customer_id", "=", "T1.id", "ORDER", "BY", "T2.invoice_date", "DESC", "LIMIT", "5", ";"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", "from", "customers", "as", "t1", "join", "invoices", "as", "t2", "on", "t2", ".", "customer_id", "=", "t1", ".", "id", "order", "by", "t2", ".", "invoice_date", "desc", "limit", "value"], "question": "Find out 5 customers who most recently purchased something. List customers' first and last name.", "question_toks": ["Find", "out", "5", "customers", "who", "most", "recently", "purchased", "something", ".", "List", "customers", "'", "first", "and", "last", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 39, false], null], [0, 23, false], null]], "table_units": [["table_unit", 4], ["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": 5, "orderBy": ["desc", [[0, [0, 40, false], null]]], "select": [false, [[0, [0, [0, 24, false], null]], [0, [0, [0, 25, false], null]]]], "union": null, "where": []}}, {"db_id": "store_1", "query": "SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY T2.invoice_date DESC LIMIT 5;", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", "FROM", "customers", "AS", "T1", "JOIN", "invoices", "AS", "T2", "ON", "T2.customer_id", "=", "T1.id", "ORDER", "BY", "T2.invoice_date", "DESC", "LIMIT", "5", ";"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", "from", "customers", "as", "t1", "join", "invoices", "as", "t2", "on", "t2", ".", "customer_id", "=", "t1", ".", "id", "order", "by", "t2", ".", "invoice_date", "desc", "limit", "value"], "question": "What are the first and last names of the 5 customers who purchased something most recently?", "question_toks": ["What", "are", "the", "first", "and", "last", "names", "of", "the", "5", "customers", "who", "purchased", "something", "most", "recently", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 39, false], null], [0, 23, false], null]], "table_units": [["table_unit", 4], ["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": 5, "orderBy": ["desc", [[0, [0, 40, false], null]]], "select": [false, [[0, [0, [0, 24, false], null]], [0, [0, [0, 25, false], null]]]], "union": null, "where": []}}, {"db_id": "store_1", "query": "SELECT T1.first_name ,  T1.last_name ,  COUNT(*) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 10;", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", ",", "COUNT", "(", "*", ")", "FROM", "customers", "AS", "T1", "JOIN", "invoices", "AS", "T2", "ON", "T2.customer_id", "=", "T1.id", "GROUP", "BY", "T1.id", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "10", ";"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", ",", "count", "(", "*", ")", "from", "customers", "as", "t1", "join", "invoices", "as", "t2", "on", "t2", ".", "customer_id", "=", "t1", ".", "id", "group", "by", "t1", ".", "id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find out the top 10 customers by total number of orders. List customers' first and last name and the number of total orders.", "question_toks": ["Find", "out", "the", "top", "10", "customers", "by", "total", "number", "of", "orders", ".", "List", "customers", "'", "first", "and", "last", "name", "and", "the", "number", "of", "total", "orders", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 39, false], null], [0, 23, false], null]], "table_units": [["table_unit", 4], ["table_unit", 6]]}, "groupBy": [[0, 23, false]], "having": [], "intersect": null, "limit": 10, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 24, false], null]], [0, [0, [0, 25, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "store_1", "query": "SELECT T1.first_name ,  T1.last_name ,  COUNT(*) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 10;", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", ",", "COUNT", "(", "*", ")", "FROM", "customers", "AS", "T1", "JOIN", "invoices", "AS", "T2", "ON", "T2.customer_id", "=", "T1.id", "GROUP", "BY", "T1.id", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "10", ";"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", ",", "count", "(", "*", ")", "from", "customers", "as", "t1", "join", "invoices", "as", "t2", "on", "t2", ".", "customer_id", "=", "t1", ".", "id", "group", "by", "t1", ".", "id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the top 10 customers' first and last names by total number of orders and how many orders did they make?", "question_toks": ["What", "are", "the", "top", "10", "customers", "'", "first", "and", "last", "names", "by", "total", "number", "of", "orders", "and", "how", "many", "orders", "did", "they", "make", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 39, false], null], [0, 23, false], null]], "table_units": [["table_unit", 4], ["table_unit", 6]]}, "groupBy": [[0, 23, false]], "having": [], "intersect": null, "limit": 10, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 24, false], null]], [0, [0, [0, 25, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "store_1", "query": "SELECT T1.first_name ,  T1.last_name ,  SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10;", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", ",", "SUM", "(", "T2.total", ")", "FROM", "customers", "AS", "T1", "JOIN", "invoices", "AS", "T2", "ON", "T2.customer_id", "=", "T1.id", "GROUP", "BY", "T1.id", "ORDER", "BY", "SUM", "(", "T2.total", ")", "DESC", "LIMIT", "10", ";"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", ",", "sum", "(", "t2", ".", "total", ")", "from", "customers", "as", "t1", "join", "invoices", "as", "t2", "on", "t2", ".", "customer_id", "=", "t1", ".", "id", "group", "by", "t1", ".", "id", "order", "by", "sum", "(", "t2", ".", "total", ")", "desc", "limit", "value"], "question": "List the top 10 customers by total gross sales. List customers' first and last name and total gross sales.", "question_toks": ["List", "the", "top", "10", "customers", "by", "total", "gross", "sales", ".", "List", "customers", "'", "first", "and", "last", "name", "and", "total", "gross", "sales", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 39, false], null], [0, 23, false], null]], "table_units": [["table_unit", 4], ["table_unit", 6]]}, "groupBy": [[0, 23, false]], "having": [], "intersect": null, "limit": 10, "orderBy": ["desc", [[0, [4, 46, false], null]]], "select": [false, [[0, [0, [0, 24, false], null]], [0, [0, [0, 25, false], null]], [4, [0, [0, 46, false], null]]]], "union": null, "where": []}}, {"db_id": "store_1", "query": "SELECT T1.first_name ,  T1.last_name ,  SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10;", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", ",", "SUM", "(", "T2.total", ")", "FROM", "customers", "AS", "T1", "JOIN", "invoices", "AS", "T2", "ON", "T2.customer_id", "=", "T1.id", "GROUP", "BY", "T1.id", "ORDER", "BY", "SUM", "(", "T2.total", ")", "DESC", "LIMIT", "10", ";"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", ",", "sum", "(", "t2", ".", "total", ")", "from", "customers", "as", "t1", "join", "invoices", "as", "t2", "on", "t2", ".", "customer_id", "=", "t1", ".", "id", "group", "by", "t1", ".", "id", "order", "by", "sum", "(", "t2", ".", "total", ")", "desc", "limit", "value"], "question": "What are the top 10 customers' first and last names with the highest gross sales, and also what are the sales?", "question_toks": ["What", "are", "the", "top", "10", "customers", "'", "first", "and", "last", "names", "with", "the", "highest", "gross", "sales", ",", "and", "also", "what", "are", "the", "sales", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 39, false], null], [0, 23, false], null]], "table_units": [["table_unit", 4], ["table_unit", 6]]}, "groupBy": [[0, 23, false]], "having": [], "intersect": null, "limit": 10, "orderBy": ["desc", [[0, [4, 46, false], null]]], "select": [false, [[0, [0, [0, 24, false], null]], [0, [0, [0, 25, false], null]], [4, [0, [0, 46, false], null]]]], "union": null, "where": []}}, {"db_id": "store_1", "query": "SELECT T1.name ,  COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5;", "query_toks": ["SELECT", "T1.name", ",", "COUNT", "(", "*", ")", "FROM", "genres", "AS", "T1", "JOIN", "tracks", "AS", "T2", "ON", "T2.genre_id", "=", "T1.id", "GROUP", "BY", "T1.id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "5", ";"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "count", "(", "*", ")", "from", "genres", "as", "t1", "join", "tracks", "as", "t2", "on", "t2", ".", "genre_id", "=", "t1", ".", "id", "group", "by", "t1", ".", "id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "List the top 5 genres by number of tracks. List genres name and total tracks.", "question_toks": ["List", "the", "top", "5", "genres", "by", "number", "of", "tracks", ".", "List", "genres", "name", "and", "total", "tracks", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 53, false], null], [0, 36, false], null]], "table_units": [["table_unit", 5], ["table_unit", 8]]}, "groupBy": [[0, 36, false]], "having": [], "intersect": null, "limit": 5, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 37, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "store_1", "query": "SELECT T1.name ,  COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5;", "query_toks": ["SELECT", "T1.name", ",", "COUNT", "(", "*", ")", "FROM", "genres", "AS", "T1", "JOIN", "tracks", "AS", "T2", "ON", "T2.genre_id", "=", "T1.id", "GROUP", "BY", "T1.id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "5", ";"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "count", "(", "*", ")", "from", "genres", "as", "t1", "join", "tracks", "as", "t2", "on", "t2", ".", "genre_id", "=", "t1", ".", "id", "group", "by", "t1", ".", "id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "How many tracks does each genre have and what are the names of the top 5?", "question_toks": ["How", "many", "tracks", "does", "each", "genre", "have", "and", "what", "are", "the", "names", "of", "the", "top", "5", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 53, false], null], [0, 36, false], null]], "table_units": [["table_unit", 5], ["table_unit", 8]]}, "groupBy": [[0, 36, false]], "having": [], "intersect": null, "limit": 5, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 37, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "store_1", "query": "SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY total LIMIT 10;", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", "FROM", "customers", "AS", "T1", "JOIN", "invoices", "AS", "T2", "ON", "T2.customer_id", "=", "T1.id", "ORDER", "BY", "total", "LIMIT", "10", ";"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", "from", "customers", "as", "t1", "join", "invoices", "as", "t2", "on", "t2", ".", "customer_id", "=", "t1", ".", "id", "order", "by", "total", "limit", "value"], "question": "List the customers first and last name of 10 least expensive invoices.", "question_toks": ["List", "the", "customers", "first", "and", "last", "name", "of", "10", "least", "expensive", "invoices", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 39, false], null], [0, 23, false], null]], "table_units": [["table_unit", 4], ["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": 10, "orderBy": ["asc", [[0, [0, 46, false], null]]], "select": [false, [[0, [0, [0, 24, false], null]], [0, [0, [0, 25, false], null]]]], "union": null, "where": []}}, {"db_id": "store_1", "query": "SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY total LIMIT 10;", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", "FROM", "customers", "AS", "T1", "JOIN", "invoices", "AS", "T2", "ON", "T2.customer_id", "=", "T1.id", "ORDER", "BY", "total", "LIMIT", "10", ";"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", "from", "customers", "as", "t1", "join", "invoices", "as", "t2", "on", "t2", ".", "customer_id", "=", "t1", ".", "id", "order", "by", "total", "limit", "value"], "question": "What are the first and last names of the customers with the 10 cheapest invoices?", "question_toks": ["What", "are", "the", "first", "and", "last", "names", "of", "the", "customers", "with", "the", "10", "cheapest", "invoices", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 39, false], null], [0, 23, false], null]], "table_units": [["table_unit", 4], ["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": 10, "orderBy": ["asc", [[0, [0, 46, false], null]]], "select": [false, [[0, [0, [0, 24, false], null]], [0, [0, [0, 25, false], null]]]], "union": null, "where": []}}, {"db_id": "store_1", "query": "SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  \"USA\" GROUP BY billing_state;", "query_toks": ["SELECT", "billing_state", ",", "COUNT", "(", "*", ")", "FROM", "invoices", "WHERE", "billing_country", "=", "``", "USA", "''", "GROUP", "BY", "billing_state", ";"], "query_toks_no_value": ["select", "billing_state", ",", "count", "(", "*", ")", "from", "invoices", "where", "billing_country", "=", "value", "group", "by", "billing_state"], "question": "List the number of invoices from the US, grouped by state.", "question_toks": ["List", "the", "number", "of", "invoices", "from", "the", "US", ",", "grouped", "by", "state", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 43, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 43, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 44, false], null], "\"USA\"", null]]}}, {"db_id": "store_1", "query": "SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  \"USA\" GROUP BY billing_state;", "query_toks": ["SELECT", "billing_state", ",", "COUNT", "(", "*", ")", "FROM", "invoices", "WHERE", "billing_country", "=", "``", "USA", "''", "GROUP", "BY", "billing_state", ";"], "query_toks_no_value": ["select", "billing_state", ",", "count", "(", "*", ")", "from", "invoices", "where", "billing_country", "=", "value", "group", "by", "billing_state"], "question": "How many invoices were billed from each state?", "question_toks": ["How", "many", "invoices", "were", "billed", "from", "each", "state", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 43, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 43, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 44, false], null], "\"USA\"", null]]}}, {"db_id": "store_1", "query": "SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  \"USA\" GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1;", "query_toks": ["SELECT", "billing_state", ",", "COUNT", "(", "*", ")", "FROM", "invoices", "WHERE", "billing_country", "=", "``", "USA", "''", "GROUP", "BY", "billing_state", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "billing_state", ",", "count", "(", "*", ")", "from", "invoices", "where", "billing_country", "=", "value", "group", "by", "billing_state", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "List the state in the US with the most invoices.", "question_toks": ["List", "the", "state", "in", "the", "US", "with", "the", "most", "invoices", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 43, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 43, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 44, false], null], "\"USA\"", null]]}}, {"db_id": "store_1", "query": "SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  \"USA\" GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1;", "query_toks": ["SELECT", "billing_state", ",", "COUNT", "(", "*", ")", "FROM", "invoices", "WHERE", "billing_country", "=", "``", "USA", "''", "GROUP", "BY", "billing_state", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "billing_state", ",", "count", "(", "*", ")", "from", "invoices", "where", "billing_country", "=", "value", "group", "by", "billing_state", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the states with the most invoices?", "question_toks": ["What", "are", "the", "states", "with", "the", "most", "invoices", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 43, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 43, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 44, false], null], "\"USA\"", null]]}}, {"db_id": "store_1", "query": "SELECT billing_state ,  COUNT(*) ,  SUM(total) FROM invoices WHERE billing_state  =  \"CA\";", "query_toks": ["SELECT", "billing_state", ",", "COUNT", "(", "*", ")", ",", "SUM", "(", "total", ")", "FROM", "invoices", "WHERE", "billing_state", "=", "``", "CA", "''", ";"], "query_toks_no_value": ["select", "billing_state", ",", "count", "(", "*", ")", ",", "sum", "(", "total", ")", "from", "invoices", "where", "billing_state", "=", "value"], "question": "List the number of invoices and the invoice total from California.", "question_toks": ["List", "the", "number", "of", "invoices", "and", "the", "invoice", "total", "from", "California", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 43, false], null]], [3, [0, [0, 0, false], null]], [4, [0, [0, 46, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 43, false], null], "\"CA\"", null]]}}, {"db_id": "store_1", "query": "SELECT billing_state ,  COUNT(*) ,  SUM(total) FROM invoices WHERE billing_state  =  \"CA\";", "query_toks": ["SELECT", "billing_state", ",", "COUNT", "(", "*", ")", ",", "SUM", "(", "total", ")", "FROM", "invoices", "WHERE", "billing_state", "=", "``", "CA", "''", ";"], "query_toks_no_value": ["select", "billing_state", ",", "count", "(", "*", ")", ",", "sum", "(", "total", ")", "from", "invoices", "where", "billing_state", "=", "value"], "question": "What is the number of invoices and total money billed in them from CA?", "question_toks": ["What", "is", "the", "number", "of", "invoices", "and", "total", "money", "billed", "in", "them", "from", "CA", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 43, false], null]], [3, [0, [0, 0, false], null]], [4, [0, [0, 46, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 43, false], null], "\"CA\"", null]]}}, {"db_id": "store_1", "query": "SELECT email ,  phone FROM customers WHERE first_name = \"Astrid\" AND last_name = \"Gruber\";", "query_toks": ["SELECT", "email", ",", "phone", "FROM", "customers", "WHERE", "first_name", "=", "``", "Astrid", "''", "AND", "last_name", "=", "``", "Gruber", "''", ";"], "query_toks_no_value": ["select", "email", ",", "phone", "from", "customers", "where", "first_name", "=", "value", "and", "last_name", "=", "value"], "question": "What is Astrid Gruber's email and phone number?", "question_toks": ["What", "is", "Astrid", "Gruber", "'s", "email", "and", "phone", "number", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 32, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"Astrid\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"Gruber\"", null]]}}, {"db_id": "store_1", "query": "SELECT email ,  phone FROM customers WHERE first_name = \"Astrid\" AND last_name = \"Gruber\";", "query_toks": ["SELECT", "email", ",", "phone", "FROM", "customers", "WHERE", "first_name", "=", "``", "Astrid", "''", "AND", "last_name", "=", "``", "Gruber", "''", ";"], "query_toks_no_value": ["select", "email", ",", "phone", "from", "customers", "where", "first_name", "=", "value", "and", "last_name", "=", "value"], "question": "What is the email and phone number of Astrid Gruber the customer?", "question_toks": ["What", "is", "the", "email", "and", "phone", "number", "of", "Astrid", "Gruber", "the", "customer", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 32, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"Astrid\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"Gruber\"", null]]}}, {"db_id": "store_1", "query": "SELECT title ,  phone ,  hire_date FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";", "query_toks": ["SELECT", "title", ",", "phone", ",", "hire_date", "FROM", "employees", "WHERE", "first_name", "=", "``", "Nancy", "''", "AND", "last_name", "=", "``", "Edwards", "''", ";"], "query_toks_no_value": ["select", "title", ",", "phone", ",", "hire_date", "from", "employees", "where", "first_name", "=", "value", "and", "last_name", "=", "value"], "question": "What is the title, phone and hire date of Nancy Edwards?", "question_toks": ["What", "is", "the", "title", ",", "phone", "and", "hire", "date", "of", "Nancy", "Edwards", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 20, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Nancy\"", null], "and", [false, 2, [0, [0, 9, false], null], "\"Edwards\"", null]]}}, {"db_id": "store_1", "query": "SELECT title ,  phone ,  hire_date FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";", "query_toks": ["SELECT", "title", ",", "phone", ",", "hire_date", "FROM", "employees", "WHERE", "first_name", "=", "``", "Nancy", "''", "AND", "last_name", "=", "``", "Edwards", "''", ";"], "query_toks_no_value": ["select", "title", ",", "phone", ",", "hire_date", "from", "employees", "where", "first_name", "=", "value", "and", "last_name", "=", "value"], "question": "What is the title, phone number and hire date for the employee named Nancy Edwards?", "question_toks": ["What", "is", "the", "title", ",", "phone", "number", "and", "hire", "date", "for", "the", "employee", "named", "Nancy", "Edwards", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 20, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Nancy\"", null], "and", [false, 2, [0, [0, 9, false], null], "\"Edwards\"", null]]}}, {"db_id": "store_1", "query": "SELECT T2.first_name , T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.reports_to WHERE T1.first_name = \"Nancy\" AND T1.last_name = \"Edwards\";", "query_toks": ["SELECT", "T2.first_name", ",", "T2.last_name", "FROM", "employees", "AS", "T1", "JOIN", "employees", "AS", "T2", "ON", "T1.id", "=", "T2.reports_to", "WHERE", "T1.first_name", "=", "``", "Nancy", "''", "AND", "T1.last_name", "=", "``", "Edwards", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "first_name", ",", "t2", ".", "last_name", "from", "employees", "as", "t1", "join", "employees", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "reports_to", "where", "t1", ".", "first_name", "=", "value", "and", "t1", ".", "last_name", "=", "value"], "question": "find the full name of employees who report to Nancy Edwards?", "question_toks": ["find", "the", "full", "name", "of", "employees", "who", "report", "to", "Nancy", "Edwards", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 12, false], null]], "table_units": [["table_unit", 3], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Nancy\"", null], "and", [false, 2, [0, [0, 9, false], null], "\"Edwards\"", null]]}}, {"db_id": "store_1", "query": "SELECT T2.first_name , T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.reports_to WHERE T1.first_name = \"Nancy\" AND T1.last_name = \"Edwards\";", "query_toks": ["SELECT", "T2.first_name", ",", "T2.last_name", "FROM", "employees", "AS", "T1", "JOIN", "employees", "AS", "T2", "ON", "T1.id", "=", "T2.reports_to", "WHERE", "T1.first_name", "=", "``", "Nancy", "''", "AND", "T1.last_name", "=", "``", "Edwards", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "first_name", ",", "t2", ".", "last_name", "from", "employees", "as", "t1", "join", "employees", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "reports_to", "where", "t1", ".", "first_name", "=", "value", "and", "t1", ".", "last_name", "=", "value"], "question": "What is the first and last name of the employee who reports to Nancy Edwards?", "question_toks": ["What", "is", "the", "first", "and", "last", "name", "of", "the", "employee", "who", "reports", "to", "Nancy", "Edwards", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 12, false], null]], "table_units": [["table_unit", 3], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Nancy\"", null], "and", [false, 2, [0, [0, 9, false], null], "\"Edwards\"", null]]}}, {"db_id": "store_1", "query": "SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id  =  T2.support_rep_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", "FROM", "employees", "AS", "T1", "JOIN", "customers", "AS", "T2", "ON", "T1.id", "=", "T2.support_rep_id", "GROUP", "BY", "T1.id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", "from", "employees", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "support_rep_id", "group", "by", "t1", ".", "id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the full name of employee who supported the most number of customers.", "question_toks": ["Find", "the", "full", "name", "of", "employee", "who", "supported", "the", "most", "number", "of", "customers", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 35, false], null]], "table_units": [["table_unit", 3], ["table_unit", 4]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "store_1", "query": "SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id  =  T2.support_rep_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", "FROM", "employees", "AS", "T1", "JOIN", "customers", "AS", "T2", "ON", "T1.id", "=", "T2.support_rep_id", "GROUP", "BY", "T1.id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", "from", "employees", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "support_rep_id", "group", "by", "t1", ".", "id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the full name of the employee who has the most customers?", "question_toks": ["What", "is", "the", "full", "name", "of", "the", "employee", "who", "has", "the", "most", "customers", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 35, false], null]], "table_units": [["table_unit", 3], ["table_unit", 4]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "store_1", "query": "SELECT first_name , last_name FROM employees ORDER BY birth_date DESC LIMIT 1;", "query_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "employees", "ORDER", "BY", "birth_date", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "first_name", ",", "last_name", "from", "employees", "order", "by", "birth_date", "desc", "limit", "value"], "question": "Who is the youngest employee in the company? List employee's first and last name.", "question_toks": ["Who", "is", "the", "youngest", "employee", "in", "the", "company", "?", "List", "employee", "'s", "first", "and", "last", "name", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 13, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "store_1", "query": "SELECT first_name , last_name FROM employees ORDER BY birth_date DESC LIMIT 1;", "query_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "employees", "ORDER", "BY", "birth_date", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "first_name", ",", "last_name", "from", "employees", "order", "by", "birth_date", "desc", "limit", "value"], "question": "What si the youngest employee's first and last name?", "question_toks": ["What", "si", "the", "youngest", "employee", "'s", "first", "and", "last", "name", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 13, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "store_1", "query": "SELECT first_name , last_name FROM employees ORDER BY hire_date ASC LIMIT 10;", "query_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "employees", "ORDER", "BY", "hire_date", "ASC", "LIMIT", "10", ";"], "query_toks_no_value": ["select", "first_name", ",", "last_name", "from", "employees", "order", "by", "hire_date", "asc", "limit", "value"], "question": "List top 10 employee work longest in the company. List employee's first and last name.", "question_toks": ["List", "top", "10", "employee", "work", "longest", "in", "the", "company", ".", "List", "employee", "'s", "first", "and", "last", "name", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": 10, "orderBy": ["asc", [[0, [0, 14, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "store_1", "query": "SELECT first_name , last_name FROM employees ORDER BY hire_date ASC LIMIT 10;", "query_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "employees", "ORDER", "BY", "hire_date", "ASC", "LIMIT", "10", ";"], "query_toks_no_value": ["select", "first_name", ",", "last_name", "from", "employees", "order", "by", "hire_date", "asc", "limit", "value"], "question": "What are the first and last names of the top 10 longest-serving employees?", "question_toks": ["What", "are", "the", "first", "and", "last", "names", "of", "the", "top", "10", "longest-serving", "employees", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": 10, "orderBy": ["asc", [[0, [0, 14, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "store_1", "query": "SELECT count(*) ,  city FROM employees WHERE title  =  'IT Staff' GROUP BY city", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "city", "FROM", "employees", "WHERE", "title", "=", "'IT", "Staff", "'", "GROUP", "BY", "city"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "city", "from", "employees", "where", "title", "=", "value", "group", "by", "city"], "question": "Find the number of employees whose title is IT Staff from each city?", "question_toks": ["Find", "the", "number", "of", "employees", "whose", "title", "is", "IT", "Staff", "from", "each", "city", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 16, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"IT Staff\"", null]]}}, {"db_id": "store_1", "query": "SELECT count(*) ,  city FROM employees WHERE title  =  'IT Staff' GROUP BY city", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "city", "FROM", "employees", "WHERE", "title", "=", "'IT", "Staff", "'", "GROUP", "BY", "city"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "city", "from", "employees", "where", "title", "=", "value", "group", "by", "city"], "question": "How many employees who are IT staff are from each city?", "question_toks": ["How", "many", "employees", "who", "are", "IT", "staff", "are", "from", "each", "city", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 16, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"IT Staff\"", null]]}}, {"db_id": "store_1", "query": "SELECT T2.first_name , T2.last_name ,  count(T1.reports_to) FROM employees AS T1 JOIN employees AS T2 ON T1.reports_to = T2.id GROUP BY T1.reports_to ORDER BY count(T1.reports_to) DESC LIMIT 1;", "query_toks": ["SELECT", "T2.first_name", ",", "T2.last_name", ",", "count", "(", "T1.reports_to", ")", "FROM", "employees", "AS", "T1", "JOIN", "employees", "AS", "T2", "ON", "T1.reports_to", "=", "T2.id", "GROUP", "BY", "T1.reports_to", "ORDER", "BY", "count", "(", "T1.reports_to", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t2", ".", "first_name", ",", "t2", ".", "last_name", ",", "count", "(", "t1", ".", "reports_to", ")", "from", "employees", "as", "t1", "join", "employees", "as", "t2", "on", "t1", ".", "reports_to", "=", "t2", ".", "id", "group", "by", "t1", ".", "reports_to", "order", "by", "count", "(", "t1", ".", "reports_to", ")", "desc", "limit", "value"], "question": "Which employee manage most number of peoples? List employee's first and last name, and number of people report to that employee.", "question_toks": ["Which", "employee", "manage", "most", "number", "of", "peoples", "?", "List", "employee", "'s", "first", "and", "last", "name", ",", "and", "number", "of", "people", "report", "to", "that", "employee", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 12, false], null], [0, 8, false], null]], "table_units": [["table_unit", 3], ["table_unit", 3]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 12, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 9, false], null]], [3, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "store_1", "query": "SELECT T2.first_name , T2.last_name ,  count(T1.reports_to) FROM employees AS T1 JOIN employees AS T2 ON T1.reports_to = T2.id GROUP BY T1.reports_to ORDER BY count(T1.reports_to) DESC LIMIT 1;", "query_toks": ["SELECT", "T2.first_name", ",", "T2.last_name", ",", "count", "(", "T1.reports_to", ")", "FROM", "employees", "AS", "T1", "JOIN", "employees", "AS", "T2", "ON", "T1.reports_to", "=", "T2.id", "GROUP", "BY", "T1.reports_to", "ORDER", "BY", "count", "(", "T1.reports_to", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t2", ".", "first_name", ",", "t2", ".", "last_name", ",", "count", "(", "t1", ".", "reports_to", ")", "from", "employees", "as", "t1", "join", "employees", "as", "t2", "on", "t1", ".", "reports_to", "=", "t2", ".", "id", "group", "by", "t1", ".", "reports_to", "order", "by", "count", "(", "t1", ".", "reports_to", ")", "desc", "limit", "value"], "question": "What are the first and last names of all the employees and how many people report to them?", "question_toks": ["What", "are", "the", "first", "and", "last", "names", "of", "all", "the", "employees", "and", "how", "many", "people", "report", "to", "them", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 12, false], null], [0, 8, false], null]], "table_units": [["table_unit", 3], ["table_unit", 3]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 12, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 9, false], null]], [3, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "store_1", "query": "SELECT count(*) ,  T1.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id GROUP BY T1.name;", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.name", "FROM", "genres", "AS", "T1", "JOIN", "tracks", "AS", "T2", "ON", "T1.id", "=", "T2.genre_id", "GROUP", "BY", "T1.name", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "name", "from", "genres", "as", "t1", "join", "tracks", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "genre_id", "group", "by", "t1", ".", "name"], "question": "Find number of tracks in each genre?", "question_toks": ["Find", "number", "of", "tracks", "in", "each", "genre", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 36, false], null], [0, 53, false], null]], "table_units": [["table_unit", 5], ["table_unit", 8]]}, "groupBy": [[0, 37, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 37, false], null]]]], "union": null, "where": []}}, {"db_id": "store_1", "query": "SELECT count(*) ,  T1.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id GROUP BY T1.name;", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.name", "FROM", "genres", "AS", "T1", "JOIN", "tracks", "AS", "T2", "ON", "T1.id", "=", "T2.genre_id", "GROUP", "BY", "T1.name", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "name", "from", "genres", "as", "t1", "join", "tracks", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "genre_id", "group", "by", "t1", ".", "name"], "question": "How many tracks are in each genre?", "question_toks": ["How", "many", "tracks", "are", "in", "each", "genre", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 36, false], null], [0, 53, false], null]], "table_units": [["table_unit", 5], ["table_unit", 8]]}, "groupBy": [[0, 37, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 37, false], null]]]], "union": null, "where": []}}, {"db_id": "journal_committee", "query": "SELECT Name ,  Age FROM editor", "query_toks": ["SELECT", "Name", ",", "Age", "FROM", "editor"], "query_toks_no_value": ["select", "name", ",", "age", "from", "editor"], "question": "What are the names and ages of editors?", "question_toks": ["What", "are", "the", "names", "and", "ages", "of", "editors", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "journal_committee", "query": "SELECT Age ,  COUNT(*) FROM editor GROUP BY Age", "query_toks": ["SELECT", "Age", ",", "COUNT", "(", "*", ")", "FROM", "editor", "GROUP", "BY", "Age"], "query_toks_no_value": ["select", "age", ",", "count", "(", "*", ")", "from", "editor", "group", "by", "age"], "question": "What are the different ages of editors? Show each age along with the number of editors of that age.", "question_toks": ["What", "are", "the", "different", "ages", "of", "editors", "?", "Show", "each", "age", "along", "with", "the", "number", "of", "editors", "of", "that", "age", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "journal_committee", "query": "SELECT T2.Name ,  T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID", "query_toks": ["SELECT", "T2.Name", ",", "T3.Theme", "FROM", "journal_committee", "AS", "T1", "JOIN", "editor", "AS", "T2", "ON", "T1.Editor_ID", "=", "T2.Editor_ID", "JOIN", "journal", "AS", "T3", "ON", "T1.Journal_ID", "=", "T3.Journal_ID"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t3", ".", "theme", "from", "journal_committee", "as", "t1", "join", "editor", "as", "t2", "on", "t1", ".", "editor_id", "=", "t2", ".", "editor_id", "join", "journal", "as", "t3", "on", "t1", ".", "journal_id", "=", "t3", ".", "journal_id"], "question": "Show the names of editors and the theme of journals for which they serve on committees.", "question_toks": ["Show", "the", "names", "of", "editors", "and", "the", "theme", "of", "journals", "for", "which", "they", "serve", "on", "committees", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 5, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "journal_committee", "query": "SELECT T2.Name ,  T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID", "query_toks": ["SELECT", "T2.Name", ",", "T3.Theme", "FROM", "journal_committee", "AS", "T1", "JOIN", "editor", "AS", "T2", "ON", "T1.Editor_ID", "=", "T2.Editor_ID", "JOIN", "journal", "AS", "T3", "ON", "T1.Journal_ID", "=", "T3.Journal_ID"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t3", ".", "theme", "from", "journal_committee", "as", "t1", "join", "editor", "as", "t2", "on", "t1", ".", "editor_id", "=", "t2", ".", "editor_id", "join", "journal", "as", "t3", "on", "t1", ".", "journal_id", "=", "t3", ".", "journal_id"], "question": "For each journal_committee, find the editor name and the journal theme.", "question_toks": ["For", "each", "journal_committee", ",", "find", "the", "editor", "name", "and", "the", "journal", "theme", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 5, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "journal_committee", "query": "SELECT T2.Name ,  T2.age ,  T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID ORDER BY T3.Theme ASC", "query_toks": ["SELECT", "T2.Name", ",", "T2.age", ",", "T3.Theme", "FROM", "journal_committee", "AS", "T1", "JOIN", "editor", "AS", "T2", "ON", "T1.Editor_ID", "=", "T2.Editor_ID", "JOIN", "journal", "AS", "T3", "ON", "T1.Journal_ID", "=", "T3.Journal_ID", "ORDER", "BY", "T3.Theme", "ASC"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "age", ",", "t3", ".", "theme", "from", "journal_committee", "as", "t1", "join", "editor", "as", "t2", "on", "t1", ".", "editor_id", "=", "t2", ".", "editor_id", "join", "journal", "as", "t3", "on", "t1", ".", "journal_id", "=", "t3", ".", "journal_id", "order", "by", "t3", ".", "theme", "asc"], "question": "Show the names and ages of editors and the theme of journals for which they serve on committees, in ascending alphabetical order of theme.", "question_toks": ["Show", "the", "names", "and", "ages", "of", "editors", "and", "the", "theme", "of", "journals", "for", "which", "they", "serve", "on", "committees", ",", "in", "ascending", "alphabetical", "order", "of", "theme", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 5, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 3, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "journal_committee", "query": "SELECT T1.editor_id ,  T1.Name ,  COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID  =  T2.Editor_ID GROUP BY T1.editor_id", "query_toks": ["SELECT", "T1.editor_id", ",", "T1.Name", ",", "COUNT", "(", "*", ")", "FROM", "editor", "AS", "T1", "JOIN", "journal_committee", "AS", "T2", "ON", "T1.Editor_ID", "=", "T2.Editor_ID", "GROUP", "BY", "T1.editor_id"], "query_toks_no_value": ["select", "t1", ".", "editor_id", ",", "t1", ".", "name", ",", "count", "(", "*", ")", "from", "editor", "as", "t1", "join", "journal_committee", "as", "t2", "on", "t1", ".", "editor_id", "=", "t2", ".", "editor_id", "group", "by", "t1", ".", "editor_id"], "question": "Show the id, name of each editor and the number of journal committees they are on.", "question_toks": ["Show", "the", "id", ",", "name", "of", "each", "editor", "and", "the", "number", "of", "journal", "committees", "they", "are", "on", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 5, false], null], [0, 8, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "journal_committee", "query": "SELECT date ,  theme ,  sales FROM journal EXCEPT SELECT T1.date ,  T1.theme ,  T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID  =  T2.journal_ID", "query_toks": ["SELECT", "date", ",", "theme", ",", "sales", "FROM", "journal", "EXCEPT", "SELECT", "T1.date", ",", "T1.theme", ",", "T1.sales", "FROM", "journal", "AS", "T1", "JOIN", "journal_committee", "AS", "T2", "ON", "T1.journal_ID", "=", "T2.journal_ID"], "query_toks_no_value": ["select", "date", ",", "theme", ",", "sales", "from", "journal", "except", "select", "t1", ".", "date", ",", "t1", ".", "theme", ",", "t1", ".", "sales", "from", "journal", "as", "t1", "join", "journal_committee", "as", "t2", "on", "t1", ".", "journal_id", "=", "t2", ".", "journal_id"], "question": "List the date, theme and sales of the journal which did not have any of the listed editors serving on committee.", "question_toks": ["List", "the", "date", ",", "theme", "and", "sales", "of", "the", "journal", "which", "did", "not", "have", "any", "of", "the", "listed", "editors", "serving", "on", "committee", "."], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT account_id ,  customer_id ,  account_name FROM Accounts", "query_toks": ["SELECT", "account_id", ",", "customer_id", ",", "account_name", "FROM", "Accounts"], "query_toks_no_value": ["select", "account_id", ",", "customer_id", ",", "account_name", "from", "accounts"], "question": "Show ids, customer ids, names for all accounts.", "question_toks": ["Show", "ids", ",", "customer", "ids", ",", "names", "for", "all", "accounts", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT account_id ,  customer_id ,  account_name FROM Accounts", "query_toks": ["SELECT", "account_id", ",", "customer_id", ",", "account_name", "FROM", "Accounts"], "query_toks_no_value": ["select", "account_id", ",", "customer_id", ",", "account_name", "from", "accounts"], "question": "What are the account ids, customer ids, and account names for all the accounts?", "question_toks": ["What", "are", "the", "account", "ids", ",", "customer", "ids", ",", "and", "account", "names", "for", "all", "the", "accounts", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"162\"", "query_toks": ["SELECT", "T2.customer_first_name", ",", "T2.customer_last_name", ",", "T2.customer_phone", "FROM", "Accounts", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T1.account_name", "=", "``", "162", "''"], "query_toks_no_value": ["select", "t2", ".", "customer_first_name", ",", "t2", ".", "customer_last_name", ",", "t2", ".", "customer_phone", "from", "accounts", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t1", ".", "account_name", "=", "value"], "question": "What is the first name, last name, and phone of the customer with account name 162?", "question_toks": ["What", "is", "the", "first", "name", ",", "last", "name", ",", "and", "phone", "of", "the", "customer", "with", "account", "name", "162", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 2, false], null], [0, 5, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], "\"162\"", null]]}}, {"db_id": "customers_card_transactions", "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"162\"", "query_toks": ["SELECT", "T2.customer_first_name", ",", "T2.customer_last_name", ",", "T2.customer_phone", "FROM", "Accounts", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T1.account_name", "=", "``", "162", "''"], "query_toks_no_value": ["select", "t2", ".", "customer_first_name", ",", "t2", ".", "customer_last_name", ",", "t2", ".", "customer_phone", "from", "accounts", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t1", ".", "account_name", "=", "value"], "question": "Give the full name and phone of the customer who has the account name 162.", "question_toks": ["Give", "the", "full", "name", "and", "phone", "of", "the", "customer", "who", "has", "the", "account", "name", "162", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 2, false], null], [0, 5, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], "\"162\"", null]]}}, {"db_id": "customers_card_transactions", "query": "SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id", "query_toks": ["SELECT", "customer_id", ",", "count", "(", "*", ")", "FROM", "Accounts", "GROUP", "BY", "customer_id"], "query_toks_no_value": ["select", "customer_id", ",", "count", "(", "*", ")", "from", "accounts", "group", "by", "customer_id"], "question": "Show all customer ids and the number of accounts for each customer.", "question_toks": ["Show", "all", "customer", "ids", "and", "the", "number", "of", "accounts", "for", "each", "customer", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id", "query_toks": ["SELECT", "customer_id", ",", "count", "(", "*", ")", "FROM", "Accounts", "GROUP", "BY", "customer_id"], "query_toks_no_value": ["select", "customer_id", ",", "count", "(", "*", ")", "from", "accounts", "group", "by", "customer_id"], "question": "How many accounts are there for each customer id?", "question_toks": ["How", "many", "accounts", "are", "there", "for", "each", "customer", "id", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "customer_id", ",", "count", "(", "*", ")", "FROM", "Accounts", "GROUP", "BY", "customer_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "customer_id", ",", "count", "(", "*", ")", "from", "accounts", "group", "by", "customer_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Show the customer id and number of accounts with most accounts.", "question_toks": ["Show", "the", "customer", "id", "and", "number", "of", "accounts", "with", "most", "accounts", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "customer_id", ",", "count", "(", "*", ")", "FROM", "Accounts", "GROUP", "BY", "customer_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "customer_id", ",", "count", "(", "*", ")", "from", "accounts", "group", "by", "customer_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the customer id of the customer with the most accounts, and how many accounts does this person have?", "question_toks": ["What", "is", "the", "customer", "id", "of", "the", "customer", "with", "the", "most", "accounts", ",", "and", "how", "many", "accounts", "does", "this", "person", "have", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "T2.customer_first_name", ",", "T2.customer_last_name", ",", "T1.customer_id", "FROM", "Accounts", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "customer_first_name", ",", "t2", ".", "customer_last_name", ",", "t1", ".", "customer_id", "from", "accounts", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "What is the customer first, last name and id with least number of accounts.", "question_toks": ["What", "is", "the", "customer", "first", ",", "last", "name", "and", "id", "with", "least", "number", "of", "accounts", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 2, false], null], [0, 5, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "T2.customer_first_name", ",", "T2.customer_last_name", ",", "T1.customer_id", "FROM", "Accounts", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "customer_first_name", ",", "t2", ".", "customer_last_name", ",", "t1", ".", "customer_id", "from", "accounts", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "Give the full name and customer id of the customer with the fewest accounts.", "question_toks": ["Give", "the", "full", "name", "and", "customer", "id", "of", "the", "customer", "with", "the", "fewest", "accounts", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 2, false], null], [0, 5, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT customer_first_name ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id", "query_toks": ["SELECT", "customer_first_name", ",", "customer_last_name", "FROM", "Customers", "EXCEPT", "SELECT", "T1.customer_first_name", ",", "T1.customer_last_name", "FROM", "Customers", "AS", "T1", "JOIN", "Accounts", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id"], "query_toks_no_value": ["select", "customer_first_name", ",", "customer_last_name", "from", "customers", "except", "select", "t1", ".", "customer_first_name", ",", "t1", ".", "customer_last_name", "from", "customers", "as", "t1", "join", "accounts", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id"], "question": "Show the first names and last names of customers without any account.", "question_toks": ["Show", "the", "first", "names", "and", "last", "names", "of", "customers", "without", "any", "account", "."], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 5, false], null], [0, 2, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT customer_first_name ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id", "query_toks": ["SELECT", "customer_first_name", ",", "customer_last_name", "FROM", "Customers", "EXCEPT", "SELECT", "T1.customer_first_name", ",", "T1.customer_last_name", "FROM", "Customers", "AS", "T1", "JOIN", "Accounts", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id"], "query_toks_no_value": ["select", "customer_first_name", ",", "customer_last_name", "from", "customers", "except", "select", "t1", ".", "customer_first_name", ",", "t1", ".", "customer_last_name", "from", "customers", "as", "t1", "join", "accounts", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id"], "question": "What are the full names of customers who do not have any accounts?", "question_toks": ["What", "are", "the", "full", "names", "of", "customers", "who", "do", "not", "have", "any", "accounts", "?"], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 5, false], null], [0, 2, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id", "query_toks": ["SELECT", "DISTINCT", "T1.customer_first_name", ",", "T1.customer_last_name", "FROM", "Customers", "AS", "T1", "JOIN", "Accounts", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id"], "query_toks_no_value": ["select", "distinct", "t1", ".", "customer_first_name", ",", "t1", ".", "customer_last_name", "from", "customers", "as", "t1", "join", "accounts", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id"], "question": "Show distinct first and last names for all customers with an account.", "question_toks": ["Show", "distinct", "first", "and", "last", "names", "for", "all", "customers", "with", "an", "account", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 5, false], null], [0, 2, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id", "query_toks": ["SELECT", "DISTINCT", "T1.customer_first_name", ",", "T1.customer_last_name", "FROM", "Customers", "AS", "T1", "JOIN", "Accounts", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id"], "query_toks_no_value": ["select", "distinct", "t1", ".", "customer_first_name", ",", "t1", ".", "customer_last_name", "from", "customers", "as", "t1", "join", "accounts", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id"], "question": "What are the full names of customers who have accounts?", "question_toks": ["What", "are", "the", "full", "names", "of", "customers", "who", "have", "accounts", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 5, false], null], [0, 2, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT customer_id ,  customer_first_name ,  customer_last_name ,  customer_phone FROM Customers", "query_toks": ["SELECT", "customer_id", ",", "customer_first_name", ",", "customer_last_name", ",", "customer_phone", "FROM", "Customers"], "query_toks_no_value": ["select", "customer_id", ",", "customer_first_name", ",", "customer_last_name", ",", "customer_phone", "from", "customers"], "question": "Show ids, first names, last names, and phones for all customers.", "question_toks": ["Show", "ids", ",", "first", "names", ",", "last", "names", ",", "and", "phones", "for", "all", "customers", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT customer_id ,  customer_first_name ,  customer_last_name ,  customer_phone FROM Customers", "query_toks": ["SELECT", "customer_id", ",", "customer_first_name", ",", "customer_last_name", ",", "customer_phone", "FROM", "Customers"], "query_toks_no_value": ["select", "customer_id", ",", "customer_first_name", ",", "customer_last_name", ",", "customer_phone", "from", "customers"], "question": "What are the ids, full names, and phones of each customer?", "question_toks": ["What", "are", "the", "ids", ",", "full", "names", ",", "and", "phones", "of", "each", "customer", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT customer_phone ,  customer_email FROM Customers WHERE customer_first_name  =  \"Aniyah\" AND customer_last_name  =  \"Feest\"", "query_toks": ["SELECT", "customer_phone", ",", "customer_email", "FROM", "Customers", "WHERE", "customer_first_name", "=", "``", "Aniyah", "''", "AND", "customer_last_name", "=", "``", "Feest", "''"], "query_toks_no_value": ["select", "customer_phone", ",", "customer_email", "from", "customers", "where", "customer_first_name", "=", "value", "and", "customer_last_name", "=", "value"], "question": "What is the phone and email for customer with first name Aniyah and last name Feest?", "question_toks": ["What", "is", "the", "phone", "and", "email", "for", "customer", "with", "first", "name", "Aniyah", "and", "last", "name", "Feest", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"Aniyah\"", null], "and", [false, 2, [0, [0, 7, false], null], "\"Feest\"", null]]}}, {"db_id": "customers_card_transactions", "query": "SELECT customer_phone ,  customer_email FROM Customers WHERE customer_first_name  =  \"Aniyah\" AND customer_last_name  =  \"Feest\"", "query_toks": ["SELECT", "customer_phone", ",", "customer_email", "FROM", "Customers", "WHERE", "customer_first_name", "=", "``", "Aniyah", "''", "AND", "customer_last_name", "=", "``", "Feest", "''"], "query_toks_no_value": ["select", "customer_phone", ",", "customer_email", "from", "customers", "where", "customer_first_name", "=", "value", "and", "customer_last_name", "=", "value"], "question": "Return the phone and email of the customer with the first name Aniyah and last name Feest.", "question_toks": ["Return", "the", "phone", "and", "email", "of", "the", "customer", "with", "the", "first", "name", "Aniyah", "and", "last", "name", "Feest", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"Aniyah\"", null], "and", [false, 2, [0, [0, 7, false], null], "\"Feest\"", null]]}}, {"db_id": "customers_card_transactions", "query": "SELECT card_id ,  customer_id ,  card_type_code ,  card_number FROM Customers_cards", "query_toks": ["SELECT", "card_id", ",", "customer_id", ",", "card_type_code", ",", "card_number", "FROM", "Customers_cards"], "query_toks_no_value": ["select", "card_id", ",", "customer_id", ",", "card_type_code", ",", "card_number", "from", "customers_cards"], "question": "Show ids, customer ids, card type codes, card numbers for all cards.", "question_toks": ["Show", "ids", ",", "customer", "ids", ",", "card", "type", "codes", ",", "card", "numbers", "for", "all", "cards", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT card_id ,  customer_id ,  card_type_code ,  card_number FROM Customers_cards", "query_toks": ["SELECT", "card_id", ",", "customer_id", ",", "card_type_code", ",", "card_number", "FROM", "Customers_cards"], "query_toks_no_value": ["select", "card_id", ",", "customer_id", ",", "card_type_code", ",", "card_number", "from", "customers_cards"], "question": "What are card ids, customer ids, card types, and card numbers for each customer card?", "question_toks": ["What", "are", "card", "ids", ",", "customer", "ids", ",", "card", "types", ",", "and", "card", "numbers", "for", "each", "customer", "card", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT date_valid_from ,  date_valid_to FROM Customers_cards WHERE card_number  =  \"4560596484842\"", "query_toks": ["SELECT", "date_valid_from", ",", "date_valid_to", "FROM", "Customers_cards", "WHERE", "card_number", "=", "``", "4560596484842", "''"], "query_toks_no_value": ["select", "date_valid_from", ",", "date_valid_to", "from", "customers_cards", "where", "card_number", "=", "value"], "question": "Show the date valid from and the date valid to for the card with card number '4560596484842'.", "question_toks": ["Show", "the", "date", "valid", "from", "and", "the", "date", "valid", "to", "for", "the", "card", "with", "card", "number", "'4560596484842", "'", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 15, false], null], "\"4560596484842\"", null]]}}, {"db_id": "customers_card_transactions", "query": "SELECT date_valid_from ,  date_valid_to FROM Customers_cards WHERE card_number  =  \"4560596484842\"", "query_toks": ["SELECT", "date_valid_from", ",", "date_valid_to", "FROM", "Customers_cards", "WHERE", "card_number", "=", "``", "4560596484842", "''"], "query_toks_no_value": ["select", "date_valid_from", ",", "date_valid_to", "from", "customers_cards", "where", "card_number", "=", "value"], "question": "What are the valid from and valid to dates for the card with the number 4560596484842?", "question_toks": ["What", "are", "the", "valid", "from", "and", "valid", "to", "dates", "for", "the", "card", "with", "the", "number", "4560596484842", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 15, false], null], "\"4560596484842\"", null]]}}, {"db_id": "customers_card_transactions", "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.card_number  =  \"4560596484842\"", "query_toks": ["SELECT", "T2.customer_first_name", ",", "T2.customer_last_name", ",", "T2.customer_phone", "FROM", "Customers_cards", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T1.card_number", "=", "``", "4560596484842", "''"], "query_toks_no_value": ["select", "t2", ".", "customer_first_name", ",", "t2", ".", "customer_last_name", ",", "t2", ".", "customer_phone", "from", "customers_cards", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t1", ".", "card_number", "=", "value"], "question": "What is the first name, last name, and phone of the customer with card 4560596484842.", "question_toks": ["What", "is", "the", "first", "name", ",", "last", "name", ",", "and", "phone", "of", "the", "customer", "with", "card", "4560596484842", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 5, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 15, false], null], "\"4560596484842\"", null]]}}, {"db_id": "customers_card_transactions", "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.card_number  =  \"4560596484842\"", "query_toks": ["SELECT", "T2.customer_first_name", ",", "T2.customer_last_name", ",", "T2.customer_phone", "FROM", "Customers_cards", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T1.card_number", "=", "``", "4560596484842", "''"], "query_toks_no_value": ["select", "t2", ".", "customer_first_name", ",", "t2", ".", "customer_last_name", ",", "t2", ".", "customer_phone", "from", "customers_cards", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t1", ".", "card_number", "=", "value"], "question": "Return the full name and phone of the customer who has card number 4560596484842.", "question_toks": ["Return", "the", "full", "name", "and", "phone", "of", "the", "customer", "who", "has", "card", "number", "4560596484842", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 5, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 15, false], null], "\"4560596484842\"", null]]}}, {"db_id": "customers_card_transactions", "query": "SELECT customer_id ,  count(*) FROM Customers_cards GROUP BY customer_id", "query_toks": ["SELECT", "customer_id", ",", "count", "(", "*", ")", "FROM", "Customers_cards", "GROUP", "BY", "customer_id"], "query_toks_no_value": ["select", "customer_id", ",", "count", "(", "*", ")", "from", "customers_cards", "group", "by", "customer_id"], "question": "Show all customer ids and the number of cards owned by each customer.", "question_toks": ["Show", "all", "customer", "ids", "and", "the", "number", "of", "cards", "owned", "by", "each", "customer", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT customer_id ,  count(*) FROM Customers_cards GROUP BY customer_id", "query_toks": ["SELECT", "customer_id", ",", "count", "(", "*", ")", "FROM", "Customers_cards", "GROUP", "BY", "customer_id"], "query_toks_no_value": ["select", "customer_id", ",", "count", "(", "*", ")", "from", "customers_cards", "group", "by", "customer_id"], "question": "What are the different customer ids, and how many cards does each one hold?", "question_toks": ["What", "are", "the", "different", "customer", "ids", ",", "and", "how", "many", "cards", "does", "each", "one", "hold", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT customer_id ,  count(*) FROM Customers_cards GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "customer_id", ",", "count", "(", "*", ")", "FROM", "Customers_cards", "GROUP", "BY", "customer_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "customer_id", ",", "count", "(", "*", ")", "from", "customers_cards", "group", "by", "customer_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the customer id with most number of cards, and how many does he have?", "question_toks": ["What", "is", "the", "customer", "id", "with", "most", "number", "of", "cards", ",", "and", "how", "many", "does", "he", "have", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 13, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT customer_id ,  count(*) FROM Customers_cards GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "customer_id", ",", "count", "(", "*", ")", "FROM", "Customers_cards", "GROUP", "BY", "customer_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "customer_id", ",", "count", "(", "*", ")", "from", "customers_cards", "group", "by", "customer_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Return the id of the customer who has the most cards, as well as the number of cards.", "question_toks": ["Return", "the", "id", "of", "the", "customer", "who", "has", "the", "most", "cards", ",", "as", "well", "as", "the", "number", "of", "cards", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 13, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.customer_id", ",", "T2.customer_first_name", ",", "T2.customer_last_name", "FROM", "Customers_cards", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "customer_id", ",", "t2", ".", "customer_first_name", ",", "t2", ".", "customer_last_name", "from", "customers_cards", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show id, first and last names for all customers with at least two cards.", "question_toks": ["Show", "id", ",", "first", "and", "last", "names", "for", "all", "customers", "with", "at", "least", "two", "cards", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 5, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 13, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.customer_id", ",", "T2.customer_first_name", ",", "T2.customer_last_name", "FROM", "Customers_cards", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "customer_id", ",", "t2", ".", "customer_first_name", ",", "t2", ".", "customer_last_name", "from", "customers_cards", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the ids and full names of customers who hold two or more cards?", "question_toks": ["What", "are", "the", "ids", "and", "full", "names", "of", "customers", "who", "hold", "two", "or", "more", "cards", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 5, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 13, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "T1.customer_id", ",", "T2.customer_first_name", ",", "T2.customer_last_name", "FROM", "Customers_cards", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "customer_id", ",", "t2", ".", "customer_first_name", ",", "t2", ".", "customer_last_name", "from", "customers_cards", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "What is the customer id, first and last name with least number of accounts.", "question_toks": ["What", "is", "the", "customer", "id", ",", "first", "and", "last", "name", "with", "least", "number", "of", "accounts", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 5, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "T1.customer_id", ",", "T2.customer_first_name", ",", "T2.customer_last_name", "FROM", "Customers_cards", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "customer_id", ",", "t2", ".", "customer_first_name", ",", "t2", ".", "customer_last_name", "from", "customers_cards", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "Return the id and full name of the customer who has the fewest accounts.", "question_toks": ["Return", "the", "id", "and", "full", "name", "of", "the", "customer", "who", "has", "the", "fewest", "accounts", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 5, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT card_type_code ,  count(*) FROM Customers_cards GROUP BY card_type_code", "query_toks": ["SELECT", "card_type_code", ",", "count", "(", "*", ")", "FROM", "Customers_cards", "GROUP", "BY", "card_type_code"], "query_toks_no_value": ["select", "card_type_code", ",", "count", "(", "*", ")", "from", "customers_cards", "group", "by", "card_type_code"], "question": "Show all card type codes and the number of cards in each type.", "question_toks": ["Show", "all", "card", "type", "codes", "and", "the", "number", "of", "cards", "in", "each", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 14, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT card_type_code ,  count(*) FROM Customers_cards GROUP BY card_type_code", "query_toks": ["SELECT", "card_type_code", ",", "count", "(", "*", ")", "FROM", "Customers_cards", "GROUP", "BY", "card_type_code"], "query_toks_no_value": ["select", "card_type_code", ",", "count", "(", "*", ")", "from", "customers_cards", "group", "by", "card_type_code"], "question": "What are the different card types, and how many cards are there of each?", "question_toks": ["What", "are", "the", "different", "card", "types", ",", "and", "how", "many", "cards", "are", "there", "of", "each", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 14, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT card_type_code ,  count(DISTINCT customer_id) FROM Customers_cards GROUP BY card_type_code", "query_toks": ["SELECT", "card_type_code", ",", "count", "(", "DISTINCT", "customer_id", ")", "FROM", "Customers_cards", "GROUP", "BY", "card_type_code"], "query_toks_no_value": ["select", "card_type_code", ",", "count", "(", "distinct", "customer_id", ")", "from", "customers_cards", "group", "by", "card_type_code"], "question": "Show all card type codes and the number of customers holding cards in each type.", "question_toks": ["Show", "all", "card", "type", "codes", "and", "the", "number", "of", "customers", "holding", "cards", "in", "each", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 14, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [3, [0, [0, 13, true], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT card_type_code ,  count(DISTINCT customer_id) FROM Customers_cards GROUP BY card_type_code", "query_toks": ["SELECT", "card_type_code", ",", "count", "(", "DISTINCT", "customer_id", ")", "FROM", "Customers_cards", "GROUP", "BY", "card_type_code"], "query_toks_no_value": ["select", "card_type_code", ",", "count", "(", "distinct", "customer_id", ")", "from", "customers_cards", "group", "by", "card_type_code"], "question": "What are the different card type codes, and how many different customers hold each type?", "question_toks": ["What", "are", "the", "different", "card", "type", "codes", ",", "and", "how", "many", "different", "customers", "hold", "each", "type", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 14, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [3, [0, [0, 13, true], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT customer_id ,  customer_first_name FROM Customers EXCEPT SELECT T1.customer_id ,  T2.customer_first_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE card_type_code  =  \"Credit\"", "query_toks": ["SELECT", "customer_id", ",", "customer_first_name", "FROM", "Customers", "EXCEPT", "SELECT", "T1.customer_id", ",", "T2.customer_first_name", "FROM", "Customers_cards", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "card_type_code", "=", "``", "Credit", "''"], "query_toks_no_value": ["select", "customer_id", ",", "customer_first_name", "from", "customers", "except", "select", "t1", ".", "customer_id", ",", "t2", ".", "customer_first_name", "from", "customers_cards", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "card_type_code", "=", "value"], "question": "Show the customer ids and firstname without a credit card.", "question_toks": ["Show", "the", "customer", "ids", "and", "firstname", "without", "a", "credit", "card", "."], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 5, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], "\"Credit\"", null]]}, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT customer_id ,  customer_first_name FROM Customers EXCEPT SELECT T1.customer_id ,  T2.customer_first_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE card_type_code  =  \"Credit\"", "query_toks": ["SELECT", "customer_id", ",", "customer_first_name", "FROM", "Customers", "EXCEPT", "SELECT", "T1.customer_id", ",", "T2.customer_first_name", "FROM", "Customers_cards", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "card_type_code", "=", "``", "Credit", "''"], "query_toks_no_value": ["select", "customer_id", ",", "customer_first_name", "from", "customers", "except", "select", "t1", ".", "customer_id", ",", "t2", ".", "customer_first_name", "from", "customers_cards", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "card_type_code", "=", "value"], "question": "What are the ids and first names of customers who do not hold a credit card?", "question_toks": ["What", "are", "the", "ids", "and", "first", "names", "of", "customers", "who", "do", "not", "hold", "a", "credit", "card", "?"], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 5, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], "\"Credit\"", null]]}, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT avg(transaction_amount) ,  sum(transaction_amount) FROM Financial_transactions", "query_toks": ["SELECT", "avg", "(", "transaction_amount", ")", ",", "sum", "(", "transaction_amount", ")", "FROM", "Financial_transactions"], "query_toks_no_value": ["select", "avg", "(", "transaction_amount", ")", ",", "sum", "(", "transaction_amount", ")", "from", "financial_transactions"], "question": "What is the average and total transaction amount?", "question_toks": ["What", "is", "the", "average", "and", "total", "transaction", "amount", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 25, false], null]], [4, [0, [0, 25, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT avg(transaction_amount) ,  sum(transaction_amount) FROM Financial_transactions", "query_toks": ["SELECT", "avg", "(", "transaction_amount", ")", ",", "sum", "(", "transaction_amount", ")", "FROM", "Financial_transactions"], "query_toks_no_value": ["select", "avg", "(", "transaction_amount", ")", ",", "sum", "(", "transaction_amount", ")", "from", "financial_transactions"], "question": "Return the average transaction amount, as well as the total amount of all transactions.", "question_toks": ["Return", "the", "average", "transaction", "amount", ",", "as", "well", "as", "the", "total", "amount", "of", "all", "transactions", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 25, false], null]], [4, [0, [0, 25, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT T2.card_type_code ,  count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id  =  T2.card_id GROUP BY T2.card_type_code", "query_toks": ["SELECT", "T2.card_type_code", ",", "count", "(", "*", ")", "FROM", "Financial_transactions", "AS", "T1", "JOIN", "Customers_cards", "AS", "T2", "ON", "T1.card_id", "=", "T2.card_id", "GROUP", "BY", "T2.card_type_code"], "query_toks_no_value": ["select", "t2", ".", "card_type_code", ",", "count", "(", "*", ")", "from", "financial_transactions", "as", "t1", "join", "customers_cards", "as", "t2", "on", "t1", ".", "card_id", "=", "t2", ".", "card_id", "group", "by", "t2", ".", "card_type_code"], "question": "Show the card type codes and the number of transactions.", "question_toks": ["Show", "the", "card", "type", "codes", "and", "the", "number", "of", "transactions", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 22, false], null], [0, 12, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [[0, 14, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT T2.card_type_code ,  count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id  =  T2.card_id GROUP BY T2.card_type_code", "query_toks": ["SELECT", "T2.card_type_code", ",", "count", "(", "*", ")", "FROM", "Financial_transactions", "AS", "T1", "JOIN", "Customers_cards", "AS", "T2", "ON", "T1.card_id", "=", "T2.card_id", "GROUP", "BY", "T2.card_type_code"], "query_toks_no_value": ["select", "t2", ".", "card_type_code", ",", "count", "(", "*", ")", "from", "financial_transactions", "as", "t1", "join", "customers_cards", "as", "t2", "on", "t1", ".", "card_id", "=", "t2", ".", "card_id", "group", "by", "t2", ".", "card_type_code"], "question": "What are the different card types, and how many transactions have been made with each?", "question_toks": ["What", "are", "the", "different", "card", "types", ",", "and", "how", "many", "transactions", "have", "been", "made", "with", "each", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 22, false], null], [0, 12, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [[0, 14, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT transaction_type ,  count(*) FROM Financial_transactions GROUP BY transaction_type", "query_toks": ["SELECT", "transaction_type", ",", "count", "(", "*", ")", "FROM", "Financial_transactions", "GROUP", "BY", "transaction_type"], "query_toks_no_value": ["select", "transaction_type", ",", "count", "(", "*", ")", "from", "financial_transactions", "group", "by", "transaction_type"], "question": "Show the transaction type and the number of transactions.", "question_toks": ["Show", "the", "transaction", "type", "and", "the", "number", "of", "transactions", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 23, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT transaction_type ,  count(*) FROM Financial_transactions GROUP BY transaction_type", "query_toks": ["SELECT", "transaction_type", ",", "count", "(", "*", ")", "FROM", "Financial_transactions", "GROUP", "BY", "transaction_type"], "query_toks_no_value": ["select", "transaction_type", ",", "count", "(", "*", ")", "from", "financial_transactions", "group", "by", "transaction_type"], "question": "What are the different transaction types, and how many transactions of each have taken place?", "question_toks": ["What", "are", "the", "different", "transaction", "types", ",", "and", "how", "many", "transactions", "of", "each", "have", "taken", "place", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 23, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT account_id ,  count(*) FROM Financial_transactions GROUP BY account_id", "query_toks": ["SELECT", "account_id", ",", "count", "(", "*", ")", "FROM", "Financial_transactions", "GROUP", "BY", "account_id"], "query_toks_no_value": ["select", "account_id", ",", "count", "(", "*", ")", "from", "financial_transactions", "group", "by", "account_id"], "question": "Show the account id and the number of transactions for each account", "question_toks": ["Show", "the", "account", "id", "and", "the", "number", "of", "transactions", "for", "each", "account"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 21, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 21, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_card_transactions", "query": "SELECT account_id ,  count(*) FROM Financial_transactions GROUP BY account_id", "query_toks": ["SELECT", "account_id", ",", "count", "(", "*", ")", "FROM", "Financial_transactions", "GROUP", "BY", "account_id"], "query_toks_no_value": ["select", "account_id", ",", "count", "(", "*", ")", "from", "financial_transactions", "group", "by", "account_id"], "question": "What are the different account ids that have made financial transactions, as well as how many transactions correspond to each?", "question_toks": ["What", "are", "the", "different", "account", "ids", "that", "have", "made", "financial", "transactions", ",", "as", "well", "as", "how", "many", "transactions", "correspond", "to", "each", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 21, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 21, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "race_track", "query": "SELECT name ,  LOCATION FROM track", "query_toks": ["SELECT", "name", ",", "LOCATION", "FROM", "track"], "query_toks_no_value": ["select", "name", ",", "location", "from", "track"], "question": "Show the name and location for all tracks.", "question_toks": ["Show", "the", "name", "and", "location", "for", "all", "tracks", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "race_track", "query": "SELECT name ,  LOCATION FROM track", "query_toks": ["SELECT", "name", ",", "LOCATION", "FROM", "track"], "query_toks_no_value": ["select", "name", ",", "location", "from", "track"], "question": "What are the names and locations of all tracks?", "question_toks": ["What", "are", "the", "names", "and", "locations", "of", "all", "tracks", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "race_track", "query": "SELECT name ,  seating FROM track WHERE year_opened  >  2000 ORDER BY seating", "query_toks": ["SELECT", "name", ",", "seating", "FROM", "track", "WHERE", "year_opened", ">", "2000", "ORDER", "BY", "seating"], "query_toks_no_value": ["select", "name", ",", "seating", "from", "track", "where", "year_opened", ">", "value", "order", "by", "seating"], "question": "Show names and seatings, ordered by seating for all tracks opened after 2000.", "question_toks": ["Show", "names", "and", "seatings", ",", "ordered", "by", "seating", "for", "all", "tracks", "opened", "after", "2000", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 9, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 10, false], null], 2000.0, null]]}}, {"db_id": "race_track", "query": "SELECT name ,  seating FROM track WHERE year_opened  >  2000 ORDER BY seating", "query_toks": ["SELECT", "name", ",", "seating", "FROM", "track", "WHERE", "year_opened", ">", "2000", "ORDER", "BY", "seating"], "query_toks_no_value": ["select", "name", ",", "seating", "from", "track", "where", "year_opened", ">", "value", "order", "by", "seating"], "question": "What are the names and seatings for all tracks opened after 2000, ordered by seating?", "question_toks": ["What", "are", "the", "names", "and", "seatings", "for", "all", "tracks", "opened", "after", "2000", ",", "ordered", "by", "seating", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 9, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 10, false], null], 2000.0, null]]}}, {"db_id": "race_track", "query": "SELECT name ,  LOCATION ,  seating FROM track ORDER BY year_opened DESC LIMIT 1", "query_toks": ["SELECT", "name", ",", "LOCATION", ",", "seating", "FROM", "track", "ORDER", "BY", "year_opened", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "location", ",", "seating", "from", "track", "order", "by", "year_opened", "desc", "limit", "value"], "question": "What is the name, location and seating for the most recently opened track?", "question_toks": ["What", "is", "the", "name", ",", "location", "and", "seating", "for", "the", "most", "recently", "opened", "track", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 10, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "race_track", "query": "SELECT name ,  LOCATION ,  seating FROM track ORDER BY year_opened DESC LIMIT 1", "query_toks": ["SELECT", "name", ",", "LOCATION", ",", "seating", "FROM", "track", "ORDER", "BY", "year_opened", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "location", ",", "seating", "from", "track", "order", "by", "year_opened", "desc", "limit", "value"], "question": "Return the name, location, and seating of the track that was opened in the most recent year.", "question_toks": ["Return", "the", "name", ",", "location", ",", "and", "seating", "of", "the", "track", "that", "was", "opened", "in", "the", "most", "recent", "year", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 10, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "race_track", "query": "SELECT min(seating) ,  max(seating) ,  avg(seating) FROM track", "query_toks": ["SELECT", "min", "(", "seating", ")", ",", "max", "(", "seating", ")", ",", "avg", "(", "seating", ")", "FROM", "track"], "query_toks_no_value": ["select", "min", "(", "seating", ")", ",", "max", "(", "seating", ")", ",", "avg", "(", "seating", ")", "from", "track"], "question": "What is the minimum, maximum, and average seating for all tracks.", "question_toks": ["What", "is", "the", "minimum", ",", "maximum", ",", "and", "average", "seating", "for", "all", "tracks", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 9, false], null]], [1, [0, [0, 9, false], null]], [5, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "race_track", "query": "SELECT min(seating) ,  max(seating) ,  avg(seating) FROM track", "query_toks": ["SELECT", "min", "(", "seating", ")", ",", "max", "(", "seating", ")", ",", "avg", "(", "seating", ")", "FROM", "track"], "query_toks_no_value": ["select", "min", "(", "seating", ")", ",", "max", "(", "seating", ")", ",", "avg", "(", "seating", ")", "from", "track"], "question": "Return the minimum, maximum, and average seating across all tracks.", "question_toks": ["Return", "the", "minimum", ",", "maximum", ",", "and", "average", "seating", "across", "all", "tracks", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 9, false], null]], [1, [0, [0, 9, false], null]], [5, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "race_track", "query": "SELECT name ,  LOCATION ,  year_opened FROM track WHERE seating  >  (SELECT avg(seating) FROM track)", "query_toks": ["SELECT", "name", ",", "LOCATION", ",", "year_opened", "FROM", "track", "WHERE", "seating", ">", "(", "SELECT", "avg", "(", "seating", ")", "FROM", "track", ")"], "query_toks_no_value": ["select", "name", ",", "location", ",", "year_opened", "from", "track", "where", "seating", ">", "(", "select", "avg", "(", "seating", ")", "from", "track", ")"], "question": "Show the name, location, open year for all tracks with a seating higher than the average.", "question_toks": ["Show", "the", "name", ",", "location", ",", "open", "year", "for", "all", "tracks", "with", "a", "seating", "higher", "than", "the", "average", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 9, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 9, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "race_track", "query": "SELECT name ,  LOCATION ,  year_opened FROM track WHERE seating  >  (SELECT avg(seating) FROM track)", "query_toks": ["SELECT", "name", ",", "LOCATION", ",", "year_opened", "FROM", "track", "WHERE", "seating", ">", "(", "SELECT", "avg", "(", "seating", ")", "FROM", "track", ")"], "query_toks_no_value": ["select", "name", ",", "location", ",", "year_opened", "from", "track", "where", "seating", ">", "(", "select", "avg", "(", "seating", ")", "from", "track", ")"], "question": "What are the names, locations, and years of opening for tracks with seating higher than average?", "question_toks": ["What", "are", "the", "names", ",", "locations", ",", "and", "years", "of", "opening", "for", "tracks", "with", "seating", "higher", "than", "average", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 9, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 9, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "race_track", "query": "SELECT name ,  CLASS ,  date FROM race", "query_toks": ["SELECT", "name", ",", "CLASS", ",", "date", "FROM", "race"], "query_toks_no_value": ["select", "name", ",", "class", ",", "date", "from", "race"], "question": "Show name, class, and date for all races.", "question_toks": ["Show", "name", ",", "class", ",", "and", "date", "for", "all", "races", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "race_track", "query": "SELECT name ,  CLASS ,  date FROM race", "query_toks": ["SELECT", "name", ",", "CLASS", ",", "date", "FROM", "race"], "query_toks_no_value": ["select", "name", ",", "class", ",", "date", "from", "race"], "question": "What are the names, classes, and dates for all races?", "question_toks": ["What", "are", "the", "names", ",", "classes", ",", "and", "dates", "for", "all", "races", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "race_track", "query": "SELECT CLASS ,  count(*) FROM race GROUP BY CLASS", "query_toks": ["SELECT", "CLASS", ",", "count", "(", "*", ")", "FROM", "race", "GROUP", "BY", "CLASS"], "query_toks_no_value": ["select", "class", ",", "count", "(", "*", ")", "from", "race", "group", "by", "class"], "question": "Show the race class and number of races in each class.", "question_toks": ["Show", "the", "race", "class", "and", "number", "of", "races", "in", "each", "class", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "race_track", "query": "SELECT CLASS ,  count(*) FROM race GROUP BY CLASS", "query_toks": ["SELECT", "CLASS", ",", "count", "(", "*", ")", "FROM", "race", "GROUP", "BY", "CLASS"], "query_toks_no_value": ["select", "class", ",", "count", "(", "*", ")", "from", "race", "group", "by", "class"], "question": "What are the different classes of races, and how many races correspond to each?", "question_toks": ["What", "are", "the", "different", "classes", "of", "races", ",", "and", "how", "many", "races", "correspond", "to", "each", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "race_track", "query": "SELECT T2.name ,  count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "race", "AS", "T1", "JOIN", "track", "AS", "T2", "ON", "T1.track_id", "=", "T2.track_id", "GROUP", "BY", "T1.track_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "race", "as", "t1", "join", "track", "as", "t2", "on", "t1", ".", "track_id", "=", "t2", ".", "track_id", "group", "by", "t1", ".", "track_id"], "question": "Show the name of track and the number of races in each track.", "question_toks": ["Show", "the", "name", "of", "track", "and", "the", "number", "of", "races", "in", "each", "track", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 5, false], null], [0, 6, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "race_track", "query": "SELECT T2.name ,  count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "race", "AS", "T1", "JOIN", "track", "AS", "T2", "ON", "T1.track_id", "=", "T2.track_id", "GROUP", "BY", "T1.track_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "race", "as", "t1", "join", "track", "as", "t2", "on", "t1", ".", "track_id", "=", "t2", ".", "track_id", "group", "by", "t1", ".", "track_id"], "question": "What are the names of different tracks, and how many races has each had?", "question_toks": ["What", "are", "the", "names", "of", "different", "tracks", ",", "and", "how", "many", "races", "has", "each", "had", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 5, false], null], [0, 6, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "race_track", "query": "SELECT T1.name ,  T1.date ,  T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id", "query_toks": ["SELECT", "T1.name", ",", "T1.date", ",", "T2.name", "FROM", "race", "AS", "T1", "JOIN", "track", "AS", "T2", "ON", "T1.track_id", "=", "T2.track_id"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "date", ",", "t2", ".", "name", "from", "race", "as", "t1", "join", "track", "as", "t2", "on", "t1", ".", "track_id", "=", "t2", ".", "track_id"], "question": "Show the name and date for each race and its track name.", "question_toks": ["Show", "the", "name", "and", "date", "for", "each", "race", "and", "its", "track", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 5, false], null], [0, 6, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "race_track", "query": "SELECT T1.name ,  T1.date ,  T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id", "query_toks": ["SELECT", "T1.name", ",", "T1.date", ",", "T2.name", "FROM", "race", "AS", "T1", "JOIN", "track", "AS", "T2", "ON", "T1.track_id", "=", "T2.track_id"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "date", ",", "t2", ".", "name", "from", "race", "as", "t1", "join", "track", "as", "t2", "on", "t1", ".", "track_id", "=", "t2", ".", "track_id"], "question": "What are the names and dates of races, and the names of the tracks where they are held?", "question_toks": ["What", "are", "the", "names", "and", "dates", "of", "races", ",", "and", "the", "names", "of", "the", "tracks", "where", "they", "are", "held", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 5, false], null], [0, 6, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "race_track", "query": "SELECT T2.name ,  T2.location FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id HAVING count(*)  =  1", "query_toks": ["SELECT", "T2.name", ",", "T2.location", "FROM", "race", "AS", "T1", "JOIN", "track", "AS", "T2", "ON", "T1.track_id", "=", "T2.track_id", "GROUP", "BY", "T1.track_id", "HAVING", "count", "(", "*", ")", "=", "1"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "location", "from", "race", "as", "t1", "join", "track", "as", "t2", "on", "t1", ".", "track_id", "=", "t2", ".", "track_id", "group", "by", "t1", ".", "track_id", "having", "count", "(", "*", ")", "=", "value"], "question": "Show the name and location of track with 1 race.", "question_toks": ["Show", "the", "name", "and", "location", "of", "track", "with", "1", "race", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 5, false], null], [0, 6, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 5, false]], "having": [[false, 2, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "race_track", "query": "SELECT T2.name ,  T2.location FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id HAVING count(*)  =  1", "query_toks": ["SELECT", "T2.name", ",", "T2.location", "FROM", "race", "AS", "T1", "JOIN", "track", "AS", "T2", "ON", "T1.track_id", "=", "T2.track_id", "GROUP", "BY", "T1.track_id", "HAVING", "count", "(", "*", ")", "=", "1"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "location", "from", "race", "as", "t1", "join", "track", "as", "t2", "on", "t1", ".", "track_id", "=", "t2", ".", "track_id", "group", "by", "t1", ".", "track_id", "having", "count", "(", "*", ")", "=", "value"], "question": "What are the names and locations of tracks that have had exactly 1 race?", "question_toks": ["What", "are", "the", "names", "and", "locations", "of", "tracks", "that", "have", "had", "exactly", "1", "race", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 5, false], null], [0, 6, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 5, false]], "having": [[false, 2, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "coffee_shop", "query": "SELECT count(*) ,  address FROM member GROUP BY address", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "address", "FROM", "member", "GROUP", "BY", "address"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "address", "from", "member", "group", "by", "address"], "question": "Find the number of members living in each address.", "question_toks": ["Find", "the", "number", "of", "members", "living", "in", "each", "address", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "coffee_shop", "query": "SELECT name ,  member_id FROM member WHERE Membership_card  =  'Black' OR age  <  30", "query_toks": ["SELECT", "name", ",", "member_id", "FROM", "member", "WHERE", "Membership_card", "=", "'Black", "'", "OR", "age", "<", "30"], "query_toks_no_value": ["select", "name", ",", "member_id", "from", "member", "where", "membership_card", "=", "value", "or", "age", "<", "value"], "question": "Find the ids and names of members who are under age 30 or with black membership card.", "question_toks": ["Find", "the", "ids", "and", "names", "of", "members", "who", "are", "under", "age", "30", "or", "with", "black", "membership", "card", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 8, false], null], "\"Black\"", null], "or", [false, 4, [0, [0, 9, false], null], 30.0, null]]}}, {"db_id": "coffee_shop", "query": "SELECT Time_of_purchase ,  age ,  address FROM member ORDER BY Time_of_purchase", "query_toks": ["SELECT", "Time_of_purchase", ",", "age", ",", "address", "FROM", "member", "ORDER", "BY", "Time_of_purchase"], "query_toks_no_value": ["select", "time_of_purchase", ",", "age", ",", "address", "from", "member", "order", "by", "time_of_purchase"], "question": "Find the purchase time, age and address of each member, and show the results in the order of purchase time.", "question_toks": ["Find", "the", "purchase", "time", ",", "age", "and", "address", "of", "each", "member", ",", "and", "show", "the", "results", "in", "the", "order", "of", "purchase", "time", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 10, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 9, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "coffee_shop", "query": "SELECT avg(num_of_staff) ,  avg(score) FROM shop", "query_toks": ["SELECT", "avg", "(", "num_of_staff", ")", ",", "avg", "(", "score", ")", "FROM", "shop"], "query_toks_no_value": ["select", "avg", "(", "num_of_staff", ")", ",", "avg", "(", "score", ")", "from", "shop"], "question": "What are the average score and average staff number of all shops?", "question_toks": ["What", "are", "the", "average", "score", "and", "average", "staff", "number", "of", "all", "shops", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 3, false], null]], [5, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "coffee_shop", "query": "SELECT shop_id ,  address FROM shop WHERE score  <  (SELECT avg(score) FROM shop)", "query_toks": ["SELECT", "shop_id", ",", "address", "FROM", "shop", "WHERE", "score", "<", "(", "SELECT", "avg", "(", "score", ")", "FROM", "shop", ")"], "query_toks_no_value": ["select", "shop_id", ",", "address", "from", "shop", "where", "score", "<", "(", "select", "avg", "(", "score", ")", "from", "shop", ")"], "question": "Find the id and address of the shops whose score is below the average score.", "question_toks": ["Find", "the", "id", "and", "address", "of", "the", "shops", "whose", "score", "is", "below", "the", "average", "score", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 4, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "coffee_shop", "query": "SELECT address ,  num_of_staff FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM happy_hour)", "query_toks": ["SELECT", "address", ",", "num_of_staff", "FROM", "shop", "WHERE", "shop_id", "NOT", "IN", "(", "SELECT", "shop_id", "FROM", "happy_hour", ")"], "query_toks_no_value": ["select", "address", ",", "num_of_staff", "from", "shop", "where", "shop_id", "not", "in", "(", "select", "shop_id", "from", "happy_hour", ")"], "question": "Find the address and staff number of the shops that do not have any happy hour.", "question_toks": ["Find", "the", "address", "and", "staff", "number", "of", "the", "shops", "that", "do", "not", "have", "any", "happy", "hour", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "coffee_shop", "query": "SELECT t1.address ,  t1.shop_id FROM shop AS t1 JOIN happy_hour AS t2 ON t1.shop_id  =  t2.shop_id WHERE MONTH  =  'May'", "query_toks": ["SELECT", "t1.address", ",", "t1.shop_id", "FROM", "shop", "AS", "t1", "JOIN", "happy_hour", "AS", "t2", "ON", "t1.shop_id", "=", "t2.shop_id", "WHERE", "MONTH", "=", "'May", "'"], "query_toks_no_value": ["select", "t1", ".", "address", ",", "t1", ".", "shop_id", "from", "shop", "as", "t1", "join", "happy_hour", "as", "t2", "on", "t1", ".", "shop_id", "=", "t2", ".", "shop_id", "where", "month", "=", "value"], "question": "What are the id and address of the shops which have a happy hour in May?", "question_toks": ["What", "are", "the", "id", "and", "address", "of", "the", "shops", "which", "have", "a", "happy", "hour", "in", "May", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 14, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 15, false], null], "\"May\"", null]]}}, {"db_id": "coffee_shop", "query": "SELECT shop_id ,  count(*) FROM happy_hour GROUP BY shop_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "shop_id", ",", "count", "(", "*", ")", "FROM", "happy_hour", "GROUP", "BY", "shop_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "shop_id", ",", "count", "(", "*", ")", "from", "happy_hour", "group", "by", "shop_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "which shop has happy hour most frequently? List its id and number of happy hours.", "question_toks": ["which", "shop", "has", "happy", "hour", "most", "frequently", "?", "List", "its", "id", "and", "number", "of", "happy", "hours", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 14, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 14, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "chinook_1", "query": "SELECT FirstName ,  LastName FROM EMPLOYEE WHERE City  =  \"Calgary\"", "query_toks": ["SELECT", "FirstName", ",", "LastName", "FROM", "EMPLOYEE", "WHERE", "City", "=", "``", "Calgary", "''"], "query_toks_no_value": ["select", "firstname", ",", "lastname", "from", "employee", "where", "city", "=", "value"], "question": "What are the first names and last names of the employees who live in Calgary city.", "question_toks": ["What", "are", "the", "first", "names", "and", "last", "names", "of", "the", "employees", "who", "live", "in", "Calgary", "city", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 20, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 27, false], null], "\"Calgary\"", null]]}}, {"db_id": "chinook_1", "query": "SELECT FirstName ,  LastName FROM EMPLOYEE WHERE City  =  \"Calgary\"", "query_toks": ["SELECT", "FirstName", ",", "LastName", "FROM", "EMPLOYEE", "WHERE", "City", "=", "``", "Calgary", "''"], "query_toks_no_value": ["select", "firstname", ",", "lastname", "from", "employee", "where", "city", "=", "value"], "question": "Find the full names of employees living in the city of Calgary.", "question_toks": ["Find", "the", "full", "names", "of", "employees", "living", "in", "the", "city", "of", "Calgary", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 20, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 27, false], null], "\"Calgary\"", null]]}}, {"db_id": "chinook_1", "query": "SELECT max(Milliseconds) ,  min(Milliseconds) FROM TRACK", "query_toks": ["SELECT", "max", "(", "Milliseconds", ")", ",", "min", "(", "Milliseconds", ")", "FROM", "TRACK"], "query_toks_no_value": ["select", "max", "(", "milliseconds", ")", ",", "min", "(", "milliseconds", ")", "from", "track"], "question": "What are the durations of the longest and the shortest tracks in milliseconds?", "question_toks": ["What", "are", "the", "durations", "of", "the", "longest", "and", "the", "shortest", "tracks", "in", "milliseconds", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 10]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 62, false], null]], [2, [0, [0, 62, false], null]]]], "union": null, "where": []}}, {"db_id": "chinook_1", "query": "SELECT max(Milliseconds) ,  min(Milliseconds) FROM TRACK", "query_toks": ["SELECT", "max", "(", "Milliseconds", ")", ",", "min", "(", "Milliseconds", ")", "FROM", "TRACK"], "query_toks_no_value": ["select", "max", "(", "milliseconds", ")", ",", "min", "(", "milliseconds", ")", "from", "track"], "question": "Find the maximum and minimum durations of tracks in milliseconds.", "question_toks": ["Find", "the", "maximum", "and", "minimum", "durations", "of", "tracks", "in", "milliseconds", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 10]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 62, false], null]], [2, [0, [0, 62, false], null]]]], "union": null, "where": []}}, {"db_id": "chinook_1", "query": "SELECT T1.Title ,  T2.AlbumID ,  COUNT(*) FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId GROUP BY T2.AlbumID", "query_toks": ["SELECT", "T1.Title", ",", "T2.AlbumID", ",", "COUNT", "(", "*", ")", "FROM", "ALBUM", "AS", "T1", "JOIN", "TRACK", "AS", "T2", "ON", "T1.AlbumId", "=", "T2.AlbumId", "GROUP", "BY", "T2.AlbumID"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t2", ".", "albumid", ",", "count", "(", "*", ")", "from", "album", "as", "t1", "join", "track", "as", "t2", "on", "t1", ".", "albumid", "=", "t2", ".", "albumid", "group", "by", "t2", ".", "albumid"], "question": "Show the album names, ids and the number of tracks for each album.", "question_toks": ["Show", "the", "album", "names", ",", "ids", "and", "the", "number", "of", "tracks", "for", "each", "album", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 58, false], null]], "table_units": [["table_unit", 0], ["table_unit", 10]]}, "groupBy": [[0, 58, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 58, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "chinook_1", "query": "SELECT T1.Title ,  T2.AlbumID ,  COUNT(*) FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId GROUP BY T2.AlbumID", "query_toks": ["SELECT", "T1.Title", ",", "T2.AlbumID", ",", "COUNT", "(", "*", ")", "FROM", "ALBUM", "AS", "T1", "JOIN", "TRACK", "AS", "T2", "ON", "T1.AlbumId", "=", "T2.AlbumId", "GROUP", "BY", "T2.AlbumID"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t2", ".", "albumid", ",", "count", "(", "*", ")", "from", "album", "as", "t1", "join", "track", "as", "t2", "on", "t1", ".", "albumid", "=", "t2", ".", "albumid", "group", "by", "t2", ".", "albumid"], "question": "What are the names and ids of the different albums, and how many tracks are on each?", "question_toks": ["What", "are", "the", "names", "and", "ids", "of", "the", "different", "albums", ",", "and", "how", "many", "tracks", "are", "on", "each", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 58, false], null]], "table_units": [["table_unit", 0], ["table_unit", 10]]}, "groupBy": [[0, 58, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 58, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "chinook_1", "query": "SELECT T1.Title ,  T2.AlbumID FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId WHERE T2.UnitPrice  >  1 GROUP BY T2.AlbumID", "query_toks": ["SELECT", "T1.Title", ",", "T2.AlbumID", "FROM", "ALBUM", "AS", "T1", "JOIN", "TRACK", "AS", "T2", "ON", "T1.AlbumId", "=", "T2.AlbumId", "WHERE", "T2.UnitPrice", ">", "1", "GROUP", "BY", "T2.AlbumID"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t2", ".", "albumid", "from", "album", "as", "t1", "join", "track", "as", "t2", "on", "t1", ".", "albumid", "=", "t2", ".", "albumid", "where", "t2", ".", "unitprice", ">", "value", "group", "by", "t2", ".", "albumid"], "question": "Show the album names and ids for albums that contain tracks with unit price bigger than 1.", "question_toks": ["Show", "the", "album", "names", "and", "ids", "for", "albums", "that", "contain", "tracks", "with", "unit", "price", "bigger", "than", "1", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 58, false], null]], "table_units": [["table_unit", 0], ["table_unit", 10]]}, "groupBy": [[0, 58, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 58, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 64, false], null], 1.0, null]]}}, {"db_id": "chinook_1", "query": "SELECT T1.Title ,  T2.AlbumID FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId WHERE T2.UnitPrice  >  1 GROUP BY T2.AlbumID", "query_toks": ["SELECT", "T1.Title", ",", "T2.AlbumID", "FROM", "ALBUM", "AS", "T1", "JOIN", "TRACK", "AS", "T2", "ON", "T1.AlbumId", "=", "T2.AlbumId", "WHERE", "T2.UnitPrice", ">", "1", "GROUP", "BY", "T2.AlbumID"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t2", ".", "albumid", "from", "album", "as", "t1", "join", "track", "as", "t2", "on", "t1", ".", "albumid", "=", "t2", ".", "albumid", "where", "t2", ".", "unitprice", ">", "value", "group", "by", "t2", ".", "albumid"], "question": "What are the titles and ids for albums containing tracks with unit price greater than 1?", "question_toks": ["What", "are", "the", "titles", "and", "ids", "for", "albums", "containing", "tracks", "with", "unit", "price", "greater", "than", "1", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 58, false], null]], "table_units": [["table_unit", 0], ["table_unit", 10]]}, "groupBy": [[0, 58, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 58, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 64, false], null], 1.0, null]]}}, {"db_id": "chinook_1", "query": "SELECT FirstName ,  LastName FROM CUSTOMER WHERE Email  =  \"luisg@embraer.com.br\"", "query_toks": ["SELECT", "FirstName", ",", "LastName", "FROM", "CUSTOMER", "WHERE", "Email", "=", "``", "luisg", "@", "embraer.com.br", "''"], "query_toks_no_value": ["select", "firstname", ",", "lastname", "from", "customer", "where", "email", "=", "value"], "question": "What is the first name and last name of the customer that has email \"luisg@embraer.com.br\"?", "question_toks": ["What", "is", "the", "first", "name", "and", "last", "name", "of", "the", "customer", "that", "has", "email", "``", "luisg", "@", "embraer.com.br", "''", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 17, false], null], "\"luisg@embraer.com.br\"", null]]}}, {"db_id": "chinook_1", "query": "SELECT FirstName ,  LastName FROM CUSTOMER WHERE Email  =  \"luisg@embraer.com.br\"", "query_toks": ["SELECT", "FirstName", ",", "LastName", "FROM", "CUSTOMER", "WHERE", "Email", "=", "``", "luisg", "@", "embraer.com.br", "''"], "query_toks_no_value": ["select", "firstname", ",", "lastname", "from", "customer", "where", "email", "=", "value"], "question": "Find the full name of the customer with the email \"luisg@embraer.com.br\".", "question_toks": ["Find", "the", "full", "name", "of", "the", "customer", "with", "the", "email", "``", "luisg", "@", "embraer.com.br", "''", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 17, false], null], "\"luisg@embraer.com.br\"", null]]}}, {"db_id": "chinook_1", "query": "SELECT T2.FirstName ,  T2.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.FirstName  =  \"Leonie\"", "query_toks": ["SELECT", "T2.FirstName", ",", "T2.LastName", "FROM", "CUSTOMER", "AS", "T1", "JOIN", "EMPLOYEE", "AS", "T2", "ON", "T1.SupportRepId", "=", "T2.EmployeeId", "WHERE", "T1.FirstName", "=", "``", "Leonie", "''"], "query_toks_no_value": ["select", "t2", ".", "firstname", ",", "t2", ".", "lastname", "from", "customer", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "supportrepid", "=", "t2", ".", "employeeid", "where", "t1", ".", "firstname", "=", "value"], "question": "What is the first name and last name employee helps the customer with first name Leonie?", "question_toks": ["What", "is", "the", "first", "name", "and", "last", "name", "employee", "helps", "the", "customer", "with", "first", "name", "Leonie", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 19, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 20, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"Leonie\"", null]]}}, {"db_id": "chinook_1", "query": "SELECT T2.FirstName ,  T2.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.FirstName  =  \"Leonie\"", "query_toks": ["SELECT", "T2.FirstName", ",", "T2.LastName", "FROM", "CUSTOMER", "AS", "T1", "JOIN", "EMPLOYEE", "AS", "T2", "ON", "T1.SupportRepId", "=", "T2.EmployeeId", "WHERE", "T1.FirstName", "=", "``", "Leonie", "''"], "query_toks_no_value": ["select", "t2", ".", "firstname", ",", "t2", ".", "lastname", "from", "customer", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "supportrepid", "=", "t2", ".", "employeeid", "where", "t1", ".", "firstname", "=", "value"], "question": "Find the full names of employees who help customers with the first name Leonie.", "question_toks": ["Find", "the", "full", "names", "of", "employees", "who", "help", "customers", "with", "the", "first", "name", "Leonie", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 19, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 20, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"Leonie\"", null]]}}, {"db_id": "chinook_1", "query": "SELECT T1.FirstName ,  T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  >=  10", "query_toks": ["SELECT", "T1.FirstName", ",", "T1.SupportRepId", "FROM", "CUSTOMER", "AS", "T1", "JOIN", "EMPLOYEE", "AS", "T2", "ON", "T1.SupportRepId", "=", "T2.EmployeeId", "GROUP", "BY", "T1.SupportRepId", "HAVING", "COUNT", "(", "*", ")", ">", "=", "10"], "query_toks_no_value": ["select", "t1", ".", "firstname", ",", "t1", ".", "supportrepid", "from", "customer", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "supportrepid", "=", "t2", ".", "employeeid", "group", "by", "t1", ".", "supportrepid", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Please show the employee first names and ids of employees who serve at least 10 customers.", "question_toks": ["Please", "show", "the", "employee", "first", "names", "and", "ids", "of", "employees", "who", "serve", "at", "least", "10", "customers", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 19, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 18, false]], "having": [[false, 5, [0, [3, 0, false], null], 10.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": []}}, {"db_id": "chinook_1", "query": "SELECT T1.FirstName ,  T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  >=  10", "query_toks": ["SELECT", "T1.FirstName", ",", "T1.SupportRepId", "FROM", "CUSTOMER", "AS", "T1", "JOIN", "EMPLOYEE", "AS", "T2", "ON", "T1.SupportRepId", "=", "T2.EmployeeId", "GROUP", "BY", "T1.SupportRepId", "HAVING", "COUNT", "(", "*", ")", ">", "=", "10"], "query_toks_no_value": ["select", "t1", ".", "firstname", ",", "t1", ".", "supportrepid", "from", "customer", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "supportrepid", "=", "t2", ".", "employeeid", "group", "by", "t1", ".", "supportrepid", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the first names and support rep ids for employees serving 10 or more customers?", "question_toks": ["What", "are", "the", "first", "names", "and", "support", "rep", "ids", "for", "employees", "serving", "10", "or", "more", "customers", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 19, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 18, false]], "having": [[false, 5, [0, [3, 0, false], null], 10.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": []}}, {"db_id": "chinook_1", "query": "SELECT T2.Name ,  T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT(*)  >=  3 ORDER BY T2.Name", "query_toks": ["SELECT", "T2.Name", ",", "T1.ArtistId", "FROM", "ALBUM", "AS", "T1", "JOIN", "ARTIST", "AS", "T2", "ON", "T1.ArtistId", "=", "T2.ArtistID", "GROUP", "BY", "T1.ArtistId", "HAVING", "COUNT", "(", "*", ")", ">", "=", "3", "ORDER", "BY", "T2.Name"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t1", ".", "artistid", "from", "album", "as", "t1", "join", "artist", "as", "t2", "on", "t1", ".", "artistid", "=", "t2", ".", "artistid", "group", "by", "t1", ".", "artistid", "having", "count", "(", "*", ")", ">", "=", "value", "order", "by", "t2", ".", "name"], "question": "Please list the name and id of all artists that have at least 3 albums in alphabetical order.", "question_toks": ["Please", "list", "the", "name", "and", "id", "of", "all", "artists", "that", "have", "at", "least", "3", "albums", "in", "alphabetical", "order", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 4, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 3, false]], "having": [[false, 5, [0, [3, 0, false], null], 3.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "chinook_1", "query": "SELECT T2.Name ,  T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT(*)  >=  3 ORDER BY T2.Name", "query_toks": ["SELECT", "T2.Name", ",", "T1.ArtistId", "FROM", "ALBUM", "AS", "T1", "JOIN", "ARTIST", "AS", "T2", "ON", "T1.ArtistId", "=", "T2.ArtistID", "GROUP", "BY", "T1.ArtistId", "HAVING", "COUNT", "(", "*", ")", ">", "=", "3", "ORDER", "BY", "T2.Name"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t1", ".", "artistid", "from", "album", "as", "t1", "join", "artist", "as", "t2", "on", "t1", ".", "artistid", "=", "t2", ".", "artistid", "group", "by", "t1", ".", "artistid", "having", "count", "(", "*", ")", ">", "=", "value", "order", "by", "t2", ".", "name"], "question": "What are the names and ids of artists with 3 or more albums, listed in alphabetical order?", "question_toks": ["What", "are", "the", "names", "and", "ids", "of", "artists", "with", "3", "or", "more", "albums", ",", "listed", "in", "alphabetical", "order", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 4, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 3, false]], "having": [[false, 5, [0, [3, 0, false], null], 3.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "chinook_1", "query": "SELECT max(Milliseconds) ,  min(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Pop\"", "query_toks": ["SELECT", "max", "(", "Milliseconds", ")", ",", "min", "(", "Milliseconds", ")", "FROM", "GENRE", "AS", "T1", "JOIN", "TRACK", "AS", "T2", "ON", "T1.GenreId", "=", "T2.GenreId", "WHERE", "T1.Name", "=", "``", "Pop", "''"], "query_toks_no_value": ["select", "max", "(", "milliseconds", ")", ",", "min", "(", "milliseconds", ")", "from", "genre", "as", "t1", "join", "track", "as", "t2", "on", "t1", ".", "genreid", "=", "t2", ".", "genreid", "where", "t1", ".", "name", "=", "value"], "question": "What are the duration of the longest and shortest pop tracks in milliseconds?", "question_toks": ["What", "are", "the", "duration", "of", "the", "longest", "and", "shortest", "pop", "tracks", "in", "milliseconds", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 34, false], null], [0, 60, false], null]], "table_units": [["table_unit", 4], ["table_unit", 10]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 62, false], null]], [2, [0, [0, 62, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 35, false], null], "\"Pop\"", null]]}}, {"db_id": "chinook_1", "query": "SELECT max(Milliseconds) ,  min(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Pop\"", "query_toks": ["SELECT", "max", "(", "Milliseconds", ")", ",", "min", "(", "Milliseconds", ")", "FROM", "GENRE", "AS", "T1", "JOIN", "TRACK", "AS", "T2", "ON", "T1.GenreId", "=", "T2.GenreId", "WHERE", "T1.Name", "=", "``", "Pop", "''"], "query_toks_no_value": ["select", "max", "(", "milliseconds", ")", ",", "min", "(", "milliseconds", ")", "from", "genre", "as", "t1", "join", "track", "as", "t2", "on", "t1", ".", "genreid", "=", "t2", ".", "genreid", "where", "t1", ".", "name", "=", "value"], "question": "Find the maximum and minimum millisecond lengths of pop tracks.", "question_toks": ["Find", "the", "maximum", "and", "minimum", "millisecond", "lengths", "of", "pop", "tracks", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 34, false], null], [0, 60, false], null]], "table_units": [["table_unit", 4], ["table_unit", 10]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 62, false], null]], [2, [0, [0, 62, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 35, false], null], "\"Pop\"", null]]}}, {"db_id": "insurance_fnol", "query": "SELECT sum(settlement_amount) ,  avg(settlement_amount) FROM settlements", "query_toks": ["SELECT", "sum", "(", "settlement_amount", ")", ",", "avg", "(", "settlement_amount", ")", "FROM", "settlements"], "query_toks_no_value": ["select", "sum", "(", "settlement_amount", ")", ",", "avg", "(", "settlement_amount", ")", "from", "settlements"], "question": "Find the total and average amount of settlements.", "question_toks": ["Find", "the", "total", "and", "average", "amount", "of", "settlements", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 22, false], null]], [5, [0, [0, 22, false], null]]]], "union": null, "where": []}}, {"db_id": "insurance_fnol", "query": "SELECT sum(settlement_amount) ,  avg(settlement_amount) FROM settlements", "query_toks": ["SELECT", "sum", "(", "settlement_amount", ")", ",", "avg", "(", "settlement_amount", ")", "FROM", "settlements"], "query_toks_no_value": ["select", "sum", "(", "settlement_amount", ")", ",", "avg", "(", "settlement_amount", ")", "from", "settlements"], "question": "Return the sum and average of all settlement amounts.", "question_toks": ["Return", "the", "sum", "and", "average", "of", "all", "settlement", "amounts", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 22, false], null]], [5, [0, [0, 22, false], null]]]], "union": null, "where": []}}, {"db_id": "insurance_fnol", "query": "SELECT max(settlement_amount) ,  min(settlement_amount) FROM settlements", "query_toks": ["SELECT", "max", "(", "settlement_amount", ")", ",", "min", "(", "settlement_amount", ")", "FROM", "settlements"], "query_toks_no_value": ["select", "max", "(", "settlement_amount", ")", ",", "min", "(", "settlement_amount", ")", "from", "settlements"], "question": "What are the maximum and minimum settlement amount on record?", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "settlement", "amount", "on", "record", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 22, false], null]], [2, [0, [0, 22, false], null]]]], "union": null, "where": []}}, {"db_id": "insurance_fnol", "query": "SELECT max(settlement_amount) ,  min(settlement_amount) FROM settlements", "query_toks": ["SELECT", "max", "(", "settlement_amount", ")", ",", "min", "(", "settlement_amount", ")", "FROM", "settlements"], "query_toks_no_value": ["select", "max", "(", "settlement_amount", ")", ",", "min", "(", "settlement_amount", ")", "from", "settlements"], "question": "Find the maximum and minimum settlement amount.", "question_toks": ["Find", "the", "maximum", "and", "minimum", "settlement", "amount", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 22, false], null]], [2, [0, [0, 22, false], null]]]], "union": null, "where": []}}, {"db_id": "insurance_fnol", "query": "SELECT customer_id ,  customer_name FROM customers ORDER BY customer_id ASC", "query_toks": ["SELECT", "customer_id", ",", "customer_name", "FROM", "customers", "ORDER", "BY", "customer_id", "ASC"], "query_toks_no_value": ["select", "customer_id", ",", "customer_name", "from", "customers", "order", "by", "customer_id", "asc"], "question": "List all the customers in increasing order of IDs.", "question_toks": ["List", "all", "the", "customers", "in", "increasing", "order", "of", "IDs", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 1, false], null]]], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "insurance_fnol", "query": "SELECT customer_id ,  customer_name FROM customers ORDER BY customer_id ASC", "query_toks": ["SELECT", "customer_id", ",", "customer_name", "FROM", "customers", "ORDER", "BY", "customer_id", "ASC"], "query_toks_no_value": ["select", "customer_id", ",", "customer_name", "from", "customers", "order", "by", "customer_id", "asc"], "question": "What is the ordered list of customer ids?", "question_toks": ["What", "is", "the", "ordered", "list", "of", "customer", "ids", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 1, false], null]]], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "insurance_fnol", "query": "SELECT t2.date_opened ,  t2.date_closed FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name LIKE \"%Diana%\"", "query_toks": ["SELECT", "t2.date_opened", ",", "t2.date_closed", "FROM", "customers", "AS", "t1", "JOIN", "customers_policies", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "WHERE", "t1.customer_name", "LIKE", "``", "%", "Diana", "%", "''"], "query_toks_no_value": ["select", "t2", ".", "date_opened", ",", "t2", ".", "date_closed", "from", "customers", "as", "t1", "join", "customers_policies", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t1", ".", "customer_name", "like", "value"], "question": "Retrieve the open and close dates of all the policies associated with the customer whose name contains \"Diana\"", "question_toks": ["Retrieve", "the", "open", "and", "close", "dates", "of", "all", "the", "policies", "associated", "with", "the", "customer", "whose", "name", "contains", "``", "Diana", "''"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 2, false], null], "\"%Diana%\"", null]]}}, {"db_id": "insurance_fnol", "query": "SELECT t2.date_opened ,  t2.date_closed FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name LIKE \"%Diana%\"", "query_toks": ["SELECT", "t2.date_opened", ",", "t2.date_closed", "FROM", "customers", "AS", "t1", "JOIN", "customers_policies", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "WHERE", "t1.customer_name", "LIKE", "``", "%", "Diana", "%", "''"], "query_toks_no_value": ["select", "t2", ".", "date_opened", ",", "t2", ".", "date_closed", "from", "customers", "as", "t1", "join", "customers_policies", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t1", ".", "customer_name", "like", "value"], "question": "What are the open and close dates of all the policies used by the customer who have \"Diana\" in part of their names?", "question_toks": ["What", "are", "the", "open", "and", "close", "dates", "of", "all", "the", "policies", "used", "by", "the", "customer", "who", "have", "``", "Diana", "''", "in", "part", "of", "their", "names", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 2, false], null], "\"%Diana%\"", null]]}}, {"db_id": "medicine_enzyme_interaction", "query": "SELECT name ,  LOCATION FROM enzyme", "query_toks": ["SELECT", "name", ",", "LOCATION", "FROM", "enzyme"], "query_toks_no_value": ["select", "name", ",", "location", "from", "enzyme"], "question": "List the names and the locations that the enzymes can make an effect.", "question_toks": ["List", "the", "names", "and", "the", "locations", "that", "the", "enzymes", "can", "make", "an", "effect", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "medicine_enzyme_interaction", "query": "SELECT name ,  LOCATION FROM enzyme", "query_toks": ["SELECT", "name", ",", "LOCATION", "FROM", "enzyme"], "query_toks_no_value": ["select", "name", ",", "location", "from", "enzyme"], "question": "What are the names and locations of all enzymes listed?", "question_toks": ["What", "are", "the", "names", "and", "locations", "of", "all", "enzymes", "listed", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "medicine_enzyme_interaction", "query": "SELECT product ,  chromosome ,  porphyria FROM enzyme WHERE LOCATION  =  'Cytosol'", "query_toks": ["SELECT", "product", ",", "chromosome", ",", "porphyria", "FROM", "enzyme", "WHERE", "LOCATION", "=", "'Cytosol", "'"], "query_toks_no_value": ["select", "product", ",", "chromosome", ",", "porphyria", "from", "enzyme", "where", "location", "=", "value"], "question": "What is the product, chromosome and porphyria related to the enzymes which take effect at the location 'Cytosol'?", "question_toks": ["What", "is", "the", "product", ",", "chromosome", "and", "porphyria", "related", "to", "the", "enzymes", "which", "take", "effect", "at", "the", "location", "'Cytosol", "'", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"Cytosol\"", null]]}}, {"db_id": "medicine_enzyme_interaction", "query": "SELECT product ,  chromosome ,  porphyria FROM enzyme WHERE LOCATION  =  'Cytosol'", "query_toks": ["SELECT", "product", ",", "chromosome", ",", "porphyria", "FROM", "enzyme", "WHERE", "LOCATION", "=", "'Cytosol", "'"], "query_toks_no_value": ["select", "product", ",", "chromosome", ",", "porphyria", "from", "enzyme", "where", "location", "=", "value"], "question": "What is the product, chromosome, and porphyria of the enzymes located at 'Cytosol'?", "question_toks": ["What", "is", "the", "product", ",", "chromosome", ",", "and", "porphyria", "of", "the", "enzymes", "located", "at", "'Cytosol", "'", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"Cytosol\"", null]]}}, {"db_id": "medicine_enzyme_interaction", "query": "SELECT name ,  trade_name FROM medicine WHERE FDA_approved  =  'Yes'", "query_toks": ["SELECT", "name", ",", "trade_name", "FROM", "medicine", "WHERE", "FDA_approved", "=", "'Yes", "'"], "query_toks_no_value": ["select", "name", ",", "trade_name", "from", "medicine", "where", "fda_approved", "=", "value"], "question": "What are the names and trade names of the medicines which has 'Yes' value in the FDA record?", "question_toks": ["What", "are", "the", "names", "and", "trade", "names", "of", "the", "medicines", "which", "has", "'Yes", "'", "value", "in", "the", "FDA", "record", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"Yes\"", null]]}}, {"db_id": "medicine_enzyme_interaction", "query": "SELECT name ,  trade_name FROM medicine WHERE FDA_approved  =  'Yes'", "query_toks": ["SELECT", "name", ",", "trade_name", "FROM", "medicine", "WHERE", "FDA_approved", "=", "'Yes", "'"], "query_toks_no_value": ["select", "name", ",", "trade_name", "from", "medicine", "where", "fda_approved", "=", "value"], "question": "What are the names and trade names of the medcines that are FDA approved?", "question_toks": ["What", "are", "the", "names", "and", "trade", "names", "of", "the", "medcines", "that", "are", "FDA", "approved", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"Yes\"", null]]}}, {"db_id": "medicine_enzyme_interaction", "query": "SELECT T1.id ,  T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.id", ",", "T1.Name", "FROM", "medicine", "AS", "T1", "JOIN", "medicine_enzyme_interaction", "AS", "T2", "ON", "T2.medicine_id", "=", "T1.id", "GROUP", "BY", "T1.id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "name", "from", "medicine", "as", "t1", "join", "medicine_enzyme_interaction", "as", "t2", "on", "t2", ".", "medicine_id", "=", "t1", ".", "id", "group", "by", "t1", ".", "id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the ids and names of the medicine that can interact with two or more enzymes?", "question_toks": ["What", "are", "the", "ids", "and", "names", "of", "the", "medicine", "that", "can", "interact", "with", "two", "or", "more", "enzymes", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 1, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 1, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "medicine_enzyme_interaction", "query": "SELECT T1.id ,  T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.id", ",", "T1.Name", "FROM", "medicine", "AS", "T1", "JOIN", "medicine_enzyme_interaction", "AS", "T2", "ON", "T2.medicine_id", "=", "T1.id", "GROUP", "BY", "T1.id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "name", "from", "medicine", "as", "t1", "join", "medicine_enzyme_interaction", "as", "t2", "on", "t2", ".", "medicine_id", "=", "t1", ".", "id", "group", "by", "t1", ".", "id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "For every medicine id, what are the names of the medicines that can interact with more than one enzyme?", "question_toks": ["For", "every", "medicine", "id", ",", "what", "are", "the", "names", "of", "the", "medicines", "that", "can", "interact", "with", "more", "than", "one", "enzyme", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 1, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 1, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "medicine_enzyme_interaction", "query": "SELECT T1.id ,  T1.Name ,  T1.FDA_approved FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC", "query_toks": ["SELECT", "T1.id", ",", "T1.Name", ",", "T1.FDA_approved", "FROM", "medicine", "AS", "T1", "JOIN", "medicine_enzyme_interaction", "AS", "T2", "ON", "T2.medicine_id", "=", "T1.id", "GROUP", "BY", "T1.id", "ORDER", "BY", "count", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "name", ",", "t1", ".", "fda_approved", "from", "medicine", "as", "t1", "join", "medicine_enzyme_interaction", "as", "t2", "on", "t2", ".", "medicine_id", "=", "t1", ".", "id", "group", "by", "t1", ".", "id", "order", "by", "count", "(", "*", ")", "desc"], "question": "What are the ids, names and FDA approval status of medicines in descending order of the number of enzymes that it can interact with.", "question_toks": ["What", "are", "the", "ids", ",", "names", "and", "FDA", "approval", "status", "of", "medicines", "in", "descending", "order", "of", "the", "number", "of", "enzymes", "that", "it", "can", "interact", "with", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 1, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "medicine_enzyme_interaction", "query": "SELECT T1.id ,  T1.Name ,  T1.FDA_approved FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC", "query_toks": ["SELECT", "T1.id", ",", "T1.Name", ",", "T1.FDA_approved", "FROM", "medicine", "AS", "T1", "JOIN", "medicine_enzyme_interaction", "AS", "T2", "ON", "T2.medicine_id", "=", "T1.id", "GROUP", "BY", "T1.id", "ORDER", "BY", "count", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "name", ",", "t1", ".", "fda_approved", "from", "medicine", "as", "t1", "join", "medicine_enzyme_interaction", "as", "t2", "on", "t2", ".", "medicine_id", "=", "t1", ".", "id", "group", "by", "t1", ".", "id", "order", "by", "count", "(", "*", ")", "desc"], "question": "What are the ids, names, and FDA approval status for medicines ordered by descending number of possible enzyme interactions?", "question_toks": ["What", "are", "the", "ids", ",", "names", ",", "and", "FDA", "approval", "status", "for", "medicines", "ordered", "by", "descending", "number", "of", "possible", "enzyme", "interactions", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 1, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "medicine_enzyme_interaction", "query": "SELECT T1.id ,  T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id WHERE T2.interaction_type  =  'activitor' GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.id", ",", "T1.name", "FROM", "enzyme", "AS", "T1", "JOIN", "medicine_enzyme_interaction", "AS", "T2", "ON", "T1.id", "=", "T2.enzyme_id", "WHERE", "T2.interaction_type", "=", "'activitor", "'", "GROUP", "BY", "T1.id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "name", "from", "enzyme", "as", "t1", "join", "medicine_enzyme_interaction", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "enzyme_id", "where", "t2", ".", "interaction_type", "=", "value", "group", "by", "t1", ".", "id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the id and name of the enzyme with most number of medicines that can interact as 'activator'?", "question_toks": ["What", "is", "the", "id", "and", "name", "of", "the", "enzyme", "with", "most", "number", "of", "medicines", "that", "can", "interact", "as", "'activator", "'", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 5, false], null], [0, 12, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], "\"activitor\"", null]]}}, {"db_id": "medicine_enzyme_interaction", "query": "SELECT T1.id ,  T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id WHERE T2.interaction_type  =  'activitor' GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.id", ",", "T1.name", "FROM", "enzyme", "AS", "T1", "JOIN", "medicine_enzyme_interaction", "AS", "T2", "ON", "T1.id", "=", "T2.enzyme_id", "WHERE", "T2.interaction_type", "=", "'activitor", "'", "GROUP", "BY", "T1.id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "name", "from", "enzyme", "as", "t1", "join", "medicine_enzyme_interaction", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "enzyme_id", "where", "t2", ".", "interaction_type", "=", "value", "group", "by", "t1", ".", "id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the id and name of the enzyme that can interact with the most medicines as an activator?", "question_toks": ["What", "is", "the", "id", "and", "name", "of", "the", "enzyme", "that", "can", "interact", "with", "the", "most", "medicines", "as", "an", "activator", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 5, false], null], [0, 12, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], "\"activitor\"", null]]}}, {"db_id": "medicine_enzyme_interaction", "query": "SELECT interaction_type ,  count(*) FROM medicine_enzyme_interaction GROUP BY interaction_type ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "interaction_type", ",", "count", "(", "*", ")", "FROM", "medicine_enzyme_interaction", "GROUP", "BY", "interaction_type", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "interaction_type", ",", "count", "(", "*", ")", "from", "medicine_enzyme_interaction", "group", "by", "interaction_type", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the most common interaction type between enzymes and medicine? And how many are there?", "question_toks": ["What", "is", "the", "most", "common", "interaction", "type", "between", "enzymes", "and", "medicine", "?", "And", "how", "many", "are", "there", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 14, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 14, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "medicine_enzyme_interaction", "query": "SELECT interaction_type ,  count(*) FROM medicine_enzyme_interaction GROUP BY interaction_type ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "interaction_type", ",", "count", "(", "*", ")", "FROM", "medicine_enzyme_interaction", "GROUP", "BY", "interaction_type", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "interaction_type", ",", "count", "(", "*", ")", "from", "medicine_enzyme_interaction", "group", "by", "interaction_type", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the most common types of interactions between enzymes and medicine, and how many types are there?", "question_toks": ["What", "are", "the", "most", "common", "types", "of", "interactions", "between", "enzymes", "and", "medicine", ",", "and", "how", "many", "types", "are", "there", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 14, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 14, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "medicine_enzyme_interaction", "query": "SELECT T1.id ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING COUNT(*)  >=  3", "query_toks": ["SELECT", "T1.id", ",", "T1.trade_name", "FROM", "medicine", "AS", "T1", "JOIN", "medicine_enzyme_interaction", "AS", "T2", "ON", "T2.medicine_id", "=", "T1.id", "GROUP", "BY", "T1.id", "HAVING", "COUNT", "(", "*", ")", ">", "=", "3"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "trade_name", "from", "medicine", "as", "t1", "join", "medicine_enzyme_interaction", "as", "t2", "on", "t2", ".", "medicine_id", "=", "t1", ".", "id", "group", "by", "t1", ".", "id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What is the id and trade name of the medicines can interact with at least 3 enzymes?", "question_toks": ["What", "is", "the", "id", "and", "trade", "name", "of", "the", "medicines", "can", "interact", "with", "at", "least", "3", "enzymes", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 1, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 1, false]], "having": [[false, 5, [0, [3, 0, false], null], 3.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "medicine_enzyme_interaction", "query": "SELECT T1.id ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING COUNT(*)  >=  3", "query_toks": ["SELECT", "T1.id", ",", "T1.trade_name", "FROM", "medicine", "AS", "T1", "JOIN", "medicine_enzyme_interaction", "AS", "T2", "ON", "T2.medicine_id", "=", "T1.id", "GROUP", "BY", "T1.id", "HAVING", "COUNT", "(", "*", ")", ">", "=", "3"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "trade_name", "from", "medicine", "as", "t1", "join", "medicine_enzyme_interaction", "as", "t2", "on", "t2", ".", "medicine_id", "=", "t1", ".", "id", "group", "by", "t1", ".", "id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the ids and trade names of the medicine that can interact with at least 3 enzymes?", "question_toks": ["What", "are", "the", "ids", "and", "trade", "names", "of", "the", "medicine", "that", "can", "interact", "with", "at", "least", "3", "enzymes", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 1, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 1, false]], "having": [[false, 5, [0, [3, 0, false], null], 3.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "medicine_enzyme_interaction", "query": "SELECT DISTINCT T1.name ,  T1.location ,  T1.product FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id  =  T1.id WHERE T2.interaction_type  =  'inhibitor'", "query_toks": ["SELECT", "DISTINCT", "T1.name", ",", "T1.location", ",", "T1.product", "FROM", "enzyme", "AS", "T1", "JOIN", "medicine_enzyme_interaction", "AS", "T2", "ON", "T2.enzyme_id", "=", "T1.id", "WHERE", "T2.interaction_type", "=", "'inhibitor", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", ",", "t1", ".", "location", ",", "t1", ".", "product", "from", "enzyme", "as", "t1", "join", "medicine_enzyme_interaction", "as", "t2", "on", "t2", ".", "enzyme_id", "=", "t1", ".", "id", "where", "t2", ".", "interaction_type", "=", "value"], "question": "What are the distinct name, location and products of the enzymes which has any 'inhibitor' interaction?", "question_toks": ["What", "are", "the", "distinct", "name", ",", "location", "and", "products", "of", "the", "enzymes", "which", "has", "any", "'inhibitor", "'", "interaction", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 12, false], null], [0, 5, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], "\"inhibitor\"", null]]}}, {"db_id": "medicine_enzyme_interaction", "query": "SELECT DISTINCT T1.name ,  T1.location ,  T1.product FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id  =  T1.id WHERE T2.interaction_type  =  'inhibitor'", "query_toks": ["SELECT", "DISTINCT", "T1.name", ",", "T1.location", ",", "T1.product", "FROM", "enzyme", "AS", "T1", "JOIN", "medicine_enzyme_interaction", "AS", "T2", "ON", "T2.enzyme_id", "=", "T1.id", "WHERE", "T2.interaction_type", "=", "'inhibitor", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", ",", "t1", ".", "location", ",", "t1", ".", "product", "from", "enzyme", "as", "t1", "join", "medicine_enzyme_interaction", "as", "t2", "on", "t2", ".", "enzyme_id", "=", "t1", ".", "id", "where", "t2", ".", "interaction_type", "=", "value"], "question": "What are the different names, locations, and products of the enzymes that are capable inhibitor interactions?", "question_toks": ["What", "are", "the", "different", "names", ",", "locations", ",", "and", "products", "of", "the", "enzymes", "that", "are", "capable", "inhibitor", "interactions", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 12, false], null], [0, 5, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], "\"inhibitor\"", null]]}}, {"db_id": "medicine_enzyme_interaction", "query": "SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  'inhibitor' INTERSECT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  'activitor'", "query_toks": ["SELECT", "T1.name", ",", "T1.trade_name", "FROM", "medicine", "AS", "T1", "JOIN", "medicine_enzyme_interaction", "AS", "T2", "ON", "T2.medicine_id", "=", "T1.id", "WHERE", "interaction_type", "=", "'inhibitor", "'", "INTERSECT", "SELECT", "T1.name", ",", "T1.trade_name", "FROM", "medicine", "AS", "T1", "JOIN", "medicine_enzyme_interaction", "AS", "T2", "ON", "T2.medicine_id", "=", "T1.id", "WHERE", "interaction_type", "=", "'activitor", "'"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "trade_name", "from", "medicine", "as", "t1", "join", "medicine_enzyme_interaction", "as", "t2", "on", "t2", ".", "medicine_id", "=", "t1", ".", "id", "where", "interaction_type", "=", "value", "intersect", "select", "t1", ".", "name", ",", "t1", ".", "trade_name", "from", "medicine", "as", "t1", "join", "medicine_enzyme_interaction", "as", "t2", "on", "t2", ".", "medicine_id", "=", "t1", ".", "id", "where", "interaction_type", "=", "value"], "question": "List the medicine name and trade name which can both interact as 'inhibitor' and 'activitor' with enzymes.", "question_toks": ["List", "the", "medicine", "name", "and", "trade", "name", "which", "can", "both", "interact", "as", "'inhibitor", "'", "and", "'activitor", "'", "with", "enzymes", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 1, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 1, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], "\"activitor\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], "\"inhibitor\"", null]]}}, {"db_id": "medicine_enzyme_interaction", "query": "SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  'inhibitor' INTERSECT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  'activitor'", "query_toks": ["SELECT", "T1.name", ",", "T1.trade_name", "FROM", "medicine", "AS", "T1", "JOIN", "medicine_enzyme_interaction", "AS", "T2", "ON", "T2.medicine_id", "=", "T1.id", "WHERE", "interaction_type", "=", "'inhibitor", "'", "INTERSECT", "SELECT", "T1.name", ",", "T1.trade_name", "FROM", "medicine", "AS", "T1", "JOIN", "medicine_enzyme_interaction", "AS", "T2", "ON", "T2.medicine_id", "=", "T1.id", "WHERE", "interaction_type", "=", "'activitor", "'"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "trade_name", "from", "medicine", "as", "t1", "join", "medicine_enzyme_interaction", "as", "t2", "on", "t2", ".", "medicine_id", "=", "t1", ".", "id", "where", "interaction_type", "=", "value", "intersect", "select", "t1", ".", "name", ",", "t1", ".", "trade_name", "from", "medicine", "as", "t1", "join", "medicine_enzyme_interaction", "as", "t2", "on", "t2", ".", "medicine_id", "=", "t1", ".", "id", "where", "interaction_type", "=", "value"], "question": "What are the medicine and trade names that can interact as an inhibitor and activitor with enzymes?", "question_toks": ["What", "are", "the", "medicine", "and", "trade", "names", "that", "can", "interact", "as", "an", "inhibitor", "and", "activitor", "with", "enzymes", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 1, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 1, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], "\"activitor\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], "\"inhibitor\"", null]]}}, {"db_id": "medicine_enzyme_interaction", "query": "SELECT name ,  trade_name FROM medicine EXCEPT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id JOIN enzyme AS T3 ON T3.id  =  T2.enzyme_id WHERE T3.product  =  'Protoporphyrinogen IX'", "query_toks": ["SELECT", "name", ",", "trade_name", "FROM", "medicine", "EXCEPT", "SELECT", "T1.name", ",", "T1.trade_name", "FROM", "medicine", "AS", "T1", "JOIN", "medicine_enzyme_interaction", "AS", "T2", "ON", "T2.medicine_id", "=", "T1.id", "JOIN", "enzyme", "AS", "T3", "ON", "T3.id", "=", "T2.enzyme_id", "WHERE", "T3.product", "=", "'Protoporphyrinogen", "IX", "'"], "query_toks_no_value": ["select", "name", ",", "trade_name", "from", "medicine", "except", "select", "t1", ".", "name", ",", "t1", ".", "trade_name", "from", "medicine", "as", "t1", "join", "medicine_enzyme_interaction", "as", "t2", "on", "t2", ".", "medicine_id", "=", "t1", ".", "id", "join", "enzyme", "as", "t3", "on", "t3", ".", "id", "=", "t2", ".", "enzyme_id", "where", "t3", ".", "product", "=", "value"], "question": "Show the medicine names and trade names that cannot interact with the enzyme with product 'Heme'.", "question_toks": ["Show", "the", "medicine", "names", "and", "trade", "names", "that", "can", "not", "interact", "with", "the", "enzyme", "with", "product", "'Heme", "'", "."], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 1, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 8, false], null], "\"Protoporphyrinogen IX\"", null]]}, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "medicine_enzyme_interaction", "query": "SELECT name ,  trade_name FROM medicine EXCEPT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id JOIN enzyme AS T3 ON T3.id  =  T2.enzyme_id WHERE T3.product  =  'Protoporphyrinogen IX'", "query_toks": ["SELECT", "name", ",", "trade_name", "FROM", "medicine", "EXCEPT", "SELECT", "T1.name", ",", "T1.trade_name", "FROM", "medicine", "AS", "T1", "JOIN", "medicine_enzyme_interaction", "AS", "T2", "ON", "T2.medicine_id", "=", "T1.id", "JOIN", "enzyme", "AS", "T3", "ON", "T3.id", "=", "T2.enzyme_id", "WHERE", "T3.product", "=", "'Protoporphyrinogen", "IX", "'"], "query_toks_no_value": ["select", "name", ",", "trade_name", "from", "medicine", "except", "select", "t1", ".", "name", ",", "t1", ".", "trade_name", "from", "medicine", "as", "t1", "join", "medicine_enzyme_interaction", "as", "t2", "on", "t2", ".", "medicine_id", "=", "t1", ".", "id", "join", "enzyme", "as", "t3", "on", "t3", ".", "id", "=", "t2", ".", "enzyme_id", "where", "t3", ".", "product", "=", "value"], "question": "What are the medicine and trade names that cannot interact with the enzyme with the product 'Heme'?", "question_toks": ["What", "are", "the", "medicine", "and", "trade", "names", "that", "can", "not", "interact", "with", "the", "enzyme", "with", "the", "product", "'Heme", "'", "?"], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 1, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 8, false], null], "\"Protoporphyrinogen IX\"", null]]}, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "medicine_enzyme_interaction", "query": "SELECT trade_name ,  count(*) FROM medicine GROUP BY trade_name", "query_toks": ["SELECT", "trade_name", ",", "count", "(", "*", ")", "FROM", "medicine", "GROUP", "BY", "trade_name"], "query_toks_no_value": ["select", "trade_name", ",", "count", "(", "*", ")", "from", "medicine", "group", "by", "trade_name"], "question": "find the number of medicines offered by each trade.", "question_toks": ["find", "the", "number", "of", "medicines", "offered", "by", "each", "trade", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "medicine_enzyme_interaction", "query": "SELECT trade_name ,  count(*) FROM medicine GROUP BY trade_name", "query_toks": ["SELECT", "trade_name", ",", "count", "(", "*", ")", "FROM", "medicine", "GROUP", "BY", "trade_name"], "query_toks_no_value": ["select", "trade_name", ",", "count", "(", "*", ")", "from", "medicine", "group", "by", "trade_name"], "question": "How many medicines are offered by each trade name?", "question_toks": ["How", "many", "medicines", "are", "offered", "by", "each", "trade", "name", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "university_basketball", "query": "SELECT school ,  nickname FROM university ORDER BY founded", "query_toks": ["SELECT", "school", ",", "nickname", "FROM", "university", "ORDER", "BY", "founded"], "query_toks_no_value": ["select", "school", ",", "nickname", "from", "university", "order", "by", "founded"], "question": "List all schools and their nicknames in the order of founded year.", "question_toks": ["List", "all", "schools", "and", "their", "nicknames", "in", "the", "order", "of", "founded", "year", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 16, false], null]]], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": []}}, {"db_id": "university_basketball", "query": "SELECT school ,  nickname FROM university ORDER BY founded", "query_toks": ["SELECT", "school", ",", "nickname", "FROM", "university", "ORDER", "BY", "founded"], "query_toks_no_value": ["select", "school", ",", "nickname", "from", "university", "order", "by", "founded"], "question": "What are the different schools and their nicknames, ordered by their founding years?", "question_toks": ["What", "are", "the", "different", "schools", "and", "their", "nicknames", ",", "ordered", "by", "their", "founding", "years", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 16, false], null]]], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": []}}, {"db_id": "university_basketball", "query": "SELECT school ,  LOCATION FROM university WHERE affiliation  =  'Public'", "query_toks": ["SELECT", "school", ",", "LOCATION", "FROM", "university", "WHERE", "affiliation", "=", "'Public", "'"], "query_toks_no_value": ["select", "school", ",", "location", "from", "university", "where", "affiliation", "=", "value"], "question": "List all public schools and their locations.", "question_toks": ["List", "all", "public", "schools", "and", "their", "locations", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 17, false], null], "\"Public\"", null]]}}, {"db_id": "university_basketball", "query": "SELECT school ,  LOCATION FROM university WHERE affiliation  =  'Public'", "query_toks": ["SELECT", "school", ",", "LOCATION", "FROM", "university", "WHERE", "affiliation", "=", "'Public", "'"], "query_toks_no_value": ["select", "school", ",", "location", "from", "university", "where", "affiliation", "=", "value"], "question": "What are the public schools and what are their locations?", "question_toks": ["What", "are", "the", "public", "schools", "and", "what", "are", "their", "locations", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 17, false], null], "\"Public\"", null]]}}, {"db_id": "university_basketball", "query": "SELECT t2.team_name ,  t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t1.founded LIMIT 1", "query_toks": ["SELECT", "t2.team_name", ",", "t2.ACC_Regular_Season", "FROM", "university", "AS", "t1", "JOIN", "basketball_match", "AS", "t2", "ON", "t1.school_id", "=", "t2.school_id", "ORDER", "BY", "t1.founded", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "team_name", ",", "t2", ".", "acc_regular_season", "from", "university", "as", "t1", "join", "basketball_match", "as", "t2", "on", "t1", ".", "school_id", "=", "t2", ".", "school_id", "order", "by", "t1", ".", "founded", "limit", "value"], "question": "What is the team name and acc regular season score of the school that was founded for the longest time?", "question_toks": ["What", "is", "the", "team", "name", "and", "acc", "regular", "season", "score", "of", "the", "school", "that", "was", "founded", "for", "the", "longest", "time", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 2, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 16, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "university_basketball", "query": "SELECT t2.team_name ,  t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t1.founded LIMIT 1", "query_toks": ["SELECT", "t2.team_name", ",", "t2.ACC_Regular_Season", "FROM", "university", "AS", "t1", "JOIN", "basketball_match", "AS", "t2", "ON", "t1.school_id", "=", "t2.school_id", "ORDER", "BY", "t1.founded", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "team_name", ",", "t2", ".", "acc_regular_season", "from", "university", "as", "t1", "join", "basketball_match", "as", "t2", "on", "t1", ".", "school_id", "=", "t2", ".", "school_id", "order", "by", "t1", ".", "founded", "limit", "value"], "question": "Return the name of the team and the acc during the regular season for the school that was founded the earliest.", "question_toks": ["Return", "the", "name", "of", "the", "team", "and", "the", "acc", "during", "the", "regular", "season", "for", "the", "school", "that", "was", "founded", "the", "earliest", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 2, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 16, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "university_basketball", "query": "SELECT t2.All_Games ,  t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE team_name  =  'Clemson'", "query_toks": ["SELECT", "t2.All_Games", ",", "t1.location", "FROM", "university", "AS", "t1", "JOIN", "basketball_match", "AS", "t2", "ON", "t1.school_id", "=", "t2.school_id", "WHERE", "team_name", "=", "'Clemson", "'"], "query_toks_no_value": ["select", "t2", ".", "all_games", ",", "t1", ".", "location", "from", "university", "as", "t1", "join", "basketball_match", "as", "t2", "on", "t1", ".", "school_id", "=", "t2", ".", "school_id", "where", "team_name", "=", "value"], "question": "Find the location and all games score of the school that has Clemson as its team name.", "question_toks": ["Find", "the", "location", "and", "all", "games", "score", "of", "the", "school", "that", "has", "Clemson", "as", "its", "team", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 2, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], "\"Clemson\"", null]]}}, {"db_id": "university_basketball", "query": "SELECT t2.All_Games ,  t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE team_name  =  'Clemson'", "query_toks": ["SELECT", "t2.All_Games", ",", "t1.location", "FROM", "university", "AS", "t1", "JOIN", "basketball_match", "AS", "t2", "ON", "t1.school_id", "=", "t2.school_id", "WHERE", "team_name", "=", "'Clemson", "'"], "query_toks_no_value": ["select", "t2", ".", "all_games", ",", "t1", ".", "location", "from", "university", "as", "t1", "join", "basketball_match", "as", "t2", "on", "t1", ".", "school_id", "=", "t2", ".", "school_id", "where", "team_name", "=", "value"], "question": "What are the all games score and location of the school called Clemson?", "question_toks": ["What", "are", "the", "all", "games", "score", "and", "location", "of", "the", "school", "called", "Clemson", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 2, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], "\"Clemson\"", null]]}}, {"db_id": "university_basketball", "query": "SELECT enrollment ,  primary_conference FROM university ORDER BY founded LIMIT 1", "query_toks": ["SELECT", "enrollment", ",", "primary_conference", "FROM", "university", "ORDER", "BY", "founded", "LIMIT", "1"], "query_toks_no_value": ["select", "enrollment", ",", "primary_conference", "from", "university", "order", "by", "founded", "limit", "value"], "question": "Show the enrollment and primary_conference of the oldest college.", "question_toks": ["Show", "the", "enrollment", "and", "primary_conference", "of", "the", "oldest", "college", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 16, false], null]]], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 20, false], null]]]], "union": null, "where": []}}, {"db_id": "university_basketball", "query": "SELECT enrollment ,  primary_conference FROM university ORDER BY founded LIMIT 1", "query_toks": ["SELECT", "enrollment", ",", "primary_conference", "FROM", "university", "ORDER", "BY", "founded", "LIMIT", "1"], "query_toks_no_value": ["select", "enrollment", ",", "primary_conference", "from", "university", "order", "by", "founded", "limit", "value"], "question": "What are the enrollment and primary conference for the university which was founded the earliest?", "question_toks": ["What", "are", "the", "enrollment", "and", "primary", "conference", "for", "the", "university", "which", "was", "founded", "the", "earliest", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 16, false], null]]], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 20, false], null]]]], "union": null, "where": []}}, {"db_id": "university_basketball", "query": "SELECT sum(enrollment) ,  min(enrollment) FROM university", "query_toks": ["SELECT", "sum", "(", "enrollment", ")", ",", "min", "(", "enrollment", ")", "FROM", "university"], "query_toks_no_value": ["select", "sum", "(", "enrollment", ")", ",", "min", "(", "enrollment", ")", "from", "university"], "question": "What is the total and minimum enrollment of all schools?", "question_toks": ["What", "is", "the", "total", "and", "minimum", "enrollment", "of", "all", "schools", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 18, false], null]], [2, [0, [0, 18, false], null]]]], "union": null, "where": []}}, {"db_id": "university_basketball", "query": "SELECT sum(enrollment) ,  min(enrollment) FROM university", "query_toks": ["SELECT", "sum", "(", "enrollment", ")", ",", "min", "(", "enrollment", ")", "FROM", "university"], "query_toks_no_value": ["select", "sum", "(", "enrollment", ")", ",", "min", "(", "enrollment", ")", "from", "university"], "question": "Return the total and minimum enrollments across all schools.", "question_toks": ["Return", "the", "total", "and", "minimum", "enrollments", "across", "all", "schools", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 18, false], null]], [2, [0, [0, 18, false], null]]]], "union": null, "where": []}}, {"db_id": "university_basketball", "query": "SELECT sum(enrollment) ,  affiliation FROM university GROUP BY affiliation", "query_toks": ["SELECT", "sum", "(", "enrollment", ")", ",", "affiliation", "FROM", "university", "GROUP", "BY", "affiliation"], "query_toks_no_value": ["select", "sum", "(", "enrollment", ")", ",", "affiliation", "from", "university", "group", "by", "affiliation"], "question": "Find the total student enrollment for different affiliation type schools.", "question_toks": ["Find", "the", "total", "student", "enrollment", "for", "different", "affiliation", "type", "schools", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 17, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 18, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "university_basketball", "query": "SELECT sum(enrollment) ,  affiliation FROM university GROUP BY affiliation", "query_toks": ["SELECT", "sum", "(", "enrollment", ")", ",", "affiliation", "FROM", "university", "GROUP", "BY", "affiliation"], "query_toks_no_value": ["select", "sum", "(", "enrollment", ")", ",", "affiliation", "from", "university", "group", "by", "affiliation"], "question": "What are the total enrollments of universities of each affiliation type?", "question_toks": ["What", "are", "the", "total", "enrollments", "of", "universities", "of", "each", "affiliation", "type", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 17, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 18, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "university_basketball", "query": "SELECT count(*) ,  affiliation FROM university WHERE enrollment  >  20000 GROUP BY affiliation", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "affiliation", "FROM", "university", "WHERE", "enrollment", ">", "20000", "GROUP", "BY", "affiliation"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "affiliation", "from", "university", "where", "enrollment", ">", "value", "group", "by", "affiliation"], "question": "Find the number of universities that have over a 20000 enrollment size for each affiliation type.", "question_toks": ["Find", "the", "number", "of", "universities", "that", "have", "over", "a", "20000", "enrollment", "size", "for", "each", "affiliation", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 17, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 18, false], null], 20000.0, null]]}}, {"db_id": "university_basketball", "query": "SELECT count(*) ,  affiliation FROM university WHERE enrollment  >  20000 GROUP BY affiliation", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "affiliation", "FROM", "university", "WHERE", "enrollment", ">", "20000", "GROUP", "BY", "affiliation"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "affiliation", "from", "university", "where", "enrollment", ">", "value", "group", "by", "affiliation"], "question": "What are the different affiliations, and how many schools with each have an enrollment size of above 20000?", "question_toks": ["What", "are", "the", "different", "affiliations", ",", "and", "how", "many", "schools", "with", "each", "have", "an", "enrollment", "size", "of", "above", "20000", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 17, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 18, false], null], 20000.0, null]]}}, {"db_id": "university_basketball", "query": "SELECT sum(Enrollment) ,  affiliation FROM university WHERE founded  >  1850 GROUP BY affiliation", "query_toks": ["SELECT", "sum", "(", "Enrollment", ")", ",", "affiliation", "FROM", "university", "WHERE", "founded", ">", "1850", "GROUP", "BY", "affiliation"], "query_toks_no_value": ["select", "sum", "(", "enrollment", ")", ",", "affiliation", "from", "university", "where", "founded", ">", "value", "group", "by", "affiliation"], "question": "Find the total number of students enrolled in the colleges that were founded after the year of 1850 for each affiliation type.", "question_toks": ["Find", "the", "total", "number", "of", "students", "enrolled", "in", "the", "colleges", "that", "were", "founded", "after", "the", "year", "of", "1850", "for", "each", "affiliation", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 17, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 18, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 16, false], null], 1850.0, null]]}}, {"db_id": "university_basketball", "query": "SELECT sum(Enrollment) ,  affiliation FROM university WHERE founded  >  1850 GROUP BY affiliation", "query_toks": ["SELECT", "sum", "(", "Enrollment", ")", ",", "affiliation", "FROM", "university", "WHERE", "founded", ">", "1850", "GROUP", "BY", "affiliation"], "query_toks_no_value": ["select", "sum", "(", "enrollment", ")", ",", "affiliation", "from", "university", "where", "founded", ">", "value", "group", "by", "affiliation"], "question": "What are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type?", "question_toks": ["What", "are", "the", "different", "affiliations", ",", "and", "what", "is", "the", "total", "enrollment", "of", "schools", "founded", "after", "1850", "for", "each", "enrollment", "type", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 17, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 18, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 16, false], null], 1850.0, null]]}}, {"db_id": "phone_1", "query": "SELECT Model_name ,  RAM_MiB FROM chip_model ORDER BY RAM_MiB ASC LIMIT 1;", "query_toks": ["SELECT", "Model_name", ",", "RAM_MiB", "FROM", "chip_model", "ORDER", "BY", "RAM_MiB", "ASC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "model_name", ",", "ram_mib", "from", "chip_model", "order", "by", "ram_mib", "asc", "limit", "value"], "question": "Which model has the least amount of RAM? List the model name and the amount of RAM.", "question_toks": ["Which", "model", "has", "the", "least", "amount", "of", "RAM", "?", "List", "the", "model", "name", "and", "the", "amount", "of", "RAM", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 3, false], null]]], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "phone_1", "query": "SELECT chip_model ,  screen_mode FROM phone WHERE Hardware_Model_name = \"LG-P760\";", "query_toks": ["SELECT", "chip_model", ",", "screen_mode", "FROM", "phone", "WHERE", "Hardware_Model_name", "=", "``", "LG-P760", "''", ";"], "query_toks_no_value": ["select", "chip_model", ",", "screen_mode", "from", "phone", "where", "hardware_model_name", "=", "value"], "question": "What are the chip model and screen mode of the phone with hardware model name \"LG-P760\"?", "question_toks": ["What", "are", "the", "chip", "model", "and", "screen", "mode", "of", "the", "phone", "with", "hardware", "model", "name", "``", "LG-P760", "''", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 16, false], null], "\"LG-P760\"", null]]}}, {"db_id": "phone_1", "query": "SELECT max(T1.RAM_MiB) ,  min(T1.RAM_MiB) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T2.Company_name = \"Nokia Corporation\";", "query_toks": ["SELECT", "max", "(", "T1.RAM_MiB", ")", ",", "min", "(", "T1.RAM_MiB", ")", "FROM", "chip_model", "AS", "T1", "JOIN", "phone", "AS", "T2", "ON", "T1.Model_name", "=", "T2.chip_model", "WHERE", "T2.Company_name", "=", "``", "Nokia", "Corporation", "''", ";"], "query_toks_no_value": ["select", "max", "(", "t1", ".", "ram_mib", ")", ",", "min", "(", "t1", ".", "ram_mib", ")", "from", "chip_model", "as", "t1", "join", "phone", "as", "t2", "on", "t1", ".", "model_name", "=", "t2", ".", "chip_model", "where", "t2", ".", "company_name", "=", "value"], "question": "What is maximum and minimum RAM size of phone produced by company named \"Nokia Corporation\"?", "question_toks": ["What", "is", "maximum", "and", "minimum", "RAM", "size", "of", "phone", "produced", "by", "company", "named", "``", "Nokia", "Corporation", "''", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 20, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 3, false], null]], [2, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 15, false], null], "\"Nokia Corporation\"", null]]}}, {"db_id": "phone_1", "query": "SELECT T2.Hardware_Model_name ,  T2.Company_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T1.Launch_year = 2002 OR T1.RAM_MiB  >  32;", "query_toks": ["SELECT", "T2.Hardware_Model_name", ",", "T2.Company_name", "FROM", "chip_model", "AS", "T1", "JOIN", "phone", "AS", "T2", "ON", "T1.Model_name", "=", "T2.chip_model", "WHERE", "T1.Launch_year", "=", "2002", "OR", "T1.RAM_MiB", ">", "32", ";"], "query_toks_no_value": ["select", "t2", ".", "hardware_model_name", ",", "t2", ".", "company_name", "from", "chip_model", "as", "t1", "join", "phone", "as", "t2", "on", "t1", ".", "model_name", "=", "t2", ".", "chip_model", "where", "t1", ".", "launch_year", "=", "value", "or", "t1", ".", "ram_mib", ">", "value"], "question": "List the hardware model name and company name for all the phones that were launched in year 2002 or have RAM size greater than 32.", "question_toks": ["List", "the", "hardware", "model", "name", "and", "company", "name", "for", "all", "the", "phones", "that", "were", "launched", "in", "year", "2002", "or", "have", "RAM", "size", "greater", "than", "32", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 20, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], 2002.0, null], "or", [false, 3, [0, [0, 3, false], null], 32.0, null]]}}, {"db_id": "phone_1", "query": "SELECT Hardware_Model_name ,  Company_name FROM phone WHERE Accreditation_type LIKE 'Full';", "query_toks": ["SELECT", "Hardware_Model_name", ",", "Company_name", "FROM", "phone", "WHERE", "Accreditation_type", "LIKE", "'Full", "'", ";"], "query_toks_no_value": ["select", "hardware_model_name", ",", "company_name", "from", "phone", "where", "accreditation_type", "like", "value"], "question": "Find all phones that have word 'Full' in their accreditation types. List the Hardware Model name and Company name.", "question_toks": ["Find", "all", "phones", "that", "have", "word", "'Full", "'", "in", "their", "accreditation", "types", ".", "List", "the", "Hardware", "Model", "name", "and", "Company", "name", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 17, false], null], "\"Full\"", null]]}}, {"db_id": "phone_1", "query": "SELECT T1.Char_cells ,  T1.Pixels ,  T1.Hardware_colours FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T2.Hardware_Model_name = \"LG-P760\";", "query_toks": ["SELECT", "T1.Char_cells", ",", "T1.Pixels", ",", "T1.Hardware_colours", "FROM", "screen_mode", "AS", "T1", "JOIN", "phone", "AS", "T2", "ON", "T1.Graphics_mode", "=", "T2.screen_mode", "WHERE", "T2.Hardware_Model_name", "=", "``", "LG-P760", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "char_cells", ",", "t1", ".", "pixels", ",", "t1", ".", "hardware_colours", "from", "screen_mode", "as", "t1", "join", "phone", "as", "t2", "on", "t1", ".", "graphics_mode", "=", "t2", ".", "screen_mode", "where", "t2", ".", "hardware_model_name", "=", "value"], "question": "Find the Char cells, Pixels and Hardware colours for the screen of the phone whose hardware model name is \"LG-P760\".", "question_toks": ["Find", "the", "Char", "cells", ",", "Pixels", "and", "Hardware", "colours", "for", "the", "screen", "of", "the", "phone", "whose", "hardware", "model", "name", "is", "``", "LG-P760", "''", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 21, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 16, false], null], "\"LG-P760\"", null]]}}, {"db_id": "phone_1", "query": "SELECT T2.Hardware_Model_name ,  T2.Company_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type  =  \"Graphics\";", "query_toks": ["SELECT", "T2.Hardware_Model_name", ",", "T2.Company_name", "FROM", "screen_mode", "AS", "T1", "JOIN", "phone", "AS", "T2", "ON", "T1.Graphics_mode", "=", "T2.screen_mode", "WHERE", "T1.Type", "=", "``", "Graphics", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "hardware_model_name", ",", "t2", ".", "company_name", "from", "screen_mode", "as", "t1", "join", "phone", "as", "t2", "on", "t1", ".", "graphics_mode", "=", "t2", ".", "screen_mode", "where", "t1", ".", "type", "=", "value"], "question": "List the hardware model name and company name for the phone whose screen mode type is \"Graphics.\"", "question_toks": ["List", "the", "hardware", "model", "name", "and", "company", "name", "for", "the", "phone", "whose", "screen", "mode", "type", "is", "``", "Graphics", ".", "''"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 21, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], "\"Graphics\"", null]]}}, {"db_id": "phone_1", "query": "SELECT Company_name ,  count(*) FROM phone GROUP BY Company_name ORDER BY count(*) ASC LIMIT 1;", "query_toks": ["SELECT", "Company_name", ",", "count", "(", "*", ")", "FROM", "phone", "GROUP", "BY", "Company_name", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "company_name", ",", "count", "(", "*", ")", "from", "phone", "group", "by", "company_name", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "Find the name of the company that has the least number of phone models. List the company name and the number of phone model produced by that company.", "question_toks": ["Find", "the", "name", "of", "the", "company", "that", "has", "the", "least", "number", "of", "phone", "models", ".", "List", "the", "company", "name", "and", "the", "number", "of", "phone", "model", "produced", "by", "that", "company", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 15, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "phone_1", "query": "SELECT max(used_kb) , min(used_kb) , avg(used_kb) FROM screen_mode;", "query_toks": ["SELECT", "max", "(", "used_kb", ")", ",", "min", "(", "used_kb", ")", ",", "avg", "(", "used_kb", ")", "FROM", "screen_mode", ";"], "query_toks_no_value": ["select", "max", "(", "used_kb", ")", ",", "min", "(", "used_kb", ")", ",", "avg", "(", "used_kb", ")", "from", "screen_mode"], "question": "List the maximum, minimum and average number of used kb in screen mode.", "question_toks": ["List", "the", "maximum", ",", "minimum", "and", "average", "number", "of", "used", "kb", "in", "screen", "mode", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 12, false], null]], [2, [0, [0, 12, false], null]], [5, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "phone_1", "query": "SELECT T1.WiFi , T3.Type FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model JOIN screen_mode AS T3 ON T2.screen_mode = T3.Graphics_mode WHERE T2.Hardware_Model_name = \"LG-P760\";", "query_toks": ["SELECT", "T1.WiFi", ",", "T3.Type", "FROM", "chip_model", "AS", "T1", "JOIN", "phone", "AS", "T2", "ON", "T1.Model_name", "=", "T2.chip_model", "JOIN", "screen_mode", "AS", "T3", "ON", "T2.screen_mode", "=", "T3.Graphics_mode", "WHERE", "T2.Hardware_Model_name", "=", "``", "LG-P760", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "wifi", ",", "t3", ".", "type", "from", "chip_model", "as", "t1", "join", "phone", "as", "t2", "on", "t1", ".", "model_name", "=", "t2", ".", "chip_model", "join", "screen_mode", "as", "t3", "on", "t2", ".", "screen_mode", "=", "t3", ".", "graphics_mode", "where", "t2", ".", "hardware_model_name", "=", "value"], "question": "What are the wifi and screen mode type of the hardware model named \"LG-P760\"?", "question_toks": ["What", "are", "the", "wifi", "and", "screen", "mode", "type", "of", "the", "hardware", "model", "named", "``", "LG-P760", "''", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 20, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 16, false], null], "\"LG-P760\"", null]]}}, {"db_id": "phone_1", "query": "SELECT DISTINCT T2.Hardware_Model_name , T2.Company_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.used_kb BETWEEN 10 AND 15;", "query_toks": ["SELECT", "DISTINCT", "T2.Hardware_Model_name", ",", "T2.Company_name", "FROM", "screen_mode", "AS", "T1", "JOIN", "phone", "AS", "T2", "ON", "T1.Graphics_mode", "=", "T2.screen_mode", "WHERE", "T1.used_kb", "BETWEEN", "10", "AND", "15", ";"], "query_toks_no_value": ["select", "distinct", "t2", ".", "hardware_model_name", ",", "t2", ".", "company_name", "from", "screen_mode", "as", "t1", "join", "phone", "as", "t2", "on", "t1", ".", "graphics_mode", "=", "t2", ".", "screen_mode", "where", "t1", ".", "used_kb", "between", "value", "and", "value"], "question": "List the phone hardware model and company name for the phones whose screen usage in kb is between 10 and 15.", "question_toks": ["List", "the", "phone", "hardware", "model", "and", "company", "name", "for", "the", "phones", "whose", "screen", "usage", "in", "kb", "is", "between", "10", "and", "15", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 21, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 16, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 1, [0, [0, 12, false], null], 10.0, 15.0]]}}, {"db_id": "phone_1", "query": "SELECT Accreditation_type ,  count(*) FROM phone GROUP BY Accreditation_type", "query_toks": ["SELECT", "Accreditation_type", ",", "count", "(", "*", ")", "FROM", "phone", "GROUP", "BY", "Accreditation_type"], "query_toks_no_value": ["select", "accreditation_type", ",", "count", "(", "*", ")", "from", "phone", "group", "by", "accreditation_type"], "question": "Find the number of phones for each accreditation type.", "question_toks": ["Find", "the", "number", "of", "phones", "for", "each", "accreditation", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 17, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 17, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "phone_1", "query": "SELECT Accreditation_type ,  count(*) FROM phone GROUP BY Accreditation_type", "query_toks": ["SELECT", "Accreditation_type", ",", "count", "(", "*", ")", "FROM", "phone", "GROUP", "BY", "Accreditation_type"], "query_toks_no_value": ["select", "accreditation_type", ",", "count", "(", "*", ")", "from", "phone", "group", "by", "accreditation_type"], "question": "How many phones belongs to each accreditation type?", "question_toks": ["How", "many", "phones", "belongs", "to", "each", "accreditation", "type", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 17, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 17, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "match_season", "query": "SELECT Country_name ,  Capital FROM country", "query_toks": ["SELECT", "Country_name", ",", "Capital", "FROM", "country"], "query_toks_no_value": ["select", "country_name", ",", "capital", "from", "country"], "question": "Show the country name and capital of all countries.", "question_toks": ["Show", "the", "country", "name", "and", "capital", "of", "all", "countries", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "match_season", "query": "SELECT Country_name ,  Capital FROM country", "query_toks": ["SELECT", "Country_name", ",", "Capital", "FROM", "country"], "query_toks_no_value": ["select", "country_name", ",", "capital", "from", "country"], "question": "What are the names and capitals of each country?", "question_toks": ["What", "are", "the", "names", "and", "capitals", "of", "each", "country", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "match_season", "query": "SELECT Draft_Pick_Number ,  Draft_Class FROM match_season WHERE POSITION  =  \"Defender\"", "query_toks": ["SELECT", "Draft_Pick_Number", ",", "Draft_Class", "FROM", "match_season", "WHERE", "POSITION", "=", "``", "Defender", "''"], "query_toks_no_value": ["select", "draft_pick_number", ",", "draft_class", "from", "match_season", "where", "position", "=", "value"], "question": "Show the draft pick numbers and draft classes of players whose positions are defenders.", "question_toks": ["Show", "the", "draft", "pick", "numbers", "and", "draft", "classes", "of", "players", "whose", "positions", "are", "defenders", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], "\"Defender\"", null]]}}, {"db_id": "match_season", "query": "SELECT Draft_Pick_Number ,  Draft_Class FROM match_season WHERE POSITION  =  \"Defender\"", "query_toks": ["SELECT", "Draft_Pick_Number", ",", "Draft_Class", "FROM", "match_season", "WHERE", "POSITION", "=", "``", "Defender", "''"], "query_toks_no_value": ["select", "draft_pick_number", ",", "draft_class", "from", "match_season", "where", "position", "=", "value"], "question": "What are the draft pick numbers and draft classes for players who play the Defender position?", "question_toks": ["What", "are", "the", "draft", "pick", "numbers", "and", "draft", "classes", "for", "players", "who", "play", "the", "Defender", "position", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], "\"Defender\"", null]]}}, {"db_id": "match_season", "query": "SELECT Player ,  Years_Played FROM player", "query_toks": ["SELECT", "Player", ",", "Years_Played", "FROM", "player"], "query_toks_no_value": ["select", "player", ",", "years_played", "from", "player"], "question": "Show the players and the years played.", "question_toks": ["Show", "the", "players", "and", "the", "years", "played", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "match_season", "query": "SELECT Player ,  Years_Played FROM player", "query_toks": ["SELECT", "Player", ",", "Years_Played", "FROM", "player"], "query_toks_no_value": ["select", "player", ",", "years_played", "from", "player"], "question": "Who are the different players and how many years has each played?", "question_toks": ["Who", "are", "the", "different", "players", "and", "how", "many", "years", "has", "each", "played", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "match_season", "query": "SELECT T2.Season ,  T2.Player ,  T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country", "query_toks": ["SELECT", "T2.Season", ",", "T2.Player", ",", "T1.Country_name", "FROM", "country", "AS", "T1", "JOIN", "match_season", "AS", "T2", "ON", "T1.Country_id", "=", "T2.Country"], "query_toks_no_value": ["select", "t2", ".", "season", ",", "t2", ".", "player", ",", "t1", ".", "country_name", "from", "country", "as", "t1", "join", "match_season", "as", "t2", "on", "t1", ".", "country_id", "=", "t2", ".", "country"], "question": "Show the season, the player, and the name of the country that player belongs to.", "question_toks": ["Show", "the", "season", ",", "the", "player", ",", "and", "the", "name", "of", "the", "country", "that", "player", "belongs", "to", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "match_season", "query": "SELECT T2.Season ,  T2.Player ,  T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country", "query_toks": ["SELECT", "T2.Season", ",", "T2.Player", ",", "T1.Country_name", "FROM", "country", "AS", "T1", "JOIN", "match_season", "AS", "T2", "ON", "T1.Country_id", "=", "T2.Country"], "query_toks_no_value": ["select", "t2", ".", "season", ",", "t2", ".", "player", ",", "t1", ".", "country_name", "from", "country", "as", "t1", "join", "match_season", "as", "t2", "on", "t1", ".", "country_id", "=", "t2", ".", "country"], "question": "For each player, what are their name, season, and country that they belong to?", "question_toks": ["For", "each", "player", ",", "what", "are", "their", "name", ",", "season", ",", "and", "country", "that", "they", "belong", "to", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "match_season", "query": "SELECT T1.Season ,  T1.Player ,  T2.Name FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id", "query_toks": ["SELECT", "T1.Season", ",", "T1.Player", ",", "T2.Name", "FROM", "match_season", "AS", "T1", "JOIN", "team", "AS", "T2", "ON", "T1.Team", "=", "T2.Team_id"], "query_toks_no_value": ["select", "t1", ".", "season", ",", "t1", ".", "player", ",", "t2", ".", "name", "from", "match_season", "as", "t1", "join", "team", "as", "t2", "on", "t1", ".", "team", "=", "t2", ".", "team_id"], "question": "Show the season, the player, and the name of the team that players belong to.", "question_toks": ["Show", "the", "season", ",", "the", "player", ",", "and", "the", "name", "of", "the", "team", "that", "players", "belong", "to", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 5, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "match_season", "query": "SELECT T1.Season ,  T1.Player ,  T2.Name FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id", "query_toks": ["SELECT", "T1.Season", ",", "T1.Player", ",", "T2.Name", "FROM", "match_season", "AS", "T1", "JOIN", "team", "AS", "T2", "ON", "T1.Team", "=", "T2.Team_id"], "query_toks_no_value": ["select", "t1", ".", "season", ",", "t1", ".", "player", ",", "t2", ".", "name", "from", "match_season", "as", "t1", "join", "team", "as", "t2", "on", "t1", ".", "team", "=", "t2", ".", "team_id"], "question": "Who are the different players, what season do they play in, and what is the name of the team they are on?", "question_toks": ["Who", "are", "the", "different", "players", ",", "what", "season", "do", "they", "play", "in", ",", "and", "what", "is", "the", "name", "of", "the", "team", "they", "are", "on", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 5, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "match_season", "query": "SELECT T1.Player , T1.Years_Played FROM player AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Columbus Crew\"", "query_toks": ["SELECT", "T1.Player", ",", "T1.Years_Played", "FROM", "player", "AS", "T1", "JOIN", "team", "AS", "T2", "ON", "T1.Team", "=", "T2.Team_id", "WHERE", "T2.Name", "=", "``", "Columbus", "Crew", "''"], "query_toks_no_value": ["select", "t1", ".", "player", ",", "t1", ".", "years_played", "from", "player", "as", "t1", "join", "team", "as", "t2", "on", "t1", ".", "team", "=", "t2", ".", "team_id", "where", "t2", ".", "name", "=", "value"], "question": "Show the players and years played for players from team \"Columbus Crew\".", "question_toks": ["Show", "the", "players", "and", "years", "played", "for", "players", "from", "team", "``", "Columbus", "Crew", "''", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 21, false], null], [0, 5, false], null]], "table_units": [["table_unit", 3], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"Columbus Crew\"", null]]}}, {"db_id": "match_season", "query": "SELECT T1.Player , T1.Years_Played FROM player AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Columbus Crew\"", "query_toks": ["SELECT", "T1.Player", ",", "T1.Years_Played", "FROM", "player", "AS", "T1", "JOIN", "team", "AS", "T2", "ON", "T1.Team", "=", "T2.Team_id", "WHERE", "T2.Name", "=", "``", "Columbus", "Crew", "''"], "query_toks_no_value": ["select", "t1", ".", "player", ",", "t1", ".", "years_played", "from", "player", "as", "t1", "join", "team", "as", "t2", "on", "t1", ".", "team", "=", "t2", ".", "team_id", "where", "t2", ".", "name", "=", "value"], "question": "What are the players who played for Columbus Crew, and how many years did each play for?", "question_toks": ["What", "are", "the", "players", "who", "played", "for", "Columbus", "Crew", ",", "and", "how", "many", "years", "did", "each", "play", "for", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 21, false], null], [0, 5, false], null]], "table_units": [["table_unit", 3], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"Columbus Crew\"", null]]}}, {"db_id": "match_season", "query": "SELECT POSITION ,  COUNT(*) FROM match_season GROUP BY POSITION", "query_toks": ["SELECT", "POSITION", ",", "COUNT", "(", "*", ")", "FROM", "match_season", "GROUP", "BY", "POSITION"], "query_toks_no_value": ["select", "position", ",", "count", "(", "*", ")", "from", "match_season", "group", "by", "position"], "question": "Show the position of players and the corresponding number of players.", "question_toks": ["Show", "the", "position", "of", "players", "and", "the", "corresponding", "number", "of", "players", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "match_season", "query": "SELECT POSITION ,  COUNT(*) FROM match_season GROUP BY POSITION", "query_toks": ["SELECT", "POSITION", ",", "COUNT", "(", "*", ")", "FROM", "match_season", "GROUP", "BY", "POSITION"], "query_toks_no_value": ["select", "position", ",", "count", "(", "*", ")", "from", "match_season", "group", "by", "position"], "question": "How many players played each position?", "question_toks": ["How", "many", "players", "played", "each", "position", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "match_season", "query": "SELECT Country_name ,  COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country GROUP BY T1.Country_name", "query_toks": ["SELECT", "Country_name", ",", "COUNT", "(", "*", ")", "FROM", "country", "AS", "T1", "JOIN", "match_season", "AS", "T2", "ON", "T1.Country_id", "=", "T2.Country", "GROUP", "BY", "T1.Country_name"], "query_toks_no_value": ["select", "country_name", ",", "count", "(", "*", ")", "from", "country", "as", "t1", "join", "match_season", "as", "t2", "on", "t1", ".", "country_id", "=", "t2", ".", "country", "group", "by", "t1", ".", "country_name"], "question": "Show the country names and the corresponding number of players.", "question_toks": ["Show", "the", "country", "names", "and", "the", "corresponding", "number", "of", "players", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "match_season", "query": "SELECT Country_name ,  COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country GROUP BY T1.Country_name", "query_toks": ["SELECT", "Country_name", ",", "COUNT", "(", "*", ")", "FROM", "country", "AS", "T1", "JOIN", "match_season", "AS", "T2", "ON", "T1.Country_id", "=", "T2.Country", "GROUP", "BY", "T1.Country_name"], "query_toks_no_value": ["select", "country_name", ",", "count", "(", "*", ")", "from", "country", "as", "t1", "join", "match_season", "as", "t2", "on", "t1", ".", "country_id", "=", "t2", ".", "country", "group", "by", "t1", ".", "country_name"], "question": "How many players are from each country?", "question_toks": ["How", "many", "players", "are", "from", "each", "country", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "climbing", "query": "SELECT T1.Name ,  T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID", "query_toks": ["SELECT", "T1.Name", ",", "T2.Name", "FROM", "climber", "AS", "T1", "JOIN", "mountain", "AS", "T2", "ON", "T1.Mountain_ID", "=", "T2.Mountain_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "name", "from", "climber", "as", "t1", "join", "mountain", "as", "t2", "on", "t1", ".", "mountain_id", "=", "t2", ".", "mountain_id"], "question": "Show names of climbers and the names of mountains they climb.", "question_toks": ["Show", "names", "of", "climbers", "and", "the", "names", "of", "mountains", "they", "climb", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 12, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "climbing", "query": "SELECT T1.Name ,  T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID", "query_toks": ["SELECT", "T1.Name", ",", "T2.Name", "FROM", "climber", "AS", "T1", "JOIN", "mountain", "AS", "T2", "ON", "T1.Mountain_ID", "=", "T2.Mountain_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "name", "from", "climber", "as", "t1", "join", "mountain", "as", "t2", "on", "t1", ".", "mountain_id", "=", "t2", ".", "mountain_id"], "question": "What are the names of climbers and the corresponding names of mountains that they climb?", "question_toks": ["What", "are", "the", "names", "of", "climbers", "and", "the", "corresponding", "names", "of", "mountains", "that", "they", "climb", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 12, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "climbing", "query": "SELECT T1.Name ,  T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID", "query_toks": ["SELECT", "T1.Name", ",", "T2.Height", "FROM", "climber", "AS", "T1", "JOIN", "mountain", "AS", "T2", "ON", "T1.Mountain_ID", "=", "T2.Mountain_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "height", "from", "climber", "as", "t1", "join", "mountain", "as", "t2", "on", "t1", ".", "mountain_id", "=", "t2", ".", "mountain_id"], "question": "Show the names of climbers and the heights of mountains they climb.", "question_toks": ["Show", "the", "names", "of", "climbers", "and", "the", "heights", "of", "mountains", "they", "climb", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 12, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "climbing", "query": "SELECT T1.Name ,  T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID", "query_toks": ["SELECT", "T1.Name", ",", "T2.Height", "FROM", "climber", "AS", "T1", "JOIN", "mountain", "AS", "T2", "ON", "T1.Mountain_ID", "=", "T2.Mountain_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "height", "from", "climber", "as", "t1", "join", "mountain", "as", "t2", "on", "t1", ".", "mountain_id", "=", "t2", ".", "mountain_id"], "question": "What are the names of climbers and the corresponding heights of the mountains that they climb?", "question_toks": ["What", "are", "the", "names", "of", "climbers", "and", "the", "corresponding", "heights", "of", "the", "mountains", "that", "they", "climb", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 12, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "climbing", "query": "SELECT Country ,  COUNT(*) FROM climber GROUP BY Country", "query_toks": ["SELECT", "Country", ",", "COUNT", "(", "*", ")", "FROM", "climber", "GROUP", "BY", "Country"], "query_toks_no_value": ["select", "country", ",", "count", "(", "*", ")", "from", "climber", "group", "by", "country"], "question": "Please show the countries and the number of climbers from each country.", "question_toks": ["Please", "show", "the", "countries", "and", "the", "number", "of", "climbers", "from", "each", "country", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "climbing", "query": "SELECT Country ,  COUNT(*) FROM climber GROUP BY Country", "query_toks": ["SELECT", "Country", ",", "COUNT", "(", "*", ")", "FROM", "climber", "GROUP", "BY", "Country"], "query_toks_no_value": ["select", "country", ",", "count", "(", "*", ")", "from", "climber", "group", "by", "country"], "question": "How many climbers are from each country?", "question_toks": ["How", "many", "climbers", "are", "from", "each", "country", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "body_builder", "query": "SELECT Snatch ,  Clean_Jerk FROM body_builder ORDER BY Snatch ASC", "query_toks": ["SELECT", "Snatch", ",", "Clean_Jerk", "FROM", "body_builder", "ORDER", "BY", "Snatch", "ASC"], "query_toks_no_value": ["select", "snatch", ",", "clean_jerk", "from", "body_builder", "order", "by", "snatch", "asc"], "question": "List the snatch score and clean jerk score of body builders in ascending order of snatch score.", "question_toks": ["List", "the", "snatch", "score", "and", "clean", "jerk", "score", "of", "body", "builders", "in", "ascending", "order", "of", "snatch", "score", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 3, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "body_builder", "query": "SELECT T2.Birth_Date ,  T2.Birth_Place FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Total DESC LIMIT 1", "query_toks": ["SELECT", "T2.Birth_Date", ",", "T2.Birth_Place", "FROM", "body_builder", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "ORDER", "BY", "T1.Total", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "birth_date", ",", "t2", ".", "birth_place", "from", "body_builder", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "order", "by", "t1", ".", "total", "desc", "limit", "value"], "question": "What are the birth date and birth place of the body builder with the highest total points?", "question_toks": ["What", "are", "the", "birth", "date", "and", "birth", "place", "of", "the", "body", "builder", "with", "the", "highest", "total", "points", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 2, false], null], [0, 6, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "body_builder", "query": "SELECT Birth_Place ,  COUNT(*) FROM people GROUP BY Birth_Place", "query_toks": ["SELECT", "Birth_Place", ",", "COUNT", "(", "*", ")", "FROM", "people", "GROUP", "BY", "Birth_Place"], "query_toks_no_value": ["select", "birth_place", ",", "count", "(", "*", ")", "from", "people", "group", "by", "birth_place"], "question": "List each birth place along with the number of people from there.", "question_toks": ["List", "each", "birth", "place", "along", "with", "the", "number", "of", "people", "from", "there", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 11, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "body_builder", "query": "SELECT Height ,  Weight FROM people ORDER BY Height DESC", "query_toks": ["SELECT", "Height", ",", "Weight", "FROM", "people", "ORDER", "BY", "Height", "DESC"], "query_toks_no_value": ["select", "height", ",", "weight", "from", "people", "order", "by", "height", "desc"], "question": "List the height and weight of people in descending order of height.", "question_toks": ["List", "the", "height", "and", "weight", "of", "people", "in", "descending", "order", "of", "height", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 8, false], null]]], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "body_builder", "query": "SELECT Name ,  birth_place FROM people EXCEPT SELECT T1.Name ,  T1.birth_place FROM people AS T1 JOIN body_builder AS T2 ON T1.people_id  =  T2.people_id", "query_toks": ["SELECT", "Name", ",", "birth_place", "FROM", "people", "EXCEPT", "SELECT", "T1.Name", ",", "T1.birth_place", "FROM", "people", "AS", "T1", "JOIN", "body_builder", "AS", "T2", "ON", "T1.people_id", "=", "T2.people_id"], "query_toks_no_value": ["select", "name", ",", "birth_place", "from", "people", "except", "select", "t1", ".", "name", ",", "t1", ".", "birth_place", "from", "people", "as", "t1", "join", "body_builder", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id"], "question": "List the names and origins of people who are not body builders.", "question_toks": ["List", "the", "names", "and", "origins", "of", "people", "who", "are", "not", "body", "builders", "."], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 2, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "election_representative", "query": "SELECT Date ,  Vote_Percent FROM election", "query_toks": ["SELECT", "Date", ",", "Vote_Percent", "FROM", "election"], "query_toks_no_value": ["select", "date", ",", "vote_percent", "from", "election"], "question": "List the dates and vote percents of elections.", "question_toks": ["List", "the", "dates", "and", "vote", "percents", "of", "elections", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "election_representative", "query": "SELECT min(Vote_Percent) ,  max(Vote_Percent) FROM election", "query_toks": ["SELECT", "min", "(", "Vote_Percent", ")", ",", "max", "(", "Vote_Percent", ")", "FROM", "election"], "query_toks_no_value": ["select", "min", "(", "vote_percent", ")", ",", "max", "(", "vote_percent", ")", "from", "election"], "question": "What are the minimum and maximum vote percents of elections?", "question_toks": ["What", "are", "the", "minimum", "and", "maximum", "vote", "percents", "of", "elections", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 5, false], null]], [1, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "election_representative", "query": "SELECT Name ,  Party FROM representative", "query_toks": ["SELECT", "Name", ",", "Party", "FROM", "representative"], "query_toks_no_value": ["select", "name", ",", "party", "from", "representative"], "question": "What are the names and parties of representatives?", "question_toks": ["What", "are", "the", "names", "and", "parties", "of", "representatives", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "election_representative", "query": "SELECT T2.Name ,  T1.Date FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID", "query_toks": ["SELECT", "T2.Name", ",", "T1.Date", "FROM", "election", "AS", "T1", "JOIN", "representative", "AS", "T2", "ON", "T1.Representative_ID", "=", "T2.Representative_ID"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t1", ".", "date", "from", "election", "as", "t1", "join", "representative", "as", "t2", "on", "t1", ".", "representative_id", "=", "t2", ".", "representative_id"], "question": "What are the names of representatives and the dates of elections they participated in.", "question_toks": ["What", "are", "the", "names", "of", "representatives", "and", "the", "dates", "of", "elections", "they", "participated", "in", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 2, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "election_representative", "query": "SELECT Party ,  COUNT(*) FROM representative GROUP BY Party", "query_toks": ["SELECT", "Party", ",", "COUNT", "(", "*", ")", "FROM", "representative", "GROUP", "BY", "Party"], "query_toks_no_value": ["select", "party", ",", "count", "(", "*", ")", "from", "representative", "group", "by", "party"], "question": "What are the different parties of representative? Show the party name and the number of representatives in each party.", "question_toks": ["What", "are", "the", "different", "parties", "of", "representative", "?", "Show", "the", "party", "name", "and", "the", "number", "of", "representatives", "in", "each", "party", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 11, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "election_representative", "query": "SELECT Party ,  COUNT(*) FROM representative GROUP BY Party ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Party", ",", "COUNT", "(", "*", ")", "FROM", "representative", "GROUP", "BY", "Party", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "party", ",", "count", "(", "*", ")", "from", "representative", "group", "by", "party", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the party that has the largest number of representatives?", "question_toks": ["What", "is", "the", "party", "that", "has", "the", "largest", "number", "of", "representatives", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 11, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 11, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "apartment_rentals", "query": "SELECT booking_start_date ,  booking_end_date FROM Apartment_Bookings", "query_toks": ["SELECT", "booking_start_date", ",", "booking_end_date", "FROM", "Apartment_Bookings"], "query_toks_no_value": ["select", "booking_start_date", ",", "booking_end_date", "from", "apartment_bookings"], "question": "Show the start dates and end dates of all the apartment bookings.", "question_toks": ["Show", "the", "start", "dates", "and", "end", "dates", "of", "all", "the", "apartment", "bookings", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 27, false], null]]]], "union": null, "where": []}}, {"db_id": "apartment_rentals", "query": "SELECT booking_start_date ,  booking_end_date FROM Apartment_Bookings", "query_toks": ["SELECT", "booking_start_date", ",", "booking_end_date", "FROM", "Apartment_Bookings"], "query_toks_no_value": ["select", "booking_start_date", ",", "booking_end_date", "from", "apartment_bookings"], "question": "What are the start date and end date of each apartment booking?", "question_toks": ["What", "are", "the", "start", "date", "and", "end", "date", "of", "each", "apartment", "booking", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 27, false], null]]]], "union": null, "where": []}}, {"db_id": "apartment_rentals", "query": "SELECT building_address ,  building_phone FROM Apartment_Buildings WHERE building_manager\t =  \"Brenden\"", "query_toks": ["SELECT", "building_address", ",", "building_phone", "FROM", "Apartment_Buildings", "WHERE", "building_manager", "=", "``", "Brenden", "''"], "query_toks_no_value": ["select", "building_address", ",", "building_phone", "from", "apartment_buildings", "where", "building_manager", "=", "value"], "question": "Show the addresses and phones of all the buildings managed by \"Brenden\".", "question_toks": ["Show", "the", "addresses", "and", "phones", "of", "all", "the", "buildings", "managed", "by", "``", "Brenden", "''", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"Brenden\"", null]]}}, {"db_id": "apartment_rentals", "query": "SELECT building_address ,  building_phone FROM Apartment_Buildings WHERE building_manager\t =  \"Brenden\"", "query_toks": ["SELECT", "building_address", ",", "building_phone", "FROM", "Apartment_Buildings", "WHERE", "building_manager", "=", "``", "Brenden", "''"], "query_toks_no_value": ["select", "building_address", ",", "building_phone", "from", "apartment_buildings", "where", "building_manager", "=", "value"], "question": "What are the address and phone number of the buildings managed by \"Brenden\"?", "question_toks": ["What", "are", "the", "address", "and", "phone", "number", "of", "the", "buildings", "managed", "by", "``", "Brenden", "''", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"Brenden\"", null]]}}, {"db_id": "apartment_rentals", "query": "SELECT min(bathroom_count) ,  max(bathroom_count) FROM Apartments", "query_toks": ["SELECT", "min", "(", "bathroom_count", ")", ",", "max", "(", "bathroom_count", ")", "FROM", "Apartments"], "query_toks_no_value": ["select", "min", "(", "bathroom_count", ")", ",", "max", "(", "bathroom_count", ")", "from", "apartments"], "question": "What is the minimum and maximum number of bathrooms of all the apartments?", "question_toks": ["What", "is", "the", "minimum", "and", "maximum", "number", "of", "bathrooms", "of", "all", "the", "apartments", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 12, false], null]], [1, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "apartment_rentals", "query": "SELECT min(bathroom_count) ,  max(bathroom_count) FROM Apartments", "query_toks": ["SELECT", "min", "(", "bathroom_count", ")", ",", "max", "(", "bathroom_count", ")", "FROM", "Apartments"], "query_toks_no_value": ["select", "min", "(", "bathroom_count", ")", ",", "max", "(", "bathroom_count", ")", "from", "apartments"], "question": "Give me the minimum and maximum bathroom count among all the apartments.", "question_toks": ["Give", "me", "the", "minimum", "and", "maximum", "bathroom", "count", "among", "all", "the", "apartments", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 12, false], null]], [1, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "apartment_rentals", "query": "SELECT apt_number ,  room_count FROM Apartments", "query_toks": ["SELECT", "apt_number", ",", "room_count", "FROM", "Apartments"], "query_toks_no_value": ["select", "apt_number", ",", "room_count", "from", "apartments"], "question": "Return the apartment number and the number of rooms for each apartment.", "question_toks": ["Return", "the", "apartment", "number", "and", "the", "number", "of", "rooms", "for", "each", "apartment", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "apartment_rentals", "query": "SELECT apt_number ,  room_count FROM Apartments", "query_toks": ["SELECT", "apt_number", ",", "room_count", "FROM", "Apartments"], "query_toks_no_value": ["select", "apt_number", ",", "room_count", "from", "apartments"], "question": "What are the apartment number and the room count of each apartment?", "question_toks": ["What", "are", "the", "apartment", "number", "and", "the", "room", "count", "of", "each", "apartment", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "apartment_rentals", "query": "SELECT guest_first_name ,  guest_last_name FROM Guests", "query_toks": ["SELECT", "guest_first_name", ",", "guest_last_name", "FROM", "Guests"], "query_toks_no_value": ["select", "guest_first_name", ",", "guest_last_name", "from", "guests"], "question": "Return the first names and last names of all guests", "question_toks": ["Return", "the", "first", "names", "and", "last", "names", "of", "all", "guests"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 20, false], null]]]], "union": null, "where": []}}, {"db_id": "apartment_rentals", "query": "SELECT guest_first_name ,  guest_last_name FROM Guests", "query_toks": ["SELECT", "guest_first_name", ",", "guest_last_name", "FROM", "Guests"], "query_toks_no_value": ["select", "guest_first_name", ",", "guest_last_name", "from", "guests"], "question": "What are the first names and last names of all the guests?", "question_toks": ["What", "are", "the", "first", "names", "and", "last", "names", "of", "all", "the", "guests", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 20, false], null]]]], "union": null, "where": []}}, {"db_id": "apartment_rentals", "query": "SELECT T2.apt_number ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id", "query_toks": ["SELECT", "T2.apt_number", ",", "T1.booking_start_date", ",", "T1.booking_start_date", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id"], "query_toks_no_value": ["select", "t2", ".", "apt_number", ",", "t1", ".", "booking_start_date", ",", "t1", ".", "booking_start_date", "from", "apartment_bookings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id"], "question": "Show the apartment numbers, start dates, and end dates of all the apartment bookings.", "question_toks": ["Show", "the", "apartment", "numbers", ",", "start", "dates", ",", "and", "end", "dates", "of", "all", "the", "apartment", "bookings", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 23, false], null], [0, 8, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 26, false], null]], [0, [0, [0, 26, false], null]]]], "union": null, "where": []}}, {"db_id": "apartment_rentals", "query": "SELECT T2.apt_number ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id", "query_toks": ["SELECT", "T2.apt_number", ",", "T1.booking_start_date", ",", "T1.booking_start_date", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id"], "query_toks_no_value": ["select", "t2", ".", "apt_number", ",", "t1", ".", "booking_start_date", ",", "t1", ".", "booking_start_date", "from", "apartment_bookings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id"], "question": "What are the apartment number, start date, and end date of each apartment booking?", "question_toks": ["What", "are", "the", "apartment", "number", ",", "start", "date", ",", "and", "end", "date", "of", "each", "apartment", "booking", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 23, false], null], [0, 8, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 26, false], null]], [0, [0, [0, 26, false], null]]]], "union": null, "where": []}}, {"db_id": "apartment_rentals", "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_type_code  =  \"Duplex\"", "query_toks": ["SELECT", "T1.booking_start_date", ",", "T1.booking_start_date", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id", "WHERE", "T2.apt_type_code", "=", "``", "Duplex", "''"], "query_toks_no_value": ["select", "t1", ".", "booking_start_date", ",", "t1", ".", "booking_start_date", "from", "apartment_bookings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id", "where", "t2", ".", "apt_type_code", "=", "value"], "question": "What are the booking start and end dates of the apartments with type code \"Duplex\"?", "question_toks": ["What", "are", "the", "booking", "start", "and", "end", "dates", "of", "the", "apartments", "with", "type", "code", "``", "Duplex", "''", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 23, false], null], [0, 8, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 26, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Duplex\"", null]]}}, {"db_id": "apartment_rentals", "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_type_code  =  \"Duplex\"", "query_toks": ["SELECT", "T1.booking_start_date", ",", "T1.booking_start_date", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id", "WHERE", "T2.apt_type_code", "=", "``", "Duplex", "''"], "query_toks_no_value": ["select", "t1", ".", "booking_start_date", ",", "t1", ".", "booking_start_date", "from", "apartment_bookings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id", "where", "t2", ".", "apt_type_code", "=", "value"], "question": "Return the booking start date and end date for the apartments that have type code \"Duplex\".", "question_toks": ["Return", "the", "booking", "start", "date", "and", "end", "date", "for", "the", "apartments", "that", "have", "type", "code", "``", "Duplex", "''", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 23, false], null], [0, 8, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 26, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Duplex\"", null]]}}, {"db_id": "apartment_rentals", "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  2", "query_toks": ["SELECT", "T1.booking_start_date", ",", "T1.booking_start_date", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id", "WHERE", "T2.bedroom_count", ">", "2"], "query_toks_no_value": ["select", "t1", ".", "booking_start_date", ",", "t1", ".", "booking_start_date", "from", "apartment_bookings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id", "where", "t2", ".", "bedroom_count", ">", "value"], "question": "What are the booking start and end dates of the apartments with more than 2 bedrooms?", "question_toks": ["What", "are", "the", "booking", "start", "and", "end", "dates", "of", "the", "apartments", "with", "more", "than", "2", "bedrooms", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 23, false], null], [0, 8, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 26, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 13, false], null], 2.0, null]]}}, {"db_id": "apartment_rentals", "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  2", "query_toks": ["SELECT", "T1.booking_start_date", ",", "T1.booking_start_date", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id", "WHERE", "T2.bedroom_count", ">", "2"], "query_toks_no_value": ["select", "t1", ".", "booking_start_date", ",", "t1", ".", "booking_start_date", "from", "apartment_bookings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id", "where", "t2", ".", "bedroom_count", ">", "value"], "question": "Find the booking start date and end date for the apartments that have more than two bedrooms.", "question_toks": ["Find", "the", "booking", "start", "date", "and", "end", "date", "for", "the", "apartments", "that", "have", "more", "than", "two", "bedrooms", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 23, false], null], [0, 8, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 26, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 13, false], null], 2.0, null]]}}, {"db_id": "apartment_rentals", "query": "SELECT T2.guest_first_name ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id", "query_toks": ["SELECT", "T2.guest_first_name", ",", "T1.booking_start_date", ",", "T1.booking_start_date", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Guests", "AS", "T2", "ON", "T1.guest_id", "=", "T2.guest_id"], "query_toks_no_value": ["select", "t2", ".", "guest_first_name", ",", "t1", ".", "booking_start_date", ",", "t1", ".", "booking_start_date", "from", "apartment_bookings", "as", "t1", "join", "guests", "as", "t2", "on", "t1", ".", "guest_id", "=", "t2", ".", "guest_id"], "question": "Show the guest first names, start dates, and end dates of all the apartment bookings.", "question_toks": ["Show", "the", "guest", "first", "names", ",", "start", "dates", ",", "and", "end", "dates", "of", "all", "the", "apartment", "bookings", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 24, false], null], [0, 17, false], null]], "table_units": [["table_unit", 4], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 26, false], null]], [0, [0, [0, 26, false], null]]]], "union": null, "where": []}}, {"db_id": "apartment_rentals", "query": "SELECT T2.guest_first_name ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id", "query_toks": ["SELECT", "T2.guest_first_name", ",", "T1.booking_start_date", ",", "T1.booking_start_date", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Guests", "AS", "T2", "ON", "T1.guest_id", "=", "T2.guest_id"], "query_toks_no_value": ["select", "t2", ".", "guest_first_name", ",", "t1", ".", "booking_start_date", ",", "t1", ".", "booking_start_date", "from", "apartment_bookings", "as", "t1", "join", "guests", "as", "t2", "on", "t1", ".", "guest_id", "=", "t2", ".", "guest_id"], "question": "What are the guest first name, start date, and end date of each apartment booking?", "question_toks": ["What", "are", "the", "guest", "first", "name", ",", "start", "date", ",", "and", "end", "date", "of", "each", "apartment", "booking", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 24, false], null], [0, 17, false], null]], "table_units": [["table_unit", 4], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 26, false], null]], [0, [0, [0, 26, false], null]]]], "union": null, "where": []}}, {"db_id": "apartment_rentals", "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T2.gender_code  =  \"Female\"", "query_toks": ["SELECT", "T1.booking_start_date", ",", "T1.booking_start_date", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Guests", "AS", "T2", "ON", "T1.guest_id", "=", "T2.guest_id", "WHERE", "T2.gender_code", "=", "``", "Female", "''"], "query_toks_no_value": ["select", "t1", ".", "booking_start_date", ",", "t1", ".", "booking_start_date", "from", "apartment_bookings", "as", "t1", "join", "guests", "as", "t2", "on", "t1", ".", "guest_id", "=", "t2", ".", "guest_id", "where", "t2", ".", "gender_code", "=", "value"], "question": "Show the start dates and end dates of all the apartment bookings made by guests with gender code \"Female\".", "question_toks": ["Show", "the", "start", "dates", "and", "end", "dates", "of", "all", "the", "apartment", "bookings", "made", "by", "guests", "with", "gender", "code", "``", "Female", "''", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 24, false], null], [0, 17, false], null]], "table_units": [["table_unit", 4], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 26, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 18, false], null], "\"Female\"", null]]}}, {"db_id": "apartment_rentals", "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T2.gender_code  =  \"Female\"", "query_toks": ["SELECT", "T1.booking_start_date", ",", "T1.booking_start_date", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Guests", "AS", "T2", "ON", "T1.guest_id", "=", "T2.guest_id", "WHERE", "T2.gender_code", "=", "``", "Female", "''"], "query_toks_no_value": ["select", "t1", ".", "booking_start_date", ",", "t1", ".", "booking_start_date", "from", "apartment_bookings", "as", "t1", "join", "guests", "as", "t2", "on", "t1", ".", "guest_id", "=", "t2", ".", "guest_id", "where", "t2", ".", "gender_code", "=", "value"], "question": "What are the start date and end date of the apartment bookings made by female guests (gender code \"Female\")?", "question_toks": ["What", "are", "the", "start", "date", "and", "end", "date", "of", "the", "apartment", "bookings", "made", "by", "female", "guests", "(", "gender", "code", "``", "Female", "''", ")", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 24, false], null], [0, 17, false], null]], "table_units": [["table_unit", 4], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 26, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 18, false], null], "\"Female\"", null]]}}, {"db_id": "apartment_rentals", "query": "SELECT T2.guest_first_name ,  T2.guest_last_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T1.booking_status_code  =  \"Confirmed\"", "query_toks": ["SELECT", "T2.guest_first_name", ",", "T2.guest_last_name", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Guests", "AS", "T2", "ON", "T1.guest_id", "=", "T2.guest_id", "WHERE", "T1.booking_status_code", "=", "``", "Confirmed", "''"], "query_toks_no_value": ["select", "t2", ".", "guest_first_name", ",", "t2", ".", "guest_last_name", "from", "apartment_bookings", "as", "t1", "join", "guests", "as", "t2", "on", "t1", ".", "guest_id", "=", "t2", ".", "guest_id", "where", "t1", ".", "booking_status_code", "=", "value"], "question": "Show the first names and last names of all the guests that have apartment bookings with status code \"Confirmed\".", "question_toks": ["Show", "the", "first", "names", "and", "last", "names", "of", "all", "the", "guests", "that", "have", "apartment", "bookings", "with", "status", "code", "``", "Confirmed", "''", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 24, false], null], [0, 17, false], null]], "table_units": [["table_unit", 4], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 20, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 25, false], null], "\"Confirmed\"", null]]}}, {"db_id": "apartment_rentals", "query": "SELECT T2.guest_first_name ,  T2.guest_last_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T1.booking_status_code  =  \"Confirmed\"", "query_toks": ["SELECT", "T2.guest_first_name", ",", "T2.guest_last_name", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Guests", "AS", "T2", "ON", "T1.guest_id", "=", "T2.guest_id", "WHERE", "T1.booking_status_code", "=", "``", "Confirmed", "''"], "query_toks_no_value": ["select", "t2", ".", "guest_first_name", ",", "t2", ".", "guest_last_name", "from", "apartment_bookings", "as", "t1", "join", "guests", "as", "t2", "on", "t1", ".", "guest_id", "=", "t2", ".", "guest_id", "where", "t1", ".", "booking_status_code", "=", "value"], "question": "Which guests have apartment bookings with status code \"Confirmed\"? Return their first names and last names.", "question_toks": ["Which", "guests", "have", "apartment", "bookings", "with", "status", "code", "``", "Confirmed", "''", "?", "Return", "their", "first", "names", "and", "last", "names", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 24, false], null], [0, 17, false], null]], "table_units": [["table_unit", 4], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 20, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 25, false], null], "\"Confirmed\"", null]]}}, {"db_id": "apartment_rentals", "query": "SELECT T2.apt_type_code ,  T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_manager  =  \"Kyle\"", "query_toks": ["SELECT", "T2.apt_type_code", ",", "T2.apt_number", "FROM", "Apartment_Buildings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.building_id", "=", "T2.building_id", "WHERE", "T1.building_manager", "=", "``", "Kyle", "''"], "query_toks_no_value": ["select", "t2", ".", "apt_type_code", ",", "t2", ".", "apt_number", "from", "apartment_buildings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "building_id", "=", "t2", ".", "building_id", "where", "t1", ".", "building_manager", "=", "value"], "question": "Show the apartment type codes and apartment numbers in the buildings managed by \"Kyle\".", "question_toks": ["Show", "the", "apartment", "type", "codes", "and", "apartment", "numbers", "in", "the", "buildings", "managed", "by", "``", "Kyle", "''", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"Kyle\"", null]]}}, {"db_id": "apartment_rentals", "query": "SELECT T2.apt_type_code ,  T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_manager  =  \"Kyle\"", "query_toks": ["SELECT", "T2.apt_type_code", ",", "T2.apt_number", "FROM", "Apartment_Buildings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.building_id", "=", "T2.building_id", "WHERE", "T1.building_manager", "=", "``", "Kyle", "''"], "query_toks_no_value": ["select", "t2", ".", "apt_type_code", ",", "t2", ".", "apt_number", "from", "apartment_buildings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "building_id", "=", "t2", ".", "building_id", "where", "t1", ".", "building_manager", "=", "value"], "question": "What apartment type codes and apartment numbers do the buildings managed by \"Kyle\" have?", "question_toks": ["What", "apartment", "type", "codes", "and", "apartment", "numbers", "do", "the", "buildings", "managed", "by", "``", "Kyle", "''", "have", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"Kyle\"", null]]}}, {"db_id": "apartment_rentals", "query": "SELECT \tbooking_status_code ,  COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code", "query_toks": ["SELECT", "booking_status_code", ",", "COUNT", "(", "*", ")", "FROM", "Apartment_Bookings", "GROUP", "BY", "booking_status_code"], "query_toks_no_value": ["select", "booking_status_code", ",", "count", "(", "*", ")", "from", "apartment_bookings", "group", "by", "booking_status_code"], "question": "Show the booking status code and the corresponding number of bookings.", "question_toks": ["Show", "the", "booking", "status", "code", "and", "the", "corresponding", "number", "of", "bookings", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 25, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 25, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "apartment_rentals", "query": "SELECT \tbooking_status_code ,  COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code", "query_toks": ["SELECT", "booking_status_code", ",", "COUNT", "(", "*", ")", "FROM", "Apartment_Bookings", "GROUP", "BY", "booking_status_code"], "query_toks_no_value": ["select", "booking_status_code", ",", "count", "(", "*", ")", "from", "apartment_bookings", "group", "by", "booking_status_code"], "question": "How many bookings does each booking status have? List the booking status code and the number of corresponding bookings.", "question_toks": ["How", "many", "bookings", "does", "each", "booking", "status", "have", "?", "List", "the", "booking", "status", "code", "and", "the", "number", "of", "corresponding", "bookings", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 25, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 25, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "apartment_rentals", "query": "SELECT apt_type_code ,  COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC", "query_toks": ["SELECT", "apt_type_code", ",", "COUNT", "(", "*", ")", "FROM", "Apartments", "GROUP", "BY", "apt_type_code", "ORDER", "BY", "COUNT", "(", "*", ")", "ASC"], "query_toks_no_value": ["select", "apt_type_code", ",", "count", "(", "*", ")", "from", "apartments", "group", "by", "apt_type_code", "order", "by", "count", "(", "*", ")", "asc"], "question": "Show the apartment type codes and the corresponding number of apartments sorted by the number of apartments in ascending order.", "question_toks": ["Show", "the", "apartment", "type", "codes", "and", "the", "corresponding", "number", "of", "apartments", "sorted", "by", "the", "number", "of", "apartments", "in", "ascending", "order", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "apartment_rentals", "query": "SELECT apt_type_code ,  COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC", "query_toks": ["SELECT", "apt_type_code", ",", "COUNT", "(", "*", ")", "FROM", "Apartments", "GROUP", "BY", "apt_type_code", "ORDER", "BY", "COUNT", "(", "*", ")", "ASC"], "query_toks_no_value": ["select", "apt_type_code", ",", "count", "(", "*", ")", "from", "apartments", "group", "by", "apt_type_code", "order", "by", "count", "(", "*", ")", "asc"], "question": "Return each apartment type code with the number of apartments having that apartment type, in ascending order of the number of apartments.", "question_toks": ["Return", "each", "apartment", "type", "code", "with", "the", "number", "of", "apartments", "having", "that", "apartment", "type", ",", "in", "ascending", "order", "of", "the", "number", "of", "apartments", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "apartment_rentals", "query": "SELECT apt_type_code ,  bathroom_count ,  bedroom_count FROM Apartments GROUP BY apt_type_code ORDER BY sum(room_count) DESC LIMIT 1", "query_toks": ["SELECT", "apt_type_code", ",", "bathroom_count", ",", "bedroom_count", "FROM", "Apartments", "GROUP", "BY", "apt_type_code", "ORDER", "BY", "sum", "(", "room_count", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "apt_type_code", ",", "bathroom_count", ",", "bedroom_count", "from", "apartments", "group", "by", "apt_type_code", "order", "by", "sum", "(", "room_count", ")", "desc", "limit", "value"], "question": "Show the apartment type code that has the largest number of total rooms, together with the number of bathrooms and number of bedrooms.", "question_toks": ["Show", "the", "apartment", "type", "code", "that", "has", "the", "largest", "number", "of", "total", "rooms", ",", "together", "with", "the", "number", "of", "bathrooms", "and", "number", "of", "bedrooms", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [4, 14, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "apartment_rentals", "query": "SELECT apt_type_code ,  bathroom_count ,  bedroom_count FROM Apartments GROUP BY apt_type_code ORDER BY sum(room_count) DESC LIMIT 1", "query_toks": ["SELECT", "apt_type_code", ",", "bathroom_count", ",", "bedroom_count", "FROM", "Apartments", "GROUP", "BY", "apt_type_code", "ORDER", "BY", "sum", "(", "room_count", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "apt_type_code", ",", "bathroom_count", ",", "bedroom_count", "from", "apartments", "group", "by", "apt_type_code", "order", "by", "sum", "(", "room_count", ")", "desc", "limit", "value"], "question": "Which apartment type has the largest number of total rooms? Return the apartment type code, its number of bathrooms and number of bedrooms.", "question_toks": ["Which", "apartment", "type", "has", "the", "largest", "number", "of", "total", "rooms", "?", "Return", "the", "apartment", "type", "code", ",", "its", "number", "of", "bathrooms", "and", "number", "of", "bedrooms", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [4, 14, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "apartment_rentals", "query": "SELECT apt_type_code ,  max(room_count) ,  min(room_count) FROM Apartments GROUP BY apt_type_code", "query_toks": ["SELECT", "apt_type_code", ",", "max", "(", "room_count", ")", ",", "min", "(", "room_count", ")", "FROM", "Apartments", "GROUP", "BY", "apt_type_code"], "query_toks_no_value": ["select", "apt_type_code", ",", "max", "(", "room_count", ")", ",", "min", "(", "room_count", ")", "from", "apartments", "group", "by", "apt_type_code"], "question": "Show each apartment type code, and the maximum and minimum number of rooms for each type.", "question_toks": ["Show", "each", "apartment", "type", "code", ",", "and", "the", "maximum", "and", "minimum", "number", "of", "rooms", "for", "each", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [1, [0, [0, 14, false], null]], [2, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "apartment_rentals", "query": "SELECT apt_type_code ,  max(room_count) ,  min(room_count) FROM Apartments GROUP BY apt_type_code", "query_toks": ["SELECT", "apt_type_code", ",", "max", "(", "room_count", ")", ",", "min", "(", "room_count", ")", "FROM", "Apartments", "GROUP", "BY", "apt_type_code"], "query_toks_no_value": ["select", "apt_type_code", ",", "max", "(", "room_count", ")", ",", "min", "(", "room_count", ")", "from", "apartments", "group", "by", "apt_type_code"], "question": "Return each apartment type code along with the maximum and minimum number of rooms among each type.", "question_toks": ["Return", "each", "apartment", "type", "code", "along", "with", "the", "maximum", "and", "minimum", "number", "of", "rooms", "among", "each", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [1, [0, [0, 14, false], null]], [2, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "apartment_rentals", "query": "SELECT gender_code ,  COUNT(*) FROM Guests GROUP BY gender_code ORDER BY COUNT(*) DESC", "query_toks": ["SELECT", "gender_code", ",", "COUNT", "(", "*", ")", "FROM", "Guests", "GROUP", "BY", "gender_code", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "gender_code", ",", "count", "(", "*", ")", "from", "guests", "group", "by", "gender_code", "order", "by", "count", "(", "*", ")", "desc"], "question": "Show each gender code and the corresponding count of guests sorted by the count in descending order.", "question_toks": ["Show", "each", "gender", "code", "and", "the", "corresponding", "count", "of", "guests", "sorted", "by", "the", "count", "in", "descending", "order", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 18, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 18, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "apartment_rentals", "query": "SELECT gender_code ,  COUNT(*) FROM Guests GROUP BY gender_code ORDER BY COUNT(*) DESC", "query_toks": ["SELECT", "gender_code", ",", "COUNT", "(", "*", ")", "FROM", "Guests", "GROUP", "BY", "gender_code", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "gender_code", ",", "count", "(", "*", ")", "from", "guests", "group", "by", "gender_code", "order", "by", "count", "(", "*", ")", "desc"], "question": "Sort the gender codes in descending order of their corresponding number of guests. Return both the gender codes and counts.", "question_toks": ["Sort", "the", "gender", "codes", "in", "descending", "order", "of", "their", "corresponding", "number", "of", "guests", ".", "Return", "both", "the", "gender", "codes", "and", "counts", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 18, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 18, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "game_injury", "query": "SELECT season ,  home_team ,  away_team FROM game", "query_toks": ["SELECT", "season", ",", "home_team", ",", "away_team", "FROM", "game"], "query_toks_no_value": ["select", "season", ",", "home_team", ",", "away_team", "from", "game"], "question": "List the season, home team, away team of all the games.", "question_toks": ["List", "the", "season", ",", "home", "team", ",", "away", "team", "of", "all", "the", "games", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "game_injury", "query": "SELECT max(home_games) ,  min(home_games) ,  avg(home_games) FROM stadium", "query_toks": ["SELECT", "max", "(", "home_games", ")", ",", "min", "(", "home_games", ")", ",", "avg", "(", "home_games", ")", "FROM", "stadium"], "query_toks_no_value": ["select", "max", "(", "home_games", ")", ",", "min", "(", "home_games", ")", ",", "avg", "(", "home_games", ")", "from", "stadium"], "question": "What are the maximum, minimum and average home games each stadium held?", "question_toks": ["What", "are", "the", "maximum", ",", "minimum", "and", "average", "home", "games", "each", "stadium", "held", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 3, false], null]], [2, [0, [0, 3, false], null]], [5, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "game_injury", "query": "SELECT player ,  number_of_matches ,  SOURCE FROM injury_accident WHERE injury != 'Knee problem'", "query_toks": ["SELECT", "player", ",", "number_of_matches", ",", "SOURCE", "FROM", "injury_accident", "WHERE", "injury", "!", "=", "'Knee", "problem", "'"], "query_toks_no_value": ["select", "player", ",", "number_of_matches", ",", "source", "from", "injury_accident", "where", "injury", "!", "=", "value"], "question": "What are the player name, number of matches, and information source for players who do not suffer from injury of 'Knee problem'?", "question_toks": ["What", "are", "the", "player", "name", ",", "number", "of", "matches", ",", "and", "information", "source", "for", "players", "who", "do", "not", "suffer", "from", "injury", "of", "'Knee", "problem", "'", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 19, false], null]], [0, [0, [0, 20, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 18, false], null], "\"Knee problem\"", null]]}}, {"db_id": "game_injury", "query": "SELECT T1.id ,  T1.score ,  T1.date FROM game AS T1 JOIN injury_accident AS T2 ON T2.game_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.id", ",", "T1.score", ",", "T1.date", "FROM", "game", "AS", "T1", "JOIN", "injury_accident", "AS", "T2", "ON", "T2.game_id", "=", "T1.id", "GROUP", "BY", "T1.id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "score", ",", "t1", ".", "date", "from", "game", "as", "t1", "join", "injury_accident", "as", "t2", "on", "t2", ".", "game_id", "=", "t1", ".", "id", "group", "by", "t1", ".", "id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the ids, scores, and dates of the games which caused at least two injury accidents?", "question_toks": ["What", "are", "the", "ids", ",", "scores", ",", "and", "dates", "of", "the", "games", "which", "caused", "at", "least", "two", "injury", "accidents", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 8, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 13, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "game_injury", "query": "SELECT T1.id ,  T1.name FROM stadium AS T1 JOIN game AS T2 ON T1.id  =  T2.stadium_id JOIN injury_accident AS T3 ON T2.id  =  T3.game_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.id", ",", "T1.name", "FROM", "stadium", "AS", "T1", "JOIN", "game", "AS", "T2", "ON", "T1.id", "=", "T2.stadium_id", "JOIN", "injury_accident", "AS", "T3", "ON", "T2.id", "=", "T3.game_id", "GROUP", "BY", "T1.id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "name", "from", "stadium", "as", "t1", "join", "game", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "stadium_id", "join", "injury_accident", "as", "t3", "on", "t2", ".", "id", "=", "t3", ".", "game_id", "group", "by", "t1", ".", "id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the id and name of the stadium where the most injury accidents happened?", "question_toks": ["What", "are", "the", "id", "and", "name", "of", "the", "stadium", "where", "the", "most", "injury", "accidents", "happened", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "game_injury", "query": "SELECT T1.id ,  T1.name FROM stadium AS T1 JOIN game AS T2 ON T1.id  =  T2.stadium_id JOIN injury_accident AS T3 ON T2.id  =  T3.game_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.id", ",", "T1.name", "FROM", "stadium", "AS", "T1", "JOIN", "game", "AS", "T2", "ON", "T1.id", "=", "T2.stadium_id", "JOIN", "injury_accident", "AS", "T3", "ON", "T2.id", "=", "T3.game_id", "GROUP", "BY", "T1.id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "name", "from", "stadium", "as", "t1", "join", "game", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "stadium_id", "join", "injury_accident", "as", "t3", "on", "t2", ".", "id", "=", "t3", ".", "game_id", "group", "by", "t1", ".", "id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the id and name of the stadium where the largest number of injury accidents occurred.", "question_toks": ["Find", "the", "id", "and", "name", "of", "the", "stadium", "where", "the", "largest", "number", "of", "injury", "accidents", "occurred", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "game_injury", "query": "SELECT T1.season ,  T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id WHERE T3.injury  =  'Foot injury' OR T3.injury  =  'Knee problem'", "query_toks": ["SELECT", "T1.season", ",", "T2.name", "FROM", "game", "AS", "T1", "JOIN", "stadium", "AS", "T2", "ON", "T1.stadium_id", "=", "T2.id", "JOIN", "injury_accident", "AS", "T3", "ON", "T1.id", "=", "T3.game_id", "WHERE", "T3.injury", "=", "'Foot", "injury", "'", "OR", "T3.injury", "=", "'Knee", "problem", "'"], "query_toks_no_value": ["select", "t1", ".", "season", ",", "t2", ".", "name", "from", "game", "as", "t1", "join", "stadium", "as", "t2", "on", "t1", ".", "stadium_id", "=", "t2", ".", "id", "join", "injury_accident", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "game_id", "where", "t3", ".", "injury", "=", "value", "or", "t3", ".", "injury", "=", "value"], "question": "In which season and which stadium did any player have an injury of 'Foot injury' or 'Knee problem'?", "question_toks": ["In", "which", "season", "and", "which", "stadium", "did", "any", "player", "have", "an", "injury", "of", "'Foot", "injury", "'", "or", "'Knee", "problem", "'", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 18, false], null], "\"Foot injury\"", null], "or", [false, 2, [0, [0, 18, false], null], "\"Knee problem\"", null]]}}, {"db_id": "game_injury", "query": "SELECT name ,  average_attendance ,  total_attendance FROM stadium EXCEPT SELECT T2.name ,  T2.average_attendance ,  T2.total_attendance FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id", "query_toks": ["SELECT", "name", ",", "average_attendance", ",", "total_attendance", "FROM", "stadium", "EXCEPT", "SELECT", "T2.name", ",", "T2.average_attendance", ",", "T2.total_attendance", "FROM", "game", "AS", "T1", "JOIN", "stadium", "AS", "T2", "ON", "T1.stadium_id", "=", "T2.id", "JOIN", "injury_accident", "AS", "T3", "ON", "T1.id", "=", "T3.game_id"], "query_toks_no_value": ["select", "name", ",", "average_attendance", ",", "total_attendance", "from", "stadium", "except", "select", "t2", ".", "name", ",", "t2", ".", "average_attendance", ",", "t2", ".", "total_attendance", "from", "game", "as", "t1", "join", "stadium", "as", "t2", "on", "t1", ".", "stadium_id", "=", "t2", ".", "id", "join", "injury_accident", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "game_id"], "question": "Show the name, average attendance, total attendance for stadiums where no accidents happened.", "question_toks": ["Show", "the", "name", ",", "average", "attendance", ",", "total", "attendance", "for", "stadiums", "where", "no", "accidents", "happened", "."], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "game_injury", "query": "SELECT T1.id ,  count(*) FROM stadium AS T1 JOIN game AS T2 ON T1.id  =  T2.stadium_id GROUP BY T1.id", "query_toks": ["SELECT", "T1.id", ",", "count", "(", "*", ")", "FROM", "stadium", "AS", "T1", "JOIN", "game", "AS", "T2", "ON", "T1.id", "=", "T2.stadium_id", "GROUP", "BY", "T1.id"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "count", "(", "*", ")", "from", "stadium", "as", "t1", "join", "game", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "stadium_id", "group", "by", "t1", ".", "id"], "question": "How many games has each stadium held?", "question_toks": ["How", "many", "games", "has", "each", "stadium", "held", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "game_injury", "query": "SELECT T1.date ,  T2.player FROM game AS T1 JOIN injury_accident AS T2 ON T1.id  =  T2.game_id ORDER BY T1.season DESC", "query_toks": ["SELECT", "T1.date", ",", "T2.player", "FROM", "game", "AS", "T1", "JOIN", "injury_accident", "AS", "T2", "ON", "T1.id", "=", "T2.game_id", "ORDER", "BY", "T1.season", "DESC"], "query_toks_no_value": ["select", "t1", ".", "date", ",", "t2", ".", "player", "from", "game", "as", "t1", "join", "injury_accident", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "game_id", "order", "by", "t1", ".", "season", "desc"], "question": "For each injury accident, find the date of the game and the name of the injured player in the game, and sort the results in descending order of game season.", "question_toks": ["For", "each", "injury", "accident", ",", "find", "the", "date", "of", "the", "game", "and", "the", "name", "of", "the", "injured", "player", "in", "the", "game", ",", "and", "sort", "the", "results", "in", "descending", "order", "of", "game", "season", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 15, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 9, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "soccer_1", "query": "SELECT T1.name ,  T2.name FROM Country AS T1 JOIN League AS T2 ON T1.id  =  T2.country_id", "query_toks": ["SELECT", "T1.name", ",", "T2.name", "FROM", "Country", "AS", "T1", "JOIN", "League", "AS", "T2", "ON", "T1.id", "=", "T2.country_id"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "name", "from", "country", "as", "t1", "join", "league", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "country_id"], "question": "List all country and league names.", "question_toks": ["List", "all", "country", "and", "league", "names", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 55, false], null], [0, 53, false], null]], "table_units": [["table_unit", 4], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 56, false], null]], [0, [0, [0, 54, false], null]]]], "union": null, "where": []}}, {"db_id": "soccer_1", "query": "SELECT max(weight) ,  min(weight) FROM Player", "query_toks": ["SELECT", "max", "(", "weight", ")", ",", "min", "(", "weight", ")", "FROM", "Player"], "query_toks_no_value": ["select", "max", "(", "weight", ")", ",", "min", "(", "weight", ")", "from", "player"], "question": "What is the maximum and minimum height of all players?", "question_toks": ["What", "is", "the", "maximum", "and", "minimum", "height", "of", "all", "players", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 51, false], null]], [2, [0, [0, 51, false], null]]]], "union": null, "where": []}}, {"db_id": "soccer_1", "query": "SELECT preferred_foot ,  avg(overall_rating) FROM Player_Attributes GROUP BY preferred_foot", "query_toks": ["SELECT", "preferred_foot", ",", "avg", "(", "overall_rating", ")", "FROM", "Player_Attributes", "GROUP", "BY", "preferred_foot"], "query_toks_no_value": ["select", "preferred_foot", ",", "avg", "(", "overall_rating", ")", "from", "player_attributes", "group", "by", "preferred_foot"], "question": "What is the average rating for right-footed players and left-footed players?", "question_toks": ["What", "is", "the", "average", "rating", "for", "right-footed", "players", "and", "left-footed", "players", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [5, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "soccer_1", "query": "SELECT preferred_foot ,  count(*) FROM Player_Attributes WHERE overall_rating  >  80 GROUP BY preferred_foot", "query_toks": ["SELECT", "preferred_foot", ",", "count", "(", "*", ")", "FROM", "Player_Attributes", "WHERE", "overall_rating", ">", "80", "GROUP", "BY", "preferred_foot"], "query_toks_no_value": ["select", "preferred_foot", ",", "count", "(", "*", ")", "from", "player_attributes", "where", "overall_rating", ">", "value", "group", "by", "preferred_foot"], "question": "Of all players with an overall rating greater than 80, how many are right-footed and left-footed?", "question_toks": ["Of", "all", "players", "with", "an", "overall", "rating", "greater", "than", "80", ",", "how", "many", "are", "right-footed", "and", "left-footed", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 5, false], null], 80.0, null]]}}, {"db_id": "soccer_1", "query": "SELECT DISTINCT T1.player_name ,  T1.birthday FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id ORDER BY potential DESC LIMIT 5", "query_toks": ["SELECT", "DISTINCT", "T1.player_name", ",", "T1.birthday", "FROM", "Player", "AS", "T1", "JOIN", "Player_Attributes", "AS", "T2", "ON", "T1.player_api_id", "=", "T2.player_api_id", "ORDER", "BY", "potential", "DESC", "LIMIT", "5"], "query_toks_no_value": ["select", "distinct", "t1", ".", "player_name", ",", "t1", ".", "birthday", "from", "player", "as", "t1", "join", "player_attributes", "as", "t2", "on", "t1", ".", "player_api_id", "=", "t2", ".", "player_api_id", "order", "by", "potential", "desc", "limit", "value"], "question": "List the names and birthdays of the top five players in terms of potential.", "question_toks": ["List", "the", "names", "and", "birthdays", "of", "the", "top", "five", "players", "in", "terms", "of", "potential", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 46, false], null], [0, 3, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 5, "orderBy": ["desc", [[0, [0, 6, false], null]]], "select": [true, [[0, [0, [0, 47, false], null]], [0, [0, [0, 49, false], null]]]], "union": null, "where": []}}, {"db_id": "performance_attendance", "query": "SELECT Date ,  LOCATION FROM performance", "query_toks": ["SELECT", "Date", ",", "LOCATION", "FROM", "performance"], "query_toks_no_value": ["select", "date", ",", "location", "from", "performance"], "question": "What are the dates and locations of performances?", "question_toks": ["What", "are", "the", "dates", "and", "locations", "of", "performances", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "performance_attendance", "query": "SELECT LOCATION ,  COUNT(*) FROM performance GROUP BY LOCATION", "query_toks": ["SELECT", "LOCATION", ",", "COUNT", "(", "*", ")", "FROM", "performance", "GROUP", "BY", "LOCATION"], "query_toks_no_value": ["select", "location", ",", "count", "(", "*", ")", "from", "performance", "group", "by", "location"], "question": "Show different locations and the number of performances at each location.", "question_toks": ["Show", "different", "locations", "and", "the", "number", "of", "performances", "at", "each", "location", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "performance_attendance", "query": "SELECT T2.Name ,  T3.Location FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID", "query_toks": ["SELECT", "T2.Name", ",", "T3.Location", "FROM", "member_attendance", "AS", "T1", "JOIN", "member", "AS", "T2", "ON", "T1.Member_ID", "=", "T2.Member_ID", "JOIN", "performance", "AS", "T3", "ON", "T1.Performance_ID", "=", "T3.Performance_ID"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t3", ".", "location", "from", "member_attendance", "as", "t1", "join", "member", "as", "t2", "on", "t1", ".", "member_id", "=", "t2", ".", "member_id", "join", "performance", "as", "t3", "on", "t1", ".", "performance_id", "=", "t3", ".", "performance_id"], "question": "Show the names of members and the location of the performances they attended.", "question_toks": ["Show", "the", "names", "of", "members", "and", "the", "location", "of", "the", "performances", "they", "attended", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "performance_attendance", "query": "SELECT T2.Name ,  T3.Location FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID ORDER BY T2.Name ASC", "query_toks": ["SELECT", "T2.Name", ",", "T3.Location", "FROM", "member_attendance", "AS", "T1", "JOIN", "member", "AS", "T2", "ON", "T1.Member_ID", "=", "T2.Member_ID", "JOIN", "performance", "AS", "T3", "ON", "T1.Performance_ID", "=", "T3.Performance_ID", "ORDER", "BY", "T2.Name", "ASC"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t3", ".", "location", "from", "member_attendance", "as", "t1", "join", "member", "as", "t2", "on", "t1", ".", "member_id", "=", "t2", ".", "member_id", "join", "performance", "as", "t3", "on", "t1", ".", "performance_id", "=", "t3", ".", "performance_id", "order", "by", "t2", ".", "name", "asc"], "question": "Show the names of members and the location of performances they attended in ascending alphabetical order of their names.", "question_toks": ["Show", "the", "names", "of", "members", "and", "the", "location", "of", "performances", "they", "attended", "in", "ascending", "alphabetical", "order", "of", "their", "names", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 2, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "performance_attendance", "query": "SELECT T2.Name ,  T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID ORDER BY T3.Attendance DESC", "query_toks": ["SELECT", "T2.Name", ",", "T3.Date", "FROM", "member_attendance", "AS", "T1", "JOIN", "member", "AS", "T2", "ON", "T1.Member_ID", "=", "T2.Member_ID", "JOIN", "performance", "AS", "T3", "ON", "T1.Performance_ID", "=", "T3.Performance_ID", "ORDER", "BY", "T3.Attendance", "DESC"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t3", ".", "date", "from", "member_attendance", "as", "t1", "join", "member", "as", "t2", "on", "t1", ".", "member_id", "=", "t2", ".", "member_id", "join", "performance", "as", "t3", "on", "t1", ".", "performance_id", "=", "t3", ".", "performance_id", "order", "by", "t3", ".", "attendance", "desc"], "question": "Show the names of members and the dates of performances they attended in descending order of attendance of the performances.", "question_toks": ["Show", "the", "names", "of", "members", "and", "the", "dates", "of", "performances", "they", "attended", "in", "descending", "order", "of", "attendance", "of", "the", "performances", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 9, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "college_2", "query": "SELECT dept_name ,  building FROM department WHERE budget  >  (SELECT avg(budget) FROM department)", "query_toks": ["SELECT", "dept_name", ",", "building", "FROM", "department", "WHERE", "budget", ">", "(", "SELECT", "avg", "(", "budget", ")", "FROM", "department", ")"], "query_toks_no_value": ["select", "dept_name", ",", "building", "from", "department", "where", "budget", ">", "(", "select", "avg", "(", "budget", ")", "from", "department", ")"], "question": "What is the name and building of the departments whose budget is more than the average budget?", "question_toks": ["What", "is", "the", "name", "and", "building", "of", "the", "departments", "whose", "budget", "is", "more", "than", "the", "average", "budget", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 6, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 6, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "college_2", "query": "SELECT dept_name ,  building FROM department WHERE budget  >  (SELECT avg(budget) FROM department)", "query_toks": ["SELECT", "dept_name", ",", "building", "FROM", "department", "WHERE", "budget", ">", "(", "SELECT", "avg", "(", "budget", ")", "FROM", "department", ")"], "query_toks_no_value": ["select", "dept_name", ",", "building", "from", "department", "where", "budget", ">", "(", "select", "avg", "(", "budget", ")", "from", "department", ")"], "question": "Give the name and building of the departments with greater than average budget.", "question_toks": ["Give", "the", "name", "and", "building", "of", "the", "departments", "with", "greater", "than", "average", "budget", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 6, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 6, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "college_2", "query": "SELECT building ,  room_number FROM classroom WHERE capacity BETWEEN 50 AND 100", "query_toks": ["SELECT", "building", ",", "room_number", "FROM", "classroom", "WHERE", "capacity", "BETWEEN", "50", "AND", "100"], "query_toks_no_value": ["select", "building", ",", "room_number", "from", "classroom", "where", "capacity", "between", "value", "and", "value"], "question": "Find the room number of the rooms which can sit 50 to 100 students and their buildings.", "question_toks": ["Find", "the", "room", "number", "of", "the", "rooms", "which", "can", "sit", "50", "to", "100", "students", "and", "their", "buildings", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 1, [0, [0, 3, false], null], 50.0, 100.0]]}}, {"db_id": "college_2", "query": "SELECT building ,  room_number FROM classroom WHERE capacity BETWEEN 50 AND 100", "query_toks": ["SELECT", "building", ",", "room_number", "FROM", "classroom", "WHERE", "capacity", "BETWEEN", "50", "AND", "100"], "query_toks_no_value": ["select", "building", ",", "room_number", "from", "classroom", "where", "capacity", "between", "value", "and", "value"], "question": "What are the room numbers and corresponding buildings for classrooms which can seat between 50 to 100 students?", "question_toks": ["What", "are", "the", "room", "numbers", "and", "corresponding", "buildings", "for", "classrooms", "which", "can", "seat", "between", "50", "to", "100", "students", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 1, [0, [0, 3, false], null], 50.0, 100.0]]}}, {"db_id": "college_2", "query": "SELECT dept_name ,  building FROM department ORDER BY budget DESC LIMIT 1", "query_toks": ["SELECT", "dept_name", ",", "building", "FROM", "department", "ORDER", "BY", "budget", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "dept_name", ",", "building", "from", "department", "order", "by", "budget", "desc", "limit", "value"], "question": "Find the name and building of the department with the highest budget.", "question_toks": ["Find", "the", "name", "and", "building", "of", "the", "department", "with", "the", "highest", "budget", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "college_2", "query": "SELECT dept_name ,  building FROM department ORDER BY budget DESC LIMIT 1", "query_toks": ["SELECT", "dept_name", ",", "building", "FROM", "department", "ORDER", "BY", "budget", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "dept_name", ",", "building", "from", "department", "order", "by", "budget", "desc", "limit", "value"], "question": "What is the department name and corresponding building for the department with the greatest budget?", "question_toks": ["What", "is", "the", "department", "name", "and", "corresponding", "building", "for", "the", "department", "with", "the", "greatest", "budget", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "college_2", "query": "SELECT T1.title ,  T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  >  1", "query_toks": ["SELECT", "T1.title", ",", "T1.credits", ",", "T1.dept_name", "FROM", "course", "AS", "T1", "JOIN", "prereq", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id", "GROUP", "BY", "T2.course_id", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t1", ".", "credits", ",", "t1", ".", "dept_name", "from", "course", "as", "t1", "join", "prereq", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "group", "by", "t2", ".", "course_id", "having", "count", "(", "*", ")", ">", "value"], "question": "Find the title, credit, and department name of courses that have more than one prerequisites?", "question_toks": ["Find", "the", "title", ",", "credit", ",", "and", "department", "name", "of", "courses", "that", "have", "more", "than", "one", "prerequisites", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 45, false], null]], "table_units": [["table_unit", 2], ["table_unit", 10]]}, "groupBy": [[0, 45, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "college_2", "query": "SELECT T1.title ,  T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  >  1", "query_toks": ["SELECT", "T1.title", ",", "T1.credits", ",", "T1.dept_name", "FROM", "course", "AS", "T1", "JOIN", "prereq", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id", "GROUP", "BY", "T2.course_id", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t1", ".", "credits", ",", "t1", ".", "dept_name", "from", "course", "as", "t1", "join", "prereq", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "group", "by", "t2", ".", "course_id", "having", "count", "(", "*", ")", ">", "value"], "question": "What is the title, credit value, and department name for courses with more than one prerequisite?", "question_toks": ["What", "is", "the", "title", ",", "credit", "value", ",", "and", "department", "name", "for", "courses", "with", "more", "than", "one", "prerequisite", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 45, false], null]], "table_units": [["table_unit", 2], ["table_unit", 10]]}, "groupBy": [[0, 45, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "college_2", "query": "SELECT dept_name ,  budget FROM department WHERE budget  >  (SELECT avg(budget) FROM department)", "query_toks": ["SELECT", "dept_name", ",", "budget", "FROM", "department", "WHERE", "budget", ">", "(", "SELECT", "avg", "(", "budget", ")", "FROM", "department", ")"], "query_toks_no_value": ["select", "dept_name", ",", "budget", "from", "department", "where", "budget", ">", "(", "select", "avg", "(", "budget", ")", "from", "department", ")"], "question": "Find the name and budget of departments whose budgets are more than the average budget.", "question_toks": ["Find", "the", "name", "and", "budget", "of", "departments", "whose", "budgets", "are", "more", "than", "the", "average", "budget", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 6, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 6, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "college_2", "query": "SELECT dept_name ,  budget FROM department WHERE budget  >  (SELECT avg(budget) FROM department)", "query_toks": ["SELECT", "dept_name", ",", "budget", "FROM", "department", "WHERE", "budget", ">", "(", "SELECT", "avg", "(", "budget", ")", "FROM", "department", ")"], "query_toks_no_value": ["select", "dept_name", ",", "budget", "from", "department", "where", "budget", ">", "(", "select", "avg", "(", "budget", ")", "from", "department", ")"], "question": "What are the names and budgets of departments with budgets greater than the average?", "question_toks": ["What", "are", "the", "names", "and", "budgets", "of", "departments", "with", "budgets", "greater", "than", "the", "average", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 6, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 6, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "college_2", "query": "SELECT dept_name ,  building FROM department ORDER BY budget DESC", "query_toks": ["SELECT", "dept_name", ",", "building", "FROM", "department", "ORDER", "BY", "budget", "DESC"], "query_toks_no_value": ["select", "dept_name", ",", "building", "from", "department", "order", "by", "budget", "desc"], "question": "List the names and buildings of all departments sorted by the budget from large to small.", "question_toks": ["List", "the", "names", "and", "buildings", "of", "all", "departments", "sorted", "by", "the", "budget", "from", "large", "to", "small", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "college_2", "query": "SELECT dept_name ,  building FROM department ORDER BY budget DESC", "query_toks": ["SELECT", "dept_name", ",", "building", "FROM", "department", "ORDER", "BY", "budget", "DESC"], "query_toks_no_value": ["select", "dept_name", ",", "building", "from", "department", "order", "by", "budget", "desc"], "question": "What are the names and buildings of the deparments, sorted by budget descending?", "question_toks": ["What", "are", "the", "names", "and", "buildings", "of", "the", "deparments", ",", "sorted", "by", "budget", "descending", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "college_2", "query": "SELECT name ,  dept_name FROM student ORDER BY tot_cred", "query_toks": ["SELECT", "name", ",", "dept_name", "FROM", "student", "ORDER", "BY", "tot_cred"], "query_toks_no_value": ["select", "name", ",", "dept_name", "from", "student", "order", "by", "tot_cred"], "question": "Find the name of the students and their department names sorted by their total credits in ascending order.", "question_toks": ["Find", "the", "name", "of", "the", "students", "and", "their", "department", "names", "sorted", "by", "their", "total", "credits", "in", "ascending", "order", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 30, false], null]]], "select": [false, [[0, [0, [0, 28, false], null]], [0, [0, [0, 29, false], null]]]], "union": null, "where": []}}, {"db_id": "college_2", "query": "SELECT name ,  dept_name FROM student ORDER BY tot_cred", "query_toks": ["SELECT", "name", ",", "dept_name", "FROM", "student", "ORDER", "BY", "tot_cred"], "query_toks_no_value": ["select", "name", ",", "dept_name", "from", "student", "order", "by", "tot_cred"], "question": "What are the names of students and their respective departments, ordered by number of credits from least to greatest?", "question_toks": ["What", "are", "the", "names", "of", "students", "and", "their", "respective", "departments", ",", "ordered", "by", "number", "of", "credits", "from", "least", "to", "greatest", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 30, false], null]]], "select": [false, [[0, [0, [0, 28, false], null]], [0, [0, [0, 29, false], null]]]], "union": null, "where": []}}, {"db_id": "college_2", "query": "SELECT T1.title ,  T3.name FROM course AS T1 JOIN teaches AS T2 ON T1.course_id  =  T2.course_id JOIN instructor AS T3 ON T2.id  =  T3.id WHERE YEAR  =  2008 ORDER BY T1.title", "query_toks": ["SELECT", "T1.title", ",", "T3.name", "FROM", "course", "AS", "T1", "JOIN", "teaches", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id", "JOIN", "instructor", "AS", "T3", "ON", "T2.id", "=", "T3.id", "WHERE", "YEAR", "=", "2008", "ORDER", "BY", "T1.title"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t3", ".", "name", "from", "course", "as", "t1", "join", "teaches", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "join", "instructor", "as", "t3", "on", "t2", ".", "id", "=", "t3", ".", "id", "where", "year", "=", "value", "order", "by", "t1", ".", "title"], "question": "list in alphabetic order all course names and their instructors' names in year 2008.", "question_toks": ["list", "in", "alphabetic", "order", "all", "course", "names", "and", "their", "instructors", "'", "names", "in", "year", "2008", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 8, false], null]]], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 26, false], null], 2008.0, null]]}}, {"db_id": "college_2", "query": "SELECT T1.title ,  T3.name FROM course AS T1 JOIN teaches AS T2 ON T1.course_id  =  T2.course_id JOIN instructor AS T3 ON T2.id  =  T3.id WHERE YEAR  =  2008 ORDER BY T1.title", "query_toks": ["SELECT", "T1.title", ",", "T3.name", "FROM", "course", "AS", "T1", "JOIN", "teaches", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id", "JOIN", "instructor", "AS", "T3", "ON", "T2.id", "=", "T3.id", "WHERE", "YEAR", "=", "2008", "ORDER", "BY", "T1.title"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t3", ".", "name", "from", "course", "as", "t1", "join", "teaches", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "join", "instructor", "as", "t3", "on", "t2", ".", "id", "=", "t3", ".", "id", "where", "year", "=", "value", "order", "by", "t1", ".", "title"], "question": "Show all titles and their instructors' names for courses in 2008, in alphabetical order by title.", "question_toks": ["Show", "all", "titles", "and", "their", "instructors", "'", "names", "for", "courses", "in", "2008", ",", "in", "alphabetical", "order", "by", "title", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 23, false], null]], "table_units": [["table_unit", 2], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 8, false], null]]], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 26, false], null], 2008.0, null]]}}, {"db_id": "college_2", "query": "SELECT count(*) ,  building FROM classroom WHERE capacity  >  50 GROUP BY building", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "building", "FROM", "classroom", "WHERE", "capacity", ">", "50", "GROUP", "BY", "building"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "building", "from", "classroom", "where", "capacity", ">", "value", "group", "by", "building"], "question": "Find the number of rooms with more than 50 capacity for each building.", "question_toks": ["Find", "the", "number", "of", "rooms", "with", "more", "than", "50", "capacity", "for", "each", "building", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 3, false], null], 50.0, null]]}}, {"db_id": "college_2", "query": "SELECT count(*) ,  building FROM classroom WHERE capacity  >  50 GROUP BY building", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "building", "FROM", "classroom", "WHERE", "capacity", ">", "50", "GROUP", "BY", "building"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "building", "from", "classroom", "where", "capacity", ">", "value", "group", "by", "building"], "question": "How many rooms in each building have a capacity of over 50?", "question_toks": ["How", "many", "rooms", "in", "each", "building", "have", "a", "capacity", "of", "over", "50", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 3, false], null], 50.0, null]]}}, {"db_id": "college_2", "query": "SELECT max(capacity) ,  avg(capacity) ,  building FROM classroom GROUP BY building", "query_toks": ["SELECT", "max", "(", "capacity", ")", ",", "avg", "(", "capacity", ")", ",", "building", "FROM", "classroom", "GROUP", "BY", "building"], "query_toks_no_value": ["select", "max", "(", "capacity", ")", ",", "avg", "(", "capacity", ")", ",", "building", "from", "classroom", "group", "by", "building"], "question": "Find the maximum and average capacity among rooms in each building.", "question_toks": ["Find", "the", "maximum", "and", "average", "capacity", "among", "rooms", "in", "each", "building", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 3, false], null]], [5, [0, [0, 3, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": []}}, {"db_id": "college_2", "query": "SELECT max(capacity) ,  avg(capacity) ,  building FROM classroom GROUP BY building", "query_toks": ["SELECT", "max", "(", "capacity", ")", ",", "avg", "(", "capacity", ")", ",", "building", "FROM", "classroom", "GROUP", "BY", "building"], "query_toks_no_value": ["select", "max", "(", "capacity", ")", ",", "avg", "(", "capacity", ")", ",", "building", "from", "classroom", "group", "by", "building"], "question": "What are the greatest and average capacity for rooms in each building?", "question_toks": ["What", "are", "the", "greatest", "and", "average", "capacity", "for", "rooms", "in", "each", "building", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 3, false], null]], [5, [0, [0, 3, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": []}}, {"db_id": "college_2", "query": "SELECT sum(credits) ,  dept_name FROM course GROUP BY dept_name", "query_toks": ["SELECT", "sum", "(", "credits", ")", ",", "dept_name", "FROM", "course", "GROUP", "BY", "dept_name"], "query_toks_no_value": ["select", "sum", "(", "credits", ")", ",", "dept_name", "from", "course", "group", "by", "dept_name"], "question": "Find the total credits of courses provided by different department.", "question_toks": ["Find", "the", "total", "credits", "of", "courses", "provided", "by", "different", "department", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 10, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "college_2", "query": "SELECT sum(credits) ,  dept_name FROM course GROUP BY dept_name", "query_toks": ["SELECT", "sum", "(", "credits", ")", ",", "dept_name", "FROM", "course", "GROUP", "BY", "dept_name"], "query_toks_no_value": ["select", "sum", "(", "credits", ")", ",", "dept_name", "from", "course", "group", "by", "dept_name"], "question": "How many total credits are offered by each department?", "question_toks": ["How", "many", "total", "credits", "are", "offered", "by", "each", "department", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 10, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "college_2", "query": "SELECT min(salary) ,  dept_name FROM instructor GROUP BY dept_name HAVING avg(salary)  >  (SELECT avg(salary) FROM instructor)", "query_toks": ["SELECT", "min", "(", "salary", ")", ",", "dept_name", "FROM", "instructor", "GROUP", "BY", "dept_name", "HAVING", "avg", "(", "salary", ")", ">", "(", "SELECT", "avg", "(", "salary", ")", "FROM", "instructor", ")"], "query_toks_no_value": ["select", "min", "(", "salary", ")", ",", "dept_name", "from", "instructor", "group", "by", "dept_name", "having", "avg", "(", "salary", ")", ">", "(", "select", "avg", "(", "salary", ")", "from", "instructor", ")"], "question": "Find the minimum salary for the departments whose average salary is above the average payment of all instructors.", "question_toks": ["Find", "the", "minimum", "salary", "for", "the", "departments", "whose", "average", "salary", "is", "above", "the", "average", "payment", "of", "all", "instructors", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 13, false]], "having": [[false, 3, [0, [5, 14, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 14, false], null]]]], "union": null, "where": []}, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 14, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "college_2", "query": "SELECT min(salary) ,  dept_name FROM instructor GROUP BY dept_name HAVING avg(salary)  >  (SELECT avg(salary) FROM instructor)", "query_toks": ["SELECT", "min", "(", "salary", ")", ",", "dept_name", "FROM", "instructor", "GROUP", "BY", "dept_name", "HAVING", "avg", "(", "salary", ")", ">", "(", "SELECT", "avg", "(", "salary", ")", "FROM", "instructor", ")"], "query_toks_no_value": ["select", "min", "(", "salary", ")", ",", "dept_name", "from", "instructor", "group", "by", "dept_name", "having", "avg", "(", "salary", ")", ">", "(", "select", "avg", "(", "salary", ")", "from", "instructor", ")"], "question": "What is the lowest salary in departments with average salary greater than the overall average.", "question_toks": ["What", "is", "the", "lowest", "salary", "in", "departments", "with", "average", "salary", "greater", "than", "the", "overall", "average", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 13, false]], "having": [[false, 3, [0, [5, 14, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 14, false], null]]]], "union": null, "where": []}, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 14, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "college_2", "query": "SELECT count(*) ,  semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "semester", ",", "YEAR", "FROM", "SECTION", "GROUP", "BY", "semester", ",", "YEAR"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "semester", ",", "year", "from", "section", "group", "by", "semester", ",", "year"], "question": "Find the number of courses provided in each semester and year.", "question_toks": ["Find", "the", "number", "of", "courses", "provided", "in", "each", "semester", "and", "year", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 17, false], [0, 18, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 17, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": []}}, {"db_id": "college_2", "query": "SELECT count(*) ,  semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "semester", ",", "YEAR", "FROM", "SECTION", "GROUP", "BY", "semester", ",", "YEAR"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "semester", ",", "year", "from", "section", "group", "by", "semester", ",", "year"], "question": "How many courses are provided in each semester and year?", "question_toks": ["How", "many", "courses", "are", "provided", "in", "each", "semester", "and", "year", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 17, false], [0, 18, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 17, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": []}}, {"db_id": "college_2", "query": "SELECT semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "semester", ",", "YEAR", "FROM", "SECTION", "GROUP", "BY", "semester", ",", "YEAR", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "semester", ",", "year", "from", "section", "group", "by", "semester", ",", "year", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the year and semester when offers the largest number of courses.", "question_toks": ["Find", "the", "year", "and", "semester", "when", "offers", "the", "largest", "number", "of", "courses", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 17, false], [0, 18, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": []}}, {"db_id": "college_2", "query": "SELECT semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "semester", ",", "YEAR", "FROM", "SECTION", "GROUP", "BY", "semester", ",", "YEAR", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "semester", ",", "year", "from", "section", "group", "by", "semester", ",", "year", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the year and semester with the most courses?", "question_toks": ["What", "is", "the", "year", "and", "semester", "with", "the", "most", "courses", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 17, false], [0, 18, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": []}}, {"db_id": "college_2", "query": "SELECT count(*) ,  dept_name FROM student GROUP BY dept_name", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "dept_name", "FROM", "student", "GROUP", "BY", "dept_name"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "dept_name", "from", "student", "group", "by", "dept_name"], "question": "Find the total number of students in each department.", "question_toks": ["Find", "the", "total", "number", "of", "students", "in", "each", "department", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 29, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 29, false], null]]]], "union": null, "where": []}}, {"db_id": "college_2", "query": "SELECT count(*) ,  dept_name FROM student GROUP BY dept_name", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "dept_name", "FROM", "student", "GROUP", "BY", "dept_name"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "dept_name", "from", "student", "group", "by", "dept_name"], "question": "How many students are in each department?", "question_toks": ["How", "many", "students", "are", "in", "each", "department", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 29, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 29, false], null]]]], "union": null, "where": []}}, {"db_id": "college_2", "query": "SELECT semester ,  YEAR FROM takes GROUP BY semester ,  YEAR ORDER BY count(*) LIMIT 1", "query_toks": ["SELECT", "semester", ",", "YEAR", "FROM", "takes", "GROUP", "BY", "semester", ",", "YEAR", "ORDER", "BY", "count", "(", "*", ")", "LIMIT", "1"], "query_toks_no_value": ["select", "semester", ",", "year", "from", "takes", "group", "by", "semester", ",", "year", "order", "by", "count", "(", "*", ")", "limit", "value"], "question": "Find the semester and year which has the least number of student taking any class.", "question_toks": ["Find", "the", "semester", "and", "year", "which", "has", "the", "least", "number", "of", "student", "taking", "any", "class", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [[0, 34, false], [0, 35, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 35, false], null]]]], "union": null, "where": []}}, {"db_id": "college_2", "query": "SELECT semester ,  YEAR FROM takes GROUP BY semester ,  YEAR ORDER BY count(*) LIMIT 1", "query_toks": ["SELECT", "semester", ",", "YEAR", "FROM", "takes", "GROUP", "BY", "semester", ",", "YEAR", "ORDER", "BY", "count", "(", "*", ")", "LIMIT", "1"], "query_toks_no_value": ["select", "semester", ",", "year", "from", "takes", "group", "by", "semester", ",", "year", "order", "by", "count", "(", "*", ")", "limit", "value"], "question": "Which semeseter and year had the fewest students?", "question_toks": ["Which", "semeseter", "and", "year", "had", "the", "fewest", "students", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [[0, 34, false], [0, 35, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 35, false], null]]]], "union": null, "where": []}}, {"db_id": "college_2", "query": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'History'", "query_toks": ["SELECT", "T2.name", ",", "T2.salary", "FROM", "advisor", "AS", "T1", "JOIN", "instructor", "AS", "T2", "ON", "T1.i_id", "=", "T2.id", "JOIN", "student", "AS", "T3", "ON", "T1.s_id", "=", "T3.id", "WHERE", "T3.dept_name", "=", "'History", "'"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "salary", "from", "advisor", "as", "t1", "join", "instructor", "as", "t2", "on", "t1", ".", "i_id", "=", "t2", ".", "id", "join", "student", "as", "t3", "on", "t1", ".", "s_id", "=", "t3", ".", "id", "where", "t3", ".", "dept_name", "=", "value"], "question": "Find the name and salary of the instructors who are advisors of any student from History department?", "question_toks": ["Find", "the", "name", "and", "salary", "of", "the", "instructors", "who", "are", "advisors", "of", "any", "student", "from", "History", "department", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 38, false], null], [0, 11, false], null]], "table_units": [["table_unit", 8], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 29, false], null], "\"History\"", null]]}}, {"db_id": "college_2", "query": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'History'", "query_toks": ["SELECT", "T2.name", ",", "T2.salary", "FROM", "advisor", "AS", "T1", "JOIN", "instructor", "AS", "T2", "ON", "T1.i_id", "=", "T2.id", "JOIN", "student", "AS", "T3", "ON", "T1.s_id", "=", "T3.id", "WHERE", "T3.dept_name", "=", "'History", "'"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "salary", "from", "advisor", "as", "t1", "join", "instructor", "as", "t2", "on", "t1", ".", "i_id", "=", "t2", ".", "id", "join", "student", "as", "t3", "on", "t1", ".", "s_id", "=", "t3", ".", "id", "where", "t3", ".", "dept_name", "=", "value"], "question": "What are the names and salaries of instructors who advises students in the History department?", "question_toks": ["What", "are", "the", "names", "and", "salaries", "of", "instructors", "who", "advises", "students", "in", "the", "History", "department", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 38, false], null], [0, 11, false], null]], "table_units": [["table_unit", 8], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 29, false], null], "\"History\"", null]]}}, {"db_id": "college_2", "query": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math'", "query_toks": ["SELECT", "T2.name", ",", "T2.salary", "FROM", "advisor", "AS", "T1", "JOIN", "instructor", "AS", "T2", "ON", "T1.i_id", "=", "T2.id", "JOIN", "student", "AS", "T3", "ON", "T1.s_id", "=", "T3.id", "WHERE", "T3.dept_name", "=", "'Math", "'"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "salary", "from", "advisor", "as", "t1", "join", "instructor", "as", "t2", "on", "t1", ".", "i_id", "=", "t2", ".", "id", "join", "student", "as", "t3", "on", "t1", ".", "s_id", "=", "t3", ".", "id", "where", "t3", ".", "dept_name", "=", "value"], "question": "Find the name and salary of instructors who are advisors of the students from the Math department.", "question_toks": ["Find", "the", "name", "and", "salary", "of", "instructors", "who", "are", "advisors", "of", "the", "students", "from", "the", "Math", "department", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 38, false], null], [0, 11, false], null]], "table_units": [["table_unit", 8], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 29, false], null], "\"Math\"", null]]}}, {"db_id": "college_2", "query": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math'", "query_toks": ["SELECT", "T2.name", ",", "T2.salary", "FROM", "advisor", "AS", "T1", "JOIN", "instructor", "AS", "T2", "ON", "T1.i_id", "=", "T2.id", "JOIN", "student", "AS", "T3", "ON", "T1.s_id", "=", "T3.id", "WHERE", "T3.dept_name", "=", "'Math", "'"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "salary", "from", "advisor", "as", "t1", "join", "instructor", "as", "t2", "on", "t1", ".", "i_id", "=", "t2", ".", "id", "join", "student", "as", "t3", "on", "t1", ".", "s_id", "=", "t3", ".", "id", "where", "t3", ".", "dept_name", "=", "value"], "question": "What are the names and salaries of instructors who advise students in the Math department?", "question_toks": ["What", "are", "the", "names", "and", "salaries", "of", "instructors", "who", "advise", "students", "in", "the", "Math", "department", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 38, false], null], [0, 11, false], null]], "table_units": [["table_unit", 8], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 29, false], null], "\"Math\"", null]]}}, {"db_id": "college_2", "query": "SELECT avg(T1.salary) ,  count(*) FROM instructor AS T1 JOIN department AS T2 ON T1.dept_name  =  T2.dept_name ORDER BY T2.budget DESC LIMIT 1", "query_toks": ["SELECT", "avg", "(", "T1.salary", ")", ",", "count", "(", "*", ")", "FROM", "instructor", "AS", "T1", "JOIN", "department", "AS", "T2", "ON", "T1.dept_name", "=", "T2.dept_name", "ORDER", "BY", "T2.budget", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "avg", "(", "t1", ".", "salary", ")", ",", "count", "(", "*", ")", "from", "instructor", "as", "t1", "join", "department", "as", "t2", "on", "t1", ".", "dept_name", "=", "t2", ".", "dept_name", "order", "by", "t2", ".", "budget", "desc", "limit", "value"], "question": "Find the number and averaged salary of all instructors who are in the department with the highest budget.", "question_toks": ["Find", "the", "number", "and", "averaged", "salary", "of", "all", "instructors", "who", "are", "in", "the", "department", "with", "the", "highest", "budget", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 4, false], null]], "table_units": [["table_unit", 3], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 6, false], null]]], "select": [false, [[5, [0, [0, 14, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "college_2", "query": "SELECT avg(T1.salary) ,  count(*) FROM instructor AS T1 JOIN department AS T2 ON T1.dept_name  =  T2.dept_name ORDER BY T2.budget DESC LIMIT 1", "query_toks": ["SELECT", "avg", "(", "T1.salary", ")", ",", "count", "(", "*", ")", "FROM", "instructor", "AS", "T1", "JOIN", "department", "AS", "T2", "ON", "T1.dept_name", "=", "T2.dept_name", "ORDER", "BY", "T2.budget", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "avg", "(", "t1", ".", "salary", ")", ",", "count", "(", "*", ")", "from", "instructor", "as", "t1", "join", "department", "as", "t2", "on", "t1", ".", "dept_name", "=", "t2", ".", "dept_name", "order", "by", "t2", ".", "budget", "desc", "limit", "value"], "question": "How many instructors are in the department with the highest budget, and what is their average salary?", "question_toks": ["How", "many", "instructors", "are", "in", "the", "department", "with", "the", "highest", "budget", ",", "and", "what", "is", "their", "average", "salary", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 4, false], null]], "table_units": [["table_unit", 3], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 6, false], null]]], "select": [false, [[5, [0, [0, 14, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "college_2", "query": "SELECT T3.title ,  T3.credits FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building  =  T2.building AND T1.room_number  =  T2.room_number JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T1.capacity  =  (SELECT max(capacity) FROM classroom)", "query_toks": ["SELECT", "T3.title", ",", "T3.credits", "FROM", "classroom", "AS", "T1", "JOIN", "SECTION", "AS", "T2", "ON", "T1.building", "=", "T2.building", "AND", "T1.room_number", "=", "T2.room_number", "JOIN", "course", "AS", "T3", "ON", "T2.course_id", "=", "T3.course_id", "WHERE", "T1.capacity", "=", "(", "SELECT", "max", "(", "capacity", ")", "FROM", "classroom", ")"], "query_toks_no_value": ["select", "t3", ".", "title", ",", "t3", ".", "credits", "from", "classroom", "as", "t1", "join", "section", "as", "t2", "on", "t1", ".", "building", "=", "t2", ".", "building", "and", "t1", ".", "room_number", "=", "t2", ".", "room_number", "join", "course", "as", "t3", "on", "t2", ".", "course_id", "=", "t3", ".", "course_id", "where", "t1", ".", "capacity", "=", "(", "select", "max", "(", "capacity", ")", "from", "classroom", ")"], "question": "What is the title and credits of the course that is taught in the largest classroom (with the highest capacity)?", "question_toks": ["What", "is", "the", "title", "and", "credits", "of", "the", "course", "that", "is", "taught", "in", "the", "largest", "classroom", "(", "with", "the", "highest", "capacity", ")", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 19, false], null], "and", [false, 2, [0, [0, 2, false], null], [0, 20, false], null]], "table_units": [["table_unit", 0], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 3, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "college_2", "query": "SELECT T3.title ,  T3.credits FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building  =  T2.building AND T1.room_number  =  T2.room_number JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T1.capacity  =  (SELECT max(capacity) FROM classroom)", "query_toks": ["SELECT", "T3.title", ",", "T3.credits", "FROM", "classroom", "AS", "T1", "JOIN", "SECTION", "AS", "T2", "ON", "T1.building", "=", "T2.building", "AND", "T1.room_number", "=", "T2.room_number", "JOIN", "course", "AS", "T3", "ON", "T2.course_id", "=", "T3.course_id", "WHERE", "T1.capacity", "=", "(", "SELECT", "max", "(", "capacity", ")", "FROM", "classroom", ")"], "query_toks_no_value": ["select", "t3", ".", "title", ",", "t3", ".", "credits", "from", "classroom", "as", "t1", "join", "section", "as", "t2", "on", "t1", ".", "building", "=", "t2", ".", "building", "and", "t1", ".", "room_number", "=", "t2", ".", "room_number", "join", "course", "as", "t3", "on", "t2", ".", "course_id", "=", "t3", ".", "course_id", "where", "t1", ".", "capacity", "=", "(", "select", "max", "(", "capacity", ")", "from", "classroom", ")"], "question": "Give the title and credits for the course that is taught in the classroom with the greatest capacity.", "question_toks": ["Give", "the", "title", "and", "credits", "for", "the", "course", "that", "is", "taught", "in", "the", "classroom", "with", "the", "greatest", "capacity", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 19, false], null], "and", [false, 2, [0, [0, 2, false], null], [0, 20, false], null]], "table_units": [["table_unit", 0], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 3, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "college_2", "query": "SELECT count(DISTINCT T2.id) ,  count(DISTINCT T3.id) ,  T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name  =  T2.dept_name JOIN instructor AS T3 ON T1.dept_name  =  T3.dept_name GROUP BY T3.dept_name", "query_toks": ["SELECT", "count", "(", "DISTINCT", "T2.id", ")", ",", "count", "(", "DISTINCT", "T3.id", ")", ",", "T3.dept_name", "FROM", "department", "AS", "T1", "JOIN", "student", "AS", "T2", "ON", "T1.dept_name", "=", "T2.dept_name", "JOIN", "instructor", "AS", "T3", "ON", "T1.dept_name", "=", "T3.dept_name", "GROUP", "BY", "T3.dept_name"], "query_toks_no_value": ["select", "count", "(", "distinct", "t2", ".", "id", ")", ",", "count", "(", "distinct", "t3", ".", "id", ")", ",", "t3", ".", "dept_name", "from", "department", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "dept_name", "=", "t2", ".", "dept_name", "join", "instructor", "as", "t3", "on", "t1", ".", "dept_name", "=", "t3", ".", "dept_name", "group", "by", "t3", ".", "dept_name"], "question": "Find the total number of students and total number of instructors for each department.", "question_toks": ["Find", "the", "total", "number", "of", "students", "and", "total", "number", "of", "instructors", "for", "each", "department", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 29, false], null]], "table_units": [["table_unit", 1], ["table_unit", 6]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 27, true], null]], [3, [0, [0, 11, true], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "college_2", "query": "SELECT count(DISTINCT T2.id) ,  count(DISTINCT T3.id) ,  T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name  =  T2.dept_name JOIN instructor AS T3 ON T1.dept_name  =  T3.dept_name GROUP BY T3.dept_name", "query_toks": ["SELECT", "count", "(", "DISTINCT", "T2.id", ")", ",", "count", "(", "DISTINCT", "T3.id", ")", ",", "T3.dept_name", "FROM", "department", "AS", "T1", "JOIN", "student", "AS", "T2", "ON", "T1.dept_name", "=", "T2.dept_name", "JOIN", "instructor", "AS", "T3", "ON", "T1.dept_name", "=", "T3.dept_name", "GROUP", "BY", "T3.dept_name"], "query_toks_no_value": ["select", "count", "(", "distinct", "t2", ".", "id", ")", ",", "count", "(", "distinct", "t3", ".", "id", ")", ",", "t3", ".", "dept_name", "from", "department", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "dept_name", "=", "t2", ".", "dept_name", "join", "instructor", "as", "t3", "on", "t1", ".", "dept_name", "=", "t3", ".", "dept_name", "group", "by", "t3", ".", "dept_name"], "question": "How many students and instructors are in each department?", "question_toks": ["How", "many", "students", "and", "instructors", "are", "in", "each", "department", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 29, false], null]], "table_units": [["table_unit", 1], ["table_unit", 6]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 27, true], null]], [3, [0, [0, 11, true], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "college_2", "query": "SELECT name ,  salary FROM instructor WHERE salary  <  (SELECT avg(salary) FROM instructor WHERE dept_name  =  'Physics')", "query_toks": ["SELECT", "name", ",", "salary", "FROM", "instructor", "WHERE", "salary", "<", "(", "SELECT", "avg", "(", "salary", ")", "FROM", "instructor", "WHERE", "dept_name", "=", "'Physics", "'", ")"], "query_toks_no_value": ["select", "name", ",", "salary", "from", "instructor", "where", "salary", "<", "(", "select", "avg", "(", "salary", ")", "from", "instructor", "where", "dept_name", "=", "value", ")"], "question": "Find the name and salary of instructors whose salary is below the average salary of the instructors in the Physics department.", "question_toks": ["Find", "the", "name", "and", "salary", "of", "instructors", "whose", "salary", "is", "below", "the", "average", "salary", "of", "the", "instructors", "in", "the", "Physics", "department", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 14, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 13, false], null], "\"Physics\"", null]]}, null]]}}, {"db_id": "college_2", "query": "SELECT name ,  salary FROM instructor WHERE salary  <  (SELECT avg(salary) FROM instructor WHERE dept_name  =  'Physics')", "query_toks": ["SELECT", "name", ",", "salary", "FROM", "instructor", "WHERE", "salary", "<", "(", "SELECT", "avg", "(", "salary", ")", "FROM", "instructor", "WHERE", "dept_name", "=", "'Physics", "'", ")"], "query_toks_no_value": ["select", "name", ",", "salary", "from", "instructor", "where", "salary", "<", "(", "select", "avg", "(", "salary", ")", "from", "instructor", "where", "dept_name", "=", "value", ")"], "question": "What are the names and salaries for instructors who earn less than the average salary of instructors in the Physics department?", "question_toks": ["What", "are", "the", "names", "and", "salaries", "for", "instructors", "who", "earn", "less", "than", "the", "average", "salary", "of", "instructors", "in", "the", "Physics", "department", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 14, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 13, false], null], "\"Physics\"", null]]}, null]]}}, {"db_id": "college_2", "query": "SELECT T2.building ,  T2.room_number ,  T2.semester ,  T2.year FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE T1.dept_name  =  'Psychology' ORDER BY T1.title", "query_toks": ["SELECT", "T2.building", ",", "T2.room_number", ",", "T2.semester", ",", "T2.year", "FROM", "course", "AS", "T1", "JOIN", "SECTION", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id", "WHERE", "T1.dept_name", "=", "'Psychology", "'", "ORDER", "BY", "T1.title"], "query_toks_no_value": ["select", "t2", ".", "building", ",", "t2", ".", "room_number", ",", "t2", ".", "semester", ",", "t2", ".", "year", "from", "course", "as", "t1", "join", "section", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "where", "t1", ".", "dept_name", "=", "value", "order", "by", "t1", ".", "title"], "question": "Find the building, room number, semester and year of all courses offered by Psychology department sorted by course titles.", "question_toks": ["Find", "the", "building", ",", "room", "number", ",", "semester", "and", "year", "of", "all", "courses", "offered", "by", "Psychology", "department", "sorted", "by", "course", "titles", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 15, false], null]], "table_units": [["table_unit", 2], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 8, false], null]]], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 20, false], null]], [0, [0, [0, 17, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], "\"Psychology\"", null]]}}, {"db_id": "college_2", "query": "SELECT T2.building ,  T2.room_number ,  T2.semester ,  T2.year FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE T1.dept_name  =  'Psychology' ORDER BY T1.title", "query_toks": ["SELECT", "T2.building", ",", "T2.room_number", ",", "T2.semester", ",", "T2.year", "FROM", "course", "AS", "T1", "JOIN", "SECTION", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id", "WHERE", "T1.dept_name", "=", "'Psychology", "'", "ORDER", "BY", "T1.title"], "query_toks_no_value": ["select", "t2", ".", "building", ",", "t2", ".", "room_number", ",", "t2", ".", "semester", ",", "t2", ".", "year", "from", "course", "as", "t1", "join", "section", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "where", "t1", ".", "dept_name", "=", "value", "order", "by", "t1", ".", "title"], "question": "What are the building, room number, semester and year of courses in the Psychology department, sorted using course title?", "question_toks": ["What", "are", "the", "building", ",", "room", "number", ",", "semester", "and", "year", "of", "courses", "in", "the", "Psychology", "department", ",", "sorted", "using", "course", "title", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 15, false], null]], "table_units": [["table_unit", 2], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 8, false], null]]], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 20, false], null]], [0, [0, [0, 17, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], "\"Psychology\"", null]]}}, {"db_id": "college_2", "query": "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID", "query_toks": ["SELECT", "name", ",", "course_id", "FROM", "instructor", "AS", "T1", "JOIN", "teaches", "AS", "T2", "ON", "T1.ID", "=", "T2.ID"], "query_toks_no_value": ["select", "name", ",", "course_id", "from", "instructor", "as", "t1", "join", "teaches", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "id"], "question": "Find the names of all instructors who have taught some course and the course_id.", "question_toks": ["Find", "the", "names", "of", "all", "instructors", "who", "have", "taught", "some", "course", "and", "the", "course_id", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 22, false], null]], "table_units": [["table_unit", 3], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": []}}, {"db_id": "college_2", "query": "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID", "query_toks": ["SELECT", "name", ",", "course_id", "FROM", "instructor", "AS", "T1", "JOIN", "teaches", "AS", "T2", "ON", "T1.ID", "=", "T2.ID"], "query_toks_no_value": ["select", "name", ",", "course_id", "from", "instructor", "as", "t1", "join", "teaches", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "id"], "question": "What are the names of all instructors who have taught a course, as well as the corresponding course id?", "question_toks": ["What", "are", "the", "names", "of", "all", "instructors", "who", "have", "taught", "a", "course", ",", "as", "well", "as", "the", "corresponding", "course", "id", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 22, false], null]], "table_units": [["table_unit", 3], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": []}}, {"db_id": "college_2", "query": "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID WHERE T1.dept_name  =  'Art'", "query_toks": ["SELECT", "name", ",", "course_id", "FROM", "instructor", "AS", "T1", "JOIN", "teaches", "AS", "T2", "ON", "T1.ID", "=", "T2.ID", "WHERE", "T1.dept_name", "=", "'Art", "'"], "query_toks_no_value": ["select", "name", ",", "course_id", "from", "instructor", "as", "t1", "join", "teaches", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "id", "where", "t1", ".", "dept_name", "=", "value"], "question": "Find the names of all instructors in the Art department who have taught some course and the course_id.", "question_toks": ["Find", "the", "names", "of", "all", "instructors", "in", "the", "Art", "department", "who", "have", "taught", "some", "course", "and", "the", "course_id", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 22, false], null]], "table_units": [["table_unit", 3], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 13, false], null], "\"Art\"", null]]}}, {"db_id": "college_2", "query": "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID WHERE T1.dept_name  =  'Art'", "query_toks": ["SELECT", "name", ",", "course_id", "FROM", "instructor", "AS", "T1", "JOIN", "teaches", "AS", "T2", "ON", "T1.ID", "=", "T2.ID", "WHERE", "T1.dept_name", "=", "'Art", "'"], "query_toks_no_value": ["select", "name", ",", "course_id", "from", "instructor", "as", "t1", "join", "teaches", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "id", "where", "t1", ".", "dept_name", "=", "value"], "question": "What are the names of Art instructors who have taught a course, and the corresponding course id?", "question_toks": ["What", "are", "the", "names", "of", "Art", "instructors", "who", "have", "taught", "a", "course", ",", "and", "the", "corresponding", "course", "id", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 22, false], null]], "table_units": [["table_unit", 3], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 13, false], null], "\"Art\"", null]]}}, {"db_id": "college_2", "query": "SELECT dept_name ,  AVG (salary) FROM instructor GROUP BY dept_name HAVING AVG (salary)  >  42000", "query_toks": ["SELECT", "dept_name", ",", "AVG", "(", "salary", ")", "FROM", "instructor", "GROUP", "BY", "dept_name", "HAVING", "AVG", "(", "salary", ")", ">", "42000"], "query_toks_no_value": ["select", "dept_name", ",", "avg", "(", "salary", ")", "from", "instructor", "group", "by", "dept_name", "having", "avg", "(", "salary", ")", ">", "value"], "question": "Find the names and average salaries of all departments whose average salary is greater than 42000.", "question_toks": ["Find", "the", "names", "and", "average", "salaries", "of", "all", "departments", "whose", "average", "salary", "is", "greater", "than", "42000", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 13, false]], "having": [[false, 3, [0, [5, 14, false], null], 42000.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [5, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "college_2", "query": "SELECT dept_name ,  AVG (salary) FROM instructor GROUP BY dept_name HAVING AVG (salary)  >  42000", "query_toks": ["SELECT", "dept_name", ",", "AVG", "(", "salary", ")", "FROM", "instructor", "GROUP", "BY", "dept_name", "HAVING", "AVG", "(", "salary", ")", ">", "42000"], "query_toks_no_value": ["select", "dept_name", ",", "avg", "(", "salary", ")", "from", "instructor", "group", "by", "dept_name", "having", "avg", "(", "salary", ")", ">", "value"], "question": "What are the names and average salaries for departments with average salary higher than 42000?", "question_toks": ["What", "are", "the", "names", "and", "average", "salaries", "for", "departments", "with", "average", "salary", "higher", "than", "42000", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 13, false]], "having": [[false, 3, [0, [5, 14, false], null], 42000.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [5, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "debate", "query": "SELECT Date ,  Venue FROM debate", "query_toks": ["SELECT", "Date", ",", "Venue", "FROM", "debate"], "query_toks_no_value": ["select", "date", ",", "venue", "from", "debate"], "question": "What are the date and venue of each debate?", "question_toks": ["What", "are", "the", "date", "and", "venue", "of", "each", "debate", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "debate", "query": "SELECT Party ,  COUNT(*) FROM people GROUP BY Party", "query_toks": ["SELECT", "Party", ",", "COUNT", "(", "*", ")", "FROM", "people", "GROUP", "BY", "Party"], "query_toks_no_value": ["select", "party", ",", "count", "(", "*", ")", "from", "people", "group", "by", "party"], "question": "Show different parties of people along with the number of people in each party.", "question_toks": ["Show", "different", "parties", "of", "people", "along", "with", "the", "number", "of", "people", "in", "each", "party", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "debate", "query": "SELECT T3.Name ,  T2.Date ,  T2.Venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID", "query_toks": ["SELECT", "T3.Name", ",", "T2.Date", ",", "T2.Venue", "FROM", "debate_people", "AS", "T1", "JOIN", "debate", "AS", "T2", "ON", "T1.Debate_ID", "=", "T2.Debate_ID", "JOIN", "people", "AS", "T3", "ON", "T1.Affirmative", "=", "T3.People_ID"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "date", ",", "t2", ".", "venue", "from", "debate_people", "as", "t1", "join", "debate", "as", "t2", "on", "t1", ".", "debate_id", "=", "t2", ".", "debate_id", "join", "people", "as", "t3", "on", "t1", ".", "affirmative", "=", "t3", ".", "people_id"], "question": "Show the names of people, and dates and venues of debates they are on the affirmative side.", "question_toks": ["Show", "the", "names", "of", "people", ",", "and", "dates", "and", "venues", "of", "debates", "they", "are", "on", "the", "affirmative", "side", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "debate", "query": "SELECT T3.Name ,  T2.Date ,  T2.Venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Negative  =  T3.People_ID ORDER BY T3.Name ASC", "query_toks": ["SELECT", "T3.Name", ",", "T2.Date", ",", "T2.Venue", "FROM", "debate_people", "AS", "T1", "JOIN", "debate", "AS", "T2", "ON", "T1.Debate_ID", "=", "T2.Debate_ID", "JOIN", "people", "AS", "T3", "ON", "T1.Negative", "=", "T3.People_ID", "ORDER", "BY", "T3.Name", "ASC"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "date", ",", "t2", ".", "venue", "from", "debate_people", "as", "t1", "join", "debate", "as", "t2", "on", "t1", ".", "debate_id", "=", "t2", ".", "debate_id", "join", "people", "as", "t3", "on", "t1", ".", "negative", "=", "t3", ".", "people_id", "order", "by", "t3", ".", "name", "asc"], "question": "Show the names of people, and dates and venues of debates they are on the negative side, ordered in ascending alphabetical order of name.", "question_toks": ["Show", "the", "names", "of", "people", ",", "and", "dates", "and", "venues", "of", "debates", "they", "are", "on", "the", "negative", "side", ",", "ordered", "in", "ascending", "alphabetical", "order", "of", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 3, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "debate", "query": "SELECT T2.Name ,  COUNT(*) FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative  =  T2.People_ID GROUP BY T2.Name", "query_toks": ["SELECT", "T2.Name", ",", "COUNT", "(", "*", ")", "FROM", "debate_people", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.Affirmative", "=", "T2.People_ID", "GROUP", "BY", "T2.Name"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "debate_people", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "affirmative", "=", "t2", ".", "people_id", "group", "by", "t2", ".", "name"], "question": "Show the names of people and the number of times they have been on the affirmative side of debates.", "question_toks": ["Show", "the", "names", "of", "people", "and", "the", "number", "of", "times", "they", "have", "been", "on", "the", "affirmative", "side", "of", "debates", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "insurance_and_eClaims", "query": "SELECT sum(amount_piad) ,  avg(amount_piad) FROM claim_headers", "query_toks": ["SELECT", "sum", "(", "amount_piad", ")", ",", "avg", "(", "amount_piad", ")", "FROM", "claim_headers"], "query_toks_no_value": ["select", "sum", "(", "amount_piad", ")", ",", "avg", "(", "amount_piad", ")", "from", "claim_headers"], "question": "Find the total and average amount paid in claim headers.", "question_toks": ["Find", "the", "total", "and", "average", "amount", "paid", "in", "claim", "headers", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 17, false], null]], [5, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "insurance_and_eClaims", "query": "SELECT sum(amount_piad) ,  avg(amount_piad) FROM claim_headers", "query_toks": ["SELECT", "sum", "(", "amount_piad", ")", ",", "avg", "(", "amount_piad", ")", "FROM", "claim_headers"], "query_toks_no_value": ["select", "sum", "(", "amount_piad", ")", ",", "avg", "(", "amount_piad", ")", "from", "claim_headers"], "question": "What are the total amount and average amount paid in claim headers?", "question_toks": ["What", "are", "the", "total", "amount", "and", "average", "amount", "paid", "in", "claim", "headers", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 17, false], null]], [5, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "insurance_and_eClaims", "query": "SELECT policy_type_code ,  count(*) FROM policies GROUP BY policy_type_code", "query_toks": ["SELECT", "policy_type_code", ",", "count", "(", "*", ")", "FROM", "policies", "GROUP", "BY", "policy_type_code"], "query_toks_no_value": ["select", "policy_type_code", ",", "count", "(", "*", ")", "from", "policies", "group", "by", "policy_type_code"], "question": "Find the number of records of each policy type and its type code.", "question_toks": ["Find", "the", "number", "of", "records", "of", "each", "policy", "type", "and", "its", "type", "code", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "insurance_and_eClaims", "query": "SELECT policy_type_code ,  count(*) FROM policies GROUP BY policy_type_code", "query_toks": ["SELECT", "policy_type_code", ",", "count", "(", "*", ")", "FROM", "policies", "GROUP", "BY", "policy_type_code"], "query_toks_no_value": ["select", "policy_type_code", ",", "count", "(", "*", ")", "from", "policies", "group", "by", "policy_type_code"], "question": "For each policy type, return its type code and its count in the record.", "question_toks": ["For", "each", "policy", "type", ",", "return", "its", "type", "code", "and", "its", "count", "in", "the", "record", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT account_id ,  date_account_opened ,  account_name ,  other_account_details FROM Accounts", "query_toks": ["SELECT", "account_id", ",", "date_account_opened", ",", "account_name", ",", "other_account_details", "FROM", "Accounts"], "query_toks_no_value": ["select", "account_id", ",", "date_account_opened", ",", "account_name", ",", "other_account_details", "from", "accounts"], "question": "Show the id, the date of account opened, the account name, and other account detail for all accounts.", "question_toks": ["Show", "the", "id", ",", "the", "date", "of", "account", "opened", ",", "the", "account", "name", ",", "and", "other", "account", "detail", "for", "all", "accounts", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 22, false], null]], [0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT account_id ,  date_account_opened ,  account_name ,  other_account_details FROM Accounts", "query_toks": ["SELECT", "account_id", ",", "date_account_opened", ",", "account_name", ",", "other_account_details", "FROM", "Accounts"], "query_toks_no_value": ["select", "account_id", ",", "date_account_opened", ",", "account_name", ",", "other_account_details", "from", "accounts"], "question": "What are the ids, date opened, name, and other details for all accounts?", "question_toks": ["What", "are", "the", "ids", ",", "date", "opened", ",", "name", ",", "and", "other", "details", "for", "all", "accounts", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 22, false], null]], [0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT T1.account_id ,  T1.date_account_opened ,  T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  'Meaghan'", "query_toks": ["SELECT", "T1.account_id", ",", "T1.date_account_opened", ",", "T1.account_name", ",", "T1.other_account_details", "FROM", "Accounts", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T2.customer_first_name", "=", "'Meaghan", "'"], "query_toks_no_value": ["select", "t1", ".", "account_id", ",", "t1", ".", "date_account_opened", ",", "t1", ".", "account_name", ",", "t1", ".", "other_account_details", "from", "accounts", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t2", ".", "customer_first_name", "=", "value"], "question": "Show the id, the account name, and other account details for all accounts by the customer with first name 'Meaghan'.", "question_toks": ["Show", "the", "id", ",", "the", "account", "name", ",", "and", "other", "account", "details", "for", "all", "accounts", "by", "the", "customer", "with", "first", "name", "'Meaghan", "'", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 21, false], null], [0, 1, false], null]], "table_units": [["table_unit", 3], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 22, false], null]], [0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Meaghan\"", null]]}}, {"db_id": "customers_and_invoices", "query": "SELECT T1.account_id ,  T1.date_account_opened ,  T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  'Meaghan'", "query_toks": ["SELECT", "T1.account_id", ",", "T1.date_account_opened", ",", "T1.account_name", ",", "T1.other_account_details", "FROM", "Accounts", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T2.customer_first_name", "=", "'Meaghan", "'"], "query_toks_no_value": ["select", "t1", ".", "account_id", ",", "t1", ".", "date_account_opened", ",", "t1", ".", "account_name", ",", "t1", ".", "other_account_details", "from", "accounts", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t2", ".", "customer_first_name", "=", "value"], "question": "What are the ids, names, dates of opening, and other details for accounts corresponding to the customer with the first name \"Meaghan\"?", "question_toks": ["What", "are", "the", "ids", ",", "names", ",", "dates", "of", "opening", ",", "and", "other", "details", "for", "accounts", "corresponding", "to", "the", "customer", "with", "the", "first", "name", "``", "Meaghan", "''", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 21, false], null], [0, 1, false], null]], "table_units": [["table_unit", 3], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 22, false], null]], [0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Meaghan\"", null]]}}, {"db_id": "customers_and_invoices", "query": "SELECT T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Meaghan\" AND T2.customer_last_name  =  \"Keeling\"", "query_toks": ["SELECT", "T1.account_name", ",", "T1.other_account_details", "FROM", "Accounts", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T2.customer_first_name", "=", "``", "Meaghan", "''", "AND", "T2.customer_last_name", "=", "``", "Keeling", "''"], "query_toks_no_value": ["select", "t1", ".", "account_name", ",", "t1", ".", "other_account_details", "from", "accounts", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t2", ".", "customer_first_name", "=", "value", "and", "t2", ".", "customer_last_name", "=", "value"], "question": "Show the account name and other account detail for all accounts by the customer with first name Meaghan and last name Keeling.", "question_toks": ["Show", "the", "account", "name", "and", "other", "account", "detail", "for", "all", "accounts", "by", "the", "customer", "with", "first", "name", "Meaghan", "and", "last", "name", "Keeling", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 21, false], null], [0, 1, false], null]], "table_units": [["table_unit", 3], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Meaghan\"", null], "and", [false, 2, [0, [0, 4, false], null], "\"Keeling\"", null]]}}, {"db_id": "customers_and_invoices", "query": "SELECT T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Meaghan\" AND T2.customer_last_name  =  \"Keeling\"", "query_toks": ["SELECT", "T1.account_name", ",", "T1.other_account_details", "FROM", "Accounts", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T2.customer_first_name", "=", "``", "Meaghan", "''", "AND", "T2.customer_last_name", "=", "``", "Keeling", "''"], "query_toks_no_value": ["select", "t1", ".", "account_name", ",", "t1", ".", "other_account_details", "from", "accounts", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t2", ".", "customer_first_name", "=", "value", "and", "t2", ".", "customer_last_name", "=", "value"], "question": "What are the names and other details for accounts corresponding to the customer named Meaghan Keeling?", "question_toks": ["What", "are", "the", "names", "and", "other", "details", "for", "accounts", "corresponding", "to", "the", "customer", "named", "Meaghan", "Keeling", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 21, false], null], [0, 1, false], null]], "table_units": [["table_unit", 3], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Meaghan\"", null], "and", [false, 2, [0, [0, 4, false], null], "\"Keeling\"", null]]}}, {"db_id": "customers_and_invoices", "query": "SELECT T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"900\"", "query_toks": ["SELECT", "T2.customer_first_name", ",", "T2.customer_last_name", "FROM", "Accounts", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T1.account_name", "=", "``", "900", "''"], "query_toks_no_value": ["select", "t2", ".", "customer_first_name", ",", "t2", ".", "customer_last_name", "from", "accounts", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t1", ".", "account_name", "=", "value"], "question": "Show the first name and last name for the customer with account name 900.", "question_toks": ["Show", "the", "first", "name", "and", "last", "name", "for", "the", "customer", "with", "account", "name", "900", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 21, false], null], [0, 1, false], null]], "table_units": [["table_unit", 3], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 23, false], null], "\"900\"", null]]}}, {"db_id": "customers_and_invoices", "query": "SELECT T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"900\"", "query_toks": ["SELECT", "T2.customer_first_name", ",", "T2.customer_last_name", "FROM", "Accounts", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T1.account_name", "=", "``", "900", "''"], "query_toks_no_value": ["select", "t2", ".", "customer_first_name", ",", "t2", ".", "customer_last_name", "from", "accounts", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t1", ".", "account_name", "=", "value"], "question": "What are the full names of customers with the account name 900?", "question_toks": ["What", "are", "the", "full", "names", "of", "customers", "with", "the", "account", "name", "900", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 21, false], null], [0, 1, false], null]], "table_units": [["table_unit", 3], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 23, false], null], "\"900\"", null]]}}, {"db_id": "customers_and_invoices", "query": "SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name ,  T1.phone_number FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id", "query_toks": ["SELECT", "DISTINCT", "T1.customer_first_name", ",", "T1.customer_last_name", ",", "T1.phone_number", "FROM", "Customers", "AS", "T1", "JOIN", "Accounts", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id"], "query_toks_no_value": ["select", "distinct", "t1", ".", "customer_first_name", ",", "t1", ".", "customer_last_name", ",", "t1", ".", "phone_number", "from", "customers", "as", "t1", "join", "accounts", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id"], "question": "Show the unique first names, last names, and phone numbers for all customers with any account.", "question_toks": ["Show", "the", "unique", "first", "names", ",", "last", "names", ",", "and", "phone", "numbers", "for", "all", "customers", "with", "any", "account", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 21, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name ,  T1.phone_number FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id", "query_toks": ["SELECT", "DISTINCT", "T1.customer_first_name", ",", "T1.customer_last_name", ",", "T1.phone_number", "FROM", "Customers", "AS", "T1", "JOIN", "Accounts", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id"], "query_toks_no_value": ["select", "distinct", "t1", ".", "customer_first_name", ",", "t1", ".", "customer_last_name", ",", "t1", ".", "phone_number", "from", "customers", "as", "t1", "join", "accounts", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id"], "question": "What are the distinct first names, last names, and phone numbers for customers with accounts?", "question_toks": ["What", "are", "the", "distinct", "first", "names", ",", "last", "names", ",", "and", "phone", "numbers", "for", "customers", "with", "accounts", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 21, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT count(*) ,  customer_id FROM Accounts GROUP BY customer_id", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "customer_id", "FROM", "Accounts", "GROUP", "BY", "customer_id"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "customer_id", "from", "accounts", "group", "by", "customer_id"], "question": "How many accounts does each customer have? List the number and customer id.", "question_toks": ["How", "many", "accounts", "does", "each", "customer", "have", "?", "List", "the", "number", "and", "customer", "id", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 21, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT count(*) ,  customer_id FROM Accounts GROUP BY customer_id", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "customer_id", "FROM", "Accounts", "GROUP", "BY", "customer_id"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "customer_id", "from", "accounts", "group", "by", "customer_id"], "question": "Count the number of accounts corresponding to each customer id.", "question_toks": ["Count", "the", "number", "of", "accounts", "corresponding", "to", "each", "customer", "id", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 21, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.customer_id", ",", "T2.customer_first_name", ",", "T2.customer_last_name", "FROM", "Accounts", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "customer_id", ",", "t2", ".", "customer_first_name", ",", "t2", ".", "customer_last_name", "from", "accounts", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the customer id, first and last name with most number of accounts.", "question_toks": ["What", "is", "the", "customer", "id", ",", "first", "and", "last", "name", "with", "most", "number", "of", "accounts", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 21, false], null], [0, 1, false], null]], "table_units": [["table_unit", 3], ["table_unit", 0]]}, "groupBy": [[0, 21, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.customer_id", ",", "T2.customer_first_name", ",", "T2.customer_last_name", "FROM", "Accounts", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "customer_id", ",", "t2", ".", "customer_first_name", ",", "t2", ".", "customer_last_name", "from", "accounts", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Return the id and full name of the customer with the most accounts.", "question_toks": ["Return", "the", "id", "and", "full", "name", "of", "the", "customer", "with", "the", "most", "accounts", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 21, false], null], [0, 1, false], null]], "table_units": [["table_unit", 3], ["table_unit", 0]]}, "groupBy": [[0, 21, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name ,  count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id", "query_toks": ["SELECT", "T1.customer_id", ",", "T2.customer_first_name", ",", "T2.customer_last_name", ",", "count", "(", "*", ")", "FROM", "Accounts", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id"], "query_toks_no_value": ["select", "t1", ".", "customer_id", ",", "t2", ".", "customer_first_name", ",", "t2", ".", "customer_last_name", ",", "count", "(", "*", ")", "from", "accounts", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id"], "question": "Show id, first name and last name for all customers and the number of accounts.", "question_toks": ["Show", "id", ",", "first", "name", "and", "last", "name", "for", "all", "customers", "and", "the", "number", "of", "accounts", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 21, false], null], [0, 1, false], null]], "table_units": [["table_unit", 3], ["table_unit", 0]]}, "groupBy": [[0, 21, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name ,  count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id", "query_toks": ["SELECT", "T1.customer_id", ",", "T2.customer_first_name", ",", "T2.customer_last_name", ",", "count", "(", "*", ")", "FROM", "Accounts", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id"], "query_toks_no_value": ["select", "t1", ".", "customer_id", ",", "t2", ".", "customer_first_name", ",", "t2", ".", "customer_last_name", ",", "count", "(", "*", ")", "from", "accounts", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id"], "question": "What are the the full names and ids for all customers, and how many accounts does each have?", "question_toks": ["What", "are", "the", "the", "full", "names", "and", "ids", "for", "all", "customers", ",", "and", "how", "many", "accounts", "does", "each", "have", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 21, false], null], [0, 1, false], null]], "table_units": [["table_unit", 3], ["table_unit", 0]]}, "groupBy": [[0, 21, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT T2.customer_first_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T2.customer_first_name", ",", "T1.customer_id", "FROM", "Accounts", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "customer_first_name", ",", "t1", ".", "customer_id", "from", "accounts", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show first name and id for all customers with at least 2 accounts.", "question_toks": ["Show", "first", "name", "and", "id", "for", "all", "customers", "with", "at", "least", "2", "accounts", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 21, false], null], [0, 1, false], null]], "table_units": [["table_unit", 3], ["table_unit", 0]]}, "groupBy": [[0, 21, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT T2.customer_first_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T2.customer_first_name", ",", "T1.customer_id", "FROM", "Accounts", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "customer_first_name", ",", "t1", ".", "customer_id", "from", "accounts", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the first names and ids for customers who have two or more accounts?", "question_toks": ["What", "are", "the", "first", "names", "and", "ids", "for", "customers", "who", "have", "two", "or", "more", "accounts", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 21, false], null], [0, 1, false], null]], "table_units": [["table_unit", 3], ["table_unit", 0]]}, "groupBy": [[0, 21, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT gender ,  count(*) FROM Customers GROUP BY gender", "query_toks": ["SELECT", "gender", ",", "count", "(", "*", ")", "FROM", "Customers", "GROUP", "BY", "gender"], "query_toks_no_value": ["select", "gender", ",", "count", "(", "*", ")", "from", "customers", "group", "by", "gender"], "question": "Show the number of customers for each gender.", "question_toks": ["Show", "the", "number", "of", "customers", "for", "each", "gender", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT gender ,  count(*) FROM Customers GROUP BY gender", "query_toks": ["SELECT", "gender", ",", "count", "(", "*", ")", "FROM", "Customers", "GROUP", "BY", "gender"], "query_toks_no_value": ["select", "gender", ",", "count", "(", "*", ")", "from", "customers", "group", "by", "gender"], "question": "How many customers are there of each gender?", "question_toks": ["How", "many", "customers", "are", "there", "of", "each", "gender", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT count(*) ,  account_id FROM Financial_transactions", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "account_id", "FROM", "Financial_transactions"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "account_id", "from", "financial_transactions"], "question": "How many transaction does each account have? Show the number and account id.", "question_toks": ["How", "many", "transaction", "does", "each", "account", "have", "?", "Show", "the", "number", "and", "account", "id", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 36, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT count(*) ,  account_id FROM Financial_transactions", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "account_id", "FROM", "Financial_transactions"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "account_id", "from", "financial_transactions"], "question": "Count the number of financial transactions that correspond to each account id.", "question_toks": ["Count", "the", "number", "of", "financial", "transactions", "that", "correspond", "to", "each", "account", "id", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 36, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT avg(transaction_amount) ,  min(transaction_amount) ,  max(transaction_amount) ,   sum(transaction_amount) FROM Financial_transactions", "query_toks": ["SELECT", "avg", "(", "transaction_amount", ")", ",", "min", "(", "transaction_amount", ")", ",", "max", "(", "transaction_amount", ")", ",", "sum", "(", "transaction_amount", ")", "FROM", "Financial_transactions"], "query_toks_no_value": ["select", "avg", "(", "transaction_amount", ")", ",", "min", "(", "transaction_amount", ")", ",", "max", "(", "transaction_amount", ")", ",", "sum", "(", "transaction_amount", ")", "from", "financial_transactions"], "question": "What is the average, minimum, maximum, and total transaction amount?", "question_toks": ["What", "is", "the", "average", ",", "minimum", ",", "maximum", ",", "and", "total", "transaction", "amount", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 40, false], null]], [2, [0, [0, 40, false], null]], [1, [0, [0, 40, false], null]], [4, [0, [0, 40, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT avg(transaction_amount) ,  min(transaction_amount) ,  max(transaction_amount) ,   sum(transaction_amount) FROM Financial_transactions", "query_toks": ["SELECT", "avg", "(", "transaction_amount", ")", ",", "min", "(", "transaction_amount", ")", ",", "max", "(", "transaction_amount", ")", ",", "sum", "(", "transaction_amount", ")", "FROM", "Financial_transactions"], "query_toks_no_value": ["select", "avg", "(", "transaction_amount", ")", ",", "min", "(", "transaction_amount", ")", ",", "max", "(", "transaction_amount", ")", ",", "sum", "(", "transaction_amount", ")", "from", "financial_transactions"], "question": "Return the average, minimum, maximum, and total transaction amounts.", "question_toks": ["Return", "the", "average", ",", "minimum", ",", "maximum", ",", "and", "total", "transaction", "amounts", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 40, false], null]], [2, [0, [0, 40, false], null]], [1, [0, [0, 40, false], null]], [4, [0, [0, 40, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT transaction_type ,  sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type", "query_toks": ["SELECT", "transaction_type", ",", "sum", "(", "transaction_amount", ")", "FROM", "Financial_transactions", "GROUP", "BY", "transaction_type"], "query_toks_no_value": ["select", "transaction_type", ",", "sum", "(", "transaction_amount", ")", "from", "financial_transactions", "group", "by", "transaction_type"], "question": "Show the transaction types and the total amount of transactions.", "question_toks": ["Show", "the", "transaction", "types", "and", "the", "total", "amount", "of", "transactions", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 38, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 38, false], null]], [4, [0, [0, 40, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT transaction_type ,  sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type", "query_toks": ["SELECT", "transaction_type", ",", "sum", "(", "transaction_amount", ")", "FROM", "Financial_transactions", "GROUP", "BY", "transaction_type"], "query_toks_no_value": ["select", "transaction_type", ",", "sum", "(", "transaction_amount", ")", "from", "financial_transactions", "group", "by", "transaction_type"], "question": "What are total transaction amounts for each transaction type?", "question_toks": ["What", "are", "total", "transaction", "amounts", "for", "each", "transaction", "type", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 38, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 38, false], null]], [4, [0, [0, 40, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT T2.account_name ,  T1.account_id ,  count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id GROUP BY T1.account_id", "query_toks": ["SELECT", "T2.account_name", ",", "T1.account_id", ",", "count", "(", "*", ")", "FROM", "Financial_transactions", "AS", "T1", "JOIN", "Accounts", "AS", "T2", "ON", "T1.account_id", "=", "T2.account_id", "GROUP", "BY", "T1.account_id"], "query_toks_no_value": ["select", "t2", ".", "account_name", ",", "t1", ".", "account_id", ",", "count", "(", "*", ")", "from", "financial_transactions", "as", "t1", "join", "accounts", "as", "t2", "on", "t1", ".", "account_id", "=", "t2", ".", "account_id", "group", "by", "t1", ".", "account_id"], "question": "Show the account name, id and the number of transactions for each account.", "question_toks": ["Show", "the", "account", "name", ",", "id", "and", "the", "number", "of", "transactions", "for", "each", "account", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 36, false], null], [0, 20, false], null]], "table_units": [["table_unit", 6], ["table_unit", 3]]}, "groupBy": [[0, 36, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 36, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT T2.account_name ,  T1.account_id ,  count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id GROUP BY T1.account_id", "query_toks": ["SELECT", "T2.account_name", ",", "T1.account_id", ",", "count", "(", "*", ")", "FROM", "Financial_transactions", "AS", "T1", "JOIN", "Accounts", "AS", "T2", "ON", "T1.account_id", "=", "T2.account_id", "GROUP", "BY", "T1.account_id"], "query_toks_no_value": ["select", "t2", ".", "account_name", ",", "t1", ".", "account_id", ",", "count", "(", "*", ")", "from", "financial_transactions", "as", "t1", "join", "accounts", "as", "t2", "on", "t1", ".", "account_id", "=", "t2", ".", "account_id", "group", "by", "t1", ".", "account_id"], "question": "Return the names and ids of each account, as well as the number of transactions.", "question_toks": ["Return", "the", "names", "and", "ids", "of", "each", "account", ",", "as", "well", "as", "the", "number", "of", "transactions", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 36, false], null], [0, 20, false], null]], "table_units": [["table_unit", 6], ["table_unit", 3]]}, "groupBy": [[0, 36, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 36, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT T1.account_id ,  T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id GROUP BY T1.account_id HAVING count(*)  >=  4", "query_toks": ["SELECT", "T1.account_id", ",", "T2.account_name", "FROM", "Financial_transactions", "AS", "T1", "JOIN", "Accounts", "AS", "T2", "ON", "T1.account_id", "=", "T2.account_id", "GROUP", "BY", "T1.account_id", "HAVING", "count", "(", "*", ")", ">", "=", "4"], "query_toks_no_value": ["select", "t1", ".", "account_id", ",", "t2", ".", "account_name", "from", "financial_transactions", "as", "t1", "join", "accounts", "as", "t2", "on", "t1", ".", "account_id", "=", "t2", ".", "account_id", "group", "by", "t1", ".", "account_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show the account id and name with at least 4 transactions.", "question_toks": ["Show", "the", "account", "id", "and", "name", "with", "at", "least", "4", "transactions", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 36, false], null], [0, 20, false], null]], "table_units": [["table_unit", 6], ["table_unit", 3]]}, "groupBy": [[0, 36, false]], "having": [[false, 5, [0, [3, 0, false], null], 4.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 36, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT T1.account_id ,  T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id GROUP BY T1.account_id HAVING count(*)  >=  4", "query_toks": ["SELECT", "T1.account_id", ",", "T2.account_name", "FROM", "Financial_transactions", "AS", "T1", "JOIN", "Accounts", "AS", "T2", "ON", "T1.account_id", "=", "T2.account_id", "GROUP", "BY", "T1.account_id", "HAVING", "count", "(", "*", ")", ">", "=", "4"], "query_toks_no_value": ["select", "t1", ".", "account_id", ",", "t2", ".", "account_name", "from", "financial_transactions", "as", "t1", "join", "accounts", "as", "t2", "on", "t1", ".", "account_id", "=", "t2", ".", "account_id", "group", "by", "t1", ".", "account_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the ids and names of accounts with 4 or more transactions?", "question_toks": ["What", "are", "the", "ids", "and", "names", "of", "accounts", "with", "4", "or", "more", "transactions", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 36, false], null], [0, 20, false], null]], "table_units": [["table_unit", 6], ["table_unit", 3]]}, "groupBy": [[0, 36, false]], "having": [[false, 5, [0, [3, 0, false], null], 4.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 36, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT invoice_number ,  count(*) FROM Financial_transactions GROUP BY invoice_number", "query_toks": ["SELECT", "invoice_number", ",", "count", "(", "*", ")", "FROM", "Financial_transactions", "GROUP", "BY", "invoice_number"], "query_toks_no_value": ["select", "invoice_number", ",", "count", "(", "*", ")", "from", "financial_transactions", "group", "by", "invoice_number"], "question": "Show the invoice number and the number of transactions for each invoice.", "question_toks": ["Show", "the", "invoice", "number", "and", "the", "number", "of", "transactions", "for", "each", "invoice", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 37, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 37, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT invoice_number ,  count(*) FROM Financial_transactions GROUP BY invoice_number", "query_toks": ["SELECT", "invoice_number", ",", "count", "(", "*", ")", "FROM", "Financial_transactions", "GROUP", "BY", "invoice_number"], "query_toks_no_value": ["select", "invoice_number", ",", "count", "(", "*", ")", "from", "financial_transactions", "group", "by", "invoice_number"], "question": "How many transactions correspond to each invoice number?", "question_toks": ["How", "many", "transactions", "correspond", "to", "each", "invoice", "number", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 37, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 37, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT T2.invoice_number ,  T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.invoice_number", ",", "T2.invoice_date", "FROM", "Financial_transactions", "AS", "T1", "JOIN", "Invoices", "AS", "T2", "ON", "T1.invoice_number", "=", "T2.invoice_number", "GROUP", "BY", "T1.invoice_number", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "invoice_number", ",", "t2", ".", "invoice_date", "from", "financial_transactions", "as", "t1", "join", "invoices", "as", "t2", "on", "t1", ".", "invoice_number", "=", "t2", ".", "invoice_number", "group", "by", "t1", ".", "invoice_number", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the invoice number and invoice date for the invoice with most number of transactions?", "question_toks": ["What", "is", "the", "invoice", "number", "and", "invoice", "date", "for", "the", "invoice", "with", "most", "number", "of", "transactions", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 37, false], null], [0, 17, false], null]], "table_units": [["table_unit", 6], ["table_unit", 2]]}, "groupBy": [[0, 37, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT T2.invoice_number ,  T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.invoice_number", ",", "T2.invoice_date", "FROM", "Financial_transactions", "AS", "T1", "JOIN", "Invoices", "AS", "T2", "ON", "T1.invoice_number", "=", "T2.invoice_number", "GROUP", "BY", "T1.invoice_number", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "invoice_number", ",", "t2", ".", "invoice_date", "from", "financial_transactions", "as", "t1", "join", "invoices", "as", "t2", "on", "t1", ".", "invoice_number", "=", "t2", ".", "invoice_number", "group", "by", "t1", ".", "invoice_number", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the invoice number and invoice date corresponding to the invoice with the greatest number of transactions?", "question_toks": ["What", "is", "the", "invoice", "number", "and", "invoice", "date", "corresponding", "to", "the", "invoice", "with", "the", "greatest", "number", "of", "transactions", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 37, false], null], [0, 17, false], null]], "table_units": [["table_unit", 6], ["table_unit", 2]]}, "groupBy": [[0, 37, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT T1.invoice_date ,  T1.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id", "query_toks": ["SELECT", "T1.invoice_date", ",", "T1.order_id", ",", "T2.order_details", "FROM", "Invoices", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.order_id", "=", "T2.order_id"], "query_toks_no_value": ["select", "t1", ".", "invoice_date", ",", "t1", ".", "order_id", ",", "t2", ".", "order_details", "from", "invoices", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id"], "question": "Show invoice dates and order id and details for all invoices.", "question_toks": ["Show", "invoice", "dates", "and", "order", "id", "and", "details", "for", "all", "invoices", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 13, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 18, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT T1.invoice_date ,  T1.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id", "query_toks": ["SELECT", "T1.invoice_date", ",", "T1.order_id", ",", "T2.order_details", "FROM", "Invoices", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.order_id", "=", "T2.order_id"], "query_toks_no_value": ["select", "t1", ".", "invoice_date", ",", "t1", ".", "order_id", ",", "t2", ".", "order_details", "from", "invoices", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id"], "question": "What are the invoice dates, order ids, and order details for all invoices?", "question_toks": ["What", "are", "the", "invoice", "dates", ",", "order", "ids", ",", "and", "order", "details", "for", "all", "invoices", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 13, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 18, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT order_id ,  count(*) FROM Invoices GROUP BY order_id", "query_toks": ["SELECT", "order_id", ",", "count", "(", "*", ")", "FROM", "Invoices", "GROUP", "BY", "order_id"], "query_toks_no_value": ["select", "order_id", ",", "count", "(", "*", ")", "from", "invoices", "group", "by", "order_id"], "question": "Show the order ids and the number of invoices for each order.", "question_toks": ["Show", "the", "order", "ids", "and", "the", "number", "of", "invoices", "for", "each", "order", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 18, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 18, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT order_id ,  count(*) FROM Invoices GROUP BY order_id", "query_toks": ["SELECT", "order_id", ",", "count", "(", "*", ")", "FROM", "Invoices", "GROUP", "BY", "order_id"], "query_toks_no_value": ["select", "order_id", ",", "count", "(", "*", ")", "from", "invoices", "group", "by", "order_id"], "question": "How many invoices correspond to each order id?", "question_toks": ["How", "many", "invoices", "correspond", "to", "each", "order", "id", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 18, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 18, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT T2.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id GROUP BY T2.order_id HAVING count(*)  >  2", "query_toks": ["SELECT", "T2.order_id", ",", "T2.order_details", "FROM", "Invoices", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.order_id", "=", "T2.order_id", "GROUP", "BY", "T2.order_id", "HAVING", "count", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "t2", ".", "order_id", ",", "t2", ".", "order_details", "from", "invoices", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "group", "by", "t2", ".", "order_id", "having", "count", "(", "*", ")", ">", "value"], "question": "What is the order id and order details for the order more than two invoices.", "question_toks": ["What", "is", "the", "order", "id", "and", "order", "details", "for", "the", "order", "more", "than", "two", "invoices", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 13, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 13, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT T2.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id GROUP BY T2.order_id HAVING count(*)  >  2", "query_toks": ["SELECT", "T2.order_id", ",", "T2.order_details", "FROM", "Invoices", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.order_id", "=", "T2.order_id", "GROUP", "BY", "T2.order_id", "HAVING", "count", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "t2", ".", "order_id", ",", "t2", ".", "order_details", "from", "invoices", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "group", "by", "t2", ".", "order_id", "having", "count", "(", "*", ")", ">", "value"], "question": "Return the order ids and details for orderes with two or more invoices.", "question_toks": ["Return", "the", "order", "ids", "and", "details", "for", "orderes", "with", "two", "or", "more", "invoices", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 13, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 13, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT T2.customer_last_name ,  T1.customer_id ,  T2.phone_number FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.customer_last_name", ",", "T1.customer_id", ",", "T2.phone_number", "FROM", "Orders", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "customer_last_name", ",", "t1", ".", "customer_id", ",", "t2", ".", "phone_number", "from", "orders", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the customer last name, id and phone number with most number of orders?", "question_toks": ["What", "is", "the", "customer", "last", "name", ",", "id", "and", "phone", "number", "with", "most", "number", "of", "orders", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 14, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 14, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT T2.customer_last_name ,  T1.customer_id ,  T2.phone_number FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.customer_last_name", ",", "T1.customer_id", ",", "T2.phone_number", "FROM", "Orders", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "customer_last_name", ",", "t1", ".", "customer_id", ",", "t2", ".", "phone_number", "from", "orders", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Return the last name, id and phone number of the customer who has made the greatest number of orders.", "question_toks": ["Return", "the", "last", "name", ",", "id", "and", "phone", "number", "of", "the", "customer", "who", "has", "made", "the", "greatest", "number", "of", "orders", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 14, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 14, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT T2.product_name ,  sum(T1.product_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id GROUP BY T2.product_name", "query_toks": ["SELECT", "T2.product_name", ",", "sum", "(", "T1.product_quantity", ")", "FROM", "Order_items", "AS", "T1", "JOIN", "Products", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "GROUP", "BY", "T2.product_name"], "query_toks_no_value": ["select", "t2", ".", "product_name", ",", "sum", "(", "t1", ".", "product_quantity", ")", "from", "order_items", "as", "t1", "join", "products", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "group", "by", "t2", ".", "product_name"], "question": "Show all product names and the total quantity ordered for each product name.", "question_toks": ["Show", "all", "product", "names", "and", "the", "total", "quantity", "ordered", "for", "each", "product", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 45, false], null], [0, 28, false], null]], "table_units": [["table_unit", 7], ["table_unit", 5]]}, "groupBy": [[0, 32, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 32, false], null]], [4, [0, [0, 46, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT T2.product_name ,  sum(T1.product_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id GROUP BY T2.product_name", "query_toks": ["SELECT", "T2.product_name", ",", "sum", "(", "T1.product_quantity", ")", "FROM", "Order_items", "AS", "T1", "JOIN", "Products", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "GROUP", "BY", "T2.product_name"], "query_toks_no_value": ["select", "t2", ".", "product_name", ",", "sum", "(", "t1", ".", "product_quantity", ")", "from", "order_items", "as", "t1", "join", "products", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "group", "by", "t2", ".", "product_name"], "question": "What are the different product names, and what is the sum of quantity ordered for each product?", "question_toks": ["What", "are", "the", "different", "product", "names", ",", "and", "what", "is", "the", "sum", "of", "quantity", "ordered", "for", "each", "product", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 45, false], null], [0, 28, false], null]], "table_units": [["table_unit", 7], ["table_unit", 5]]}, "groupBy": [[0, 32, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 32, false], null]], [4, [0, [0, 46, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT order_id ,  count(*) FROM Order_items GROUP BY order_id", "query_toks": ["SELECT", "order_id", ",", "count", "(", "*", ")", "FROM", "Order_items", "GROUP", "BY", "order_id"], "query_toks_no_value": ["select", "order_id", ",", "count", "(", "*", ")", "from", "order_items", "group", "by", "order_id"], "question": "Show the order ids and the number of items in each order.", "question_toks": ["Show", "the", "order", "ids", "and", "the", "number", "of", "items", "in", "each", "order", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [[0, 44, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 44, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT order_id ,  count(*) FROM Order_items GROUP BY order_id", "query_toks": ["SELECT", "order_id", ",", "count", "(", "*", ")", "FROM", "Order_items", "GROUP", "BY", "order_id"], "query_toks_no_value": ["select", "order_id", ",", "count", "(", "*", ")", "from", "order_items", "group", "by", "order_id"], "question": "How many order items correspond to each order id?", "question_toks": ["How", "many", "order", "items", "correspond", "to", "each", "order", "id", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [[0, 44, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 44, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT product_id ,  count(DISTINCT order_id) FROM Order_items GROUP BY product_id", "query_toks": ["SELECT", "product_id", ",", "count", "(", "DISTINCT", "order_id", ")", "FROM", "Order_items", "GROUP", "BY", "product_id"], "query_toks_no_value": ["select", "product_id", ",", "count", "(", "distinct", "order_id", ")", "from", "order_items", "group", "by", "product_id"], "question": "Show the product ids and the number of unique orders containing each product.", "question_toks": ["Show", "the", "product", "ids", "and", "the", "number", "of", "unique", "orders", "containing", "each", "product", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [[0, 45, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 45, false], null]], [3, [0, [0, 44, true], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT product_id ,  count(DISTINCT order_id) FROM Order_items GROUP BY product_id", "query_toks": ["SELECT", "product_id", ",", "count", "(", "DISTINCT", "order_id", ")", "FROM", "Order_items", "GROUP", "BY", "product_id"], "query_toks_no_value": ["select", "product_id", ",", "count", "(", "distinct", "order_id", ")", "from", "order_items", "group", "by", "product_id"], "question": "How many distinct order ids correspond to each product?", "question_toks": ["How", "many", "distinct", "order", "ids", "correspond", "to", "each", "product", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [[0, 45, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 45, false], null]], [3, [0, [0, 44, true], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT T2.product_name ,  count(*) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T3.order_id  =  T1.order_id GROUP BY T2.product_name", "query_toks": ["SELECT", "T2.product_name", ",", "count", "(", "*", ")", "FROM", "Order_items", "AS", "T1", "JOIN", "Products", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "JOIN", "Orders", "AS", "T3", "ON", "T3.order_id", "=", "T1.order_id", "GROUP", "BY", "T2.product_name"], "query_toks_no_value": ["select", "t2", ".", "product_name", ",", "count", "(", "*", ")", "from", "order_items", "as", "t1", "join", "products", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "orders", "as", "t3", "on", "t3", ".", "order_id", "=", "t1", ".", "order_id", "group", "by", "t2", ".", "product_name"], "question": "Show all product names and the number of customers having an order on each product.", "question_toks": ["Show", "all", "product", "names", "and", "the", "number", "of", "customers", "having", "an", "order", "on", "each", "product", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 45, false], null], [0, 28, false], null]], "table_units": [["table_unit", 7], ["table_unit", 5]]}, "groupBy": [[0, 32, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 32, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT T2.product_name ,  count(*) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T3.order_id  =  T1.order_id GROUP BY T2.product_name", "query_toks": ["SELECT", "T2.product_name", ",", "count", "(", "*", ")", "FROM", "Order_items", "AS", "T1", "JOIN", "Products", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "JOIN", "Orders", "AS", "T3", "ON", "T3.order_id", "=", "T1.order_id", "GROUP", "BY", "T2.product_name"], "query_toks_no_value": ["select", "t2", ".", "product_name", ",", "count", "(", "*", ")", "from", "order_items", "as", "t1", "join", "products", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "orders", "as", "t3", "on", "t3", ".", "order_id", "=", "t1", ".", "order_id", "group", "by", "t2", ".", "product_name"], "question": "What are teh names of the different products, as well as the number of customers who have ordered each product.", "question_toks": ["What", "are", "teh", "names", "of", "the", "different", "products", ",", "as", "well", "as", "the", "number", "of", "customers", "who", "have", "ordered", "each", "product", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 45, false], null], [0, 28, false], null]], "table_units": [["table_unit", 7], ["table_unit", 5]]}, "groupBy": [[0, 32, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 32, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT order_id ,  count(DISTINCT product_id) FROM Order_items GROUP BY order_id", "query_toks": ["SELECT", "order_id", ",", "count", "(", "DISTINCT", "product_id", ")", "FROM", "Order_items", "GROUP", "BY", "order_id"], "query_toks_no_value": ["select", "order_id", ",", "count", "(", "distinct", "product_id", ")", "from", "order_items", "group", "by", "order_id"], "question": "Show order ids and the number of products in each order.", "question_toks": ["Show", "order", "ids", "and", "the", "number", "of", "products", "in", "each", "order", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [[0, 44, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 44, false], null]], [3, [0, [0, 45, true], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT order_id ,  count(DISTINCT product_id) FROM Order_items GROUP BY order_id", "query_toks": ["SELECT", "order_id", ",", "count", "(", "DISTINCT", "product_id", ")", "FROM", "Order_items", "GROUP", "BY", "order_id"], "query_toks_no_value": ["select", "order_id", ",", "count", "(", "distinct", "product_id", ")", "from", "order_items", "group", "by", "order_id"], "question": "How many different products correspond to each order id?", "question_toks": ["How", "many", "different", "products", "correspond", "to", "each", "order", "id", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [[0, 44, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 44, false], null]], [3, [0, [0, 45, true], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT order_id ,  sum(product_quantity) FROM Order_items GROUP BY order_id", "query_toks": ["SELECT", "order_id", ",", "sum", "(", "product_quantity", ")", "FROM", "Order_items", "GROUP", "BY", "order_id"], "query_toks_no_value": ["select", "order_id", ",", "sum", "(", "product_quantity", ")", "from", "order_items", "group", "by", "order_id"], "question": "Show order ids and the total quantity in each order.", "question_toks": ["Show", "order", "ids", "and", "the", "total", "quantity", "in", "each", "order", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [[0, 44, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 44, false], null]], [4, [0, [0, 46, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_invoices", "query": "SELECT order_id ,  sum(product_quantity) FROM Order_items GROUP BY order_id", "query_toks": ["SELECT", "order_id", ",", "sum", "(", "product_quantity", ")", "FROM", "Order_items", "GROUP", "BY", "order_id"], "query_toks_no_value": ["select", "order_id", ",", "sum", "(", "product_quantity", ")", "from", "order_items", "group", "by", "order_id"], "question": "Give the order ids for all orders, as well as the total product quantity in each.", "question_toks": ["Give", "the", "order", "ids", "for", "all", "orders", ",", "as", "well", "as", "the", "total", "product", "quantity", "in", "each", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [[0, 44, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 44, false], null]], [4, [0, [0, 46, false], null]]]], "union": null, "where": []}}, {"db_id": "wedding", "query": "SELECT name ,  open_date ,  organized_by FROM Church", "query_toks": ["SELECT", "name", ",", "open_date", ",", "organized_by", "FROM", "Church"], "query_toks_no_value": ["select", "name", ",", "open_date", ",", "organized_by", "from", "church"], "question": "Show the name, open date, and organizer for all churches.", "question_toks": ["Show", "the", "name", ",", "open", "date", ",", "and", "organizer", "for", "all", "churches", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "wedding", "query": "SELECT organized_by ,  name FROM church WHERE open_date BETWEEN 1830 AND 1840", "query_toks": ["SELECT", "organized_by", ",", "name", "FROM", "church", "WHERE", "open_date", "BETWEEN", "1830", "AND", "1840"], "query_toks_no_value": ["select", "organized_by", ",", "name", "from", "church", "where", "open_date", "between", "value", "and", "value"], "question": "Show the organizer and name for churches that opened between 1830 and 1840.", "question_toks": ["Show", "the", "organizer", "and", "name", "for", "churches", "that", "opened", "between", "1830", "and", "1840", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 1, [0, [0, 9, false], null], 1830.0, 1840.0]]}}, {"db_id": "wedding", "query": "SELECT open_date ,  count(*) FROM church GROUP BY open_date", "query_toks": ["SELECT", "open_date", ",", "count", "(", "*", ")", "FROM", "church", "GROUP", "BY", "open_date"], "query_toks_no_value": ["select", "open_date", ",", "count", "(", "*", ")", "from", "church", "group", "by", "open_date"], "question": "Show all opening years and the number of churches that opened in that year.", "question_toks": ["Show", "all", "opening", "years", "and", "the", "number", "of", "churches", "that", "opened", "in", "that", "year", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "wedding", "query": "SELECT name ,  open_date FROM church ORDER BY open_date DESC LIMIT 3", "query_toks": ["SELECT", "name", ",", "open_date", "FROM", "church", "ORDER", "BY", "open_date", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "name", ",", "open_date", "from", "church", "order", "by", "open_date", "desc", "limit", "value"], "question": "Show the name and opening year for three churches that opened most recently.", "question_toks": ["Show", "the", "name", "and", "opening", "year", "for", "three", "churches", "that", "opened", "most", "recently", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 3, "orderBy": ["desc", [[0, [0, 9, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "wedding", "query": "SELECT min(age) ,  max(age) ,  avg(age) FROM people", "query_toks": ["SELECT", "min", "(", "age", ")", ",", "max", "(", "age", ")", ",", "avg", "(", "age", ")", "FROM", "people"], "query_toks_no_value": ["select", "min", "(", "age", ")", ",", "max", "(", "age", ")", ",", "avg", "(", "age", ")", "from", "people"], "question": "Show the minimum, maximum, and average age for all people.", "question_toks": ["Show", "the", "minimum", ",", "maximum", ",", "and", "average", "age", "for", "all", "people", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 5, false], null]], [1, [0, [0, 5, false], null]], [5, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "wedding", "query": "SELECT name ,  country FROM people WHERE age  <  (SELECT avg(age) FROM people)", "query_toks": ["SELECT", "name", ",", "country", "FROM", "people", "WHERE", "age", "<", "(", "SELECT", "avg", "(", "age", ")", "FROM", "people", ")"], "query_toks_no_value": ["select", "name", ",", "country", "from", "people", "where", "age", "<", "(", "select", "avg", "(", "age", ")", "from", "people", ")"], "question": "Show the name and country for all people whose age is smaller than the average.", "question_toks": ["Show", "the", "name", "and", "country", "for", "all", "people", "whose", "age", "is", "smaller", "than", "the", "average", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 5, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 5, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "wedding", "query": "SELECT T2.name ,  T3.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id  =  T2.people_id JOIN people AS T3 ON T1.female_id  =  T3.people_id WHERE T1.year  >  2014", "query_toks": ["SELECT", "T2.name", ",", "T3.name", "FROM", "wedding", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.male_id", "=", "T2.people_id", "JOIN", "people", "AS", "T3", "ON", "T1.female_id", "=", "T3.people_id", "WHERE", "T1.year", ">", "2014"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t3", ".", "name", "from", "wedding", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "male_id", "=", "t2", ".", "people_id", "join", "people", "as", "t3", "on", "t1", ".", "female_id", "=", "t3", ".", "people_id", "where", "t1", ".", "year", ">", "value"], "question": "Show the pair of male and female names in all weddings after year 2014", "question_toks": ["Show", "the", "pair", "of", "male", "and", "female", "names", "in", "all", "weddings", "after", "year", "2014"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 12, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 14, false], null], 2014.0, null]]}}, {"db_id": "wedding", "query": "SELECT name ,  age FROM people WHERE is_male  =  'T' AND people_id NOT IN (SELECT male_id FROM wedding)", "query_toks": ["SELECT", "name", ",", "age", "FROM", "people", "WHERE", "is_male", "=", "'T", "'", "AND", "people_id", "NOT", "IN", "(", "SELECT", "male_id", "FROM", "wedding", ")"], "query_toks_no_value": ["select", "name", ",", "age", "from", "people", "where", "is_male", "=", "value", "and", "people_id", "not", "in", "(", "select", "male_id", "from", "wedding", ")"], "question": "Show the name and age for all male people who don't have a wedding.", "question_toks": ["Show", "the", "name", "and", "age", "for", "all", "male", "people", "who", "do", "n't", "have", "a", "wedding", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"T\"", null], "and", [true, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "wedding", "query": "SELECT country ,  count(*) FROM people GROUP BY country", "query_toks": ["SELECT", "country", ",", "count", "(", "*", ")", "FROM", "people", "GROUP", "BY", "country"], "query_toks_no_value": ["select", "country", ",", "count", "(", "*", ")", "from", "people", "group", "by", "country"], "question": "Show all countries and the number of people from each country.", "question_toks": ["Show", "all", "countries", "and", "the", "number", "of", "people", "from", "each", "country", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "theme_gallery", "query": "SELECT name ,  age ,  country FROM artist ORDER BY Year_Join", "query_toks": ["SELECT", "name", ",", "age", ",", "country", "FROM", "artist", "ORDER", "BY", "Year_Join"], "query_toks_no_value": ["select", "name", ",", "age", ",", "country", "from", "artist", "order", "by", "year_join"], "question": "Show all artist name, age, and country ordered by the yeared they joined.", "question_toks": ["Show", "all", "artist", "name", ",", "age", ",", "and", "country", "ordered", "by", "the", "yeared", "they", "joined", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 4, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "theme_gallery", "query": "SELECT name ,  age ,  country FROM artist ORDER BY Year_Join", "query_toks": ["SELECT", "name", ",", "age", ",", "country", "FROM", "artist", "ORDER", "BY", "Year_Join"], "query_toks_no_value": ["select", "name", ",", "age", ",", "country", "from", "artist", "order", "by", "year_join"], "question": "What are the names, ages, and countries of artists, sorted by the year they joined?", "question_toks": ["What", "are", "the", "names", ",", "ages", ",", "and", "countries", "of", "artists", ",", "sorted", "by", "the", "year", "they", "joined", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 4, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "theme_gallery", "query": "SELECT name ,  year_join FROM artist WHERE country != 'United States'", "query_toks": ["SELECT", "name", ",", "year_join", "FROM", "artist", "WHERE", "country", "!", "=", "'United", "States", "'"], "query_toks_no_value": ["select", "name", ",", "year_join", "from", "artist", "where", "country", "!", "=", "value"], "question": "Show all artist names and the year joined who are not from United States.", "question_toks": ["Show", "all", "artist", "names", "and", "the", "year", "joined", "who", "are", "not", "from", "United", "States", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 3, false], null], "\"United States\"", null]]}}, {"db_id": "theme_gallery", "query": "SELECT name ,  year_join FROM artist WHERE country != 'United States'", "query_toks": ["SELECT", "name", ",", "year_join", "FROM", "artist", "WHERE", "country", "!", "=", "'United", "States", "'"], "query_toks_no_value": ["select", "name", ",", "year_join", "from", "artist", "where", "country", "!", "=", "value"], "question": "What are the names and year of joining for artists that do not have the country \"United States\"?", "question_toks": ["What", "are", "the", "names", "and", "year", "of", "joining", "for", "artists", "that", "do", "not", "have", "the", "country", "``", "United", "States", "''", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 3, false], null], "\"United States\"", null]]}}, {"db_id": "theme_gallery", "query": "SELECT avg(age) ,  min(age) FROM artist WHERE country  =  'United States'", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "min", "(", "age", ")", "FROM", "artist", "WHERE", "country", "=", "'United", "States", "'"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "min", "(", "age", ")", "from", "artist", "where", "country", "=", "value"], "question": "What is the average and minimum age of all artists from United States.", "question_toks": ["What", "is", "the", "average", "and", "minimum", "age", "of", "all", "artists", "from", "United", "States", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 5, false], null]], [2, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], "\"United States\"", null]]}}, {"db_id": "theme_gallery", "query": "SELECT avg(age) ,  min(age) FROM artist WHERE country  =  'United States'", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "min", "(", "age", ")", "FROM", "artist", "WHERE", "country", "=", "'United", "States", "'"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "min", "(", "age", ")", "from", "artist", "where", "country", "=", "value"], "question": "Return the average and minimum ages across artists from the United States.", "question_toks": ["Return", "the", "average", "and", "minimum", "ages", "across", "artists", "from", "the", "United", "States", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 5, false], null]], [2, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], "\"United States\"", null]]}}, {"db_id": "theme_gallery", "query": "SELECT theme ,  YEAR FROM exhibition WHERE ticket_price  <  15", "query_toks": ["SELECT", "theme", ",", "YEAR", "FROM", "exhibition", "WHERE", "ticket_price", "<", "15"], "query_toks_no_value": ["select", "theme", ",", "year", "from", "exhibition", "where", "ticket_price", "<", "value"], "question": "Show theme and year for all exhibitions with ticket prices lower than 15.", "question_toks": ["Show", "theme", "and", "year", "for", "all", "exhibitions", "with", "ticket", "prices", "lower", "than", "15", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 10, false], null], 15.0, null]]}}, {"db_id": "theme_gallery", "query": "SELECT theme ,  YEAR FROM exhibition WHERE ticket_price  <  15", "query_toks": ["SELECT", "theme", ",", "YEAR", "FROM", "exhibition", "WHERE", "ticket_price", "<", "15"], "query_toks_no_value": ["select", "theme", ",", "year", "from", "exhibition", "where", "ticket_price", "<", "value"], "question": "What are the theme and year for all exhibitions that have a ticket price under 15?", "question_toks": ["What", "are", "the", "theme", "and", "year", "for", "all", "exhibitions", "that", "have", "a", "ticket", "price", "under", "15", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 10, false], null], 15.0, null]]}}, {"db_id": "theme_gallery", "query": "SELECT T2.name ,  count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "exhibition", "AS", "T1", "JOIN", "artist", "AS", "T2", "ON", "T1.artist_id", "=", "T2.artist_id", "GROUP", "BY", "T1.artist_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "exhibition", "as", "t1", "join", "artist", "as", "t2", "on", "t1", ".", "artist_id", "=", "t2", ".", "artist_id", "group", "by", "t1", ".", "artist_id"], "question": "Show all artist names and the number of exhibitions for each artist.", "question_toks": ["Show", "all", "artist", "names", "and", "the", "number", "of", "exhibitions", "for", "each", "artist", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "theme_gallery", "query": "SELECT T2.name ,  count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "exhibition", "AS", "T1", "JOIN", "artist", "AS", "T2", "ON", "T1.artist_id", "=", "T2.artist_id", "GROUP", "BY", "T1.artist_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "exhibition", "as", "t1", "join", "artist", "as", "t2", "on", "t1", ".", "artist_id", "=", "t2", ".", "artist_id", "group", "by", "t1", ".", "artist_id"], "question": "How many exhibitions has each artist had?", "question_toks": ["How", "many", "exhibitions", "has", "each", "artist", "had", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "theme_gallery", "query": "SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", ",", "T2.country", "FROM", "exhibition", "AS", "T1", "JOIN", "artist", "AS", "T2", "ON", "T1.artist_id", "=", "T2.artist_id", "GROUP", "BY", "T1.artist_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "country", "from", "exhibition", "as", "t1", "join", "artist", "as", "t2", "on", "t1", ".", "artist_id", "=", "t2", ".", "artist_id", "group", "by", "t1", ".", "artist_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name and country for the artist with most number of exhibitions?", "question_toks": ["What", "is", "the", "name", "and", "country", "for", "the", "artist", "with", "most", "number", "of", "exhibitions", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "theme_gallery", "query": "SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", ",", "T2.country", "FROM", "exhibition", "AS", "T1", "JOIN", "artist", "AS", "T2", "ON", "T1.artist_id", "=", "T2.artist_id", "GROUP", "BY", "T1.artist_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "country", "from", "exhibition", "as", "t1", "join", "artist", "as", "t2", "on", "t1", ".", "artist_id", "=", "t2", ".", "artist_id", "group", "by", "t1", ".", "artist_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Return the name and country corresponding to the artist who has had the most exhibitions.", "question_toks": ["Return", "the", "name", "and", "country", "corresponding", "to", "the", "artist", "who", "has", "had", "the", "most", "exhibitions", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "theme_gallery", "query": "SELECT T1.theme ,  T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.ticket_price  >  (SELECT avg(ticket_price) FROM exhibition)", "query_toks": ["SELECT", "T1.theme", ",", "T2.name", "FROM", "exhibition", "AS", "T1", "JOIN", "artist", "AS", "T2", "ON", "T1.artist_id", "=", "T2.artist_id", "WHERE", "T1.ticket_price", ">", "(", "SELECT", "avg", "(", "ticket_price", ")", "FROM", "exhibition", ")"], "query_toks_no_value": ["select", "t1", ".", "theme", ",", "t2", ".", "name", "from", "exhibition", "as", "t1", "join", "artist", "as", "t2", "on", "t1", ".", "artist_id", "=", "t2", ".", "artist_id", "where", "t1", ".", "ticket_price", ">", "(", "select", "avg", "(", "ticket_price", ")", "from", "exhibition", ")"], "question": "What is the theme and artist name for the exhibition with a ticket price higher than the average?", "question_toks": ["What", "is", "the", "theme", "and", "artist", "name", "for", "the", "exhibition", "with", "a", "ticket", "price", "higher", "than", "the", "average", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 10, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 10, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "theme_gallery", "query": "SELECT T1.theme ,  T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.ticket_price  >  (SELECT avg(ticket_price) FROM exhibition)", "query_toks": ["SELECT", "T1.theme", ",", "T2.name", "FROM", "exhibition", "AS", "T1", "JOIN", "artist", "AS", "T2", "ON", "T1.artist_id", "=", "T2.artist_id", "WHERE", "T1.ticket_price", ">", "(", "SELECT", "avg", "(", "ticket_price", ")", "FROM", "exhibition", ")"], "query_toks_no_value": ["select", "t1", ".", "theme", ",", "t2", ".", "name", "from", "exhibition", "as", "t1", "join", "artist", "as", "t2", "on", "t1", ".", "artist_id", "=", "t2", ".", "artist_id", "where", "t1", ".", "ticket_price", ">", "(", "select", "avg", "(", "ticket_price", ")", "from", "exhibition", ")"], "question": "Return the names of artists and the themes of their exhibitions that had a ticket price higher than average.", "question_toks": ["Return", "the", "names", "of", "artists", "and", "the", "themes", "of", "their", "exhibitions", "that", "had", "a", "ticket", "price", "higher", "than", "average", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 10, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 10, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "theme_gallery", "query": "SELECT avg(ticket_price) ,  min(ticket_price) ,  max(ticket_price) FROM exhibition WHERE YEAR  <  2009", "query_toks": ["SELECT", "avg", "(", "ticket_price", ")", ",", "min", "(", "ticket_price", ")", ",", "max", "(", "ticket_price", ")", "FROM", "exhibition", "WHERE", "YEAR", "<", "2009"], "query_toks_no_value": ["select", "avg", "(", "ticket_price", ")", ",", "min", "(", "ticket_price", ")", ",", "max", "(", "ticket_price", ")", "from", "exhibition", "where", "year", "<", "value"], "question": "Show the average, minimum, and maximum ticket prices for exhibitions for all years before 2009.", "question_toks": ["Show", "the", "average", ",", "minimum", ",", "and", "maximum", "ticket", "prices", "for", "exhibitions", "for", "all", "years", "before", "2009", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 10, false], null]], [2, [0, [0, 10, false], null]], [1, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 7, false], null], 2009.0, null]]}}, {"db_id": "theme_gallery", "query": "SELECT avg(ticket_price) ,  min(ticket_price) ,  max(ticket_price) FROM exhibition WHERE YEAR  <  2009", "query_toks": ["SELECT", "avg", "(", "ticket_price", ")", ",", "min", "(", "ticket_price", ")", ",", "max", "(", "ticket_price", ")", "FROM", "exhibition", "WHERE", "YEAR", "<", "2009"], "query_toks_no_value": ["select", "avg", "(", "ticket_price", ")", ",", "min", "(", "ticket_price", ")", ",", "max", "(", "ticket_price", ")", "from", "exhibition", "where", "year", "<", "value"], "question": "What are the average, minimum, and maximum ticket prices for exhibitions that happened prior to 2009?", "question_toks": ["What", "are", "the", "average", ",", "minimum", ",", "and", "maximum", "ticket", "prices", "for", "exhibitions", "that", "happened", "prior", "to", "2009", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 10, false], null]], [2, [0, [0, 10, false], null]], [1, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 7, false], null], 2009.0, null]]}}, {"db_id": "theme_gallery", "query": "SELECT theme ,  YEAR FROM exhibition ORDER BY ticket_price DESC", "query_toks": ["SELECT", "theme", ",", "YEAR", "FROM", "exhibition", "ORDER", "BY", "ticket_price", "DESC"], "query_toks_no_value": ["select", "theme", ",", "year", "from", "exhibition", "order", "by", "ticket_price", "desc"], "question": "Show theme and year for all exhibitions in an descending order of ticket price.", "question_toks": ["Show", "theme", "and", "year", "for", "all", "exhibitions", "in", "an", "descending", "order", "of", "ticket", "price", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 10, false], null]]], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "theme_gallery", "query": "SELECT theme ,  YEAR FROM exhibition ORDER BY ticket_price DESC", "query_toks": ["SELECT", "theme", ",", "YEAR", "FROM", "exhibition", "ORDER", "BY", "ticket_price", "DESC"], "query_toks_no_value": ["select", "theme", ",", "year", "from", "exhibition", "order", "by", "ticket_price", "desc"], "question": "What are the themes and years for exhibitions, sorted by ticket price descending?", "question_toks": ["What", "are", "the", "themes", "and", "years", "for", "exhibitions", ",", "sorted", "by", "ticket", "price", "descending", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 10, false], null]]], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "theme_gallery", "query": "SELECT T2.theme ,  T1.date ,  T1.attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T2.year  =  2004", "query_toks": ["SELECT", "T2.theme", ",", "T1.date", ",", "T1.attendance", "FROM", "exhibition_record", "AS", "T1", "JOIN", "exhibition", "AS", "T2", "ON", "T1.exhibition_id", "=", "T2.exhibition_id", "WHERE", "T2.year", "=", "2004"], "query_toks_no_value": ["select", "t2", ".", "theme", ",", "t1", ".", "date", ",", "t1", ".", "attendance", "from", "exhibition_record", "as", "t1", "join", "exhibition", "as", "t2", "on", "t1", ".", "exhibition_id", "=", "t2", ".", "exhibition_id", "where", "t2", ".", "year", "=", "value"], "question": "What is the theme, date, and attendance for the exhibition in year 2004?", "question_toks": ["What", "is", "the", "theme", ",", "date", ",", "and", "attendance", "for", "the", "exhibition", "in", "year", "2004", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], 2004.0, null]]}}, {"db_id": "theme_gallery", "query": "SELECT T2.theme ,  T1.date ,  T1.attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T2.year  =  2004", "query_toks": ["SELECT", "T2.theme", ",", "T1.date", ",", "T1.attendance", "FROM", "exhibition_record", "AS", "T1", "JOIN", "exhibition", "AS", "T2", "ON", "T1.exhibition_id", "=", "T2.exhibition_id", "WHERE", "T2.year", "=", "2004"], "query_toks_no_value": ["select", "t2", ".", "theme", ",", "t1", ".", "date", ",", "t1", ".", "attendance", "from", "exhibition_record", "as", "t1", "join", "exhibition", "as", "t2", "on", "t1", ".", "exhibition_id", "=", "t2", ".", "exhibition_id", "where", "t2", ".", "year", "=", "value"], "question": "Return the themes, dates, and attendance for exhibitions that happened in 2004.", "question_toks": ["Return", "the", "themes", ",", "dates", ",", "and", "attendance", "for", "exhibitions", "that", "happened", "in", "2004", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], 2004.0, null]]}}, {"db_id": "epinions_1", "query": "SELECT avg(rating) ,  max(rating) FROM review", "query_toks": ["SELECT", "avg", "(", "rating", ")", ",", "max", "(", "rating", ")", "FROM", "review"], "query_toks_no_value": ["select", "avg", "(", "rating", ")", ",", "max", "(", "rating", ")", "from", "review"], "question": "Find the average and maximum rating of all reviews.", "question_toks": ["Find", "the", "average", "and", "maximum", "rating", "of", "all", "reviews", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 6, false], null]], [1, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "epinions_1", "query": "SELECT T1.title ,  T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rating) DESC LIMIT 1", "query_toks": ["SELECT", "T1.title", ",", "T1.i_id", "FROM", "item", "AS", "T1", "JOIN", "review", "AS", "T2", "ON", "T1.i_id", "=", "T2.i_id", "GROUP", "BY", "T2.i_id", "ORDER", "BY", "avg", "(", "T2.rating", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t1", ".", "i_id", "from", "item", "as", "t1", "join", "review", "as", "t2", "on", "t1", ".", "i_id", "=", "t2", ".", "i_id", "group", "by", "t2", ".", "i_id", "order", "by", "avg", "(", "t2", ".", "rating", ")", "desc", "limit", "value"], "question": "Find the name and id of the item with the highest average rating.", "question_toks": ["Find", "the", "name", "and", "id", "of", "the", "item", "with", "the", "highest", "average", "rating", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [5, 6, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": []}}, {"db_id": "epinions_1", "query": "SELECT T1.title ,  T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rank) DESC LIMIT 1", "query_toks": ["SELECT", "T1.title", ",", "T1.i_id", "FROM", "item", "AS", "T1", "JOIN", "review", "AS", "T2", "ON", "T1.i_id", "=", "T2.i_id", "GROUP", "BY", "T2.i_id", "ORDER", "BY", "avg", "(", "T2.rank", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t1", ".", "i_id", "from", "item", "as", "t1", "join", "review", "as", "t2", "on", "t1", ".", "i_id", "=", "t2", ".", "i_id", "group", "by", "t2", ".", "i_id", "order", "by", "avg", "(", "t2", ".", "rank", ")", "desc", "limit", "value"], "question": "Find the name and id of the good with the highest average rank.", "question_toks": ["Find", "the", "name", "and", "id", "of", "the", "good", "with", "the", "highest", "average", "rank", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [5, 7, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": []}}, {"db_id": "epinions_1", "query": "SELECT T1.name ,  avg(T2.rating) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id GROUP BY T2.u_id", "query_toks": ["SELECT", "T1.name", ",", "avg", "(", "T2.rating", ")", "FROM", "useracct", "AS", "T1", "JOIN", "review", "AS", "T2", "ON", "T1.u_id", "=", "T2.u_id", "GROUP", "BY", "T2.u_id"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "avg", "(", "t2", ".", "rating", ")", "from", "useracct", "as", "t1", "join", "review", "as", "t2", "on", "t1", ".", "u_id", "=", "t2", ".", "u_id", "group", "by", "t2", ".", "u_id"], "question": "For each user, return the name and the average rating of reviews given by them.", "question_toks": ["For", "each", "user", ",", "return", "the", "name", "and", "the", "average", "rating", "of", "reviews", "given", "by", "them", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 4, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [5, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "epinions_1", "query": "SELECT T1.name ,  count(*) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id GROUP BY T2.u_id", "query_toks": ["SELECT", "T1.name", ",", "count", "(", "*", ")", "FROM", "useracct", "AS", "T1", "JOIN", "review", "AS", "T2", "ON", "T1.u_id", "=", "T2.u_id", "GROUP", "BY", "T2.u_id"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "count", "(", "*", ")", "from", "useracct", "as", "t1", "join", "review", "as", "t2", "on", "t1", ".", "u_id", "=", "t2", ".", "u_id", "group", "by", "t2", ".", "u_id"], "question": "For each user, find their name and the number of reviews written by them.", "question_toks": ["For", "each", "user", ",", "find", "their", "name", "and", "the", "number", "of", "reviews", "written", "by", "them", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 4, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "epinions_1", "query": "SELECT T1.name ,  avg(trust) FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id  =  T2.target_u_id GROUP BY T2.target_u_id", "query_toks": ["SELECT", "T1.name", ",", "avg", "(", "trust", ")", "FROM", "useracct", "AS", "T1", "JOIN", "trust", "AS", "T2", "ON", "T1.u_id", "=", "T2.target_u_id", "GROUP", "BY", "T2.target_u_id"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "avg", "(", "trust", ")", "from", "useracct", "as", "t1", "join", "trust", "as", "t2", "on", "t1", ".", "u_id", "=", "t2", ".", "target_u_id", "group", "by", "t2", ".", "target_u_id"], "question": "Find each target user's name and average trust score.", "question_toks": ["Find", "each", "target", "user", "'s", "name", "and", "average", "trust", "score", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 11, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 11, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [5, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "riding_club", "query": "SELECT Gender ,  Occupation FROM player", "query_toks": ["SELECT", "Gender", ",", "Occupation", "FROM", "player"], "query_toks_no_value": ["select", "gender", ",", "occupation", "from", "player"], "question": "What are the gender and occupation of players?", "question_toks": ["What", "are", "the", "gender", "and", "occupation", "of", "players", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "riding_club", "query": "SELECT Player_name ,  residence FROM player WHERE Occupation != \"Researcher\"", "query_toks": ["SELECT", "Player_name", ",", "residence", "FROM", "player", "WHERE", "Occupation", "!", "=", "``", "Researcher", "''"], "query_toks_no_value": ["select", "player_name", ",", "residence", "from", "player", "where", "occupation", "!", "=", "value"], "question": "List the name and residence for players whose occupation is not \"Researcher\".", "question_toks": ["List", "the", "name", "and", "residence", "for", "players", "whose", "occupation", "is", "not", "``", "Researcher", "''", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 6, false], null], "\"Researcher\"", null]]}}, {"db_id": "riding_club", "query": "SELECT Occupation ,  COUNT(*) FROM player GROUP BY Occupation", "query_toks": ["SELECT", "Occupation", ",", "COUNT", "(", "*", ")", "FROM", "player", "GROUP", "BY", "Occupation"], "query_toks_no_value": ["select", "occupation", ",", "count", "(", "*", ")", "from", "player", "group", "by", "occupation"], "question": "Show different occupations along with the number of players in each occupation.", "question_toks": ["Show", "different", "occupations", "along", "with", "the", "number", "of", "players", "in", "each", "occupation", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "riding_club", "query": "SELECT T3.Player_name ,  T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID", "query_toks": ["SELECT", "T3.Player_name", ",", "T2.coach_name", "FROM", "player_coach", "AS", "T1", "JOIN", "coach", "AS", "T2", "ON", "T1.Coach_ID", "=", "T2.Coach_ID", "JOIN", "player", "AS", "T3", "ON", "T1.Player_ID", "=", "T3.Player_ID"], "query_toks_no_value": ["select", "t3", ".", "player_name", ",", "t2", ".", "coach_name", "from", "player_coach", "as", "t1", "join", "coach", "as", "t2", "on", "t1", ".", "coach_id", "=", "t2", ".", "coach_id", "join", "player", "as", "t3", "on", "t1", ".", "player_id", "=", "t3", ".", "player_id"], "question": "Show the names of players and names of their coaches.", "question_toks": ["Show", "the", "names", "of", "players", "and", "names", "of", "their", "coaches", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 19, false], null], [0, 13, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "riding_club", "query": "SELECT T3.Player_name ,  T3.gender FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID WHERE T1.Starting_year  >  2011", "query_toks": ["SELECT", "T3.Player_name", ",", "T3.gender", "FROM", "player_coach", "AS", "T1", "JOIN", "coach", "AS", "T2", "ON", "T1.Coach_ID", "=", "T2.Coach_ID", "JOIN", "player", "AS", "T3", "ON", "T1.Player_ID", "=", "T3.Player_ID", "WHERE", "T1.Starting_year", ">", "2011"], "query_toks_no_value": ["select", "t3", ".", "player_name", ",", "t3", ".", "gender", "from", "player_coach", "as", "t1", "join", "coach", "as", "t2", "on", "t1", ".", "coach_id", "=", "t2", ".", "coach_id", "join", "player", "as", "t3", "on", "t1", ".", "player_id", "=", "t3", ".", "player_id", "where", "t1", ".", "starting_year", ">", "value"], "question": "Show the names and genders of players with a coach starting after 2011.", "question_toks": ["Show", "the", "names", "and", "genders", "of", "players", "with", "a", "coach", "starting", "after", "2011", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 19, false], null], [0, 13, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 20, false], null], 2011.0, null]]}}, {"db_id": "riding_club", "query": "SELECT T3.Player_name ,  T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID ORDER BY T3.Votes DESC", "query_toks": ["SELECT", "T3.Player_name", ",", "T2.coach_name", "FROM", "player_coach", "AS", "T1", "JOIN", "coach", "AS", "T2", "ON", "T1.Coach_ID", "=", "T2.Coach_ID", "JOIN", "player", "AS", "T3", "ON", "T1.Player_ID", "=", "T3.Player_ID", "ORDER", "BY", "T3.Votes", "DESC"], "query_toks_no_value": ["select", "t3", ".", "player_name", ",", "t2", ".", "coach_name", "from", "player_coach", "as", "t1", "join", "coach", "as", "t2", "on", "t1", ".", "coach_id", "=", "t2", ".", "coach_id", "join", "player", "as", "t3", "on", "t1", ".", "player_id", "=", "t3", ".", "player_id", "order", "by", "t3", ".", "votes", "desc"], "question": "Show the names of players and names of their coaches in descending order of the votes of players.", "question_toks": ["Show", "the", "names", "of", "players", "and", "names", "of", "their", "coaches", "in", "descending", "order", "of", "the", "votes", "of", "players", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 19, false], null], [0, 13, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 7, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "riding_club", "query": "SELECT T1.club_id ,  T1.club_name, count(*) FROM club AS T1 JOIN coach AS T2 ON T1.club_id  =  T2.club_id GROUP BY T1.club_id", "query_toks": ["SELECT", "T1.club_id", ",", "T1.club_name", ",", "count", "(", "*", ")", "FROM", "club", "AS", "T1", "JOIN", "coach", "AS", "T2", "ON", "T1.club_id", "=", "T2.club_id", "GROUP", "BY", "T1.club_id"], "query_toks_no_value": ["select", "t1", ".", "club_id", ",", "t1", ".", "club_name", ",", "count", "(", "*", ")", "from", "club", "as", "t1", "join", "coach", "as", "t2", "on", "t1", ".", "club_id", "=", "t2", ".", "club_id", "group", "by", "t1", ".", "club_id"], "question": "How many coaches does each club has? List the club id, name and the number of coaches.", "question_toks": ["How", "many", "coaches", "does", "each", "club", "has", "?", "List", "the", "club", "id", ",", "name", "and", "the", "number", "of", "coaches", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 16, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "riding_club", "query": "SELECT T1.club_id ,  T1.gold FROM match_result AS T1 JOIN coach AS T2 ON T1.club_id  =  T2.club_id GROUP BY T1.club_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.club_id", ",", "T1.gold", "FROM", "match_result", "AS", "T1", "JOIN", "coach", "AS", "T2", "ON", "T1.club_id", "=", "T2.club_id", "GROUP", "BY", "T1.club_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "club_id", ",", "t1", ".", "gold", "from", "match_result", "as", "t1", "join", "coach", "as", "t2", "on", "t1", ".", "club_id", "=", "t2", ".", "club_id", "group", "by", "t1", ".", "club_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "How many gold medals has the club with the most coaches won?", "question_toks": ["How", "many", "gold", "medals", "has", "the", "club", "with", "the", "most", "coaches", "won", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 22, false], null], [0, 16, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [[0, 22, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": []}}, {"db_id": "gymnast", "query": "SELECT T2.Hometown ,  COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown", "query_toks": ["SELECT", "T2.Hometown", ",", "COUNT", "(", "*", ")", "FROM", "gymnast", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.Gymnast_ID", "=", "T2.People_ID", "GROUP", "BY", "T2.Hometown"], "query_toks_no_value": ["select", "t2", ".", "hometown", ",", "count", "(", "*", ")", "from", "gymnast", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "gymnast_id", "=", "t2", ".", "people_id", "group", "by", "t2", ".", "hometown"], "question": "What are the hometowns of gymnasts and the corresponding number of gymnasts?", "question_toks": ["What", "are", "the", "hometowns", "of", "gymnasts", "and", "the", "corresponding", "number", "of", "gymnasts", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "gymnast", "query": "SELECT T2.Hometown ,  COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown", "query_toks": ["SELECT", "T2.Hometown", ",", "COUNT", "(", "*", ")", "FROM", "gymnast", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.Gymnast_ID", "=", "T2.People_ID", "GROUP", "BY", "T2.Hometown"], "query_toks_no_value": ["select", "t2", ".", "hometown", ",", "count", "(", "*", ")", "from", "gymnast", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "gymnast_id", "=", "t2", ".", "people_id", "group", "by", "t2", ".", "hometown"], "question": "How many gymnasts are from each hometown?", "question_toks": ["How", "many", "gymnasts", "are", "from", "each", "hometown", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "small_bank_1", "query": "SELECT T1.custid ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT max(balance) FROM checking)", "query_toks": ["SELECT", "T1.custid", ",", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "WHERE", "T2.balance", "<", "(", "SELECT", "max", "(", "balance", ")", "FROM", "checking", ")"], "query_toks_no_value": ["select", "t1", ".", "custid", ",", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "where", "t2", ".", "balance", "<", "(", "select", "max", "(", "balance", ")", "from", "checking", ")"], "question": "Find the name and id of accounts whose checking balance is below the maximum checking balance.", "question_toks": ["Find", "the", "name", "and", "id", "of", "accounts", "whose", "checking", "balance", "is", "below", "the", "maximum", "checking", "balance", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 6, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 6, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "small_bank_1", "query": "SELECT T1.custid ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT max(balance) FROM checking)", "query_toks": ["SELECT", "T1.custid", ",", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "WHERE", "T2.balance", "<", "(", "SELECT", "max", "(", "balance", ")", "FROM", "checking", ")"], "query_toks_no_value": ["select", "t1", ".", "custid", ",", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "where", "t2", ".", "balance", "<", "(", "select", "max", "(", "balance", ")", "from", "checking", ")"], "question": "What are the customer id and name corresponding to accounts with a checking balance less than the largest checking balance?", "question_toks": ["What", "are", "the", "customer", "id", "and", "name", "corresponding", "to", "accounts", "with", "a", "checking", "balance", "less", "than", "the", "largest", "checking", "balance", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 6, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 6, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "small_bank_1", "query": "SELECT T2.balance ,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T1.name  =  'Brown'", "query_toks": ["SELECT", "T2.balance", ",", "T3.balance", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid", "WHERE", "T1.name", "=", "'Brown", "'"], "query_toks_no_value": ["select", "t2", ".", "balance", ",", "t3", ".", "balance", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid", "where", "t1", ".", "name", "=", "value"], "question": "Find the checking balance and saving balance in the Brown\u2019s account.", "question_toks": ["Find", "the", "checking", "balance", "and", "saving", "balance", "in", "the", "Brown\u2019s", "account", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Brown\"", null]]}}, {"db_id": "small_bank_1", "query": "SELECT T2.balance ,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T1.name  =  'Brown'", "query_toks": ["SELECT", "T2.balance", ",", "T3.balance", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid", "WHERE", "T1.name", "=", "'Brown", "'"], "query_toks_no_value": ["select", "t2", ".", "balance", ",", "t3", ".", "balance", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid", "where", "t1", ".", "name", "=", "value"], "question": "What are the checking and savings balances in accounts belonging to Brown?", "question_toks": ["What", "are", "the", "checking", "and", "savings", "balances", "in", "accounts", "belonging", "to", "Brown", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Brown\"", null]]}}, {"db_id": "small_bank_1", "query": "SELECT T1.name ,  T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  >  (SELECT avg(balance) FROM savings)", "query_toks": ["SELECT", "T1.name", ",", "T2.balance", "+", "T3.balance", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid", "WHERE", "T3.balance", ">", "(", "SELECT", "avg", "(", "balance", ")", "FROM", "savings", ")"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "balance", "+", "t3", ".", "balance", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid", "where", "t3", ".", "balance", ">", "(", "select", "avg", "(", "balance", ")", "from", "savings", ")"], "question": "Find the names and total checking and savings balances of accounts whose savings balance is higher than the average savings balance.", "question_toks": ["Find", "the", "names", "and", "total", "checking", "and", "savings", "balances", "of", "accounts", "whose", "savings", "balance", "is", "higher", "than", "the", "average", "savings", "balance", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [2, [0, 6, false], [0, 4, false]]]]], "union": null, "where": [[false, 3, [0, [0, 4, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "small_bank_1", "query": "SELECT T1.name ,  T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  >  (SELECT avg(balance) FROM savings)", "query_toks": ["SELECT", "T1.name", ",", "T2.balance", "+", "T3.balance", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid", "WHERE", "T3.balance", ">", "(", "SELECT", "avg", "(", "balance", ")", "FROM", "savings", ")"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "balance", "+", "t3", ".", "balance", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid", "where", "t3", ".", "balance", ">", "(", "select", "avg", "(", "balance", ")", "from", "savings", ")"], "question": "What are the names and sum of checking and savings balances for accounts with savings balances higher than the average savings balance?", "question_toks": ["What", "are", "the", "names", "and", "sum", "of", "checking", "and", "savings", "balances", "for", "accounts", "with", "savings", "balances", "higher", "than", "the", "average", "savings", "balance", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [2, [0, 6, false], [0, 4, false]]]]], "union": null, "where": [[false, 3, [0, [0, 4, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "small_bank_1", "query": "SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1", "query_toks": ["SELECT", "T1.name", ",", "T2.balance", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid", "ORDER", "BY", "T3.balance", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "balance", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid", "order", "by", "t3", ".", "balance", "limit", "value"], "question": "Find the name and checking balance of the account with the lowest savings balance.", "question_toks": ["Find", "the", "name", "and", "checking", "balance", "of", "the", "account", "with", "the", "lowest", "savings", "balance", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 4, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "small_bank_1", "query": "SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1", "query_toks": ["SELECT", "T1.name", ",", "T2.balance", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid", "ORDER", "BY", "T3.balance", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "balance", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid", "order", "by", "t3", ".", "balance", "limit", "value"], "question": "What are the names and balances of checking accounts belonging to the customer with the lowest savings balance?", "question_toks": ["What", "are", "the", "names", "and", "balances", "of", "checking", "accounts", "belonging", "to", "the", "customer", "with", "the", "lowest", "savings", "balance", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 4, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "small_bank_1", "query": "SELECT count(*) ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "GROUP", "BY", "T1.name"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "group", "by", "t1", ".", "name"], "question": "Find the number of checking accounts for each account name.", "question_toks": ["Find", "the", "number", "of", "checking", "accounts", "for", "each", "account", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "small_bank_1", "query": "SELECT count(*) ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "GROUP", "BY", "T1.name"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "group", "by", "t1", ".", "name"], "question": "What are the names of customers with accounts, and how many checking accounts do each of them have?", "question_toks": ["What", "are", "the", "names", "of", "customers", "with", "accounts", ",", "and", "how", "many", "checking", "accounts", "do", "each", "of", "them", "have", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "small_bank_1", "query": "SELECT sum(T2.balance) ,  T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name", "query_toks": ["SELECT", "sum", "(", "T2.balance", ")", ",", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "savings", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "GROUP", "BY", "T1.name"], "query_toks_no_value": ["select", "sum", "(", "t2", ".", "balance", ")", ",", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "savings", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "group", "by", "t1", ".", "name"], "question": "Find the total saving balance for each account name.", "question_toks": ["Find", "the", "total", "saving", "balance", "for", "each", "account", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 3, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 4, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "small_bank_1", "query": "SELECT sum(T2.balance) ,  T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name", "query_toks": ["SELECT", "sum", "(", "T2.balance", ")", ",", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "savings", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "GROUP", "BY", "T1.name"], "query_toks_no_value": ["select", "sum", "(", "t2", ".", "balance", ")", ",", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "savings", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "group", "by", "t1", ".", "name"], "question": "What are the names of customers with accounts, and what are the total savings balances for each?", "question_toks": ["What", "are", "the", "names", "of", "customers", "with", "accounts", ",", "and", "what", "are", "the", "total", "savings", "balances", "for", "each", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 3, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 4, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "small_bank_1", "query": "SELECT T2.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1", "query_toks": ["SELECT", "T2.balance", ",", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid", "ORDER", "BY", "T3.balance", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "balance", ",", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid", "order", "by", "t3", ".", "balance", "limit", "value"], "question": "Find the name and checking balance of the account with the lowest saving balance.", "question_toks": ["Find", "the", "name", "and", "checking", "balance", "of", "the", "account", "with", "the", "lowest", "saving", "balance", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 4, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "small_bank_1", "query": "SELECT T2.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1", "query_toks": ["SELECT", "T2.balance", ",", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid", "ORDER", "BY", "T3.balance", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "balance", ",", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid", "order", "by", "t3", ".", "balance", "limit", "value"], "question": "What is the name and checking balance of the account which has the lowest savings balance?", "question_toks": ["What", "is", "the", "name", "and", "checking", "balance", "of", "the", "account", "which", "has", "the", "lowest", "savings", "balance", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 4, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "small_bank_1", "query": "SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid", "query_toks": ["SELECT", "T2.balance", ",", "T3.balance", ",", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid"], "query_toks_no_value": ["select", "t2", ".", "balance", ",", "t3", ".", "balance", ",", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid"], "question": "Find the name, checking balance and saving balance of all accounts in the bank.", "question_toks": ["Find", "the", "name", ",", "checking", "balance", "and", "saving", "balance", "of", "all", "accounts", "in", "the", "bank", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "small_bank_1", "query": "SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid", "query_toks": ["SELECT", "T2.balance", ",", "T3.balance", ",", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid"], "query_toks_no_value": ["select", "t2", ".", "balance", ",", "t3", ".", "balance", ",", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid"], "question": "What are the names, checking balances, and savings balances for all customers?", "question_toks": ["What", "are", "the", "names", ",", "checking", "balances", ",", "and", "savings", "balances", "for", "all", "customers", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "small_bank_1", "query": "SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance DESC", "query_toks": ["SELECT", "T2.balance", ",", "T3.balance", ",", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid", "ORDER", "BY", "T2.balance", "+", "T3.balance", "DESC"], "query_toks_no_value": ["select", "t2", ".", "balance", ",", "t3", ".", "balance", ",", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid", "order", "by", "t2", ".", "balance", "+", "t3", ".", "balance", "desc"], "question": "Find the name, checking balance and savings balance of all accounts in the bank sorted by their total checking and savings balance in descending order.", "question_toks": ["Find", "the", "name", ",", "checking", "balance", "and", "savings", "balance", "of", "all", "accounts", "in", "the", "bank", "sorted", "by", "their", "total", "checking", "and", "savings", "balance", "in", "descending", "order", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[2, [0, 6, false], [0, 4, false]]]], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "small_bank_1", "query": "SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance DESC", "query_toks": ["SELECT", "T2.balance", ",", "T3.balance", ",", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid", "ORDER", "BY", "T2.balance", "+", "T3.balance", "DESC"], "query_toks_no_value": ["select", "t2", ".", "balance", ",", "t3", ".", "balance", ",", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid", "order", "by", "t2", ".", "balance", "+", "t3", ".", "balance", "desc"], "question": "What are the names, checking balances, and savings balances of customers, ordered by the total of checking and savings balances descending?", "question_toks": ["What", "are", "the", "names", ",", "checking", "balances", ",", "and", "savings", "balances", "of", "customers", ",", "ordered", "by", "the", "total", "of", "checking", "and", "savings", "balances", "descending", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[2, [0, 6, false], [0, 4, false]]]], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "small_bank_1", "query": "SELECT T1.name ,  T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  <  T2.balance", "query_toks": ["SELECT", "T1.name", ",", "T3.balance", "+", "T2.balance", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid", "WHERE", "T3.balance", "<", "T2.balance"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t3", ".", "balance", "+", "t2", ".", "balance", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid", "where", "t3", ".", "balance", "<", "t2", ".", "balance"], "question": "Find the name and total checking and savings balance of the accounts whose savings balance is lower than corresponding checking balance.", "question_toks": ["Find", "the", "name", "and", "total", "checking", "and", "savings", "balance", "of", "the", "accounts", "whose", "savings", "balance", "is", "lower", "than", "corresponding", "checking", "balance", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [2, [0, 4, false], [0, 6, false]]]]], "union": null, "where": [[false, 4, [0, [0, 4, false], null], [0, 6, false], null]]}}, {"db_id": "small_bank_1", "query": "SELECT T1.name ,  T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  <  T2.balance", "query_toks": ["SELECT", "T1.name", ",", "T3.balance", "+", "T2.balance", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid", "WHERE", "T3.balance", "<", "T2.balance"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t3", ".", "balance", "+", "t2", ".", "balance", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid", "where", "t3", ".", "balance", "<", "t2", ".", "balance"], "question": "What are the names of customers who have a savings balance lower than their checking balance, and what is the total of their checking and savings balances?", "question_toks": ["What", "are", "the", "names", "of", "customers", "who", "have", "a", "savings", "balance", "lower", "than", "their", "checking", "balance", ",", "and", "what", "is", "the", "total", "of", "their", "checking", "and", "savings", "balances", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [2, [0, 4, false], [0, 6, false]]]]], "union": null, "where": [[false, 4, [0, [0, 4, false], null], [0, 6, false], null]]}}, {"db_id": "small_bank_1", "query": "SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T2.balance DESC LIMIT 3", "query_toks": ["SELECT", "T1.name", ",", "T2.balance", "FROM", "accounts", "AS", "T1", "JOIN", "savings", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "ORDER", "BY", "T2.balance", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "balance", "from", "accounts", "as", "t1", "join", "savings", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "order", "by", "t2", ".", "balance", "desc", "limit", "value"], "question": "Find the name and savings balance of the top 3 accounts with the highest saving balance sorted by savings balance in descending order.", "question_toks": ["Find", "the", "name", "and", "savings", "balance", "of", "the", "top", "3", "accounts", "with", "the", "highest", "saving", "balance", "sorted", "by", "savings", "balance", "in", "descending", "order", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 3, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 3, "orderBy": ["desc", [[0, [0, 4, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "small_bank_1", "query": "SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T2.balance DESC LIMIT 3", "query_toks": ["SELECT", "T1.name", ",", "T2.balance", "FROM", "accounts", "AS", "T1", "JOIN", "savings", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "ORDER", "BY", "T2.balance", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "balance", "from", "accounts", "as", "t1", "join", "savings", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "order", "by", "t2", ".", "balance", "desc", "limit", "value"], "question": "What are names and savings balances of the three accounts with the highest savings balances?", "question_toks": ["What", "are", "names", "and", "savings", "balances", "of", "the", "three", "accounts", "with", "the", "highest", "savings", "balances", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 3, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 3, "orderBy": ["desc", [[0, [0, 4, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "browser_web", "query": "SELECT id ,  name ,  market_share FROM browser", "query_toks": ["SELECT", "id", ",", "name", ",", "market_share", "FROM", "browser"], "query_toks_no_value": ["select", "id", ",", "name", ",", "market_share", "from", "browser"], "question": "List the ids, names and market shares of all browsers.", "question_toks": ["List", "the", "ids", ",", "names", "and", "market", "shares", "of", "all", "browsers", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "browser_web", "query": "SELECT max(market_share) ,  min(market_share) ,  avg(market_share) FROM browser", "query_toks": ["SELECT", "max", "(", "market_share", ")", ",", "min", "(", "market_share", ")", ",", "avg", "(", "market_share", ")", "FROM", "browser"], "query_toks_no_value": ["select", "max", "(", "market_share", ")", ",", "min", "(", "market_share", ")", ",", "avg", "(", "market_share", ")", "from", "browser"], "question": "What is the maximum, minimum and average market share of the listed browsers?", "question_toks": ["What", "is", "the", "maximum", ",", "minimum", "and", "average", "market", "share", "of", "the", "listed", "browsers", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 8, false], null]], [2, [0, [0, 8, false], null]], [5, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "browser_web", "query": "SELECT id ,  market_share FROM browser WHERE name  =  'Safari'", "query_toks": ["SELECT", "id", ",", "market_share", "FROM", "browser", "WHERE", "name", "=", "'Safari", "'"], "query_toks_no_value": ["select", "id", ",", "market_share", "from", "browser", "where", "name", "=", "value"], "question": "What is the id and market share of the browser Safari?", "question_toks": ["What", "is", "the", "id", "and", "market", "share", "of", "the", "browser", "Safari", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"Safari\"", null]]}}, {"db_id": "browser_web", "query": "SELECT name ,  operating_system FROM web_client_accelerator WHERE CONNECTION != 'Broadband'", "query_toks": ["SELECT", "name", ",", "operating_system", "FROM", "web_client_accelerator", "WHERE", "CONNECTION", "!", "=", "'Broadband", "'"], "query_toks_no_value": ["select", "name", ",", "operating_system", "from", "web_client_accelerator", "where", "connection", "!", "=", "value"], "question": "What are the name and os of web client accelerators that do not work with only a 'Broadband' type connection?", "question_toks": ["What", "are", "the", "name", "and", "os", "of", "web", "client", "accelerators", "that", "do", "not", "work", "with", "only", "a", "'Broadband", "'", "type", "connection", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 5, false], null], "\"Broadband\"", null]]}}, {"db_id": "browser_web", "query": "SELECT T1.id ,  T1.Name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.id", ",", "T1.Name", "FROM", "web_client_accelerator", "AS", "T1", "JOIN", "accelerator_compatible_browser", "AS", "T2", "ON", "T2.accelerator_id", "=", "T1.id", "GROUP", "BY", "T1.id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "name", "from", "web_client_accelerator", "as", "t1", "join", "accelerator_compatible_browser", "as", "t2", "on", "t2", ".", "accelerator_id", "=", "t1", ".", "id", "group", "by", "t1", ".", "id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the ids and names of the web accelerators that are compatible with two or more browsers?", "question_toks": ["What", "are", "the", "ids", "and", "names", "of", "the", "web", "accelerators", "that", "are", "compatible", "with", "two", "or", "more", "browsers", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 1, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "browser_web", "query": "SELECT T1.id ,  T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id  =  T2.browser_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.id", ",", "T1.name", "FROM", "browser", "AS", "T1", "JOIN", "accelerator_compatible_browser", "AS", "T2", "ON", "T1.id", "=", "T2.browser_id", "GROUP", "BY", "T1.id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "name", "from", "browser", "as", "t1", "join", "accelerator_compatible_browser", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "browser_id", "group", "by", "t1", ".", "id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the id and name of the browser that is compatible with the most web accelerators?", "question_toks": ["What", "is", "the", "id", "and", "name", "of", "the", "browser", "that", "is", "compatible", "with", "the", "most", "web", "accelerators", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 10, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "browser_web", "query": "SELECT name ,  operating_system FROM web_client_accelerator EXCEPT SELECT T1.name ,  T1.operating_system FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T3.name  =  'Opera'", "query_toks": ["SELECT", "name", ",", "operating_system", "FROM", "web_client_accelerator", "EXCEPT", "SELECT", "T1.name", ",", "T1.operating_system", "FROM", "web_client_accelerator", "AS", "T1", "JOIN", "accelerator_compatible_browser", "AS", "T2", "ON", "T2.accelerator_id", "=", "T1.id", "JOIN", "browser", "AS", "T3", "ON", "T2.browser_id", "=", "T3.id", "WHERE", "T3.name", "=", "'Opera", "'"], "query_toks_no_value": ["select", "name", ",", "operating_system", "from", "web_client_accelerator", "except", "select", "t1", ".", "name", ",", "t1", ".", "operating_system", "from", "web_client_accelerator", "as", "t1", "join", "accelerator_compatible_browser", "as", "t2", "on", "t2", ".", "accelerator_id", "=", "t1", ".", "id", "join", "browser", "as", "t3", "on", "t2", ".", "browser_id", "=", "t3", ".", "id", "where", "t3", ".", "name", "=", "value"], "question": "Show the accelerator names and supporting operating systems that are not compatible with the browser named 'Opera'.", "question_toks": ["Show", "the", "accelerator", "names", "and", "supporting", "operating", "systems", "that", "are", "not", "compatible", "with", "the", "browser", "named", "'Opera", "'", "."], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"Opera\"", null]]}, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "browser_web", "query": "SELECT Operating_system ,  count(*) FROM web_client_accelerator GROUP BY Operating_system", "query_toks": ["SELECT", "Operating_system", ",", "count", "(", "*", ")", "FROM", "web_client_accelerator", "GROUP", "BY", "Operating_system"], "query_toks_no_value": ["select", "operating_system", ",", "count", "(", "*", ")", "from", "web_client_accelerator", "group", "by", "operating_system"], "question": "Find the number of web accelerators used for each Operating system.", "question_toks": ["Find", "the", "number", "of", "web", "accelerators", "used", "for", "each", "Operating", "system", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "browser_web", "query": "SELECT T2.name ,  T3.name FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id  =  T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id  =  T3.id ORDER BY T1.compatible_since_year DESC", "query_toks": ["SELECT", "T2.name", ",", "T3.name", "FROM", "accelerator_compatible_browser", "AS", "T1", "JOIN", "browser", "AS", "T2", "ON", "T1.browser_id", "=", "T2.id", "JOIN", "web_client_accelerator", "AS", "T3", "ON", "T1.accelerator_id", "=", "T3.id", "ORDER", "BY", "T1.compatible_since_year", "DESC"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t3", ".", "name", "from", "accelerator_compatible_browser", "as", "t1", "join", "browser", "as", "t2", "on", "t1", ".", "browser_id", "=", "t2", ".", "id", "join", "web_client_accelerator", "as", "t3", "on", "t1", ".", "accelerator_id", "=", "t3", ".", "id", "order", "by", "t1", ".", "compatible_since_year", "desc"], "question": "give me names of all compatible browsers and accelerators in the descending order of compatible year", "question_toks": ["give", "me", "names", "of", "all", "compatible", "browsers", "and", "accelerators", "in", "the", "descending", "order", "of", "compatible", "year"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 11, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "wrestler", "query": "SELECT Name ,  LOCATION FROM wrestler", "query_toks": ["SELECT", "Name", ",", "LOCATION", "FROM", "wrestler"], "query_toks_no_value": ["select", "name", ",", "location", "from", "wrestler"], "question": "What are the names and location of the wrestlers?", "question_toks": ["What", "are", "the", "names", "and", "location", "of", "the", "wrestlers", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "wrestler", "query": "SELECT Name ,  LOCATION FROM wrestler", "query_toks": ["SELECT", "Name", ",", "LOCATION", "FROM", "wrestler"], "query_toks_no_value": ["select", "name", ",", "location", "from", "wrestler"], "question": "Give the names and locations of all wrestlers.", "question_toks": ["Give", "the", "names", "and", "locations", "of", "all", "wrestlers", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "wrestler", "query": "SELECT T2.Name ,  T1.Elimination_Move FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID", "query_toks": ["SELECT", "T2.Name", ",", "T1.Elimination_Move", "FROM", "elimination", "AS", "T1", "JOIN", "wrestler", "AS", "T2", "ON", "T1.Wrestler_ID", "=", "T2.Wrestler_ID"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t1", ".", "elimination_move", "from", "elimination", "as", "t1", "join", "wrestler", "as", "t2", "on", "t1", ".", "wrestler_id", "=", "t2", ".", "wrestler_id"], "question": "What are the names of wrestlers and the elimination moves?", "question_toks": ["What", "are", "the", "names", "of", "wrestlers", "and", "the", "elimination", "moves", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "wrestler", "query": "SELECT T2.Name ,  T1.Elimination_Move FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID", "query_toks": ["SELECT", "T2.Name", ",", "T1.Elimination_Move", "FROM", "elimination", "AS", "T1", "JOIN", "wrestler", "AS", "T2", "ON", "T1.Wrestler_ID", "=", "T2.Wrestler_ID"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t1", ".", "elimination_move", "from", "elimination", "as", "t1", "join", "wrestler", "as", "t2", "on", "t1", ".", "wrestler_id", "=", "t2", ".", "wrestler_id"], "question": "Give the names of wrestlers and their elimination moves.", "question_toks": ["Give", "the", "names", "of", "wrestlers", "and", "their", "elimination", "moves", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "wrestler", "query": "SELECT T2.Name ,  T1.Team FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID ORDER BY T2.Days_held DESC", "query_toks": ["SELECT", "T2.Name", ",", "T1.Team", "FROM", "elimination", "AS", "T1", "JOIN", "wrestler", "AS", "T2", "ON", "T1.Wrestler_ID", "=", "T2.Wrestler_ID", "ORDER", "BY", "T2.Days_held", "DESC"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t1", ".", "team", "from", "elimination", "as", "t1", "join", "wrestler", "as", "t2", "on", "t1", ".", "wrestler_id", "=", "t2", ".", "wrestler_id", "order", "by", "t2", ".", "days_held", "desc"], "question": "List the names of wrestlers and the teams in elimination in descending order of days held.", "question_toks": ["List", "the", "names", "of", "wrestlers", "and", "the", "teams", "in", "elimination", "in", "descending", "order", "of", "days", "held", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 4, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "wrestler", "query": "SELECT T2.Name ,  T1.Team FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID ORDER BY T2.Days_held DESC", "query_toks": ["SELECT", "T2.Name", ",", "T1.Team", "FROM", "elimination", "AS", "T1", "JOIN", "wrestler", "AS", "T2", "ON", "T1.Wrestler_ID", "=", "T2.Wrestler_ID", "ORDER", "BY", "T2.Days_held", "DESC"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t1", ".", "team", "from", "elimination", "as", "t1", "join", "wrestler", "as", "t2", "on", "t1", ".", "wrestler_id", "=", "t2", ".", "wrestler_id", "order", "by", "t2", ".", "days_held", "desc"], "question": "What are the names of wrestlers and their teams in elimination, ordered descending by days held?", "question_toks": ["What", "are", "the", "names", "of", "wrestlers", "and", "their", "teams", "in", "elimination", ",", "ordered", "descending", "by", "days", "held", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 4, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "wrestler", "query": "SELECT Team ,  COUNT(*) FROM elimination GROUP BY Team", "query_toks": ["SELECT", "Team", ",", "COUNT", "(", "*", ")", "FROM", "elimination", "GROUP", "BY", "Team"], "query_toks_no_value": ["select", "team", ",", "count", "(", "*", ")", "from", "elimination", "group", "by", "team"], "question": "Show different teams in eliminations and the number of eliminations from each team.", "question_toks": ["Show", "different", "teams", "in", "eliminations", "and", "the", "number", "of", "eliminations", "from", "each", "team", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "wrestler", "query": "SELECT Team ,  COUNT(*) FROM elimination GROUP BY Team", "query_toks": ["SELECT", "Team", ",", "COUNT", "(", "*", ")", "FROM", "elimination", "GROUP", "BY", "Team"], "query_toks_no_value": ["select", "team", ",", "count", "(", "*", ")", "from", "elimination", "group", "by", "team"], "question": "How many eliminations did each team have?", "question_toks": ["How", "many", "eliminations", "did", "each", "team", "have", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "wrestler", "query": "SELECT Reign ,  Days_held FROM wrestler", "query_toks": ["SELECT", "Reign", ",", "Days_held", "FROM", "wrestler"], "query_toks_no_value": ["select", "reign", ",", "days_held", "from", "wrestler"], "question": "Show the reign and days held of wrestlers.", "question_toks": ["Show", "the", "reign", "and", "days", "held", "of", "wrestlers", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "wrestler", "query": "SELECT Reign ,  Days_held FROM wrestler", "query_toks": ["SELECT", "Reign", ",", "Days_held", "FROM", "wrestler"], "query_toks_no_value": ["select", "reign", ",", "days_held", "from", "wrestler"], "question": "What are the reigns and days held of all wrestlers?", "question_toks": ["What", "are", "the", "reigns", "and", "days", "held", "of", "all", "wrestlers", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "school_finance", "query": "SELECT school_name ,  LOCATION ,  mascot FROM school", "query_toks": ["SELECT", "school_name", ",", "LOCATION", ",", "mascot", "FROM", "school"], "query_toks_no_value": ["select", "school_name", ",", "location", ",", "mascot", "from", "school"], "question": "List the name, location, mascot for all schools.", "question_toks": ["List", "the", "name", ",", "location", ",", "mascot", "for", "all", "schools", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "school_finance", "query": "SELECT sum(enrollment) ,  avg(enrollment) FROM school", "query_toks": ["SELECT", "sum", "(", "enrollment", ")", ",", "avg", "(", "enrollment", ")", "FROM", "school"], "query_toks_no_value": ["select", "sum", "(", "enrollment", ")", ",", "avg", "(", "enrollment", ")", "from", "school"], "question": "What are the total and average enrollment of all schools?", "question_toks": ["What", "are", "the", "total", "and", "average", "enrollment", "of", "all", "schools", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 5, false], null]], [5, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "school_finance", "query": "SELECT avg(enrollment) ,  max(enrollment) ,  min(enrollment) FROM school", "query_toks": ["SELECT", "avg", "(", "enrollment", ")", ",", "max", "(", "enrollment", ")", ",", "min", "(", "enrollment", ")", "FROM", "school"], "query_toks_no_value": ["select", "avg", "(", "enrollment", ")", ",", "max", "(", "enrollment", ")", ",", "min", "(", "enrollment", ")", "from", "school"], "question": "Show the average, maximum, minimum enrollment of all schools.", "question_toks": ["Show", "the", "average", ",", "maximum", ",", "minimum", "enrollment", "of", "all", "schools", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 5, false], null]], [1, [0, [0, 5, false], null]], [2, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "school_finance", "query": "SELECT county ,  count(*) ,  sum(enrollment) FROM school GROUP BY county", "query_toks": ["SELECT", "county", ",", "count", "(", "*", ")", ",", "sum", "(", "enrollment", ")", "FROM", "school", "GROUP", "BY", "county"], "query_toks_no_value": ["select", "county", ",", "count", "(", "*", ")", ",", "sum", "(", "enrollment", ")", "from", "school", "group", "by", "county"], "question": "Show each county along with the number of schools and total enrollment in each county.", "question_toks": ["Show", "each", "county", "along", "with", "the", "number", "of", "schools", "and", "total", "enrollment", "in", "each", "county", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [3, [0, [0, 0, false], null]], [4, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "school_finance", "query": "SELECT donator_name ,  sum(amount) FROM endowment GROUP BY donator_name ORDER BY sum(amount) DESC", "query_toks": ["SELECT", "donator_name", ",", "sum", "(", "amount", ")", "FROM", "endowment", "GROUP", "BY", "donator_name", "ORDER", "BY", "sum", "(", "amount", ")", "DESC"], "query_toks_no_value": ["select", "donator_name", ",", "sum", "(", "amount", ")", "from", "endowment", "group", "by", "donator_name", "order", "by", "sum", "(", "amount", ")", "desc"], "question": "List each donator name and the amount of endowment in descending order of the amount of endowment.", "question_toks": ["List", "each", "donator", "name", "and", "the", "amount", "of", "endowment", "in", "descending", "order", "of", "the", "amount", "of", "endowment", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 18, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [4, 19, false], null]]], "select": [false, [[0, [0, [0, 18, false], null]], [4, [0, [0, 19, false], null]]]], "union": null, "where": []}}, {"db_id": "school_finance", "query": "SELECT amount ,  donator_name FROM endowment ORDER BY amount DESC LIMIT 1", "query_toks": ["SELECT", "amount", ",", "donator_name", "FROM", "endowment", "ORDER", "BY", "amount", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "amount", ",", "donator_name", "from", "endowment", "order", "by", "amount", "desc", "limit", "value"], "question": "List the amount and donor name for the largest amount of donation.", "question_toks": ["List", "the", "amount", "and", "donor", "name", "for", "the", "largest", "amount", "of", "donation", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 19, false], null]]], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": []}}, {"db_id": "school_finance", "query": "SELECT T2.school_name ,  T1.budgeted ,  T1.invested FROM budget AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T1.year  >=  2002", "query_toks": ["SELECT", "T2.school_name", ",", "T1.budgeted", ",", "T1.invested", "FROM", "budget", "AS", "T1", "JOIN", "school", "AS", "T2", "ON", "T1.school_id", "=", "T2.school_id", "WHERE", "T1.year", ">", "=", "2002"], "query_toks_no_value": ["select", "t2", ".", "school_name", ",", "t1", ".", "budgeted", ",", "t1", ".", "invested", "from", "budget", "as", "t1", "join", "school", "as", "t2", "on", "t1", ".", "school_id", "=", "t2", ".", "school_id", "where", "t1", ".", "year", ">", "=", "value"], "question": "Show each school name, its budgeted amount, and invested amount in year 2002 or after.", "question_toks": ["Show", "each", "school", "name", ",", "its", "budgeted", "amount", ",", "and", "invested", "amount", "in", "year", "2002", "or", "after", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": [[false, 5, [0, [0, 10, false], null], 2002.0, null]]}}, {"db_id": "school_finance", "query": "SELECT T1.School_name ,  T1.Mascot ,  T1.IHSAA_Football_Class FROM school AS T1 JOIN budget AS T2 ON T1.school_id  =  T2.school_id WHERE Budgeted  >  6000 OR YEAR  <  2003 ORDER BY T2.total_budget_percent_invested ,  T2.total_budget_percent_budgeted", "query_toks": ["SELECT", "T1.School_name", ",", "T1.Mascot", ",", "T1.IHSAA_Football_Class", "FROM", "school", "AS", "T1", "JOIN", "budget", "AS", "T2", "ON", "T1.school_id", "=", "T2.school_id", "WHERE", "Budgeted", ">", "6000", "OR", "YEAR", "<", "2003", "ORDER", "BY", "T2.total_budget_percent_invested", ",", "T2.total_budget_percent_budgeted"], "query_toks_no_value": ["select", "t1", ".", "school_name", ",", "t1", ".", "mascot", ",", "t1", ".", "ihsaa_football_class", "from", "school", "as", "t1", "join", "budget", "as", "t2", "on", "t1", ".", "school_id", "=", "t2", ".", "school_id", "where", "budgeted", ">", "value", "or", "year", "<", "value", "order", "by", "t2", ".", "total_budget_percent_invested", ",", "t2", ".", "total_budget_percent_budgeted"], "question": "List the name, IHSAA Football Class, and Mascot of the schools that have more than 6000 of budgeted amount or were founded before 2003, in the order of percent of total invested budget and total budgeted budget.", "question_toks": ["List", "the", "name", ",", "IHSAA", "Football", "Class", ",", "and", "Mascot", "of", "the", "schools", "that", "have", "more", "than", "6000", "of", "budgeted", "amount", "or", "were", "founded", "before", "2003", ",", "in", "the", "order", "of", "percent", "of", "total", "invested", "budget", "and", "total", "budgeted", "budget", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 14, false], null], [0, [0, 12, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 11, false], null], 6000.0, null], "or", [false, 4, [0, [0, 10, false], null], 2003.0, null]]}}, {"db_id": "protein_institute", "query": "SELECT name ,  street_address ,  floors FROM building ORDER BY floors", "query_toks": ["SELECT", "name", ",", "street_address", ",", "floors", "FROM", "building", "ORDER", "BY", "floors"], "query_toks_no_value": ["select", "name", ",", "street_address", ",", "floors", "from", "building", "order", "by", "floors"], "question": "Show the name, street address, and number of floors for all buildings ordered by the number of floors.", "question_toks": ["Show", "the", "name", ",", "street", "address", ",", "and", "number", "of", "floors", "for", "all", "buildings", "ordered", "by", "the", "number", "of", "floors", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "protein_institute", "query": "SELECT avg(floors) ,  max(floors) ,  min(floors) FROM building", "query_toks": ["SELECT", "avg", "(", "floors", ")", ",", "max", "(", "floors", ")", ",", "min", "(", "floors", ")", "FROM", "building"], "query_toks_no_value": ["select", "avg", "(", "floors", ")", ",", "max", "(", "floors", ")", ",", "min", "(", "floors", ")", "from", "building"], "question": "What are the average, maximum, and minimum number of floors for all buildings?", "question_toks": ["What", "are", "the", "average", ",", "maximum", ",", "and", "minimum", "number", "of", "floors", "for", "all", "buildings", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 6, false], null]], [1, [0, [0, 6, false], null]], [2, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "protein_institute", "query": "SELECT institution ,  LOCATION FROM institution WHERE founded  >  1990 AND TYPE  =  'Private'", "query_toks": ["SELECT", "institution", ",", "LOCATION", "FROM", "institution", "WHERE", "founded", ">", "1990", "AND", "TYPE", "=", "'Private", "'"], "query_toks_no_value": ["select", "institution", ",", "location", "from", "institution", "where", "founded", ">", "value", "and", "type", "=", "value"], "question": "Show the names and locations of institutions that are founded after 1990 and have the type \"Private\".", "question_toks": ["Show", "the", "names", "and", "locations", "of", "institutions", "that", "are", "founded", "after", "1990", "and", "have", "the", "type", "``", "Private", "''", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 10, false], null], 1990.0, null], "and", [false, 2, [0, [0, 11, false], null], "\"Private\"", null]]}}, {"db_id": "protein_institute", "query": "SELECT TYPE ,  count(*) ,  sum(enrollment) FROM institution GROUP BY TYPE", "query_toks": ["SELECT", "TYPE", ",", "count", "(", "*", ")", ",", "sum", "(", "enrollment", ")", "FROM", "institution", "GROUP", "BY", "TYPE"], "query_toks_no_value": ["select", "type", ",", "count", "(", "*", ")", ",", "sum", "(", "enrollment", ")", "from", "institution", "group", "by", "type"], "question": "Show institution types, along with the number of institutions and total enrollment for each type.", "question_toks": ["Show", "institution", "types", ",", "along", "with", "the", "number", "of", "institutions", "and", "total", "enrollment", "for", "each", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 11, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [3, [0, [0, 0, false], null]], [4, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "protein_institute", "query": "SELECT T1.name ,  count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id  =  T2.building_id GROUP BY T1.building_id", "query_toks": ["SELECT", "T1.name", ",", "count", "(", "*", ")", "FROM", "building", "AS", "T1", "JOIN", "institution", "AS", "T2", "ON", "T1.building_id", "=", "T2.building_id", "GROUP", "BY", "T1.building_id"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "count", "(", "*", ")", "from", "building", "as", "t1", "join", "institution", "as", "t2", "on", "t1", ".", "building_id", "=", "t2", ".", "building_id", "group", "by", "t1", ".", "building_id"], "question": "For each building, show the name of the building and the number of institutions in it.", "question_toks": ["For", "each", "building", ",", "show", "the", "name", "of", "the", "building", "and", "the", "number", "of", "institutions", "in", "it", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "protein_institute", "query": "SELECT T1.name ,  T1.height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id  =  T2.building_id WHERE T2.founded  >  1880 GROUP BY T1.building_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.name", ",", "T1.height_feet", "FROM", "building", "AS", "T1", "JOIN", "institution", "AS", "T2", "ON", "T1.building_id", "=", "T2.building_id", "WHERE", "T2.founded", ">", "1880", "GROUP", "BY", "T1.building_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "height_feet", "from", "building", "as", "t1", "join", "institution", "as", "t2", "on", "t1", ".", "building_id", "=", "t2", ".", "building_id", "where", "t2", ".", "founded", ">", "value", "group", "by", "t1", ".", "building_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show the names and heights of buildings with at least two institutions founded after 1880.", "question_toks": ["Show", "the", "names", "and", "heights", "of", "buildings", "with", "at", "least", "two", "institutions", "founded", "after", "1880", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 1, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 10, false], null], 1880.0, null]]}}, {"db_id": "protein_institute", "query": "SELECT T1.institution ,  count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id GROUP BY T1.institution_id", "query_toks": ["SELECT", "T1.institution", ",", "count", "(", "*", ")", "FROM", "institution", "AS", "T1", "JOIN", "protein", "AS", "T2", "ON", "T1.institution_id", "=", "T2.institution_id", "GROUP", "BY", "T1.institution_id"], "query_toks_no_value": ["select", "t1", ".", "institution", ",", "count", "(", "*", ")", "from", "institution", "as", "t1", "join", "protein", "as", "t2", "on", "t1", ".", "institution_id", "=", "t2", ".", "institution_id", "group", "by", "t1", ".", "institution_id"], "question": "Show institution names along with the number of proteins for each institution.", "question_toks": ["Show", "institution", "names", "along", "with", "the", "number", "of", "proteins", "for", "each", "institution", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 22, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "protein_institute", "query": "SELECT T2.protein_name ,  T1.institution FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id", "query_toks": ["SELECT", "T2.protein_name", ",", "T1.institution", "FROM", "institution", "AS", "T1", "JOIN", "protein", "AS", "T2", "ON", "T1.institution_id", "=", "T2.institution_id"], "query_toks_no_value": ["select", "t2", ".", "protein_name", ",", "t1", ".", "institution", "from", "institution", "as", "t1", "join", "protein", "as", "t2", "on", "t1", ".", "institution_id", "=", "t2", ".", "institution_id"], "question": "Show the protein name and the institution name.", "question_toks": ["Show", "the", "protein", "name", "and", "the", "institution", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 22, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "cinema", "query": "SELECT name ,  openning_year ,  capacity FROM cinema", "query_toks": ["SELECT", "name", ",", "openning_year", ",", "capacity", "FROM", "cinema"], "query_toks_no_value": ["select", "name", ",", "openning_year", ",", "capacity", "from", "cinema"], "question": "Show name, opening year, and capacity for each cinema.", "question_toks": ["Show", "name", ",", "opening", "year", ",", "and", "capacity", "for", "each", "cinema", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "cinema", "query": "SELECT name ,  LOCATION FROM cinema WHERE capacity  >  (SELECT avg(capacity) FROM cinema)", "query_toks": ["SELECT", "name", ",", "LOCATION", "FROM", "cinema", "WHERE", "capacity", ">", "(", "SELECT", "avg", "(", "capacity", ")", "FROM", "cinema", ")"], "query_toks_no_value": ["select", "name", ",", "location", "from", "cinema", "where", "capacity", ">", "(", "select", "avg", "(", "capacity", ")", "from", "cinema", ")"], "question": "Show the cinema name and location for cinemas with capacity above average.", "question_toks": ["Show", "the", "cinema", "name", "and", "location", "for", "cinemas", "with", "capacity", "above", "average", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 11, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 11, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "cinema", "query": "SELECT name ,  openning_year FROM cinema ORDER BY openning_year DESC", "query_toks": ["SELECT", "name", ",", "openning_year", "FROM", "cinema", "ORDER", "BY", "openning_year", "DESC"], "query_toks_no_value": ["select", "name", ",", "openning_year", "from", "cinema", "order", "by", "openning_year", "desc"], "question": "Show all the cinema names and opening years in descending order of opening year.", "question_toks": ["Show", "all", "the", "cinema", "names", "and", "opening", "years", "in", "descending", "order", "of", "opening", "year", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 10, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "cinema", "query": "SELECT name ,  LOCATION FROM cinema ORDER BY capacity DESC LIMIT 1", "query_toks": ["SELECT", "name", ",", "LOCATION", "FROM", "cinema", "ORDER", "BY", "capacity", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "location", "from", "cinema", "order", "by", "capacity", "desc", "limit", "value"], "question": "What are the name and location of the cinema with the largest capacity?", "question_toks": ["What", "are", "the", "name", "and", "location", "of", "the", "cinema", "with", "the", "largest", "capacity", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 11, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "cinema", "query": "SELECT avg(capacity) ,  min(capacity) ,  max(capacity) FROM cinema WHERE openning_year  >=  2011", "query_toks": ["SELECT", "avg", "(", "capacity", ")", ",", "min", "(", "capacity", ")", ",", "max", "(", "capacity", ")", "FROM", "cinema", "WHERE", "openning_year", ">", "=", "2011"], "query_toks_no_value": ["select", "avg", "(", "capacity", ")", ",", "min", "(", "capacity", ")", ",", "max", "(", "capacity", ")", "from", "cinema", "where", "openning_year", ">", "=", "value"], "question": "Show the average, minimum, and maximum capacity for all the cinemas opened in year 2011 or later.", "question_toks": ["Show", "the", "average", ",", "minimum", ",", "and", "maximum", "capacity", "for", "all", "the", "cinemas", "opened", "in", "year", "2011", "or", "later", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 11, false], null]], [2, [0, [0, 11, false], null]], [1, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 5, [0, [0, 10, false], null], 2011.0, null]]}}, {"db_id": "cinema", "query": "SELECT LOCATION ,  count(*) FROM cinema GROUP BY LOCATION", "query_toks": ["SELECT", "LOCATION", ",", "count", "(", "*", ")", "FROM", "cinema", "GROUP", "BY", "LOCATION"], "query_toks_no_value": ["select", "location", ",", "count", "(", "*", ")", "from", "cinema", "group", "by", "location"], "question": "Show each location and the number of cinemas there.", "question_toks": ["Show", "each", "location", "and", "the", "number", "of", "cinemas", "there", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cinema", "query": "SELECT title ,  directed_by FROM film", "query_toks": ["SELECT", "title", ",", "directed_by", "FROM", "film"], "query_toks_no_value": ["select", "title", ",", "directed_by", "from", "film"], "question": "Show the title and director for all films.", "question_toks": ["Show", "the", "title", "and", "director", "for", "all", "films", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "cinema", "query": "SELECT title ,  directed_by FROM film", "query_toks": ["SELECT", "title", ",", "directed_by", "FROM", "film"], "query_toks_no_value": ["select", "title", ",", "directed_by", "from", "film"], "question": "What are the title and director of each film?", "question_toks": ["What", "are", "the", "title", "and", "director", "of", "each", "film", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "cinema", "query": "SELECT directed_by ,  count(*) FROM film GROUP BY directed_by", "query_toks": ["SELECT", "directed_by", ",", "count", "(", "*", ")", "FROM", "film", "GROUP", "BY", "directed_by"], "query_toks_no_value": ["select", "directed_by", ",", "count", "(", "*", ")", "from", "film", "group", "by", "directed_by"], "question": "List all directors along with the number of films directed by each director.", "question_toks": ["List", "all", "directors", "along", "with", "the", "number", "of", "films", "directed", "by", "each", "director", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cinema", "query": "SELECT T2.name ,  sum(T1.show_times_per_day) FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id  =  T2.cinema_id GROUP BY T1.cinema_id", "query_toks": ["SELECT", "T2.name", ",", "sum", "(", "T1.show_times_per_day", ")", "FROM", "schedule", "AS", "T1", "JOIN", "cinema", "AS", "T2", "ON", "T1.cinema_id", "=", "T2.cinema_id", "GROUP", "BY", "T1.cinema_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "sum", "(", "t1", ".", "show_times_per_day", ")", "from", "schedule", "as", "t1", "join", "cinema", "as", "t2", "on", "t1", ".", "cinema_id", "=", "t2", ".", "cinema_id", "group", "by", "t1", ".", "cinema_id"], "question": "What is total number of show times per dat for each cinema?", "question_toks": ["What", "is", "total", "number", "of", "show", "times", "per", "dat", "for", "each", "cinema", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 8, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [4, [0, [0, 16, false], null]]]], "union": null, "where": []}}, {"db_id": "cinema", "query": "SELECT T2.title ,  max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id", "query_toks": ["SELECT", "T2.title", ",", "max", "(", "T1.price", ")", "FROM", "schedule", "AS", "T1", "JOIN", "film", "AS", "T2", "ON", "T1.film_id", "=", "T2.film_id", "GROUP", "BY", "T1.film_id"], "query_toks_no_value": ["select", "t2", ".", "title", ",", "max", "(", "t1", ".", "price", ")", "from", "schedule", "as", "t1", "join", "film", "as", "t2", "on", "t1", ".", "film_id", "=", "t2", ".", "film_id", "group", "by", "t1", ".", "film_id"], "question": "What are the title and maximum price of each film?", "question_toks": ["What", "are", "the", "title", "and", "maximum", "price", "of", "each", "film", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 14, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 14, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [1, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "cinema", "query": "SELECT T2.title ,  max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id", "query_toks": ["SELECT", "T2.title", ",", "max", "(", "T1.price", ")", "FROM", "schedule", "AS", "T1", "JOIN", "film", "AS", "T2", "ON", "T1.film_id", "=", "T2.film_id", "GROUP", "BY", "T1.film_id"], "query_toks_no_value": ["select", "t2", ".", "title", ",", "max", "(", "t1", ".", "price", ")", "from", "schedule", "as", "t1", "join", "film", "as", "t2", "on", "t1", ".", "film_id", "=", "t2", ".", "film_id", "group", "by", "t1", ".", "film_id"], "question": "Give me the title and highest price for each film.", "question_toks": ["Give", "me", "the", "title", "and", "highest", "price", "for", "each", "film", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 14, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 14, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [1, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "cinema", "query": "SELECT T3.name ,  T2.title ,  T1.date ,  T1.price FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id JOIN cinema AS T3 ON T1.cinema_id  =  T3.cinema_id", "query_toks": ["SELECT", "T3.name", ",", "T2.title", ",", "T1.date", ",", "T1.price", "FROM", "schedule", "AS", "T1", "JOIN", "film", "AS", "T2", "ON", "T1.film_id", "=", "T2.film_id", "JOIN", "cinema", "AS", "T3", "ON", "T1.cinema_id", "=", "T3.cinema_id"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "title", ",", "t1", ".", "date", ",", "t1", ".", "price", "from", "schedule", "as", "t1", "join", "film", "as", "t2", "on", "t1", ".", "film_id", "=", "t2", ".", "film_id", "join", "cinema", "as", "t3", "on", "t1", ".", "cinema_id", "=", "t3", ".", "cinema_id"], "question": "Show cinema name, film title, date, and price for each record in schedule.", "question_toks": ["Show", "cinema", "name", ",", "film", "title", ",", "date", ",", "and", "price", "for", "each", "record", "in", "schedule", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 14, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 15, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "cinema", "query": "SELECT title ,  directed_by FROM film WHERE film_id NOT IN (SELECT film_id FROM schedule)", "query_toks": ["SELECT", "title", ",", "directed_by", "FROM", "film", "WHERE", "film_id", "NOT", "IN", "(", "SELECT", "film_id", "FROM", "schedule", ")"], "query_toks_no_value": ["select", "title", ",", "directed_by", "from", "film", "where", "film_id", "not", "in", "(", "select", "film_id", "from", "schedule", ")"], "question": "What are the title and director of the films without any schedule?", "question_toks": ["What", "are", "the", "title", "and", "director", "of", "the", "films", "without", "any", "schedule", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "products_for_hire", "query": "SELECT T1.customer_id ,  T1.first_name ,  count(*) FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id", "query_toks": ["SELECT", "T1.customer_id", ",", "T1.first_name", ",", "count", "(", "*", ")", "FROM", "Customers", "AS", "T1", "JOIN", "bookings", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id"], "query_toks_no_value": ["select", "t1", ".", "customer_id", ",", "t1", ".", "first_name", ",", "count", "(", "*", ")", "from", "customers", "as", "t1", "join", "bookings", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id"], "question": "How many bookings did each customer make? List the customer id, first name, and the count.", "question_toks": ["How", "many", "bookings", "did", "each", "customer", "make", "?", "List", "the", "customer", "id", ",", "first", "name", ",", "and", "the", "count", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 13, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "products_for_hire", "query": "SELECT customer_id ,  sum(amount_paid) FROM Payments GROUP BY customer_id ORDER BY sum(amount_paid) DESC LIMIT 1", "query_toks": ["SELECT", "customer_id", ",", "sum", "(", "amount_paid", ")", "FROM", "Payments", "GROUP", "BY", "customer_id", "ORDER", "BY", "sum", "(", "amount_paid", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "customer_id", ",", "sum", "(", "amount_paid", ")", "from", "payments", "group", "by", "customer_id", "order", "by", "sum", "(", "amount_paid", ")", "desc", "limit", "value"], "question": "What is the maximum total amount paid by a customer? List the customer id and amount.", "question_toks": ["What", "is", "the", "maximum", "total", "amount", "paid", "by", "a", "customer", "?", "List", "the", "customer", "id", "and", "amount", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 30, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [4, 35, false], null]]], "select": [false, [[0, [0, [0, 30, false], null]], [4, [0, [0, 35, false], null]]]], "union": null, "where": []}}, {"db_id": "products_for_hire", "query": "SELECT T1.booking_id ,  T1.amount_of_refund FROM Bookings AS T1 JOIN Payments AS T2 ON T1.booking_id  =  T2.booking_id GROUP BY T1.booking_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.booking_id", ",", "T1.amount_of_refund", "FROM", "Bookings", "AS", "T1", "JOIN", "Payments", "AS", "T2", "ON", "T1.booking_id", "=", "T2.booking_id", "GROUP", "BY", "T1.booking_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "booking_id", ",", "t1", ".", "amount_of_refund", "from", "bookings", "as", "t1", "join", "payments", "as", "t2", "on", "t1", ".", "booking_id", "=", "t2", ".", "booking_id", "group", "by", "t1", ".", "booking_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the id and the amount of refund of the booking that incurred the most times of payments?", "question_toks": ["What", "are", "the", "id", "and", "the", "amount", "of", "refund", "of", "the", "booking", "that", "incurred", "the", "most", "times", "of", "payments", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 12, false], null], [0, 29, false], null]], "table_units": [["table_unit", 2], ["table_unit", 4]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 22, false], null]]]], "union": null, "where": []}}, {"db_id": "products_for_hire", "query": "SELECT T3.booking_start_date ,   T3.booking_end_date FROM Products_for_hire AS T1 JOIN products_booked AS T2 ON T1.product_id  =  T2.product_id JOIN bookings AS T3 ON T2.booking_id  =  T3.booking_id WHERE T1.product_name  =  'Book collection A'", "query_toks": ["SELECT", "T3.booking_start_date", ",", "T3.booking_end_date", "FROM", "Products_for_hire", "AS", "T1", "JOIN", "products_booked", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "JOIN", "bookings", "AS", "T3", "ON", "T2.booking_id", "=", "T3.booking_id", "WHERE", "T1.product_name", "=", "'Book", "collection", "A", "'"], "query_toks_no_value": ["select", "t3", ".", "booking_start_date", ",", "t3", ".", "booking_end_date", "from", "products_for_hire", "as", "t1", "join", "products_booked", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "bookings", "as", "t3", "on", "t2", ".", "booking_id", "=", "t3", ".", "booking_id", "where", "t1", ".", "product_name", "=", "value"], "question": "What are the start date and end date of the booking that has booked the product named 'Book collection A'?", "question_toks": ["What", "are", "the", "start", "date", "and", "end", "date", "of", "the", "booking", "that", "has", "booked", "the", "product", "named", "'Book", "collection", "A", "'", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 23, false], null], [0, 37, false], null]], "table_units": [["table_unit", 3], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 26, false], null], "\"Book collection A\"", null]]}}, {"db_id": "products_for_hire", "query": "SELECT first_name ,  last_name ,  gender_mf FROM customers WHERE good_or_bad_customer  =  'good' ORDER BY last_name", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "gender_mf", "FROM", "customers", "WHERE", "good_or_bad_customer", "=", "'good", "'", "ORDER", "BY", "last_name"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "gender_mf", "from", "customers", "where", "good_or_bad_customer", "=", "value", "order", "by", "last_name"], "question": "What are the first name, last name, and gender of all the good customers? Order by their last name.", "question_toks": ["What", "are", "the", "first", "name", ",", "last", "name", ",", "and", "gender", "of", "all", "the", "good", "customers", "?", "Order", "by", "their", "last", "name", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 8, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"good\"", null]]}}, {"db_id": "products_for_hire", "query": "SELECT max(booked_count) ,  min(booked_count) ,  avg(booked_count) FROM products_booked", "query_toks": ["SELECT", "max", "(", "booked_count", ")", ",", "min", "(", "booked_count", ")", ",", "avg", "(", "booked_count", ")", "FROM", "products_booked"], "query_toks_no_value": ["select", "max", "(", "booked_count", ")", ",", "min", "(", "booked_count", ")", ",", "avg", "(", "booked_count", ")", "from", "products_booked"], "question": "What are the maximum, minimum, and average booked count for the products booked?", "question_toks": ["What", "are", "the", "maximum", ",", "minimum", ",", "and", "average", "booked", "count", "for", "the", "products", "booked", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 40, false], null]], [2, [0, [0, 40, false], null]], [5, [0, [0, 40, false], null]]]], "union": null, "where": []}}, {"db_id": "products_for_hire", "query": "SELECT product_name ,  product_description FROM products_for_hire WHERE product_type_code  =  'Cutlery' AND daily_hire_cost  <  20", "query_toks": ["SELECT", "product_name", ",", "product_description", "FROM", "products_for_hire", "WHERE", "product_type_code", "=", "'Cutlery", "'", "AND", "daily_hire_cost", "<", "20"], "query_toks_no_value": ["select", "product_name", ",", "product_description", "from", "products_for_hire", "where", "product_type_code", "=", "value", "and", "daily_hire_cost", "<", "value"], "question": "What are the names and descriptions of the products that are of 'Cutlery' type and have daily hire cost lower than 20?", "question_toks": ["What", "are", "the", "names", "and", "descriptions", "of", "the", "products", "that", "are", "of", "'Cutlery", "'", "type", "and", "have", "daily", "hire", "cost", "lower", "than", "20", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 27, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], "\"Cutlery\"", null], "and", [false, 4, [0, [0, 25, false], null], 20.0, null]]}}, {"db_id": "phone_market", "query": "SELECT Memory_in_G ,  Carrier FROM phone", "query_toks": ["SELECT", "Memory_in_G", ",", "Carrier", "FROM", "phone"], "query_toks_no_value": ["select", "memory_in_g", ",", "carrier", "from", "phone"], "question": "What are the memories and carriers of phones?", "question_toks": ["What", "are", "the", "memories", "and", "carriers", "of", "phones", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "phone_market", "query": "SELECT Carrier ,  COUNT(*) FROM phone GROUP BY Carrier", "query_toks": ["SELECT", "Carrier", ",", "COUNT", "(", "*", ")", "FROM", "phone", "GROUP", "BY", "Carrier"], "query_toks_no_value": ["select", "carrier", ",", "count", "(", "*", ")", "from", "phone", "group", "by", "carrier"], "question": "Show different carriers of phones together with the number of phones with each carrier.", "question_toks": ["Show", "different", "carriers", "of", "phones", "together", "with", "the", "number", "of", "phones", "with", "each", "carrier", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "phone_market", "query": "SELECT T3.Name ,  T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID", "query_toks": ["SELECT", "T3.Name", ",", "T2.District", "FROM", "phone_market", "AS", "T1", "JOIN", "market", "AS", "T2", "ON", "T1.Market_ID", "=", "T2.Market_ID", "JOIN", "phone", "AS", "T3", "ON", "T1.Phone_ID", "=", "T3.Phone_ID"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "district", "from", "phone_market", "as", "t1", "join", "market", "as", "t2", "on", "t1", ".", "market_id", "=", "t2", ".", "market_id", "join", "phone", "as", "t3", "on", "t1", ".", "phone_id", "=", "t3", ".", "phone_id"], "question": "Show the names of phones and the districts of markets they are on.", "question_toks": ["Show", "the", "names", "of", "phones", "and", "the", "districts", "of", "markets", "they", "are", "on", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "phone_market", "query": "SELECT T3.Name ,  T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID ORDER BY T2.Ranking", "query_toks": ["SELECT", "T3.Name", ",", "T2.District", "FROM", "phone_market", "AS", "T1", "JOIN", "market", "AS", "T2", "ON", "T1.Market_ID", "=", "T2.Market_ID", "JOIN", "phone", "AS", "T3", "ON", "T1.Phone_ID", "=", "T3.Phone_ID", "ORDER", "BY", "T2.Ranking"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "district", "from", "phone_market", "as", "t1", "join", "market", "as", "t2", "on", "t1", ".", "market_id", "=", "t2", ".", "market_id", "join", "phone", "as", "t3", "on", "t1", ".", "phone_id", "=", "t3", ".", "phone_id", "order", "by", "t2", ".", "ranking"], "question": "Show the names of phones and the districts of markets they are on, in ascending order of the ranking of the market.", "question_toks": ["Show", "the", "names", "of", "phones", "and", "the", "districts", "of", "markets", "they", "are", "on", ",", "in", "ascending", "order", "of", "the", "ranking", "of", "the", "market", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 10, false], null]]], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "phone_market", "query": "SELECT T2.Name ,  sum(T1.Num_of_stock) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID  =  T2.Phone_ID GROUP BY T2.Name", "query_toks": ["SELECT", "T2.Name", ",", "sum", "(", "T1.Num_of_stock", ")", "FROM", "phone_market", "AS", "T1", "JOIN", "phone", "AS", "T2", "ON", "T1.Phone_ID", "=", "T2.Phone_ID", "GROUP", "BY", "T2.Name"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "sum", "(", "t1", ".", "num_of_stock", ")", "from", "phone_market", "as", "t1", "join", "phone", "as", "t2", "on", "t1", ".", "phone_id", "=", "t2", ".", "phone_id", "group", "by", "t2", ".", "name"], "question": "For each phone, show its names and total number of stocks.", "question_toks": ["For", "each", "phone", ",", "show", "its", "names", "and", "total", "number", "of", "stocks", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 12, false], null], [0, 2, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [4, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "gas_company", "query": "SELECT company ,  rank FROM company ORDER BY Sales_billion DESC", "query_toks": ["SELECT", "company", ",", "rank", "FROM", "company", "ORDER", "BY", "Sales_billion", "DESC"], "query_toks_no_value": ["select", "company", ",", "rank", "from", "company", "order", "by", "sales_billion", "desc"], "question": "List the company name and rank for all companies in the decreasing order of their sales.", "question_toks": ["List", "the", "company", "name", "and", "rank", "for", "all", "companies", "in", "the", "decreasing", "order", "of", "their", "sales", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "gas_company", "query": "SELECT company ,  rank FROM company ORDER BY Sales_billion DESC", "query_toks": ["SELECT", "company", ",", "rank", "FROM", "company", "ORDER", "BY", "Sales_billion", "DESC"], "query_toks_no_value": ["select", "company", ",", "rank", "from", "company", "order", "by", "sales_billion", "desc"], "question": "What is the name and rank of every company ordered by descending number of sales?", "question_toks": ["What", "is", "the", "name", "and", "rank", "of", "every", "company", "ordered", "by", "descending", "number", "of", "sales", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "gas_company", "query": "SELECT company ,  main_industry FROM company WHERE headquarters != 'USA'", "query_toks": ["SELECT", "company", ",", "main_industry", "FROM", "company", "WHERE", "headquarters", "!", "=", "'USA", "'"], "query_toks_no_value": ["select", "company", ",", "main_industry", "from", "company", "where", "headquarters", "!", "=", "value"], "question": "Show the company name and the main industry for all companies whose headquarters are not from USA.", "question_toks": ["Show", "the", "company", "name", "and", "the", "main", "industry", "for", "all", "companies", "whose", "headquarters", "are", "not", "from", "USA", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 4, false], null], "\"USA\"", null]]}}, {"db_id": "gas_company", "query": "SELECT company ,  main_industry FROM company WHERE headquarters != 'USA'", "query_toks": ["SELECT", "company", ",", "main_industry", "FROM", "company", "WHERE", "headquarters", "!", "=", "'USA", "'"], "query_toks_no_value": ["select", "company", ",", "main_industry", "from", "company", "where", "headquarters", "!", "=", "value"], "question": "What are the companies and main industries of all companies that are not headquartered in the United States?", "question_toks": ["What", "are", "the", "companies", "and", "main", "industries", "of", "all", "companies", "that", "are", "not", "headquartered", "in", "the", "United", "States", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 4, false], null], "\"USA\"", null]]}}, {"db_id": "gas_company", "query": "SELECT company ,  headquarters FROM company ORDER BY market_value DESC", "query_toks": ["SELECT", "company", ",", "headquarters", "FROM", "company", "ORDER", "BY", "market_value", "DESC"], "query_toks_no_value": ["select", "company", ",", "headquarters", "from", "company", "order", "by", "market_value", "desc"], "question": "Show all company names and headquarters in the descending order of market value.", "question_toks": ["Show", "all", "company", "names", "and", "headquarters", "in", "the", "descending", "order", "of", "market", "value", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 9, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "gas_company", "query": "SELECT company ,  headquarters FROM company ORDER BY market_value DESC", "query_toks": ["SELECT", "company", ",", "headquarters", "FROM", "company", "ORDER", "BY", "market_value", "DESC"], "query_toks_no_value": ["select", "company", ",", "headquarters", "from", "company", "order", "by", "market_value", "desc"], "question": "What are the names and headquarters of all companies ordered by descending market value?", "question_toks": ["What", "are", "the", "names", "and", "headquarters", "of", "all", "companies", "ordered", "by", "descending", "market", "value", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 9, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "gas_company", "query": "SELECT min(market_value) ,  max(market_value) ,  avg(market_value) FROM company", "query_toks": ["SELECT", "min", "(", "market_value", ")", ",", "max", "(", "market_value", ")", ",", "avg", "(", "market_value", ")", "FROM", "company"], "query_toks_no_value": ["select", "min", "(", "market_value", ")", ",", "max", "(", "market_value", ")", ",", "avg", "(", "market_value", ")", "from", "company"], "question": "Show minimum, maximum, and average market value for all companies.", "question_toks": ["Show", "minimum", ",", "maximum", ",", "and", "average", "market", "value", "for", "all", "companies", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 9, false], null]], [1, [0, [0, 9, false], null]], [5, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "gas_company", "query": "SELECT min(market_value) ,  max(market_value) ,  avg(market_value) FROM company", "query_toks": ["SELECT", "min", "(", "market_value", ")", ",", "max", "(", "market_value", ")", ",", "avg", "(", "market_value", ")", "FROM", "company"], "query_toks_no_value": ["select", "min", "(", "market_value", ")", ",", "max", "(", "market_value", ")", ",", "avg", "(", "market_value", ")", "from", "company"], "question": "What is the minimum, maximum, and average market value for every company?", "question_toks": ["What", "is", "the", "minimum", ",", "maximum", ",", "and", "average", "market", "value", "for", "every", "company", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 9, false], null]], [1, [0, [0, 9, false], null]], [5, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "gas_company", "query": "SELECT headquarters ,  count(*) FROM company GROUP BY headquarters", "query_toks": ["SELECT", "headquarters", ",", "count", "(", "*", ")", "FROM", "company", "GROUP", "BY", "headquarters"], "query_toks_no_value": ["select", "headquarters", ",", "count", "(", "*", ")", "from", "company", "group", "by", "headquarters"], "question": "List all headquarters and the number of companies in each headquarter.", "question_toks": ["List", "all", "headquarters", "and", "the", "number", "of", "companies", "in", "each", "headquarter", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "gas_company", "query": "SELECT headquarters ,  count(*) FROM company GROUP BY headquarters", "query_toks": ["SELECT", "headquarters", ",", "count", "(", "*", ")", "FROM", "company", "GROUP", "BY", "headquarters"], "query_toks_no_value": ["select", "headquarters", ",", "count", "(", "*", ")", "from", "company", "group", "by", "headquarters"], "question": "For each headquarter, what are the headquarter and how many companies are centered there?", "question_toks": ["For", "each", "headquarter", ",", "what", "are", "the", "headquarter", "and", "how", "many", "companies", "are", "centered", "there", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "gas_company", "query": "SELECT main_industry ,  sum(market_value) FROM company GROUP BY main_industry", "query_toks": ["SELECT", "main_industry", ",", "sum", "(", "market_value", ")", "FROM", "company", "GROUP", "BY", "main_industry"], "query_toks_no_value": ["select", "main_industry", ",", "sum", "(", "market_value", ")", "from", "company", "group", "by", "main_industry"], "question": "Show all main industry and total market value in each industry.", "question_toks": ["Show", "all", "main", "industry", "and", "total", "market", "value", "in", "each", "industry", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [4, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "gas_company", "query": "SELECT main_industry ,  sum(market_value) FROM company GROUP BY main_industry", "query_toks": ["SELECT", "main_industry", ",", "sum", "(", "market_value", ")", "FROM", "company", "GROUP", "BY", "main_industry"], "query_toks_no_value": ["select", "main_industry", ",", "sum", "(", "market_value", ")", "from", "company", "group", "by", "main_industry"], "question": "What are the main indstries and total market value for each industry?", "question_toks": ["What", "are", "the", "main", "indstries", "and", "total", "market", "value", "for", "each", "industry", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [4, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "gas_company", "query": "SELECT main_industry ,  count(*) FROM company GROUP BY main_industry ORDER BY sum(market_value) DESC LIMIT 1", "query_toks": ["SELECT", "main_industry", ",", "count", "(", "*", ")", "FROM", "company", "GROUP", "BY", "main_industry", "ORDER", "BY", "sum", "(", "market_value", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "main_industry", ",", "count", "(", "*", ")", "from", "company", "group", "by", "main_industry", "order", "by", "sum", "(", "market_value", ")", "desc", "limit", "value"], "question": "List the main industry with highest total market value and its number of companies.", "question_toks": ["List", "the", "main", "industry", "with", "highest", "total", "market", "value", "and", "its", "number", "of", "companies", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [4, 9, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "gas_company", "query": "SELECT main_industry ,  count(*) FROM company GROUP BY main_industry ORDER BY sum(market_value) DESC LIMIT 1", "query_toks": ["SELECT", "main_industry", ",", "count", "(", "*", ")", "FROM", "company", "GROUP", "BY", "main_industry", "ORDER", "BY", "sum", "(", "market_value", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "main_industry", ",", "count", "(", "*", ")", "from", "company", "group", "by", "main_industry", "order", "by", "sum", "(", "market_value", ")", "desc", "limit", "value"], "question": "For each main industry, what is the total number of companies for the industry with the highest total market value?", "question_toks": ["For", "each", "main", "industry", ",", "what", "is", "the", "total", "number", "of", "companies", "for", "the", "industry", "with", "the", "highest", "total", "market", "value", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [4, 9, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "gas_company", "query": "SELECT station_id ,  LOCATION ,  manager_name FROM gas_station ORDER BY open_year", "query_toks": ["SELECT", "station_id", ",", "LOCATION", ",", "manager_name", "FROM", "gas_station", "ORDER", "BY", "open_year"], "query_toks_no_value": ["select", "station_id", ",", "location", ",", "manager_name", "from", "gas_station", "order", "by", "open_year"], "question": "Show gas station id, location, and manager_name for all gas stations ordered by open year.", "question_toks": ["Show", "gas", "station", "id", ",", "location", ",", "and", "manager_name", "for", "all", "gas", "stations", "ordered", "by", "open", "year", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 11, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "gas_company", "query": "SELECT station_id ,  LOCATION ,  manager_name FROM gas_station ORDER BY open_year", "query_toks": ["SELECT", "station_id", ",", "LOCATION", ",", "manager_name", "FROM", "gas_station", "ORDER", "BY", "open_year"], "query_toks_no_value": ["select", "station_id", ",", "location", ",", "manager_name", "from", "gas_station", "order", "by", "open_year"], "question": "What are the gas station ids, locations, and manager names for the gas stations ordered by opening year?", "question_toks": ["What", "are", "the", "gas", "station", "ids", ",", "locations", ",", "and", "manager", "names", "for", "the", "gas", "stations", "ordered", "by", "opening", "year", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 11, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "gas_company", "query": "SELECT LOCATION ,  count(*) FROM gas_station GROUP BY LOCATION ORDER BY count(*)", "query_toks": ["SELECT", "LOCATION", ",", "count", "(", "*", ")", "FROM", "gas_station", "GROUP", "BY", "LOCATION", "ORDER", "BY", "count", "(", "*", ")"], "query_toks_no_value": ["select", "location", ",", "count", "(", "*", ")", "from", "gas_station", "group", "by", "location", "order", "by", "count", "(", "*", ")"], "question": "Show all locations and the number of gas stations in each location ordered by the count.", "question_toks": ["Show", "all", "locations", "and", "the", "number", "of", "gas", "stations", "in", "each", "location", "ordered", "by", "the", "count", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 12, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "gas_company", "query": "SELECT LOCATION ,  count(*) FROM gas_station GROUP BY LOCATION ORDER BY count(*)", "query_toks": ["SELECT", "LOCATION", ",", "count", "(", "*", ")", "FROM", "gas_station", "GROUP", "BY", "LOCATION", "ORDER", "BY", "count", "(", "*", ")"], "query_toks_no_value": ["select", "location", ",", "count", "(", "*", ")", "from", "gas_station", "group", "by", "location", "order", "by", "count", "(", "*", ")"], "question": "For each location, how many gas stations are there in order?", "question_toks": ["For", "each", "location", ",", "how", "many", "gas", "stations", "are", "there", "in", "order", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 12, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "gas_company", "query": "SELECT T2.company ,  count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id GROUP BY T1.company_id", "query_toks": ["SELECT", "T2.company", ",", "count", "(", "*", ")", "FROM", "station_company", "AS", "T1", "JOIN", "company", "AS", "T2", "ON", "T1.company_id", "=", "T2.company_id", "GROUP", "BY", "T1.company_id"], "query_toks_no_value": ["select", "t2", ".", "company", ",", "count", "(", "*", ")", "from", "station_company", "as", "t1", "join", "company", "as", "t2", "on", "t1", ".", "company_id", "=", "t2", ".", "company_id", "group", "by", "t1", ".", "company_id"], "question": "Show the company name with the number of gas station.", "question_toks": ["Show", "the", "company", "name", "with", "the", "number", "of", "gas", "station", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 17, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 17, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "gas_company", "query": "SELECT T2.company ,  count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id GROUP BY T1.company_id", "query_toks": ["SELECT", "T2.company", ",", "count", "(", "*", ")", "FROM", "station_company", "AS", "T1", "JOIN", "company", "AS", "T2", "ON", "T1.company_id", "=", "T2.company_id", "GROUP", "BY", "T1.company_id"], "query_toks_no_value": ["select", "t2", ".", "company", ",", "count", "(", "*", ")", "from", "station_company", "as", "t1", "join", "company", "as", "t2", "on", "t1", ".", "company_id", "=", "t2", ".", "company_id", "group", "by", "t1", ".", "company_id"], "question": "For each company id, what are the companies and how many gas stations does each one operate?", "question_toks": ["For", "each", "company", "id", ",", "what", "are", "the", "companies", "and", "how", "many", "gas", "stations", "does", "each", "one", "operate", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 17, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 17, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "gas_company", "query": "SELECT company ,  main_industry FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company)", "query_toks": ["SELECT", "company", ",", "main_industry", "FROM", "company", "WHERE", "company_id", "NOT", "IN", "(", "SELECT", "company_id", "FROM", "station_company", ")"], "query_toks_no_value": ["select", "company", ",", "main_industry", "from", "company", "where", "company_id", "not", "in", "(", "select", "company_id", "from", "station_company", ")"], "question": "Show company name and main industry without a gas station.", "question_toks": ["Show", "company", "name", "and", "main", "industry", "without", "a", "gas", "station", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 17, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "gas_company", "query": "SELECT company ,  main_industry FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company)", "query_toks": ["SELECT", "company", ",", "main_industry", "FROM", "company", "WHERE", "company_id", "NOT", "IN", "(", "SELECT", "company_id", "FROM", "station_company", ")"], "query_toks_no_value": ["select", "company", ",", "main_industry", "from", "company", "where", "company_id", "not", "in", "(", "select", "company_id", "from", "station_company", ")"], "question": "What are the main industries of the companies without gas stations and what are the companies?", "question_toks": ["What", "are", "the", "main", "industries", "of", "the", "companies", "without", "gas", "stations", "and", "what", "are", "the", "companies", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 17, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "gas_company", "query": "SELECT rank ,  company ,  market_value FROM company WHERE main_industry  =  'Banking' ORDER BY sales_billion ,  profits_billion", "query_toks": ["SELECT", "rank", ",", "company", ",", "market_value", "FROM", "company", "WHERE", "main_industry", "=", "'Banking", "'", "ORDER", "BY", "sales_billion", ",", "profits_billion"], "query_toks_no_value": ["select", "rank", ",", "company", ",", "market_value", "from", "company", "where", "main_industry", "=", "value", "order", "by", "sales_billion", ",", "profits_billion"], "question": "find the rank, company names, market values of the companies in the banking industry order by their sales and profits in billion.", "question_toks": ["find", "the", "rank", ",", "company", "names", ",", "market", "values", "of", "the", "companies", "in", "the", "banking", "industry", "order", "by", "their", "sales", "and", "profits", "in", "billion", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 6, false], null], [0, [0, 7, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"Banking\"", null]]}}, {"db_id": "gas_company", "query": "SELECT rank ,  company ,  market_value FROM company WHERE main_industry  =  'Banking' ORDER BY sales_billion ,  profits_billion", "query_toks": ["SELECT", "rank", ",", "company", ",", "market_value", "FROM", "company", "WHERE", "main_industry", "=", "'Banking", "'", "ORDER", "BY", "sales_billion", ",", "profits_billion"], "query_toks_no_value": ["select", "rank", ",", "company", ",", "market_value", "from", "company", "where", "main_industry", "=", "value", "order", "by", "sales_billion", ",", "profits_billion"], "question": "What is the rank, company, and market value of every comapny in the banking industry ordered by sales and profits?", "question_toks": ["What", "is", "the", "rank", ",", "company", ",", "and", "market", "value", "of", "every", "comapny", "in", "the", "banking", "industry", "ordered", "by", "sales", "and", "profits", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 6, false], null], [0, [0, 7, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"Banking\"", null]]}}, {"db_id": "gas_company", "query": "SELECT T3.location ,  T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3", "query_toks": ["SELECT", "T3.location", ",", "T3.Representative_Name", "FROM", "station_company", "AS", "T1", "JOIN", "company", "AS", "T2", "ON", "T1.company_id", "=", "T2.company_id", "JOIN", "gas_station", "AS", "T3", "ON", "T1.station_id", "=", "T3.station_id", "ORDER", "BY", "T2.Assets_billion", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "t3", ".", "location", ",", "t3", ".", "representative_name", "from", "station_company", "as", "t1", "join", "company", "as", "t2", "on", "t1", ".", "company_id", "=", "t2", ".", "company_id", "join", "gas_station", "as", "t3", "on", "t1", ".", "station_id", "=", "t3", ".", "station_id", "order", "by", "t2", ".", "assets_billion", "desc", "limit", "value"], "question": "find the location and Representative name of the gas stations owned by the companies with top 3 Asset amounts.", "question_toks": ["find", "the", "location", "and", "Representative", "name", "of", "the", "gas", "stations", "owned", "by", "the", "companies", "with", "top", "3", "Asset", "amounts", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 17, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 3, "orderBy": ["desc", [[0, [0, 8, false], null]]], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": []}}, {"db_id": "gas_company", "query": "SELECT T3.location ,  T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3", "query_toks": ["SELECT", "T3.location", ",", "T3.Representative_Name", "FROM", "station_company", "AS", "T1", "JOIN", "company", "AS", "T2", "ON", "T1.company_id", "=", "T2.company_id", "JOIN", "gas_station", "AS", "T3", "ON", "T1.station_id", "=", "T3.station_id", "ORDER", "BY", "T2.Assets_billion", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "t3", ".", "location", ",", "t3", ".", "representative_name", "from", "station_company", "as", "t1", "join", "company", "as", "t2", "on", "t1", ".", "company_id", "=", "t2", ".", "company_id", "join", "gas_station", "as", "t3", "on", "t1", ".", "station_id", "=", "t3", ".", "station_id", "order", "by", "t2", ".", "assets_billion", "desc", "limit", "value"], "question": "What are the locations and representatives' names of the gas stations owned by the companies with the 3 largest amounts of assets?", "question_toks": ["What", "are", "the", "locations", "and", "representatives", "'", "names", "of", "the", "gas", "stations", "owned", "by", "the", "companies", "with", "the", "3", "largest", "amounts", "of", "assets", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 17, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 3, "orderBy": ["desc", [[0, [0, 8, false], null]]], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": []}}, {"db_id": "party_people", "query": "SELECT minister ,  took_office ,  left_office FROM party ORDER BY left_office", "query_toks": ["SELECT", "minister", ",", "took_office", ",", "left_office", "FROM", "party", "ORDER", "BY", "left_office"], "query_toks_no_value": ["select", "minister", ",", "took_office", ",", "left_office", "from", "party", "order", "by", "left_office"], "question": "Show the ministers and the time they took and left office, listed by the time they left office.", "question_toks": ["Show", "the", "ministers", "and", "the", "time", "they", "took", "and", "left", "office", ",", "listed", "by", "the", "time", "they", "left", "office", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 10, false], null]]], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "party_people", "query": "SELECT minister ,  took_office ,  left_office FROM party ORDER BY left_office", "query_toks": ["SELECT", "minister", ",", "took_office", ",", "left_office", "FROM", "party", "ORDER", "BY", "left_office"], "query_toks_no_value": ["select", "minister", ",", "took_office", ",", "left_office", "from", "party", "order", "by", "left_office"], "question": "Who are the ministers, when did they take office, and when did they leave office, ordered by when they left office?", "question_toks": ["Who", "are", "the", "ministers", ",", "when", "did", "they", "take", "office", ",", "and", "when", "did", "they", "leave", "office", ",", "ordered", "by", "when", "they", "left", "office", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 10, false], null]]], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "party_people", "query": "SELECT minister ,  party_name FROM party ORDER BY took_office DESC", "query_toks": ["SELECT", "minister", ",", "party_name", "FROM", "party", "ORDER", "BY", "took_office", "DESC"], "query_toks_no_value": ["select", "minister", ",", "party_name", "from", "party", "order", "by", "took_office", "desc"], "question": "Show all ministers and parties they belong to in descending order of the time they took office.", "question_toks": ["Show", "all", "ministers", "and", "parties", "they", "belong", "to", "in", "descending", "order", "of", "the", "time", "they", "took", "office", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 9, false], null]]], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "party_people", "query": "SELECT minister ,  party_name FROM party ORDER BY took_office DESC", "query_toks": ["SELECT", "minister", ",", "party_name", "FROM", "party", "ORDER", "BY", "took_office", "DESC"], "query_toks_no_value": ["select", "minister", ",", "party_name", "from", "party", "order", "by", "took_office", "desc"], "question": "Who are the ministers and what parties do they belong to, listed descending by the times they took office?", "question_toks": ["Who", "are", "the", "ministers", "and", "what", "parties", "do", "they", "belong", "to", ",", "listed", "descending", "by", "the", "times", "they", "took", "office", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 9, false], null]]], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "party_people", "query": "SELECT T1.member_name ,  T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id", "query_toks": ["SELECT", "T1.member_name", ",", "T2.party_name", "FROM", "Member", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.party_id", "=", "T2.party_id"], "query_toks_no_value": ["select", "t1", ".", "member_name", ",", "t2", ".", "party_name", "from", "member", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party_id", "=", "t2", ".", "party_id"], "question": "List member names and their party names.", "question_toks": ["List", "member", "names", "and", "their", "party", "names", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 7, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "party_people", "query": "SELECT T1.member_name ,  T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id", "query_toks": ["SELECT", "T1.member_name", ",", "T2.party_name", "FROM", "Member", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.party_id", "=", "T2.party_id"], "query_toks_no_value": ["select", "t1", ".", "member_name", ",", "t2", ".", "party_name", "from", "member", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party_id", "=", "t2", ".", "party_id"], "question": "What are the names of members and their corresponding parties?", "question_toks": ["What", "are", "the", "names", "of", "members", "and", "their", "corresponding", "parties", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 7, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "party_people", "query": "SELECT T2.party_name ,  count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id", "query_toks": ["SELECT", "T2.party_name", ",", "count", "(", "*", ")", "FROM", "Member", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.party_id", "=", "T2.party_id", "GROUP", "BY", "T1.party_id"], "query_toks_no_value": ["select", "t2", ".", "party_name", ",", "count", "(", "*", ")", "from", "member", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party_id", "=", "t2", ".", "party_id", "group", "by", "t1", ".", "party_id"], "question": "Show all party names and the number of members in each party.", "question_toks": ["Show", "all", "party", "names", "and", "the", "number", "of", "members", "in", "each", "party", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 7, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "party_people", "query": "SELECT T2.party_name ,  count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id", "query_toks": ["SELECT", "T2.party_name", ",", "count", "(", "*", ")", "FROM", "Member", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.party_id", "=", "T2.party_id", "GROUP", "BY", "T1.party_id"], "query_toks_no_value": ["select", "t2", ".", "party_name", ",", "count", "(", "*", ")", "from", "member", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party_id", "=", "t2", ".", "party_id", "group", "by", "t1", ".", "party_id"], "question": "How many members are in each party?", "question_toks": ["How", "many", "members", "are", "in", "each", "party", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 7, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "party_people", "query": "SELECT T1.party_name ,  T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id", "query_toks": ["SELECT", "T1.party_name", ",", "T2.region_name", "FROM", "party", "AS", "T1", "JOIN", "region", "AS", "T2", "ON", "T1.region_id", "=", "T2.region_id"], "query_toks_no_value": ["select", "t1", ".", "party_name", ",", "t2", ".", "region_name", "from", "party", "as", "t1", "join", "region", "as", "t2", "on", "t1", ".", "region_id", "=", "t2", ".", "region_id"], "question": "Show all party names and their region names.", "question_toks": ["Show", "all", "party", "names", "and", "their", "region", "names", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "party_people", "query": "SELECT T1.party_name ,  T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id", "query_toks": ["SELECT", "T1.party_name", ",", "T2.region_name", "FROM", "party", "AS", "T1", "JOIN", "region", "AS", "T2", "ON", "T1.region_id", "=", "T2.region_id"], "query_toks_no_value": ["select", "t1", ".", "party_name", ",", "t2", ".", "region_name", "from", "party", "as", "t1", "join", "region", "as", "t2", "on", "t1", ".", "region_id", "=", "t2", ".", "region_id"], "question": "What are the names of parties and their respective regions?", "question_toks": ["What", "are", "the", "names", "of", "parties", "and", "their", "respective", "regions", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "party_people", "query": "SELECT T2.party_name ,  count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id", "query_toks": ["SELECT", "T2.party_name", ",", "count", "(", "*", ")", "FROM", "party_events", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.party_id", "=", "T2.party_id", "GROUP", "BY", "T1.party_id"], "query_toks_no_value": ["select", "t2", ".", "party_name", ",", "count", "(", "*", ")", "from", "party_events", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party_id", "=", "t2", ".", "party_id", "group", "by", "t1", ".", "party_id"], "question": "Show party names and the number of events for each party.", "question_toks": ["Show", "party", "names", "and", "the", "number", "of", "events", "for", "each", "party", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 19, false], null], [0, 7, false], null]], "table_units": [["table_unit", 3], ["table_unit", 1]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "party_people", "query": "SELECT T2.party_name ,  count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id", "query_toks": ["SELECT", "T2.party_name", ",", "count", "(", "*", ")", "FROM", "party_events", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.party_id", "=", "T2.party_id", "GROUP", "BY", "T1.party_id"], "query_toks_no_value": ["select", "t2", ".", "party_name", ",", "count", "(", "*", ")", "from", "party_events", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party_id", "=", "t2", ".", "party_id", "group", "by", "t1", ".", "party_id"], "question": "How many events are there for each party?", "question_toks": ["How", "many", "events", "are", "there", "for", "each", "party", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 19, false], null], [0, 7, false], null]], "table_units": [["table_unit", 3], ["table_unit", 1]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "pilot_record", "query": "SELECT POSITION ,  Team FROM pilot", "query_toks": ["SELECT", "POSITION", ",", "Team", "FROM", "pilot"], "query_toks_no_value": ["select", "position", ",", "team", "from", "pilot"], "question": "What are the positions and teams of pilots?", "question_toks": ["What", "are", "the", "positions", "and", "teams", "of", "pilots", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": []}}, {"db_id": "pilot_record", "query": "SELECT Nationality ,  COUNT(*) FROM pilot GROUP BY Nationality", "query_toks": ["SELECT", "Nationality", ",", "COUNT", "(", "*", ")", "FROM", "pilot", "GROUP", "BY", "Nationality"], "query_toks_no_value": ["select", "nationality", ",", "count", "(", "*", ")", "from", "pilot", "group", "by", "nationality"], "question": "What are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality.", "question_toks": ["What", "are", "the", "different", "nationalities", "of", "pilots", "?", "Show", "each", "nationality", "and", "the", "number", "of", "pilots", "of", "each", "nationality", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "pilot_record", "query": "SELECT T3.Pilot_name ,  T2.Model FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID", "query_toks": ["SELECT", "T3.Pilot_name", ",", "T2.Model", "FROM", "pilot_record", "AS", "T1", "JOIN", "aircraft", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Aircraft_ID", "JOIN", "pilot", "AS", "T3", "ON", "T1.Pilot_ID", "=", "T3.Pilot_ID"], "query_toks_no_value": ["select", "t3", ".", "pilot_name", ",", "t2", ".", "model", "from", "pilot_record", "as", "t1", "join", "aircraft", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "aircraft_id", "join", "pilot", "as", "t3", "on", "t1", ".", "pilot_id", "=", "t3", ".", "pilot_id"], "question": "Show the names of pilots and models of aircrafts they have flied with.", "question_toks": ["Show", "the", "names", "of", "pilots", "and", "models", "of", "aircrafts", "they", "have", "flied", "with", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "pilot_record", "query": "SELECT T3.Pilot_name ,  T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID ORDER BY T3.Rank", "query_toks": ["SELECT", "T3.Pilot_name", ",", "T2.Fleet_Series", "FROM", "pilot_record", "AS", "T1", "JOIN", "aircraft", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Aircraft_ID", "JOIN", "pilot", "AS", "T3", "ON", "T1.Pilot_ID", "=", "T3.Pilot_ID", "ORDER", "BY", "T3.Rank"], "query_toks_no_value": ["select", "t3", ".", "pilot_name", ",", "t2", ".", "fleet_series", "from", "pilot_record", "as", "t1", "join", "aircraft", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "aircraft_id", "join", "pilot", "as", "t3", "on", "t1", ".", "pilot_id", "=", "t3", ".", "pilot_id", "order", "by", "t3", ".", "rank"], "question": "Show the names of pilots and fleet series of the aircrafts they have flied with in ascending order of the rank of the pilot.", "question_toks": ["Show", "the", "names", "of", "pilots", "and", "fleet", "series", "of", "the", "aircrafts", "they", "have", "flied", "with", "in", "ascending", "order", "of", "the", "rank", "of", "the", "pilot", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 10, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "pilot_record", "query": "SELECT T2.Pilot_name ,  COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID  =  T2.pilot_ID GROUP BY T2.Pilot_name", "query_toks": ["SELECT", "T2.Pilot_name", ",", "COUNT", "(", "*", ")", "FROM", "pilot_record", "AS", "T1", "JOIN", "pilot", "AS", "T2", "ON", "T1.pilot_ID", "=", "T2.pilot_ID", "GROUP", "BY", "T2.Pilot_name"], "query_toks_no_value": ["select", "t2", ".", "pilot_name", ",", "count", "(", "*", ")", "from", "pilot_record", "as", "t1", "join", "pilot", "as", "t2", "on", "t1", ".", "pilot_id", "=", "t2", ".", "pilot_id", "group", "by", "t2", ".", "pilot_name"], "question": "Show the names of pilots and the number of records they have.", "question_toks": ["Show", "the", "names", "of", "pilots", "and", "the", "number", "of", "records", "they", "have", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 17, false], null], [0, 8, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "pilot_record", "query": "SELECT T2.Pilot_name ,  COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID  =  T2.pilot_ID GROUP BY T2.Pilot_name HAVING COUNT(*)  >  1", "query_toks": ["SELECT", "T2.Pilot_name", ",", "COUNT", "(", "*", ")", "FROM", "pilot_record", "AS", "T1", "JOIN", "pilot", "AS", "T2", "ON", "T1.pilot_ID", "=", "T2.pilot_ID", "GROUP", "BY", "T2.Pilot_name", "HAVING", "COUNT", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t2", ".", "pilot_name", ",", "count", "(", "*", ")", "from", "pilot_record", "as", "t1", "join", "pilot", "as", "t2", "on", "t1", ".", "pilot_id", "=", "t2", ".", "pilot_id", "group", "by", "t2", ".", "pilot_name", "having", "count", "(", "*", ")", ">", "value"], "question": "Show names of pilots that have more than one record.", "question_toks": ["Show", "names", "of", "pilots", "that", "have", "more", "than", "one", "record", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 17, false], null], [0, 8, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 9, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Control_Systems", "query": "SELECT document_id ,  receipt_date FROM Documents;", "query_toks": ["SELECT", "document_id", ",", "receipt_date", "FROM", "Documents", ";"], "query_toks_no_value": ["select", "document_id", ",", "receipt_date", "from", "documents"], "question": "List all document ids and receipt dates of documents.", "question_toks": ["List", "all", "document", "ids", "and", "receipt", "dates", "of", "documents", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Control_Systems", "query": "SELECT T1.role_description ,  T2.role_code ,  count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code;", "query_toks": ["SELECT", "T1.role_description", ",", "T2.role_code", ",", "count", "(", "*", ")", "FROM", "ROLES", "AS", "T1", "JOIN", "Employees", "AS", "T2", "ON", "T1.role_code", "=", "T2.role_code", "GROUP", "BY", "T2.role_code", ";"], "query_toks_no_value": ["select", "t1", ".", "role_description", ",", "t2", ".", "role_code", ",", "count", "(", "*", ")", "from", "roles", "as", "t1", "join", "employees", "as", "t2", "on", "t1", ".", "role_code", "=", "t2", ".", "role_code", "group", "by", "t2", ".", "role_code"], "question": "How many employees does each role have? List role description, id and number of employees.", "question_toks": ["How", "many", "employees", "does", "each", "role", "have", "?", "List", "role", "description", ",", "id", "and", "number", "of", "employees", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 20, false], null]], "table_units": [["table_unit", 1], ["table_unit", 6]]}, "groupBy": [[0, 20, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 20, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Control_Systems", "query": "SELECT Roles.role_description , count(Employees.employee_id) FROM ROLES JOIN Employees ON Employees.role_code = Roles.role_code GROUP BY Employees.role_code HAVING count(Employees.employee_id)  >  1;", "query_toks": ["SELECT", "Roles.role_description", ",", "count", "(", "Employees.employee_id", ")", "FROM", "ROLES", "JOIN", "Employees", "ON", "Employees.role_code", "=", "Roles.role_code", "GROUP", "BY", "Employees.role_code", "HAVING", "count", "(", "Employees.employee_id", ")", ">", "1", ";"], "query_toks_no_value": ["select", "roles.role_description", ",", "count", "(", "employees.employee_id", ")", "from", "roles", "join", "employees", "on", "employees.role_code", "=", "roles.role_code", "group", "by", "employees.role_code", "having", "count", "(", "employees.employee_id", ")", ">", "value"], "question": "List roles that have more than one employee. List the role description and number of employees.", "question_toks": ["List", "roles", "that", "have", "more", "than", "one", "employee", ".", "List", "the", "role", "description", "and", "number", "of", "employees", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 20, false], null], [0, 3, false], null]], "table_units": [["table_unit", 1], ["table_unit", 6]]}, "groupBy": [[0, 20, false]], "having": [[false, 3, [0, [3, 19, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 19, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Control_Systems", "query": "SELECT Ref_Shipping_Agents.shipping_agent_name , count(Documents.document_id) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code GROUP BY Ref_Shipping_Agents.shipping_agent_code ORDER BY count(Documents.document_id) DESC LIMIT 1;", "query_toks": ["SELECT", "Ref_Shipping_Agents.shipping_agent_name", ",", "count", "(", "Documents.document_id", ")", "FROM", "Ref_Shipping_Agents", "JOIN", "Documents", "ON", "Documents.shipping_agent_code", "=", "Ref_Shipping_Agents.shipping_agent_code", "GROUP", "BY", "Ref_Shipping_Agents.shipping_agent_code", "ORDER", "BY", "count", "(", "Documents.document_id", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "ref_shipping_agents.shipping_agent_name", ",", "count", "(", "documents.document_id", ")", "from", "ref_shipping_agents", "join", "documents", "on", "documents.shipping_agent_code", "=", "ref_shipping_agents.shipping_agent_code", "group", "by", "ref_shipping_agents.shipping_agent_code", "order", "by", "count", "(", "documents.document_id", ")", "desc", "limit", "value"], "question": "Which shipping agent shipped the most documents? List the shipping agent name and the number of documents.", "question_toks": ["Which", "shipping", "agent", "shipped", "the", "most", "documents", "?", "List", "the", "shipping", "agent", "name", "and", "the", "number", "of", "documents", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]], "table_units": [["table_unit", 4], ["table_unit", 5]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 12, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Control_Systems", "query": "SELECT document_id , count(copy_number) FROM Draft_Copies GROUP BY document_id ORDER BY count(copy_number) DESC LIMIT 1;", "query_toks": ["SELECT", "document_id", ",", "count", "(", "copy_number", ")", "FROM", "Draft_Copies", "GROUP", "BY", "document_id", "ORDER", "BY", "count", "(", "copy_number", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "document_id", ",", "count", "(", "copy_number", ")", "from", "draft_copies", "group", "by", "document_id", "order", "by", "count", "(", "copy_number", ")", "desc", "limit", "value"], "question": "Which document has the most draft copies? List its document id and number of draft copies.", "question_toks": ["Which", "document", "has", "the", "most", "draft", "copies", "?", "List", "its", "document", "id", "and", "number", "of", "draft", "copies", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 8]]}, "groupBy": [[0, 26, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 28, false], null]]], "select": [false, [[0, [0, [0, 26, false], null]], [3, [0, [0, 28, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Control_Systems", "query": "SELECT document_id , count(*) FROM Draft_Copies GROUP BY document_id HAVING count(*)  >  1;", "query_toks": ["SELECT", "document_id", ",", "count", "(", "*", ")", "FROM", "Draft_Copies", "GROUP", "BY", "document_id", "HAVING", "count", "(", "*", ")", ">", "1", ";"], "query_toks_no_value": ["select", "document_id", ",", "count", "(", "*", ")", "from", "draft_copies", "group", "by", "document_id", "having", "count", "(", "*", ")", ">", "value"], "question": "Which documents have more than 1 draft copies? List document id and number of draft copies.", "question_toks": ["Which", "documents", "have", "more", "than", "1", "draft", "copies", "?", "List", "document", "id", "and", "number", "of", "draft", "copies", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 8]]}, "groupBy": [[0, 26, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 26, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Control_Systems", "query": "SELECT Employees.employee_name , count(*) FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id GROUP BY Circulation_History.document_id , Circulation_History.draft_number , Circulation_History.copy_number ORDER BY count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "Employees.employee_name", ",", "count", "(", "*", ")", "FROM", "Employees", "JOIN", "Circulation_History", "ON", "Circulation_History.employee_id", "=", "Employees.employee_id", "GROUP", "BY", "Circulation_History.document_id", ",", "Circulation_History.draft_number", ",", "Circulation_History.copy_number", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "employees.employee_name", ",", "count", "(", "*", ")", "from", "employees", "join", "circulation_history", "on", "circulation_history.employee_id", "=", "employees.employee_id", "group", "by", "circulation_history.document_id", ",", "circulation_history.draft_number", ",", "circulation_history.copy_number", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which employee has showed up in most circulation history documents. List the employee's name and the number of drafts and copies.", "question_toks": ["Which", "employee", "has", "showed", "up", "in", "most", "circulation", "history", "documents", ".", "List", "the", "employee", "'s", "name", "and", "the", "number", "of", "drafts", "and", "copies", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 32, false], null], [0, 19, false], null]], "table_units": [["table_unit", 6], ["table_unit", 9]]}, "groupBy": [[0, 29, false], [0, 30, false], [0, 31, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 21, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Control_Systems", "query": "SELECT document_id ,  count(DISTINCT employee_id) FROM Circulation_History GROUP BY document_id;", "query_toks": ["SELECT", "document_id", ",", "count", "(", "DISTINCT", "employee_id", ")", "FROM", "Circulation_History", "GROUP", "BY", "document_id", ";"], "query_toks_no_value": ["select", "document_id", ",", "count", "(", "distinct", "employee_id", ")", "from", "circulation_history", "group", "by", "document_id"], "question": "For each document, list the number of employees who have showed up in the circulation history of that document. List the document ids and number of employees.", "question_toks": ["For", "each", "document", ",", "list", "the", "number", "of", "employees", "who", "have", "showed", "up", "in", "the", "circulation", "history", "of", "that", "document", ".", "List", "the", "document", "ids", "and", "number", "of", "employees", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 9]]}, "groupBy": [[0, 29, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 29, false], null]], [3, [0, [0, 32, true], null]]]], "union": null, "where": []}}, {"db_id": "company_1", "query": "SELECT fname ,  lname FROM employee WHERE salary  >  30000", "query_toks": ["SELECT", "fname", ",", "lname", "FROM", "employee", "WHERE", "salary", ">", "30000"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "employee", "where", "salary", ">", "value"], "question": "Return the first names and last names of employees who earn more than 30000 in salary.", "question_toks": ["Return", "the", "first", "names", "and", "last", "names", "of", "employees", "who", "earn", "more", "than", "30000", "in", "salary", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 11, false], null], 30000.0, null]]}}, {"db_id": "company_1", "query": "SELECT count(*) ,  sex FROM employee WHERE salary  <  50000 GROUP BY sex", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "sex", "FROM", "employee", "WHERE", "salary", "<", "50000", "GROUP", "BY", "sex"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "sex", "from", "employee", "where", "salary", "<", "value", "group", "by", "sex"], "question": "Find the number of employees of each gender whose salary is lower than 50000.", "question_toks": ["Find", "the", "number", "of", "employees", "of", "each", "gender", "whose", "salary", "is", "lower", "than", "50000", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 11, false], null], 50000.0, null]]}}, {"db_id": "company_1", "query": "SELECT fname ,  lname ,  address FROM employee ORDER BY Bdate", "query_toks": ["SELECT", "fname", ",", "lname", ",", "address", "FROM", "employee", "ORDER", "BY", "Bdate"], "query_toks_no_value": ["select", "fname", ",", "lname", ",", "address", "from", "employee", "order", "by", "bdate"], "question": "list the first and last names, and the addresses of all employees in the ascending order of their birth date.", "question_toks": ["list", "the", "first", "and", "last", "names", ",", "and", "the", "addresses", "of", "all", "employees", "in", "the", "ascending", "order", "of", "their", "birth", "date", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 8, false], null]]], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "local_govt_in_alabama", "query": "SELECT T1.event_id ,  T1.event_details FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID  =  T2.Event_ID GROUP BY T1.Event_ID HAVING count(*)  >  1", "query_toks": ["SELECT", "T1.event_id", ",", "T1.event_details", "FROM", "EVENTS", "AS", "T1", "JOIN", "Participants_in_Events", "AS", "T2", "ON", "T1.Event_ID", "=", "T2.Event_ID", "GROUP", "BY", "T1.Event_ID", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "event_id", ",", "t1", ".", "event_details", "from", "events", "as", "t1", "join", "participants_in_events", "as", "t2", "on", "t1", ".", "event_id", "=", "t2", ".", "event_id", "group", "by", "t1", ".", "event_id", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the ids and details of events that have more than one participants?", "question_toks": ["What", "are", "the", "ids", "and", "details", "of", "events", "that", "have", "more", "than", "one", "participants", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 9, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 6, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "local_govt_in_alabama", "query": "SELECT T1.Participant_ID ,  T1.Participant_Type_Code ,  count(*) FROM Participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID GROUP BY T1.Participant_ID", "query_toks": ["SELECT", "T1.Participant_ID", ",", "T1.Participant_Type_Code", ",", "count", "(", "*", ")", "FROM", "Participants", "AS", "T1", "JOIN", "Participants_in_Events", "AS", "T2", "ON", "T1.Participant_ID", "=", "T2.Participant_ID", "GROUP", "BY", "T1.Participant_ID"], "query_toks_no_value": ["select", "t1", ".", "participant_id", ",", "t1", ".", "participant_type_code", ",", "count", "(", "*", ")", "from", "participants", "as", "t1", "join", "participants_in_events", "as", "t2", "on", "t1", ".", "participant_id", "=", "t2", ".", "participant_id", "group", "by", "t1", ".", "participant_id"], "question": "How many events have each participants attended? List the participant id, type and the number.", "question_toks": ["How", "many", "events", "have", "each", "participants", "attended", "?", "List", "the", "participant", "id", ",", "type", "and", "the", "number", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]], "table_units": [["table_unit", 1], ["table_unit", 3]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "local_govt_in_alabama", "query": "SELECT Participant_ID ,  Participant_Type_Code ,  Participant_Details FROM  Participants", "query_toks": ["SELECT", "Participant_ID", ",", "Participant_Type_Code", ",", "Participant_Details", "FROM", "Participants"], "query_toks_no_value": ["select", "participant_id", ",", "participant_type_code", ",", "participant_details", "from", "participants"], "question": "What are all the the participant ids, type code and details?", "question_toks": ["What", "are", "all", "the", "the", "participant", "ids", ",", "type", "code", "and", "details", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "local_govt_in_alabama", "query": "SELECT service_id ,  event_details FROM EVENTS", "query_toks": ["SELECT", "service_id", ",", "event_details", "FROM", "EVENTS"], "query_toks_no_value": ["select", "service_id", ",", "event_details", "from", "events"], "question": "List the service id and details for the events.", "question_toks": ["List", "the", "service", "id", "and", "details", "for", "the", "events", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "local_govt_in_alabama", "query": "SELECT T3.service_id ,  T4.Service_Type_Code FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID JOIN EVENTS AS T3 ON T2.Event_ID   =  T3.Event_ID JOIN services AS T4 ON T3.service_id  =  T4.service_id GROUP BY T3.service_id ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "T3.service_id", ",", "T4.Service_Type_Code", "FROM", "participants", "AS", "T1", "JOIN", "Participants_in_Events", "AS", "T2", "ON", "T1.Participant_ID", "=", "T2.Participant_ID", "JOIN", "EVENTS", "AS", "T3", "ON", "T2.Event_ID", "=", "T3.Event_ID", "JOIN", "services", "AS", "T4", "ON", "T3.service_id", "=", "T4.service_id", "GROUP", "BY", "T3.service_id", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t3", ".", "service_id", ",", "t4", ".", "service_type_code", "from", "participants", "as", "t1", "join", "participants_in_events", "as", "t2", "on", "t1", ".", "participant_id", "=", "t2", ".", "participant_id", "join", "events", "as", "t3", "on", "t2", ".", "event_id", "=", "t3", ".", "event_id", "join", "services", "as", "t4", "on", "t3", ".", "service_id", "=", "t4", ".", "service_id", "group", "by", "t3", ".", "service_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "Which service id and type has the least number of participants?", "question_toks": ["Which", "service", "id", "and", "type", "has", "the", "least", "number", "of", "participants", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]], "table_units": [["table_unit", 1], ["table_unit", 3]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "formula_1", "query": "SELECT name ,  date FROM races ORDER BY date DESC LIMIT 1", "query_toks": ["SELECT", "name", ",", "date", "FROM", "races", "ORDER", "BY", "date", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "date", "from", "races", "order", "by", "date", "desc", "limit", "value"], "question": "What is the name and date of the most recent race?", "question_toks": ["What", "is", "the", "name", "and", "date", "of", "the", "most", "recent", "race", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 15, false], null]]], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": []}}, {"db_id": "formula_1", "query": "SELECT name ,  date FROM races ORDER BY date DESC LIMIT 1", "query_toks": ["SELECT", "name", ",", "date", "FROM", "races", "ORDER", "BY", "date", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "date", "from", "races", "order", "by", "date", "desc", "limit", "value"], "question": "What is the name and date of the race that occurred most recently?", "question_toks": ["What", "is", "the", "name", "and", "date", "of", "the", "race", "that", "occurred", "most", "recently", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 15, false], null]]], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": []}}, {"db_id": "formula_1", "query": "SELECT DISTINCT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds < 93000", "query_toks": ["SELECT", "DISTINCT", "T1.forename", ",", "T1.surname", "FROM", "drivers", "AS", "T1", "JOIN", "laptimes", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "WHERE", "T2.milliseconds", "<", "93000"], "query_toks_no_value": ["select", "distinct", "t1", ".", "forename", ",", "t1", ".", "surname", "from", "drivers", "as", "t1", "join", "laptimes", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "where", "t2", ".", "milliseconds", "<", "value"], "question": "List the forename and surname of all distinct drivers who once had laptime less than 93000 milliseconds?", "question_toks": ["List", "the", "forename", "and", "surname", "of", "all", "distinct", "drivers", "who", "once", "had", "laptime", "less", "than", "93000", "milliseconds", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 90, false], null]], "table_units": [["table_unit", 2], ["table_unit", 12]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 22, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 94, false], null], 93000.0, null]]}}, {"db_id": "formula_1", "query": "SELECT DISTINCT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds < 93000", "query_toks": ["SELECT", "DISTINCT", "T1.forename", ",", "T1.surname", "FROM", "drivers", "AS", "T1", "JOIN", "laptimes", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "WHERE", "T2.milliseconds", "<", "93000"], "query_toks_no_value": ["select", "distinct", "t1", ".", "forename", ",", "t1", ".", "surname", "from", "drivers", "as", "t1", "join", "laptimes", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "where", "t2", ".", "milliseconds", "<", "value"], "question": "What are the forenames and surnames of all unique drivers who had a lap time of less than 93000 milliseconds?", "question_toks": ["What", "are", "the", "forenames", "and", "surnames", "of", "all", "unique", "drivers", "who", "had", "a", "lap", "time", "of", "less", "than", "93000", "milliseconds", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 90, false], null]], "table_units": [["table_unit", 2], ["table_unit", 12]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 22, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 94, false], null], 93000.0, null]]}}, {"db_id": "formula_1", "query": "SELECT DISTINCT T1.driverid ,  T1.nationality FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds >  100000", "query_toks": ["SELECT", "DISTINCT", "T1.driverid", ",", "T1.nationality", "FROM", "drivers", "AS", "T1", "JOIN", "laptimes", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "WHERE", "T2.milliseconds", ">", "100000"], "query_toks_no_value": ["select", "distinct", "t1", ".", "driverid", ",", "t1", ".", "nationality", "from", "drivers", "as", "t1", "join", "laptimes", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "where", "t2", ".", "milliseconds", ">", "value"], "question": "Find all the distinct id and nationality of drivers who have had laptime more than 100000 milliseconds?", "question_toks": ["Find", "all", "the", "distinct", "id", "and", "nationality", "of", "drivers", "who", "have", "had", "laptime", "more", "than", "100000", "milliseconds", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 90, false], null]], "table_units": [["table_unit", 2], ["table_unit", 12]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 18, false], null]], [0, [0, [0, 25, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 94, false], null], 100000.0, null]]}}, {"db_id": "formula_1", "query": "SELECT DISTINCT T1.driverid ,  T1.nationality FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds >  100000", "query_toks": ["SELECT", "DISTINCT", "T1.driverid", ",", "T1.nationality", "FROM", "drivers", "AS", "T1", "JOIN", "laptimes", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "WHERE", "T2.milliseconds", ">", "100000"], "query_toks_no_value": ["select", "distinct", "t1", ".", "driverid", ",", "t1", ".", "nationality", "from", "drivers", "as", "t1", "join", "laptimes", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "where", "t2", ".", "milliseconds", ">", "value"], "question": "What are the different driver ids and nationalities of all drivers who had a laptime of more than 100000 milliseconds?", "question_toks": ["What", "are", "the", "different", "driver", "ids", "and", "nationalities", "of", "all", "drivers", "who", "had", "a", "laptime", "of", "more", "than", "100000", "milliseconds", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 90, false], null]], "table_units": [["table_unit", 2], ["table_unit", 12]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 18, false], null]], [0, [0, [0, 25, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 94, false], null], 100000.0, null]]}}, {"db_id": "formula_1", "query": "SELECT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds LIMIT 1", "query_toks": ["SELECT", "T1.forename", ",", "T1.surname", "FROM", "drivers", "AS", "T1", "JOIN", "laptimes", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "ORDER", "BY", "T2.milliseconds", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "forename", ",", "t1", ".", "surname", "from", "drivers", "as", "t1", "join", "laptimes", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "order", "by", "t2", ".", "milliseconds", "limit", "value"], "question": "What are the forename and surname of the driver who has the smallest laptime?", "question_toks": ["What", "are", "the", "forename", "and", "surname", "of", "the", "driver", "who", "has", "the", "smallest", "laptime", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 90, false], null]], "table_units": [["table_unit", 2], ["table_unit", 12]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 94, false], null]]], "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": []}}, {"db_id": "formula_1", "query": "SELECT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds LIMIT 1", "query_toks": ["SELECT", "T1.forename", ",", "T1.surname", "FROM", "drivers", "AS", "T1", "JOIN", "laptimes", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "ORDER", "BY", "T2.milliseconds", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "forename", ",", "t1", ".", "surname", "from", "drivers", "as", "t1", "join", "laptimes", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "order", "by", "t2", ".", "milliseconds", "limit", "value"], "question": "What is the forename and surname of the driver with the shortest laptime?", "question_toks": ["What", "is", "the", "forename", "and", "surname", "of", "the", "driver", "with", "the", "shortest", "laptime", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 90, false], null]], "table_units": [["table_unit", 2], ["table_unit", 12]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 94, false], null]]], "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": []}}, {"db_id": "formula_1", "query": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds DESC LIMIT 1", "query_toks": ["SELECT", "T1.driverid", ",", "T1.surname", "FROM", "drivers", "AS", "T1", "JOIN", "laptimes", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "ORDER", "BY", "T2.milliseconds", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "driverid", ",", "t1", ".", "surname", "from", "drivers", "as", "t1", "join", "laptimes", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "order", "by", "t2", ".", "milliseconds", "desc", "limit", "value"], "question": "What is the id and family name of the driver who has the longest laptime?", "question_toks": ["What", "is", "the", "id", "and", "family", "name", "of", "the", "driver", "who", "has", "the", "longest", "laptime", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 90, false], null]], "table_units": [["table_unit", 2], ["table_unit", 12]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 94, false], null]]], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": []}}, {"db_id": "formula_1", "query": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds DESC LIMIT 1", "query_toks": ["SELECT", "T1.driverid", ",", "T1.surname", "FROM", "drivers", "AS", "T1", "JOIN", "laptimes", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "ORDER", "BY", "T2.milliseconds", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "driverid", ",", "t1", ".", "surname", "from", "drivers", "as", "t1", "join", "laptimes", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "order", "by", "t2", ".", "milliseconds", "desc", "limit", "value"], "question": "What is the id and last name of the driver with the longest laptime?", "question_toks": ["What", "is", "the", "id", "and", "last", "name", "of", "the", "driver", "with", "the", "longest", "laptime", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 90, false], null]], "table_units": [["table_unit", 2], ["table_unit", 12]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 94, false], null]]], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": []}}, {"db_id": "formula_1", "query": "SELECT T1.driverid ,  T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE POSITION  =  '1' GROUP BY T1.driverid HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.driverid", ",", "T1.forename", ",", "T1.surname", "FROM", "drivers", "AS", "T1", "JOIN", "laptimes", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "WHERE", "POSITION", "=", "'1", "'", "GROUP", "BY", "T1.driverid", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "driverid", ",", "t1", ".", "forename", ",", "t1", ".", "surname", "from", "drivers", "as", "t1", "join", "laptimes", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "where", "position", "=", "value", "group", "by", "t1", ".", "driverid", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What is the id, forname and surname of the driver who had the first position in terms of laptime at least twice?", "question_toks": ["What", "is", "the", "id", ",", "forname", "and", "surname", "of", "the", "driver", "who", "had", "the", "first", "position", "in", "terms", "of", "laptime", "at", "least", "twice", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 90, false], null]], "table_units": [["table_unit", 2], ["table_unit", 12]]}, "groupBy": [[0, 18, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 22, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 92, false], null], "\"1\"", null]]}}, {"db_id": "formula_1", "query": "SELECT T1.driverid ,  T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE POSITION  =  '1' GROUP BY T1.driverid HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.driverid", ",", "T1.forename", ",", "T1.surname", "FROM", "drivers", "AS", "T1", "JOIN", "laptimes", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "WHERE", "POSITION", "=", "'1", "'", "GROUP", "BY", "T1.driverid", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "driverid", ",", "t1", ".", "forename", ",", "t1", ".", "surname", "from", "drivers", "as", "t1", "join", "laptimes", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "where", "position", "=", "value", "group", "by", "t1", ".", "driverid", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What is the id, first name, and last name of the driver who was in the first position for laptime at least twice?", "question_toks": ["What", "is", "the", "id", ",", "first", "name", ",", "and", "last", "name", "of", "the", "driver", "who", "was", "in", "the", "first", "position", "for", "laptime", "at", "least", "twice", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 90, false], null]], "table_units": [["table_unit", 2], ["table_unit", 12]]}, "groupBy": [[0, 18, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 22, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 92, false], null], "\"1\"", null]]}}, {"db_id": "formula_1", "query": "SELECT T2.name ,  T2.year FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\"", "query_toks": ["SELECT", "T2.name", ",", "T2.year", "FROM", "results", "AS", "T1", "JOIN", "races", "AS", "T2", "ON", "T1.raceid", "=", "T2.raceid", "JOIN", "drivers", "AS", "T3", "ON", "T1.driverid", "=", "T3.driverid", "WHERE", "T3.forename", "=", "``", "Lewis", "''"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "year", "from", "results", "as", "t1", "join", "races", "as", "t2", "on", "t1", ".", "raceid", "=", "t2", ".", "raceid", "join", "drivers", "as", "t3", "on", "t1", ".", "driverid", "=", "t3", ".", "driverid", "where", "t3", ".", "forename", "=", "value"], "question": "Give me a list of names and years of races that had any driver whose forename is Lewis?", "question_toks": ["Give", "me", "a", "list", "of", "names", "and", "years", "of", "races", "that", "had", "any", "driver", "whose", "forename", "is", "Lewis", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 44, false], null], [0, 10, false], null]], "table_units": [["table_unit", 7], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 22, false], null], "\"Lewis\"", null]]}}, {"db_id": "formula_1", "query": "SELECT T2.name ,  T2.year FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\"", "query_toks": ["SELECT", "T2.name", ",", "T2.year", "FROM", "results", "AS", "T1", "JOIN", "races", "AS", "T2", "ON", "T1.raceid", "=", "T2.raceid", "JOIN", "drivers", "AS", "T3", "ON", "T1.driverid", "=", "T3.driverid", "WHERE", "T3.forename", "=", "``", "Lewis", "''"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "year", "from", "results", "as", "t1", "join", "races", "as", "t2", "on", "t1", ".", "raceid", "=", "t2", ".", "raceid", "join", "drivers", "as", "t3", "on", "t1", ".", "driverid", "=", "t3", ".", "driverid", "where", "t3", ".", "forename", "=", "value"], "question": "What are the names and years of all races that had a driver with the last name Lewis?", "question_toks": ["What", "are", "the", "names", "and", "years", "of", "all", "races", "that", "had", "a", "driver", "with", "the", "last", "name", "Lewis", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 44, false], null], [0, 10, false], null]], "table_units": [["table_unit", 7], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 22, false], null], "\"Lewis\"", null]]}}, {"db_id": "formula_1", "query": "SELECT forename ,  surname FROM drivers WHERE nationality = \"German\"", "query_toks": ["SELECT", "forename", ",", "surname", "FROM", "drivers", "WHERE", "nationality", "=", "``", "German", "''"], "query_toks_no_value": ["select", "forename", ",", "surname", "from", "drivers", "where", "nationality", "=", "value"], "question": "Find the forename and surname of drivers whose nationality is German?", "question_toks": ["Find", "the", "forename", "and", "surname", "of", "drivers", "whose", "nationality", "is", "German", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 25, false], null], "\"German\"", null]]}}, {"db_id": "formula_1", "query": "SELECT forename ,  surname FROM drivers WHERE nationality = \"German\"", "query_toks": ["SELECT", "forename", ",", "surname", "FROM", "drivers", "WHERE", "nationality", "=", "``", "German", "''"], "query_toks_no_value": ["select", "forename", ",", "surname", "from", "drivers", "where", "nationality", "=", "value"], "question": "What is the first and last name of all the German drivers?", "question_toks": ["What", "is", "the", "first", "and", "last", "name", "of", "all", "the", "German", "drivers", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 25, false], null], "\"German\"", null]]}}, {"db_id": "formula_1", "query": "SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = \"Australian Grand Prix\" INTERSECT SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = \"Chinese Grand Prix\"", "query_toks": ["SELECT", "T2.driverid", ",", "T3.forename", "FROM", "races", "AS", "T1", "JOIN", "results", "AS", "T2", "ON", "T1.raceid", "=", "T2.raceid", "JOIN", "drivers", "AS", "T3", "ON", "T2.driverid", "=", "T3.driverid", "WHERE", "T1.name", "=", "``", "Australian", "Grand", "Prix", "''", "INTERSECT", "SELECT", "T2.driverid", ",", "T3.forename", "FROM", "races", "AS", "T1", "JOIN", "results", "AS", "T2", "ON", "T1.raceid", "=", "T2.raceid", "JOIN", "drivers", "AS", "T3", "ON", "T2.driverid", "=", "T3.driverid", "WHERE", "T1.name", "=", "``", "Chinese", "Grand", "Prix", "''"], "query_toks_no_value": ["select", "t2", ".", "driverid", ",", "t3", ".", "forename", "from", "races", "as", "t1", "join", "results", "as", "t2", "on", "t1", ".", "raceid", "=", "t2", ".", "raceid", "join", "drivers", "as", "t3", "on", "t2", ".", "driverid", "=", "t3", ".", "driverid", "where", "t1", ".", "name", "=", "value", "intersect", "select", "t2", ".", "driverid", ",", "t3", ".", "forename", "from", "races", "as", "t1", "join", "results", "as", "t2", "on", "t1", ".", "raceid", "=", "t2", ".", "raceid", "join", "drivers", "as", "t3", "on", "t2", ".", "driverid", "=", "t3", ".", "driverid", "where", "t1", ".", "name", "=", "value"], "question": "Find the id and forenames of drivers who participated both the races with name Australian Grand Prix and the races with name Chinese Grand Prix?", "question_toks": ["Find", "the", "id", "and", "forenames", "of", "drivers", "who", "participated", "both", "the", "races", "with", "name", "Australian", "Grand", "Prix", "and", "the", "races", "with", "name", "Chinese", "Grand", "Prix", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 44, false], null]], "table_units": [["table_unit", 1], ["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 44, false], null]], "table_units": [["table_unit", 1], ["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 45, false], null]], [0, [0, [0, 22, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], "\"Chinese Grand Prix\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 45, false], null]], [0, [0, [0, 22, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], "\"Australian Grand Prix\"", null]]}}, {"db_id": "formula_1", "query": "SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = \"Australian Grand Prix\" INTERSECT SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = \"Chinese Grand Prix\"", "query_toks": ["SELECT", "T2.driverid", ",", "T3.forename", "FROM", "races", "AS", "T1", "JOIN", "results", "AS", "T2", "ON", "T1.raceid", "=", "T2.raceid", "JOIN", "drivers", "AS", "T3", "ON", "T2.driverid", "=", "T3.driverid", "WHERE", "T1.name", "=", "``", "Australian", "Grand", "Prix", "''", "INTERSECT", "SELECT", "T2.driverid", ",", "T3.forename", "FROM", "races", "AS", "T1", "JOIN", "results", "AS", "T2", "ON", "T1.raceid", "=", "T2.raceid", "JOIN", "drivers", "AS", "T3", "ON", "T2.driverid", "=", "T3.driverid", "WHERE", "T1.name", "=", "``", "Chinese", "Grand", "Prix", "''"], "query_toks_no_value": ["select", "t2", ".", "driverid", ",", "t3", ".", "forename", "from", "races", "as", "t1", "join", "results", "as", "t2", "on", "t1", ".", "raceid", "=", "t2", ".", "raceid", "join", "drivers", "as", "t3", "on", "t2", ".", "driverid", "=", "t3", ".", "driverid", "where", "t1", ".", "name", "=", "value", "intersect", "select", "t2", ".", "driverid", ",", "t3", ".", "forename", "from", "races", "as", "t1", "join", "results", "as", "t2", "on", "t1", ".", "raceid", "=", "t2", ".", "raceid", "join", "drivers", "as", "t3", "on", "t2", ".", "driverid", "=", "t3", ".", "driverid", "where", "t1", ".", "name", "=", "value"], "question": "What is the id and first name of all the drivers who participated in the Australian Grand Prix and the Chinese Grand Prix?", "question_toks": ["What", "is", "the", "id", "and", "first", "name", "of", "all", "the", "drivers", "who", "participated", "in", "the", "Australian", "Grand", "Prix", "and", "the", "Chinese", "Grand", "Prix", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 44, false], null]], "table_units": [["table_unit", 1], ["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 44, false], null]], "table_units": [["table_unit", 1], ["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 45, false], null]], [0, [0, [0, 22, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], "\"Chinese Grand Prix\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 45, false], null]], [0, [0, [0, 22, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], "\"Australian Grand Prix\"", null]]}}, {"db_id": "formula_1", "query": "SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"Australian Grand Prix\" EXCEPT SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"Chinese Grand Prix\"", "query_toks": ["SELECT", "T3.forename", ",", "T3.surname", "FROM", "races", "AS", "T1", "JOIN", "results", "AS", "T2", "ON", "T1.raceid", "=", "T2.raceid", "JOIN", "drivers", "AS", "T3", "ON", "T2.driverid", "=", "T3.driverid", "WHERE", "T1.name", "=", "``", "Australian", "Grand", "Prix", "''", "EXCEPT", "SELECT", "T3.forename", ",", "T3.surname", "FROM", "races", "AS", "T1", "JOIN", "results", "AS", "T2", "ON", "T1.raceid", "=", "T2.raceid", "JOIN", "drivers", "AS", "T3", "ON", "T2.driverid", "=", "T3.driverid", "WHERE", "T1.name", "=", "``", "Chinese", "Grand", "Prix", "''"], "query_toks_no_value": ["select", "t3", ".", "forename", ",", "t3", ".", "surname", "from", "races", "as", "t1", "join", "results", "as", "t2", "on", "t1", ".", "raceid", "=", "t2", ".", "raceid", "join", "drivers", "as", "t3", "on", "t2", ".", "driverid", "=", "t3", ".", "driverid", "where", "t1", ".", "name", "=", "value", "except", "select", "t3", ".", "forename", ",", "t3", ".", "surname", "from", "races", "as", "t1", "join", "results", "as", "t2", "on", "t1", ".", "raceid", "=", "t2", ".", "raceid", "join", "drivers", "as", "t3", "on", "t2", ".", "driverid", "=", "t3", ".", "driverid", "where", "t1", ".", "name", "=", "value"], "question": "What are the forenames and surnames of drivers who participated in the races named Australian Grand Prix but not the races named Chinese Grand Prix?", "question_toks": ["What", "are", "the", "forenames", "and", "surnames", "of", "drivers", "who", "participated", "in", "the", "races", "named", "Australian", "Grand", "Prix", "but", "not", "the", "races", "named", "Chinese", "Grand", "Prix", "?"], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 44, false], null]], "table_units": [["table_unit", 1], ["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], "\"Chinese Grand Prix\"", null]]}, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 44, false], null]], "table_units": [["table_unit", 1], ["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], "\"Australian Grand Prix\"", null]]}}, {"db_id": "formula_1", "query": "SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"Australian Grand Prix\" EXCEPT SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"Chinese Grand Prix\"", "query_toks": ["SELECT", "T3.forename", ",", "T3.surname", "FROM", "races", "AS", "T1", "JOIN", "results", "AS", "T2", "ON", "T1.raceid", "=", "T2.raceid", "JOIN", "drivers", "AS", "T3", "ON", "T2.driverid", "=", "T3.driverid", "WHERE", "T1.name", "=", "``", "Australian", "Grand", "Prix", "''", "EXCEPT", "SELECT", "T3.forename", ",", "T3.surname", "FROM", "races", "AS", "T1", "JOIN", "results", "AS", "T2", "ON", "T1.raceid", "=", "T2.raceid", "JOIN", "drivers", "AS", "T3", "ON", "T2.driverid", "=", "T3.driverid", "WHERE", "T1.name", "=", "``", "Chinese", "Grand", "Prix", "''"], "query_toks_no_value": ["select", "t3", ".", "forename", ",", "t3", ".", "surname", "from", "races", "as", "t1", "join", "results", "as", "t2", "on", "t1", ".", "raceid", "=", "t2", ".", "raceid", "join", "drivers", "as", "t3", "on", "t2", ".", "driverid", "=", "t3", ".", "driverid", "where", "t1", ".", "name", "=", "value", "except", "select", "t3", ".", "forename", ",", "t3", ".", "surname", "from", "races", "as", "t1", "join", "results", "as", "t2", "on", "t1", ".", "raceid", "=", "t2", ".", "raceid", "join", "drivers", "as", "t3", "on", "t2", ".", "driverid", "=", "t3", ".", "driverid", "where", "t1", ".", "name", "=", "value"], "question": "What are the first and last names of all drivers who participated in the Australian Grand Prix but not the Chinese Grand Prix?", "question_toks": ["What", "are", "the", "first", "and", "last", "names", "of", "all", "drivers", "who", "participated", "in", "the", "Australian", "Grand", "Prix", "but", "not", "the", "Chinese", "Grand", "Prix", "?"], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 44, false], null]], "table_units": [["table_unit", 1], ["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], "\"Chinese Grand Prix\"", null]]}, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 44, false], null]], "table_units": [["table_unit", 1], ["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], "\"Australian Grand Prix\"", null]]}}, {"db_id": "formula_1", "query": "SELECT count(*) ,  nationality FROM constructors GROUP BY nationality", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "nationality", "FROM", "constructors", "GROUP", "BY", "nationality"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "nationality", "from", "constructors", "group", "by", "nationality"], "question": "What are the numbers of constructors for different nationalities?", "question_toks": ["What", "are", "the", "numbers", "of", "constructors", "for", "different", "nationalities", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 34, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 34, false], null]]]], "union": null, "where": []}}, {"db_id": "formula_1", "query": "SELECT count(*) ,  nationality FROM constructors GROUP BY nationality", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "nationality", "FROM", "constructors", "GROUP", "BY", "nationality"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "nationality", "from", "constructors", "group", "by", "nationality"], "question": "For each nationality, how many different constructors are there?", "question_toks": ["For", "each", "nationality", ",", "how", "many", "different", "constructors", "are", "there", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 34, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 34, false], null]]]], "union": null, "where": []}}, {"db_id": "formula_1", "query": "SELECT count(*) ,  constructorid FROM constructorStandings GROUP BY constructorid", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "constructorid", "FROM", "constructorStandings", "GROUP", "BY", "constructorid"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "constructorid", "from", "constructorstandings", "group", "by", "constructorid"], "question": "What are the numbers of races for each constructor id?", "question_toks": ["What", "are", "the", "numbers", "of", "races", "for", "each", "constructor", "id", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 38, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 38, false], null]]]], "union": null, "where": []}}, {"db_id": "formula_1", "query": "SELECT count(*) ,  constructorid FROM constructorStandings GROUP BY constructorid", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "constructorid", "FROM", "constructorStandings", "GROUP", "BY", "constructorid"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "constructorid", "from", "constructorstandings", "group", "by", "constructorid"], "question": "For each constructor id, how many races are there?", "question_toks": ["For", "each", "constructor", "id", ",", "how", "many", "races", "are", "there", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 38, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 38, false], null]]]], "union": null, "where": []}}, {"db_id": "formula_1", "query": "SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  <  (SELECT max(duration) FROM pitstops WHERE raceid  =  841)", "query_toks": ["SELECT", "DISTINCT", "driverid", ",", "STOP", "FROM", "pitstops", "WHERE", "duration", "<", "(", "SELECT", "max", "(", "duration", ")", "FROM", "pitstops", "WHERE", "raceid", "=", "841", ")"], "query_toks_no_value": ["select", "distinct", "driverid", ",", "stop", "from", "pitstops", "where", "duration", "<", "(", "select", "max", "(", "duration", ")", "from", "pitstops", "where", "raceid", "=", "value", ")"], "question": "Find the distinct driver id and the stop number of all drivers that have a shorter pit stop duration than some drivers in the race with id 841.", "question_toks": ["Find", "the", "distinct", "driver", "id", "and", "the", "stop", "number", "of", "all", "drivers", "that", "have", "a", "shorter", "pit", "stop", "duration", "than", "some", "drivers", "in", "the", "race", "with", "id", "841", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 11]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 83, false], null]], [0, [0, [0, 84, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 87, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 11]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 87, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 82, false], null], 841.0, null]]}, null]]}}, {"db_id": "formula_1", "query": "SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  <  (SELECT max(duration) FROM pitstops WHERE raceid  =  841)", "query_toks": ["SELECT", "DISTINCT", "driverid", ",", "STOP", "FROM", "pitstops", "WHERE", "duration", "<", "(", "SELECT", "max", "(", "duration", ")", "FROM", "pitstops", "WHERE", "raceid", "=", "841", ")"], "query_toks_no_value": ["select", "distinct", "driverid", ",", "stop", "from", "pitstops", "where", "duration", "<", "(", "select", "max", "(", "duration", ")", "from", "pitstops", "where", "raceid", "=", "value", ")"], "question": "What is the id and stop number for each driver that has a shorter pit stop than the driver in the race with id 841?", "question_toks": ["What", "is", "the", "id", "and", "stop", "number", "for", "each", "driver", "that", "has", "a", "shorter", "pit", "stop", "than", "the", "driver", "in", "the", "race", "with", "id", "841", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 11]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 83, false], null]], [0, [0, [0, 84, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 87, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 11]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 87, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 82, false], null], 841.0, null]]}, null]]}}, {"db_id": "formula_1", "query": "SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  >  (SELECT min(duration) FROM pitstops WHERE raceid  =  841)", "query_toks": ["SELECT", "DISTINCT", "driverid", ",", "STOP", "FROM", "pitstops", "WHERE", "duration", ">", "(", "SELECT", "min", "(", "duration", ")", "FROM", "pitstops", "WHERE", "raceid", "=", "841", ")"], "query_toks_no_value": ["select", "distinct", "driverid", ",", "stop", "from", "pitstops", "where", "duration", ">", "(", "select", "min", "(", "duration", ")", "from", "pitstops", "where", "raceid", "=", "value", ")"], "question": "Find the distinct driver id of all drivers that have a longer stop duration than some drivers in the race whose id is 841?", "question_toks": ["Find", "the", "distinct", "driver", "id", "of", "all", "drivers", "that", "have", "a", "longer", "stop", "duration", "than", "some", "drivers", "in", "the", "race", "whose", "id", "is", "841", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 11]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 83, false], null]], [0, [0, [0, 84, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 87, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 11]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 87, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 82, false], null], 841.0, null]]}, null]]}}, {"db_id": "formula_1", "query": "SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  >  (SELECT min(duration) FROM pitstops WHERE raceid  =  841)", "query_toks": ["SELECT", "DISTINCT", "driverid", ",", "STOP", "FROM", "pitstops", "WHERE", "duration", ">", "(", "SELECT", "min", "(", "duration", ")", "FROM", "pitstops", "WHERE", "raceid", "=", "841", ")"], "query_toks_no_value": ["select", "distinct", "driverid", ",", "stop", "from", "pitstops", "where", "duration", ">", "(", "select", "min", "(", "duration", ")", "from", "pitstops", "where", "raceid", "=", "value", ")"], "question": "What are the different ids and stop durations of all the drivers whose stop lasted longer than the driver in the race with the id 841?", "question_toks": ["What", "are", "the", "different", "ids", "and", "stop", "durations", "of", "all", "the", "drivers", "whose", "stop", "lasted", "longer", "than", "the", "driver", "in", "the", "race", "with", "the", "id", "841", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 11]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 83, false], null]], [0, [0, [0, 84, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 87, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 11]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 87, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 82, false], null], 841.0, null]]}, null]]}}, {"db_id": "formula_1", "query": "SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  8 UNION SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5", "query_toks": ["SELECT", "T1.forename", ",", "T1.surname", ",", "T1.driverid", "FROM", "drivers", "AS", "T1", "JOIN", "pitstops", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "GROUP", "BY", "T1.driverid", "HAVING", "count", "(", "*", ")", ">", "8", "UNION", "SELECT", "T1.forename", ",", "T1.surname", ",", "T1.driverid", "FROM", "drivers", "AS", "T1", "JOIN", "results", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "GROUP", "BY", "T1.driverid", "HAVING", "count", "(", "*", ")", ">", "5"], "query_toks_no_value": ["select", "t1", ".", "forename", ",", "t1", ".", "surname", ",", "t1", ".", "driverid", "from", "drivers", "as", "t1", "join", "pitstops", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "group", "by", "t1", ".", "driverid", "having", "count", "(", "*", ")", ">", "value", "union", "select", "t1", ".", "forename", ",", "t1", ".", "surname", ",", "t1", ".", "driverid", "from", "drivers", "as", "t1", "join", "results", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "group", "by", "t1", ".", "driverid", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the drivers' first, last names and id who had more than 8 pit stops or participated in more than 5 race results?", "question_toks": ["What", "are", "the", "drivers", "'", "first", ",", "last", "names", "and", "id", "who", "had", "more", "than", "8", "pit", "stops", "or", "participated", "in", "more", "than", "5", "race", "results", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]], "table_units": [["table_unit", 2], ["table_unit", 11]]}, "groupBy": [[0, 18, false]], "having": [[false, 3, [0, [3, 0, false], null], 8.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 23, false], null]], [0, [0, [0, 18, false], null]]]], "union": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]], "table_units": [["table_unit", 2], ["table_unit", 7]]}, "groupBy": [[0, 18, false]], "having": [[false, 3, [0, [3, 0, false], null], 5.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 23, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": []}, "where": []}}, {"db_id": "formula_1", "query": "SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  8 UNION SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5", "query_toks": ["SELECT", "T1.forename", ",", "T1.surname", ",", "T1.driverid", "FROM", "drivers", "AS", "T1", "JOIN", "pitstops", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "GROUP", "BY", "T1.driverid", "HAVING", "count", "(", "*", ")", ">", "8", "UNION", "SELECT", "T1.forename", ",", "T1.surname", ",", "T1.driverid", "FROM", "drivers", "AS", "T1", "JOIN", "results", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "GROUP", "BY", "T1.driverid", "HAVING", "count", "(", "*", ")", ">", "5"], "query_toks_no_value": ["select", "t1", ".", "forename", ",", "t1", ".", "surname", ",", "t1", ".", "driverid", "from", "drivers", "as", "t1", "join", "pitstops", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "group", "by", "t1", ".", "driverid", "having", "count", "(", "*", ")", ">", "value", "union", "select", "t1", ".", "forename", ",", "t1", ".", "surname", ",", "t1", ".", "driverid", "from", "drivers", "as", "t1", "join", "results", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "group", "by", "t1", ".", "driverid", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the drivers' first names,last names, and ids for all those that had more than 8 stops or participated in more than 5 races?", "question_toks": ["What", "are", "the", "drivers", "'", "first", "names", ",", "last", "names", ",", "and", "ids", "for", "all", "those", "that", "had", "more", "than", "8", "stops", "or", "participated", "in", "more", "than", "5", "races", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]], "table_units": [["table_unit", 2], ["table_unit", 11]]}, "groupBy": [[0, 18, false]], "having": [[false, 3, [0, [3, 0, false], null], 8.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 23, false], null]], [0, [0, [0, 18, false], null]]]], "union": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]], "table_units": [["table_unit", 2], ["table_unit", 7]]}, "groupBy": [[0, 18, false]], "having": [[false, 3, [0, [3, 0, false], null], 5.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 23, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": []}, "where": []}}, {"db_id": "formula_1", "query": "SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  =  11 INTERSECT SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5", "query_toks": ["SELECT", "T1.surname", ",", "T1.driverid", "FROM", "drivers", "AS", "T1", "JOIN", "pitstops", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "GROUP", "BY", "T1.driverid", "HAVING", "count", "(", "*", ")", "=", "11", "INTERSECT", "SELECT", "T1.surname", ",", "T1.driverid", "FROM", "drivers", "AS", "T1", "JOIN", "results", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "GROUP", "BY", "T1.driverid", "HAVING", "count", "(", "*", ")", ">", "5"], "query_toks_no_value": ["select", "t1", ".", "surname", ",", "t1", ".", "driverid", "from", "drivers", "as", "t1", "join", "pitstops", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "group", "by", "t1", ".", "driverid", "having", "count", "(", "*", ")", "=", "value", "intersect", "select", "t1", ".", "surname", ",", "t1", ".", "driverid", "from", "drivers", "as", "t1", "join", "results", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "group", "by", "t1", ".", "driverid", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the drivers' last names and id who had 11 pit stops and participated in more than 5 race results?", "question_toks": ["What", "are", "the", "drivers", "'", "last", "names", "and", "id", "who", "had", "11", "pit", "stops", "and", "participated", "in", "more", "than", "5", "race", "results", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]], "table_units": [["table_unit", 2], ["table_unit", 11]]}, "groupBy": [[0, 18, false]], "having": [[false, 2, [0, [3, 0, false], null], 11.0, null]], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]], "table_units": [["table_unit", 2], ["table_unit", 7]]}, "groupBy": [[0, 18, false]], "having": [[false, 3, [0, [3, 0, false], null], 5.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": []}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": []}}, {"db_id": "formula_1", "query": "SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  =  11 INTERSECT SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5", "query_toks": ["SELECT", "T1.surname", ",", "T1.driverid", "FROM", "drivers", "AS", "T1", "JOIN", "pitstops", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "GROUP", "BY", "T1.driverid", "HAVING", "count", "(", "*", ")", "=", "11", "INTERSECT", "SELECT", "T1.surname", ",", "T1.driverid", "FROM", "drivers", "AS", "T1", "JOIN", "results", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "GROUP", "BY", "T1.driverid", "HAVING", "count", "(", "*", ")", ">", "5"], "query_toks_no_value": ["select", "t1", ".", "surname", ",", "t1", ".", "driverid", "from", "drivers", "as", "t1", "join", "pitstops", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "group", "by", "t1", ".", "driverid", "having", "count", "(", "*", ")", "=", "value", "intersect", "select", "t1", ".", "surname", ",", "t1", ".", "driverid", "from", "drivers", "as", "t1", "join", "results", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "group", "by", "t1", ".", "driverid", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the last names and ids of all drivers who had 11 pit stops and participated in more than 5 races?", "question_toks": ["What", "are", "the", "last", "names", "and", "ids", "of", "all", "drivers", "who", "had", "11", "pit", "stops", "and", "participated", "in", "more", "than", "5", "races", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]], "table_units": [["table_unit", 2], ["table_unit", 11]]}, "groupBy": [[0, 18, false]], "having": [[false, 2, [0, [3, 0, false], null], 11.0, null]], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]], "table_units": [["table_unit", 2], ["table_unit", 7]]}, "groupBy": [[0, 18, false]], "having": [[false, 3, [0, [3, 0, false], null], 5.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": []}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": []}}, {"db_id": "formula_1", "query": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.driverid", ",", "T1.surname", "FROM", "drivers", "AS", "T1", "JOIN", "results", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "JOIN", "races", "AS", "T3", "ON", "T2.raceid", "=", "T3.raceid", "WHERE", "T3.year", ">", "2010", "GROUP", "BY", "T1.driverid", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "driverid", ",", "t1", ".", "surname", "from", "drivers", "as", "t1", "join", "results", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "join", "races", "as", "t3", "on", "t2", ".", "raceid", "=", "t3", ".", "raceid", "where", "t3", ".", "year", ">", "value", "group", "by", "t1", ".", "driverid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the id and last name of the driver who participated in the most races after 2010?", "question_toks": ["What", "is", "the", "id", "and", "last", "name", "of", "the", "driver", "who", "participated", "in", "the", "most", "races", "after", "2010", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]], "table_units": [["table_unit", 2], ["table_unit", 7]]}, "groupBy": [[0, 18, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 11, false], null], 2010.0, null]]}}, {"db_id": "formula_1", "query": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.driverid", ",", "T1.surname", "FROM", "drivers", "AS", "T1", "JOIN", "results", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "JOIN", "races", "AS", "T3", "ON", "T2.raceid", "=", "T3.raceid", "WHERE", "T3.year", ">", "2010", "GROUP", "BY", "T1.driverid", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "driverid", ",", "t1", ".", "surname", "from", "drivers", "as", "t1", "join", "results", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "join", "races", "as", "t3", "on", "t2", ".", "raceid", "=", "t3", ".", "raceid", "where", "t3", ".", "year", ">", "value", "group", "by", "t1", ".", "driverid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the id and last name of the driver who participated in the most races after 2010?", "question_toks": ["What", "is", "the", "id", "and", "last", "name", "of", "the", "driver", "who", "participated", "in", "the", "most", "races", "after", "2010", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]], "table_units": [["table_unit", 2], ["table_unit", 7]]}, "groupBy": [[0, 18, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 11, false], null], 2010.0, null]]}}, {"db_id": "formula_1", "query": "SELECT circuitid ,  LOCATION FROM circuits WHERE country = \"France\" OR country = \"Belgium\"", "query_toks": ["SELECT", "circuitid", ",", "LOCATION", "FROM", "circuits", "WHERE", "country", "=", "``", "France", "''", "OR", "country", "=", "``", "Belgium", "''"], "query_toks_no_value": ["select", "circuitid", ",", "location", "from", "circuits", "where", "country", "=", "value", "or", "country", "=", "value"], "question": "Find the id and location of circuits that belong to France or Belgium?", "question_toks": ["Find", "the", "id", "and", "location", "of", "circuits", "that", "belong", "to", "France", "or", "Belgium", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"France\"", null], "or", [false, 2, [0, [0, 5, false], null], "\"Belgium\"", null]]}}, {"db_id": "formula_1", "query": "SELECT circuitid ,  LOCATION FROM circuits WHERE country = \"France\" OR country = \"Belgium\"", "query_toks": ["SELECT", "circuitid", ",", "LOCATION", "FROM", "circuits", "WHERE", "country", "=", "``", "France", "''", "OR", "country", "=", "``", "Belgium", "''"], "query_toks_no_value": ["select", "circuitid", ",", "location", "from", "circuits", "where", "country", "=", "value", "or", "country", "=", "value"], "question": "What are the ids and locations of all circuits in France or Belgium?", "question_toks": ["What", "are", "the", "ids", "and", "locations", "of", "all", "circuits", "in", "France", "or", "Belgium", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"France\"", null], "or", [false, 2, [0, [0, 5, false], null], "\"Belgium\"", null]]}}, {"db_id": "formula_1", "query": "SELECT max(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year", "query_toks": ["SELECT", "max", "(", "T2.fastestlapspeed", ")", ",", "T1.name", ",", "T1.year", "FROM", "races", "AS", "T1", "JOIN", "results", "AS", "T2", "ON", "T1.raceid", "=", "T2.raceid", "WHERE", "T1.year", ">", "2014", "GROUP", "BY", "T1.name", "ORDER", "BY", "T1.year"], "query_toks_no_value": ["select", "max", "(", "t2", ".", "fastestlapspeed", ")", ",", "t1", ".", "name", ",", "t1", ".", "year", "from", "races", "as", "t1", "join", "results", "as", "t2", "on", "t1", ".", "raceid", "=", "t2", ".", "raceid", "where", "t1", ".", "year", ">", "value", "group", "by", "t1", ".", "name", "order", "by", "t1", ".", "year"], "question": "What are the maximum fastest lap speed in races held after 2004 grouped by race name and ordered by year?", "question_toks": ["What", "are", "the", "maximum", "fastest", "lap", "speed", "in", "races", "held", "after", "2004", "grouped", "by", "race", "name", "and", "ordered", "by", "year", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 44, false], null]], "table_units": [["table_unit", 1], ["table_unit", 7]]}, "groupBy": [[0, 14, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 11, false], null]]], "select": [false, [[1, [0, [0, 59, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 11, false], null], 2014.0, null]]}}, {"db_id": "formula_1", "query": "SELECT max(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year", "query_toks": ["SELECT", "max", "(", "T2.fastestlapspeed", ")", ",", "T1.name", ",", "T1.year", "FROM", "races", "AS", "T1", "JOIN", "results", "AS", "T2", "ON", "T1.raceid", "=", "T2.raceid", "WHERE", "T1.year", ">", "2014", "GROUP", "BY", "T1.name", "ORDER", "BY", "T1.year"], "query_toks_no_value": ["select", "max", "(", "t2", ".", "fastestlapspeed", ")", ",", "t1", ".", "name", ",", "t1", ".", "year", "from", "races", "as", "t1", "join", "results", "as", "t2", "on", "t1", ".", "raceid", "=", "t2", ".", "raceid", "where", "t1", ".", "year", ">", "value", "group", "by", "t1", ".", "name", "order", "by", "t1", ".", "year"], "question": "For each race name, What is the maximum fastest lap speed for races after 2004 ordered by year?", "question_toks": ["For", "each", "race", "name", ",", "What", "is", "the", "maximum", "fastest", "lap", "speed", "for", "races", "after", "2004", "ordered", "by", "year", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 44, false], null]], "table_units": [["table_unit", 1], ["table_unit", 7]]}, "groupBy": [[0, 14, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 11, false], null]]], "select": [false, [[1, [0, [0, 59, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 11, false], null], 2014.0, null]]}}, {"db_id": "formula_1", "query": "SELECT avg(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year", "query_toks": ["SELECT", "avg", "(", "T2.fastestlapspeed", ")", ",", "T1.name", ",", "T1.year", "FROM", "races", "AS", "T1", "JOIN", "results", "AS", "T2", "ON", "T1.raceid", "=", "T2.raceid", "WHERE", "T1.year", ">", "2014", "GROUP", "BY", "T1.name", "ORDER", "BY", "T1.year"], "query_toks_no_value": ["select", "avg", "(", "t2", ".", "fastestlapspeed", ")", ",", "t1", ".", "name", ",", "t1", ".", "year", "from", "races", "as", "t1", "join", "results", "as", "t2", "on", "t1", ".", "raceid", "=", "t2", ".", "raceid", "where", "t1", ".", "year", ">", "value", "group", "by", "t1", ".", "name", "order", "by", "t1", ".", "year"], "question": "What are the average fastest lap speed in races held after 2004 grouped by race name and ordered by year?", "question_toks": ["What", "are", "the", "average", "fastest", "lap", "speed", "in", "races", "held", "after", "2004", "grouped", "by", "race", "name", "and", "ordered", "by", "year", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 44, false], null]], "table_units": [["table_unit", 1], ["table_unit", 7]]}, "groupBy": [[0, 14, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 11, false], null]]], "select": [false, [[5, [0, [0, 59, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 11, false], null], 2014.0, null]]}}, {"db_id": "formula_1", "query": "SELECT avg(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year", "query_toks": ["SELECT", "avg", "(", "T2.fastestlapspeed", ")", ",", "T1.name", ",", "T1.year", "FROM", "races", "AS", "T1", "JOIN", "results", "AS", "T2", "ON", "T1.raceid", "=", "T2.raceid", "WHERE", "T1.year", ">", "2014", "GROUP", "BY", "T1.name", "ORDER", "BY", "T1.year"], "query_toks_no_value": ["select", "avg", "(", "t2", ".", "fastestlapspeed", ")", ",", "t1", ".", "name", ",", "t1", ".", "year", "from", "races", "as", "t1", "join", "results", "as", "t2", "on", "t1", ".", "raceid", "=", "t2", ".", "raceid", "where", "t1", ".", "year", ">", "value", "group", "by", "t1", ".", "name", "order", "by", "t1", ".", "year"], "question": "What is the average fastest lap speed for races held after 2004, for each race, ordered by year?", "question_toks": ["What", "is", "the", "average", "fastest", "lap", "speed", "for", "races", "held", "after", "2004", ",", "for", "each", "race", ",", "ordered", "by", "year", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 44, false], null]], "table_units": [["table_unit", 1], ["table_unit", 7]]}, "groupBy": [[0, 14, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 11, false], null]]], "select": [false, [[5, [0, [0, 59, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 11, false], null], 2014.0, null]]}}, {"db_id": "formula_1", "query": "SELECT T1.driverid ,  T1.forename ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.driverid", ",", "T1.forename", ",", "count", "(", "*", ")", "FROM", "drivers", "AS", "T1", "JOIN", "results", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "JOIN", "races", "AS", "T3", "ON", "T2.raceid", "=", "T3.raceid", "GROUP", "BY", "T1.driverid", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "driverid", ",", "t1", ".", "forename", ",", "count", "(", "*", ")", "from", "drivers", "as", "t1", "join", "results", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "join", "races", "as", "t3", "on", "t2", ".", "raceid", "=", "t3", ".", "raceid", "group", "by", "t1", ".", "driverid", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Find the id, forename and number of races of all drivers who have at least participated in two races?", "question_toks": ["Find", "the", "id", ",", "forename", "and", "number", "of", "races", "of", "all", "drivers", "who", "have", "at", "least", "participated", "in", "two", "races", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]], "table_units": [["table_unit", 2], ["table_unit", 7]]}, "groupBy": [[0, 18, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 22, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "formula_1", "query": "SELECT T1.driverid ,  T1.forename ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.driverid", ",", "T1.forename", ",", "count", "(", "*", ")", "FROM", "drivers", "AS", "T1", "JOIN", "results", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "JOIN", "races", "AS", "T3", "ON", "T2.raceid", "=", "T3.raceid", "GROUP", "BY", "T1.driverid", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "driverid", ",", "t1", ".", "forename", ",", "count", "(", "*", ")", "from", "drivers", "as", "t1", "join", "results", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "join", "races", "as", "t3", "on", "t2", ".", "raceid", "=", "t3", ".", "raceid", "group", "by", "t1", ".", "driverid", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What is the id, forename, and number of races for all drivers that have participated in at least 2 races?", "question_toks": ["What", "is", "the", "id", ",", "forename", ",", "and", "number", "of", "races", "for", "all", "drivers", "that", "have", "participated", "in", "at", "least", "2", "races", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]], "table_units": [["table_unit", 2], ["table_unit", 7]]}, "groupBy": [[0, 18, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 22, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "formula_1", "query": "SELECT T1.driverid ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  <=  30", "query_toks": ["SELECT", "T1.driverid", ",", "count", "(", "*", ")", "FROM", "drivers", "AS", "T1", "JOIN", "results", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "JOIN", "races", "AS", "T3", "ON", "T2.raceid", "=", "T3.raceid", "GROUP", "BY", "T1.driverid", "HAVING", "count", "(", "*", ")", "<", "=", "30"], "query_toks_no_value": ["select", "t1", ".", "driverid", ",", "count", "(", "*", ")", "from", "drivers", "as", "t1", "join", "results", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "join", "races", "as", "t3", "on", "t2", ".", "raceid", "=", "t3", ".", "raceid", "group", "by", "t1", ".", "driverid", "having", "count", "(", "*", ")", "<", "=", "value"], "question": "Find the driver id and number of races of all drivers who have at most participated in 30 races?", "question_toks": ["Find", "the", "driver", "id", "and", "number", "of", "races", "of", "all", "drivers", "who", "have", "at", "most", "participated", "in", "30", "races", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]], "table_units": [["table_unit", 2], ["table_unit", 7]]}, "groupBy": [[0, 18, false]], "having": [[false, 6, [0, [3, 0, false], null], 30.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 18, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "formula_1", "query": "SELECT T1.driverid ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  <=  30", "query_toks": ["SELECT", "T1.driverid", ",", "count", "(", "*", ")", "FROM", "drivers", "AS", "T1", "JOIN", "results", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "JOIN", "races", "AS", "T3", "ON", "T2.raceid", "=", "T3.raceid", "GROUP", "BY", "T1.driverid", "HAVING", "count", "(", "*", ")", "<", "=", "30"], "query_toks_no_value": ["select", "t1", ".", "driverid", ",", "count", "(", "*", ")", "from", "drivers", "as", "t1", "join", "results", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "join", "races", "as", "t3", "on", "t2", ".", "raceid", "=", "t3", ".", "raceid", "group", "by", "t1", ".", "driverid", "having", "count", "(", "*", ")", "<", "=", "value"], "question": "For each id of a driver who participated in at most 30 races, how many races did they participate in?", "question_toks": ["For", "each", "id", "of", "a", "driver", "who", "participated", "in", "at", "most", "30", "races", ",", "how", "many", "races", "did", "they", "participate", "in", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]], "table_units": [["table_unit", 2], ["table_unit", 7]]}, "groupBy": [[0, 18, false]], "having": [[false, 6, [0, [3, 0, false], null], 30.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 18, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "formula_1", "query": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.driverid", ",", "T1.surname", "FROM", "drivers", "AS", "T1", "JOIN", "results", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "JOIN", "races", "AS", "T3", "ON", "T2.raceid", "=", "T3.raceid", "GROUP", "BY", "T1.driverid", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "driverid", ",", "t1", ".", "surname", "from", "drivers", "as", "t1", "join", "results", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "join", "races", "as", "t3", "on", "t2", ".", "raceid", "=", "t3", ".", "raceid", "group", "by", "t1", ".", "driverid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the id and surname of the driver who participated the most number of races?", "question_toks": ["Find", "the", "id", "and", "surname", "of", "the", "driver", "who", "participated", "the", "most", "number", "of", "races", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]], "table_units": [["table_unit", 2], ["table_unit", 7]]}, "groupBy": [[0, 18, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": []}}, {"db_id": "formula_1", "query": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.driverid", ",", "T1.surname", "FROM", "drivers", "AS", "T1", "JOIN", "results", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "JOIN", "races", "AS", "T3", "ON", "T2.raceid", "=", "T3.raceid", "GROUP", "BY", "T1.driverid", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "driverid", ",", "t1", ".", "surname", "from", "drivers", "as", "t1", "join", "results", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "join", "races", "as", "t3", "on", "t2", ".", "raceid", "=", "t3", ".", "raceid", "group", "by", "t1", ".", "driverid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the ids and last names of all drivers who participated in the most races?", "question_toks": ["What", "are", "the", "ids", "and", "last", "names", "of", "all", "drivers", "who", "participated", "in", "the", "most", "races", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]], "table_units": [["table_unit", 2], ["table_unit", 7]]}, "groupBy": [[0, 18, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": []}}, {"db_id": "machine_repair", "query": "SELECT Team ,  Starting_Year FROM technician", "query_toks": ["SELECT", "Team", ",", "Starting_Year", "FROM", "technician"], "query_toks_no_value": ["select", "team", ",", "starting_year", "from", "technician"], "question": "What are the team and starting year of technicians?", "question_toks": ["What", "are", "the", "team", "and", "starting", "year", "of", "technicians", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": []}}, {"db_id": "machine_repair", "query": "SELECT Team ,  Starting_Year FROM technician", "query_toks": ["SELECT", "Team", ",", "Starting_Year", "FROM", "technician"], "query_toks_no_value": ["select", "team", ",", "starting_year", "from", "technician"], "question": "What is the team and starting year for each technician?", "question_toks": ["What", "is", "the", "team", "and", "starting", "year", "for", "each", "technician", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": []}}, {"db_id": "machine_repair", "query": "SELECT Team ,  COUNT(*) FROM technician GROUP BY Team", "query_toks": ["SELECT", "Team", ",", "COUNT", "(", "*", ")", "FROM", "technician", "GROUP", "BY", "Team"], "query_toks_no_value": ["select", "team", ",", "count", "(", "*", ")", "from", "technician", "group", "by", "team"], "question": "Show different teams of technicians and the number of technicians in each team.", "question_toks": ["Show", "different", "teams", "of", "technicians", "and", "the", "number", "of", "technicians", "in", "each", "team", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 14, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "machine_repair", "query": "SELECT Team ,  COUNT(*) FROM technician GROUP BY Team", "query_toks": ["SELECT", "Team", ",", "COUNT", "(", "*", ")", "FROM", "technician", "GROUP", "BY", "Team"], "query_toks_no_value": ["select", "team", ",", "count", "(", "*", ")", "from", "technician", "group", "by", "team"], "question": "For each team, how many technicians are there?", "question_toks": ["For", "each", "team", ",", "how", "many", "technicians", "are", "there", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 14, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "machine_repair", "query": "SELECT T3.Name ,  T2.Machine_series FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID", "query_toks": ["SELECT", "T3.Name", ",", "T2.Machine_series", "FROM", "repair_assignment", "AS", "T1", "JOIN", "machine", "AS", "T2", "ON", "T1.machine_id", "=", "T2.machine_id", "JOIN", "technician", "AS", "T3", "ON", "T1.technician_ID", "=", "T3.technician_ID"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "machine_series", "from", "repair_assignment", "as", "t1", "join", "machine", "as", "t2", "on", "t1", ".", "machine_id", "=", "t2", ".", "machine_id", "join", "technician", "as", "t3", "on", "t1", ".", "technician_id", "=", "t3", ".", "technician_id"], "question": "Show names of technicians and series of machines they are assigned to repair.", "question_toks": ["Show", "names", "of", "technicians", "and", "series", "of", "machines", "they", "are", "assigned", "to", "repair", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 19, false], null], [0, 5, false], null]], "table_units": [["table_unit", 3], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "machine_repair", "query": "SELECT T3.Name ,  T2.Machine_series FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID", "query_toks": ["SELECT", "T3.Name", ",", "T2.Machine_series", "FROM", "repair_assignment", "AS", "T1", "JOIN", "machine", "AS", "T2", "ON", "T1.machine_id", "=", "T2.machine_id", "JOIN", "technician", "AS", "T3", "ON", "T1.technician_ID", "=", "T3.technician_ID"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "machine_series", "from", "repair_assignment", "as", "t1", "join", "machine", "as", "t2", "on", "t1", ".", "machine_id", "=", "t2", ".", "machine_id", "join", "technician", "as", "t3", "on", "t1", ".", "technician_id", "=", "t3", ".", "technician_id"], "question": "What are the names of technicians and the machine series that they repair?", "question_toks": ["What", "are", "the", "names", "of", "technicians", "and", "the", "machine", "series", "that", "they", "repair", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 19, false], null], [0, 5, false], null]], "table_units": [["table_unit", 3], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "machine_repair", "query": "SELECT T2.Name ,  COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID  =  T2.technician_ID GROUP BY T2.Name", "query_toks": ["SELECT", "T2.Name", ",", "COUNT", "(", "*", ")", "FROM", "repair_assignment", "AS", "T1", "JOIN", "technician", "AS", "T2", "ON", "T1.technician_ID", "=", "T2.technician_ID", "GROUP", "BY", "T2.Name"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "repair_assignment", "as", "t1", "join", "technician", "as", "t2", "on", "t1", ".", "technician_id", "=", "t2", ".", "technician_id", "group", "by", "t2", ".", "name"], "question": "Show names of technicians and the number of machines they are assigned to repair.", "question_toks": ["Show", "names", "of", "technicians", "and", "the", "number", "of", "machines", "they", "are", "assigned", "to", "repair", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 17, false], null], [0, 12, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "machine_repair", "query": "SELECT T2.Name ,  COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID  =  T2.technician_ID GROUP BY T2.Name", "query_toks": ["SELECT", "T2.Name", ",", "COUNT", "(", "*", ")", "FROM", "repair_assignment", "AS", "T1", "JOIN", "technician", "AS", "T2", "ON", "T1.technician_ID", "=", "T2.technician_ID", "GROUP", "BY", "T2.Name"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "repair_assignment", "as", "t1", "join", "technician", "as", "t2", "on", "t1", ".", "technician_id", "=", "t2", ".", "technician_id", "group", "by", "t2", ".", "name"], "question": "What are the names of the technicians  and how many machines are they assigned to repair?", "question_toks": ["What", "are", "the", "names", "of", "the", "technicians", "and", "how", "many", "machines", "are", "they", "assigned", "to", "repair", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 17, false], null], [0, 12, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "entrepreneur", "query": "SELECT Company ,  Investor FROM entrepreneur", "query_toks": ["SELECT", "Company", ",", "Investor", "FROM", "entrepreneur"], "query_toks_no_value": ["select", "company", ",", "investor", "from", "entrepreneur"], "question": "List the companies and the investors of entrepreneurs.", "question_toks": ["List", "the", "companies", "and", "the", "investors", "of", "entrepreneurs", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "entrepreneur", "query": "SELECT Company ,  Investor FROM entrepreneur", "query_toks": ["SELECT", "Company", ",", "Investor", "FROM", "entrepreneur"], "query_toks_no_value": ["select", "company", ",", "investor", "from", "entrepreneur"], "question": "What are the companies and investors that correspond to each entrepreneur?", "question_toks": ["What", "are", "the", "companies", "and", "investors", "that", "correspond", "to", "each", "entrepreneur", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "entrepreneur", "query": "SELECT Investor ,  COUNT(*) FROM entrepreneur GROUP BY Investor", "query_toks": ["SELECT", "Investor", ",", "COUNT", "(", "*", ")", "FROM", "entrepreneur", "GROUP", "BY", "Investor"], "query_toks_no_value": ["select", "investor", ",", "count", "(", "*", ")", "from", "entrepreneur", "group", "by", "investor"], "question": "What are the investors of entrepreneurs and the corresponding number of entrepreneurs invested by each investor?", "question_toks": ["What", "are", "the", "investors", "of", "entrepreneurs", "and", "the", "corresponding", "number", "of", "entrepreneurs", "invested", "by", "each", "investor", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "entrepreneur", "query": "SELECT Investor ,  COUNT(*) FROM entrepreneur GROUP BY Investor", "query_toks": ["SELECT", "Investor", ",", "COUNT", "(", "*", ")", "FROM", "entrepreneur", "GROUP", "BY", "Investor"], "query_toks_no_value": ["select", "investor", ",", "count", "(", "*", ")", "from", "entrepreneur", "group", "by", "investor"], "question": "How many entrepreneurs correspond to each investor?", "question_toks": ["How", "many", "entrepreneurs", "correspond", "to", "each", "investor", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "entrepreneur", "query": "SELECT T2.Name ,  T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested", "query_toks": ["SELECT", "T2.Name", ",", "T1.Company", "FROM", "entrepreneur", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "ORDER", "BY", "T1.Money_Requested"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t1", ".", "company", "from", "entrepreneur", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "order", "by", "t1", ".", "money_requested"], "question": "List the names of entrepreneurs and their companies in descending order of money requested?", "question_toks": ["List", "the", "names", "of", "entrepreneurs", "and", "their", "companies", "in", "descending", "order", "of", "money", "requested", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 2, false], null], [0, 6, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 4, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "entrepreneur", "query": "SELECT T2.Name ,  T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested", "query_toks": ["SELECT", "T2.Name", ",", "T1.Company", "FROM", "entrepreneur", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "ORDER", "BY", "T1.Money_Requested"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t1", ".", "company", "from", "entrepreneur", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "order", "by", "t1", ".", "money_requested"], "question": "What are the names of entrepreneurs and their corresponding investors, ordered descending by the amount of money requested?", "question_toks": ["What", "are", "the", "names", "of", "entrepreneurs", "and", "their", "corresponding", "investors", ",", "ordered", "descending", "by", "the", "amount", "of", "money", "requested", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 2, false], null], [0, 6, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 4, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "perpetrator", "query": "SELECT Country ,  COUNT(*) FROM perpetrator GROUP BY Country", "query_toks": ["SELECT", "Country", ",", "COUNT", "(", "*", ")", "FROM", "perpetrator", "GROUP", "BY", "Country"], "query_toks_no_value": ["select", "country", ",", "count", "(", "*", ")", "from", "perpetrator", "group", "by", "country"], "question": "What are the countries of perpetrators? Show each country and the corresponding number of perpetrators there.", "question_toks": ["What", "are", "the", "countries", "of", "perpetrators", "?", "Show", "each", "country", "and", "the", "corresponding", "number", "of", "perpetrators", "there", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "perpetrator", "query": "SELECT Country ,  COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Country", ",", "COUNT", "(", "*", ")", "FROM", "perpetrator", "GROUP", "BY", "Country", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "country", ",", "count", "(", "*", ")", "from", "perpetrator", "group", "by", "country", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the country that has the most perpetrators?", "question_toks": ["What", "is", "the", "country", "that", "has", "the", "most", "perpetrators", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "perpetrator", "query": "SELECT Country ,  COUNT(*) FROM perpetrator GROUP BY Country HAVING COUNT(*)  >=  2", "query_toks": ["SELECT", "Country", ",", "COUNT", "(", "*", ")", "FROM", "perpetrator", "GROUP", "BY", "Country", "HAVING", "COUNT", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "country", ",", "count", "(", "*", ")", "from", "perpetrator", "group", "by", "country", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the countries that have at least two perpetrators?", "question_toks": ["What", "are", "the", "countries", "that", "have", "at", "least", "two", "perpetrators", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "csu_1", "query": "SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T2.year  >=  1998 AND T2.year  <=  2002 GROUP BY T1.campus", "query_toks": ["SELECT", "T1.campus", ",", "sum", "(", "T2.degrees", ")", "FROM", "campuses", "AS", "T1", "JOIN", "degrees", "AS", "T2", "ON", "T1.id", "=", "T2.campus", "WHERE", "T2.year", ">", "=", "1998", "AND", "T2.year", "<", "=", "2002", "GROUP", "BY", "T1.campus"], "query_toks_no_value": ["select", "t1", ".", "campus", ",", "sum", "(", "t2", ".", "degrees", ")", "from", "campuses", "as", "t1", "join", "degrees", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "campus", "where", "t2", ".", "year", ">", "=", "value", "and", "t2", ".", "year", "<", "=", "value", "group", "by", "t1", ".", "campus"], "question": "report the total number of degrees granted between 1998 and 2002.", "question_toks": ["report", "the", "total", "number", "of", "degrees", "granted", "between", "1998", "and", "2002", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [4, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 5, [0, [0, 9, false], null], 1998.0, null], "and", [false, 6, [0, [0, 9, false], null], 2002.0, null]]}}, {"db_id": "csu_1", "query": "SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T2.year  >=  1998 AND T2.year  <=  2002 GROUP BY T1.campus", "query_toks": ["SELECT", "T1.campus", ",", "sum", "(", "T2.degrees", ")", "FROM", "campuses", "AS", "T1", "JOIN", "degrees", "AS", "T2", "ON", "T1.id", "=", "T2.campus", "WHERE", "T2.year", ">", "=", "1998", "AND", "T2.year", "<", "=", "2002", "GROUP", "BY", "T1.campus"], "query_toks_no_value": ["select", "t1", ".", "campus", ",", "sum", "(", "t2", ".", "degrees", ")", "from", "campuses", "as", "t1", "join", "degrees", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "campus", "where", "t2", ".", "year", ">", "=", "value", "and", "t2", ".", "year", "<", "=", "value", "group", "by", "t1", ".", "campus"], "question": "how many degrees were conferred between 1998 and 2002?", "question_toks": ["how", "many", "degrees", "were", "conferred", "between", "1998", "and", "2002", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [4, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 5, [0, [0, 9, false], null], 1998.0, null], "and", [false, 6, [0, [0, 9, false], null], 2002.0, null]]}}, {"db_id": "csu_1", "query": "SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T1.county  =  \"Orange\" AND T2.year  >=  2000 GROUP BY T1.campus", "query_toks": ["SELECT", "T1.campus", ",", "sum", "(", "T2.degrees", ")", "FROM", "campuses", "AS", "T1", "JOIN", "degrees", "AS", "T2", "ON", "T1.id", "=", "T2.campus", "WHERE", "T1.county", "=", "``", "Orange", "''", "AND", "T2.year", ">", "=", "2000", "GROUP", "BY", "T1.campus"], "query_toks_no_value": ["select", "t1", ".", "campus", ",", "sum", "(", "t2", ".", "degrees", ")", "from", "campuses", "as", "t1", "join", "degrees", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "campus", "where", "t1", ".", "county", "=", "value", "and", "t2", ".", "year", ">", "=", "value", "group", "by", "t1", ".", "campus"], "question": "For each Orange county campus, report the number of degrees granted after 2000.", "question_toks": ["For", "each", "Orange", "county", "campus", ",", "report", "the", "number", "of", "degrees", "granted", "after", "2000", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [4, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"Orange\"", null], "and", [false, 5, [0, [0, 9, false], null], 2000.0, null]]}}, {"db_id": "csu_1", "query": "SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T1.county  =  \"Orange\" AND T2.year  >=  2000 GROUP BY T1.campus", "query_toks": ["SELECT", "T1.campus", ",", "sum", "(", "T2.degrees", ")", "FROM", "campuses", "AS", "T1", "JOIN", "degrees", "AS", "T2", "ON", "T1.id", "=", "T2.campus", "WHERE", "T1.county", "=", "``", "Orange", "''", "AND", "T2.year", ">", "=", "2000", "GROUP", "BY", "T1.campus"], "query_toks_no_value": ["select", "t1", ".", "campus", ",", "sum", "(", "t2", ".", "degrees", ")", "from", "campuses", "as", "t1", "join", "degrees", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "campus", "where", "t1", ".", "county", "=", "value", "and", "t2", ".", "year", ">", "=", "value", "group", "by", "t1", ".", "campus"], "question": "What is the total number of degrees granted after 2000 for each Orange county campus?", "question_toks": ["What", "is", "the", "total", "number", "of", "degrees", "granted", "after", "2000", "for", "each", "Orange", "county", "campus", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [4, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"Orange\"", null], "and", [false, 5, [0, [0, 9, false], null], 2000.0, null]]}}, {"db_id": "candidate_poll", "query": "SELECT Support_rate ,  Consider_rate ,  Oppose_rate FROM candidate ORDER BY unsure_rate", "query_toks": ["SELECT", "Support_rate", ",", "Consider_rate", ",", "Oppose_rate", "FROM", "candidate", "ORDER", "BY", "unsure_rate"], "query_toks_no_value": ["select", "support_rate", ",", "consider_rate", ",", "oppose_rate", "from", "candidate", "order", "by", "unsure_rate"], "question": "Please list support, consider, and oppose rates for each candidate in ascending order by unsure rate.", "question_toks": ["Please", "list", "support", ",", "consider", ",", "and", "oppose", "rates", "for", "each", "candidate", "in", "ascending", "order", "by", "unsure", "rate", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 8, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "candidate_poll", "query": "SELECT Support_rate ,  Consider_rate ,  Oppose_rate FROM candidate ORDER BY unsure_rate", "query_toks": ["SELECT", "Support_rate", ",", "Consider_rate", ",", "Oppose_rate", "FROM", "candidate", "ORDER", "BY", "unsure_rate"], "query_toks_no_value": ["select", "support_rate", ",", "consider_rate", ",", "oppose_rate", "from", "candidate", "order", "by", "unsure_rate"], "question": "What are the support, consider, and oppose rates of each candidate, ordered ascending by their unsure rate?", "question_toks": ["What", "are", "the", "support", ",", "consider", ",", "and", "oppose", "rates", "of", "each", "candidate", ",", "ordered", "ascending", "by", "their", "unsure", "rate", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 8, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "candidate_poll", "query": "SELECT avg(height) ,  avg(weight) FROM people WHERE sex  =  'M'", "query_toks": ["SELECT", "avg", "(", "height", ")", ",", "avg", "(", "weight", ")", "FROM", "people", "WHERE", "sex", "=", "'M", "'"], "query_toks_no_value": ["select", "avg", "(", "height", ")", ",", "avg", "(", "weight", ")", "from", "people", "where", "sex", "=", "value"], "question": "Find the average height and weight for all males (sex is M).", "question_toks": ["Find", "the", "average", "height", "and", "weight", "for", "all", "males", "(", "sex", "is", "M", ")", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 13, false], null]], [5, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"M\"", null]]}}, {"db_id": "candidate_poll", "query": "SELECT avg(height) ,  avg(weight) FROM people WHERE sex  =  'M'", "query_toks": ["SELECT", "avg", "(", "height", ")", ",", "avg", "(", "weight", ")", "FROM", "people", "WHERE", "sex", "=", "'M", "'"], "query_toks_no_value": ["select", "avg", "(", "height", ")", ",", "avg", "(", "weight", ")", "from", "people", "where", "sex", "=", "value"], "question": "What are the average height and weight across males (sex is M)?", "question_toks": ["What", "are", "the", "average", "height", "and", "weight", "across", "males", "(", "sex", "is", "M", ")", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 13, false], null]], [5, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"M\"", null]]}}, {"db_id": "candidate_poll", "query": "SELECT avg(weight) ,  min(weight) ,  sex FROM people GROUP BY sex", "query_toks": ["SELECT", "avg", "(", "weight", ")", ",", "min", "(", "weight", ")", ",", "sex", "FROM", "people", "GROUP", "BY", "sex"], "query_toks_no_value": ["select", "avg", "(", "weight", ")", ",", "min", "(", "weight", ")", ",", "sex", "from", "people", "group", "by", "sex"], "question": "Find the average and minimum weight for each gender.", "question_toks": ["Find", "the", "average", "and", "minimum", "weight", "for", "each", "gender", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 14, false], null]], [2, [0, [0, 14, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "candidate_poll", "query": "SELECT avg(weight) ,  min(weight) ,  sex FROM people GROUP BY sex", "query_toks": ["SELECT", "avg", "(", "weight", ")", ",", "min", "(", "weight", ")", ",", "sex", "FROM", "people", "GROUP", "BY", "sex"], "query_toks_no_value": ["select", "avg", "(", "weight", ")", ",", "min", "(", "weight", ")", ",", "sex", "from", "people", "group", "by", "sex"], "question": "What are the average and minimum weights for people of each sex?", "question_toks": ["What", "are", "the", "average", "and", "minimum", "weights", "for", "people", "of", "each", "sex", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 14, false], null]], [2, [0, [0, 14, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "candidate_poll", "query": "SELECT t1.name ,  t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id ORDER BY t2.support_rate DESC LIMIT 1", "query_toks": ["SELECT", "t1.name", ",", "t1.sex", "FROM", "people", "AS", "t1", "JOIN", "candidate", "AS", "t2", "ON", "t1.people_id", "=", "t2.people_id", "ORDER", "BY", "t2.support_rate", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "sex", "from", "people", "as", "t1", "join", "candidate", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "order", "by", "t2", ".", "support_rate", "desc", "limit", "value"], "question": "Find the name and gender of the candidate who got the highest support rate.", "question_toks": ["Find", "the", "name", "and", "gender", "of", "the", "candidate", "who", "got", "the", "highest", "support", "rate", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 2, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "candidate_poll", "query": "SELECT t1.name ,  t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id ORDER BY t2.support_rate DESC LIMIT 1", "query_toks": ["SELECT", "t1.name", ",", "t1.sex", "FROM", "people", "AS", "t1", "JOIN", "candidate", "AS", "t2", "ON", "t1.people_id", "=", "t2.people_id", "ORDER", "BY", "t2.support_rate", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "sex", "from", "people", "as", "t1", "join", "candidate", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "order", "by", "t2", ".", "support_rate", "desc", "limit", "value"], "question": "What is the name and sex of the candidate with the highest support rate?", "question_toks": ["What", "is", "the", "name", "and", "sex", "of", "the", "candidate", "with", "the", "highest", "support", "rate", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 2, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "candidate_poll", "query": "SELECT t1.name ,  t1.sex ,  min(oppose_rate) FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex", "query_toks": ["SELECT", "t1.name", ",", "t1.sex", ",", "min", "(", "oppose_rate", ")", "FROM", "people", "AS", "t1", "JOIN", "candidate", "AS", "t2", "ON", "t1.people_id", "=", "t2.people_id", "GROUP", "BY", "t1.sex"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "sex", ",", "min", "(", "oppose_rate", ")", "from", "people", "as", "t1", "join", "candidate", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "group", "by", "t1", ".", "sex"], "question": "Find the name of the candidates whose oppose percentage is the lowest for each sex.", "question_toks": ["Find", "the", "name", "of", "the", "candidates", "whose", "oppose", "percentage", "is", "the", "lowest", "for", "each", "sex", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 2, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]], [2, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "candidate_poll", "query": "SELECT t1.name ,  t1.sex ,  min(oppose_rate) FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex", "query_toks": ["SELECT", "t1.name", ",", "t1.sex", ",", "min", "(", "oppose_rate", ")", "FROM", "people", "AS", "t1", "JOIN", "candidate", "AS", "t2", "ON", "t1.people_id", "=", "t2.people_id", "GROUP", "BY", "t1.sex"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "sex", ",", "min", "(", "oppose_rate", ")", "from", "people", "as", "t1", "join", "candidate", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "group", "by", "t1", ".", "sex"], "question": "For each sex, what is the name and sex of the candidate with the oppose rate for their sex?", "question_toks": ["For", "each", "sex", ",", "what", "is", "the", "name", "and", "sex", "of", "the", "candidate", "with", "the", "oppose", "rate", "for", "their", "sex", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 2, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]], [2, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "candidate_poll", "query": "SELECT count(*) ,  sex FROM people WHERE weight  >  85 GROUP BY sex", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "sex", "FROM", "people", "WHERE", "weight", ">", "85", "GROUP", "BY", "sex"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "sex", "from", "people", "where", "weight", ">", "value", "group", "by", "sex"], "question": "how many people are there whose weight is higher than 85 for each gender?", "question_toks": ["how", "many", "people", "are", "there", "whose", "weight", "is", "higher", "than", "85", "for", "each", "gender", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 14, false], null], 85.0, null]]}}, {"db_id": "candidate_poll", "query": "SELECT count(*) ,  sex FROM people WHERE weight  >  85 GROUP BY sex", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "sex", "FROM", "people", "WHERE", "weight", ">", "85", "GROUP", "BY", "sex"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "sex", "from", "people", "where", "weight", ">", "value", "group", "by", "sex"], "question": "Count the number of people of each sex who have a weight higher than 85.", "question_toks": ["Count", "the", "number", "of", "people", "of", "each", "sex", "who", "have", "a", "weight", "higher", "than", "85", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 14, false], null], 85.0, null]]}}, {"db_id": "candidate_poll", "query": "SELECT max(support_rate) ,  min(consider_rate) ,  min(oppose_rate) FROM candidate", "query_toks": ["SELECT", "max", "(", "support_rate", ")", ",", "min", "(", "consider_rate", ")", ",", "min", "(", "oppose_rate", ")", "FROM", "candidate"], "query_toks_no_value": ["select", "max", "(", "support_rate", ")", ",", "min", "(", "consider_rate", ")", ",", "min", "(", "oppose_rate", ")", "from", "candidate"], "question": "find the highest support percentage, lowest consider rate and oppose rate of all candidates.", "question_toks": ["find", "the", "highest", "support", "percentage", ",", "lowest", "consider", "rate", "and", "oppose", "rate", "of", "all", "candidates", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 5, false], null]], [2, [0, [0, 6, false], null]], [2, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "candidate_poll", "query": "SELECT max(support_rate) ,  min(consider_rate) ,  min(oppose_rate) FROM candidate", "query_toks": ["SELECT", "max", "(", "support_rate", ")", ",", "min", "(", "consider_rate", ")", ",", "min", "(", "oppose_rate", ")", "FROM", "candidate"], "query_toks_no_value": ["select", "max", "(", "support_rate", ")", ",", "min", "(", "consider_rate", ")", ",", "min", "(", "oppose_rate", ")", "from", "candidate"], "question": "Return the maximum support rate, minimum consider rate, and minimum oppose rate across all candidates?", "question_toks": ["Return", "the", "maximum", "support", "rate", ",", "minimum", "consider", "rate", ",", "and", "minimum", "oppose", "rate", "across", "all", "candidates", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 5, false], null]], [2, [0, [0, 6, false], null]], [2, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "movie_1", "query": "SELECT max(stars) ,  min(stars) FROM Rating", "query_toks": ["SELECT", "max", "(", "stars", ")", ",", "min", "(", "stars", ")", "FROM", "Rating"], "query_toks_no_value": ["select", "max", "(", "stars", ")", ",", "min", "(", "stars", ")", "from", "rating"], "question": "What is the lowest and highest rating star?", "question_toks": ["What", "is", "the", "lowest", "and", "highest", "rating", "star", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 9, false], null]], [2, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "movie_1", "query": "SELECT max(stars) ,  min(stars) FROM Rating", "query_toks": ["SELECT", "max", "(", "stars", ")", ",", "min", "(", "stars", ")", "FROM", "Rating"], "query_toks_no_value": ["select", "max", "(", "stars", ")", ",", "min", "(", "stars", ")", "from", "rating"], "question": "What is the maximum and mininum number of stars a rating can receive?", "question_toks": ["What", "is", "the", "maximum", "and", "mininum", "number", "of", "stars", "a", "rating", "can", "receive", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 9, false], null]], [2, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "movie_1", "query": "SELECT T1.director ,  T1.title FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  =  5", "query_toks": ["SELECT", "T1.director", ",", "T1.title", "FROM", "Movie", "AS", "T1", "JOIN", "Rating", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "WHERE", "T2.stars", "=", "5"], "query_toks_no_value": ["select", "t1", ".", "director", ",", "t1", ".", "title", "from", "movie", "as", "t1", "join", "rating", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "where", "t2", ".", "stars", "=", "value"], "question": "What are the names of directors who directed movies with 5 star rating? Also return the title of these movies.", "question_toks": ["What", "are", "the", "names", "of", "directors", "who", "directed", "movies", "with", "5", "star", "rating", "?", "Also", "return", "the", "title", "of", "these", "movies", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], 5.0, null]]}}, {"db_id": "movie_1", "query": "SELECT T1.director ,  T1.title FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  =  5", "query_toks": ["SELECT", "T1.director", ",", "T1.title", "FROM", "Movie", "AS", "T1", "JOIN", "Rating", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "WHERE", "T2.stars", "=", "5"], "query_toks_no_value": ["select", "t1", ".", "director", ",", "t1", ".", "title", "from", "movie", "as", "t1", "join", "rating", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "where", "t2", ".", "stars", "=", "value"], "question": "What are the names of the directors who created a movie with a 5 star rating, and what was the name of those movies?", "question_toks": ["What", "are", "the", "names", "of", "the", "directors", "who", "created", "a", "movie", "with", "a", "5", "star", "rating", ",", "and", "what", "was", "the", "name", "of", "those", "movies", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], 5.0, null]]}}, {"db_id": "movie_1", "query": "SELECT T2.name ,  avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T2.name", "query_toks": ["SELECT", "T2.name", ",", "avg", "(", "T1.stars", ")", "FROM", "Rating", "AS", "T1", "JOIN", "Reviewer", "AS", "T2", "ON", "T1.rID", "=", "T2.rID", "GROUP", "BY", "T2.name"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "avg", "(", "t1", ".", "stars", ")", "from", "rating", "as", "t1", "join", "reviewer", "as", "t2", "on", "t1", ".", "rid", "=", "t2", ".", "rid", "group", "by", "t2", ".", "name"], "question": "What is the average rating star for each reviewer?", "question_toks": ["What", "is", "the", "average", "rating", "star", "for", "each", "reviewer", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 5, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [5, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "movie_1", "query": "SELECT T2.name ,  avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T2.name", "query_toks": ["SELECT", "T2.name", ",", "avg", "(", "T1.stars", ")", "FROM", "Rating", "AS", "T1", "JOIN", "Reviewer", "AS", "T2", "ON", "T1.rID", "=", "T2.rID", "GROUP", "BY", "T2.name"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "avg", "(", "t1", ".", "stars", ")", "from", "rating", "as", "t1", "join", "reviewer", "as", "t2", "on", "t1", ".", "rid", "=", "t2", ".", "rid", "group", "by", "t2", ".", "name"], "question": "What is the average number of stars that each reviewer awards for a movie?", "question_toks": ["What", "is", "the", "average", "number", "of", "stars", "that", "each", "reviewer", "awards", "for", "a", "movie", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 5, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [5, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "movie_1", "query": "SELECT avg(T1.stars) ,  T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT min(YEAR) FROM Movie)", "query_toks": ["SELECT", "avg", "(", "T1.stars", ")", ",", "T2.title", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "WHERE", "T2.year", "=", "(", "SELECT", "min", "(", "YEAR", ")", "FROM", "Movie", ")"], "query_toks_no_value": ["select", "avg", "(", "t1", ".", "stars", ")", ",", "t2", ".", "title", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "where", "t2", ".", "year", "=", "(", "select", "min", "(", "year", ")", "from", "movie", ")"], "question": "What is the average rating stars and title for the oldest movie?", "question_toks": ["What", "is", "the", "average", "rating", "stars", "and", "title", "for", "the", "oldest", "movie", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 9, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 3, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "movie_1", "query": "SELECT avg(T1.stars) ,  T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT min(YEAR) FROM Movie)", "query_toks": ["SELECT", "avg", "(", "T1.stars", ")", ",", "T2.title", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "WHERE", "T2.year", "=", "(", "SELECT", "min", "(", "YEAR", ")", "FROM", "Movie", ")"], "query_toks_no_value": ["select", "avg", "(", "t1", ".", "stars", ")", ",", "t2", ".", "title", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "where", "t2", ".", "year", "=", "(", "select", "min", "(", "year", ")", "from", "movie", ")"], "question": "For the oldest movie listed, what is its average rating and title?", "question_toks": ["For", "the", "oldest", "movie", "listed", ",", "what", "is", "its", "average", "rating", "and", "title", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 9, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 3, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "movie_1", "query": "SELECT max(T1.stars) ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT max(YEAR) FROM Movie)", "query_toks": ["SELECT", "max", "(", "T1.stars", ")", ",", "T2.year", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "WHERE", "T2.year", "=", "(", "SELECT", "max", "(", "YEAR", ")", "FROM", "Movie", ")"], "query_toks_no_value": ["select", "max", "(", "t1", ".", "stars", ")", ",", "t2", ".", "year", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "where", "t2", ".", "year", "=", "(", "select", "max", "(", "year", ")", "from", "movie", ")"], "question": "What is the maximum stars and year for the most recent movie?", "question_toks": ["What", "is", "the", "maximum", "stars", "and", "year", "for", "the", "most", "recent", "movie", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 9, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 3, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "movie_1", "query": "SELECT max(T1.stars) ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT max(YEAR) FROM Movie)", "query_toks": ["SELECT", "max", "(", "T1.stars", ")", ",", "T2.year", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "WHERE", "T2.year", "=", "(", "SELECT", "max", "(", "YEAR", ")", "FROM", "Movie", ")"], "query_toks_no_value": ["select", "max", "(", "t1", ".", "stars", ")", ",", "t2", ".", "year", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "where", "t2", ".", "year", "=", "(", "select", "max", "(", "year", ")", "from", "movie", ")"], "question": "What is highest rating for the most recent movie and when was it released?", "question_toks": ["What", "is", "highest", "rating", "for", "the", "most", "recent", "movie", "and", "when", "was", "it", "released", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 9, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 3, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "movie_1", "query": "SELECT T2.title ,  T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  >  (SELECT avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.director  =  \"James Cameron\")", "query_toks": ["SELECT", "T2.title", ",", "T2.director", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "WHERE", "T1.stars", ">", "(", "SELECT", "avg", "(", "T1.stars", ")", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "WHERE", "T2.director", "=", "``", "James", "Cameron", "''", ")"], "query_toks_no_value": ["select", "t2", ".", "title", ",", "t2", ".", "director", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "where", "t1", ".", "stars", ">", "(", "select", "avg", "(", "t1", ".", "stars", ")", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "where", "t2", ".", "director", "=", "value", ")"], "question": "What are the titles and directors of the movies whose star is greater than the average stars of the movies directed by James Cameron?", "question_toks": ["What", "are", "the", "titles", "and", "directors", "of", "the", "movies", "whose", "star", "is", "greater", "than", "the", "average", "stars", "of", "the", "movies", "directed", "by", "James", "Cameron", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 9, false], null], {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"James Cameron\"", null]]}, null]]}}, {"db_id": "movie_1", "query": "SELECT T2.title ,  T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  >  (SELECT avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.director  =  \"James Cameron\")", "query_toks": ["SELECT", "T2.title", ",", "T2.director", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "WHERE", "T1.stars", ">", "(", "SELECT", "avg", "(", "T1.stars", ")", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "WHERE", "T2.director", "=", "``", "James", "Cameron", "''", ")"], "query_toks_no_value": ["select", "t2", ".", "title", ",", "t2", ".", "director", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "where", "t1", ".", "stars", ">", "(", "select", "avg", "(", "t1", ".", "stars", ")", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "where", "t2", ".", "director", "=", "value", ")"], "question": "What are the titles and directors of all movies that have a rating higher than the average James Cameron film rating?", "question_toks": ["What", "are", "the", "titles", "and", "directors", "of", "all", "movies", "that", "have", "a", "rating", "higher", "than", "the", "average", "James", "Cameron", "film", "rating", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 9, false], null], {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"James Cameron\"", null]]}, null]]}}, {"db_id": "movie_1", "query": "SELECT T3.name ,  T2.title ,  T1.stars ,  T1.ratingDate FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID ORDER BY T3.name ,  T2.title ,  T1.stars", "query_toks": ["SELECT", "T3.name", ",", "T2.title", ",", "T1.stars", ",", "T1.ratingDate", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "JOIN", "Reviewer", "AS", "T3", "ON", "T1.rID", "=", "T3.rID", "ORDER", "BY", "T3.name", ",", "T2.title", ",", "T1.stars"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "title", ",", "t1", ".", "stars", ",", "t1", ".", "ratingdate", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "join", "reviewer", "as", "t3", "on", "t1", ".", "rid", "=", "t3", ".", "rid", "order", "by", "t3", ".", "name", ",", "t2", ".", "title", ",", "t1", ".", "stars"], "question": "Return reviewer name, movie title, stars, and ratingDate. And sort the data first by reviewer name, then by movie title, and lastly by number of stars.", "question_toks": ["Return", "reviewer", "name", ",", "movie", "title", ",", "stars", ",", "and", "ratingDate", ".", "And", "sort", "the", "data", "first", "by", "reviewer", "name", ",", "then", "by", "movie", "title", ",", "and", "lastly", "by", "number", "of", "stars", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 6, false], null], [0, [0, 2, false], null], [0, [0, 9, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "movie_1", "query": "SELECT T3.name ,  T2.title ,  T1.stars ,  T1.ratingDate FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID ORDER BY T3.name ,  T2.title ,  T1.stars", "query_toks": ["SELECT", "T3.name", ",", "T2.title", ",", "T1.stars", ",", "T1.ratingDate", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "JOIN", "Reviewer", "AS", "T3", "ON", "T1.rID", "=", "T3.rID", "ORDER", "BY", "T3.name", ",", "T2.title", ",", "T1.stars"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "title", ",", "t1", ".", "stars", ",", "t1", ".", "ratingdate", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "join", "reviewer", "as", "t3", "on", "t1", ".", "rid", "=", "t3", ".", "rid", "order", "by", "t3", ".", "name", ",", "t2", ".", "title", ",", "t1", ".", "stars"], "question": "What is the reviewer name, film title, movie rating, and rating date  for every movie ordered by reviewer name, movie title, then finally rating?", "question_toks": ["What", "is", "the", "reviewer", "name", ",", "film", "title", ",", "movie", "rating", ",", "and", "rating", "date", "for", "every", "movie", "ordered", "by", "reviewer", "name", ",", "movie", "title", ",", "then", "finally", "rating", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 6, false], null], [0, [0, 2, false], null], [0, [0, 9, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "movie_1", "query": "SELECT DISTINCT T3.name ,  T2.title ,  T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.director  =  T3.name", "query_toks": ["SELECT", "DISTINCT", "T3.name", ",", "T2.title", ",", "T1.stars", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "JOIN", "Reviewer", "AS", "T3", "ON", "T1.rID", "=", "T3.rID", "WHERE", "T2.director", "=", "T3.name"], "query_toks_no_value": ["select", "distinct", "t3", ".", "name", ",", "t2", ".", "title", ",", "t1", ".", "stars", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "join", "reviewer", "as", "t3", "on", "t1", ".", "rid", "=", "t3", ".", "rid", "where", "t2", ".", "director", "=", "t3", ".", "name"], "question": "For any rating where the name of reviewer is the same as the director of the movie, return the reviewer name, movie title, and number of stars.", "question_toks": ["For", "any", "rating", "where", "the", "name", "of", "reviewer", "is", "the", "same", "as", "the", "director", "of", "the", "movie", ",", "return", "the", "reviewer", "name", ",", "movie", "title", ",", "and", "number", "of", "stars", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], [0, 6, false], null]]}}, {"db_id": "movie_1", "query": "SELECT DISTINCT T3.name ,  T2.title ,  T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.director  =  T3.name", "query_toks": ["SELECT", "DISTINCT", "T3.name", ",", "T2.title", ",", "T1.stars", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "JOIN", "Reviewer", "AS", "T3", "ON", "T1.rID", "=", "T3.rID", "WHERE", "T2.director", "=", "T3.name"], "query_toks_no_value": ["select", "distinct", "t3", ".", "name", ",", "t2", ".", "title", ",", "t1", ".", "stars", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "join", "reviewer", "as", "t3", "on", "t1", ".", "rid", "=", "t3", ".", "rid", "where", "t2", ".", "director", "=", "t3", ".", "name"], "question": "What are the different reviewer names, movie titles, and stars for every rating where the reviewer had the same name as the director?", "question_toks": ["What", "are", "the", "different", "reviewer", "names", ",", "movie", "titles", ",", "and", "stars", "for", "every", "rating", "where", "the", "reviewer", "had", "the", "same", "name", "as", "the", "director", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], [0, 6, false], null]]}}, {"db_id": "movie_1", "query": "SELECT T1.title ,  T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title ORDER BY T1.director ,  T1.title", "query_toks": ["SELECT", "T1.title", ",", "T1.director", "FROM", "Movie", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.director", "=", "T2.director", "WHERE", "T1.title", "!", "=", "T2.title", "ORDER", "BY", "T1.director", ",", "T1.title"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t1", ".", "director", "from", "movie", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "director", "=", "t2", ".", "director", "where", "t1", ".", "title", "!", "=", "t2", ".", "title", "order", "by", "t1", ".", "director", ",", "t1", ".", "title"], "question": "For all directors who directed more than one movie, return the titles of all movies directed by them, along with the director name. Sort by director name, then movie title.", "question_toks": ["For", "all", "directors", "who", "directed", "more", "than", "one", "movie", ",", "return", "the", "titles", "of", "all", "movies", "directed", "by", "them", ",", "along", "with", "the", "director", "name", ".", "Sort", "by", "director", "name", ",", "then", "movie", "title", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 4, false], null]], "table_units": [["table_unit", 0], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 4, false], null], [0, [0, 2, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 2, false], null], [0, 2, false], null]]}}, {"db_id": "movie_1", "query": "SELECT T1.title ,  T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title ORDER BY T1.director ,  T1.title", "query_toks": ["SELECT", "T1.title", ",", "T1.director", "FROM", "Movie", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.director", "=", "T2.director", "WHERE", "T1.title", "!", "=", "T2.title", "ORDER", "BY", "T1.director", ",", "T1.title"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t1", ".", "director", "from", "movie", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "director", "=", "t2", ".", "director", "where", "t1", ".", "title", "!", "=", "t2", ".", "title", "order", "by", "t1", ".", "director", ",", "t1", ".", "title"], "question": "For all directors who have directed more than one movie, what movies have they directed and what are their names?", "question_toks": ["For", "all", "directors", "who", "have", "directed", "more", "than", "one", "movie", ",", "what", "movies", "have", "they", "directed", "and", "what", "are", "their", "names", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 4, false], null]], "table_units": [["table_unit", 0], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 4, false], null], [0, [0, 2, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 2, false], null], [0, 2, false], null]]}}, {"db_id": "movie_1", "query": "SELECT T1.title ,  T1.year FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title", "query_toks": ["SELECT", "T1.title", ",", "T1.year", "FROM", "Movie", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.director", "=", "T2.director", "WHERE", "T1.title", "!", "=", "T2.title"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t1", ".", "year", "from", "movie", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "director", "=", "t2", ".", "director", "where", "t1", ".", "title", "!", "=", "t2", ".", "title"], "question": "For directors who had more than one movie, return the titles and produced years of all movies directed by them.", "question_toks": ["For", "directors", "who", "had", "more", "than", "one", "movie", ",", "return", "the", "titles", "and", "produced", "years", "of", "all", "movies", "directed", "by", "them", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 4, false], null]], "table_units": [["table_unit", 0], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 2, false], null], [0, 2, false], null]]}}, {"db_id": "movie_1", "query": "SELECT T1.title ,  T1.year FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title", "query_toks": ["SELECT", "T1.title", ",", "T1.year", "FROM", "Movie", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.director", "=", "T2.director", "WHERE", "T1.title", "!", "=", "T2.title"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t1", ".", "year", "from", "movie", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "director", "=", "t2", ".", "director", "where", "t1", ".", "title", "!", "=", "t2", ".", "title"], "question": "For each director who directed more than one movie, what are the titles and dates of release for all those movies?", "question_toks": ["For", "each", "director", "who", "directed", "more", "than", "one", "movie", ",", "what", "are", "the", "titles", "and", "dates", "of", "release", "for", "all", "those", "movies", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 4, false], null]], "table_units": [["table_unit", 0], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 2, false], null], [0, 2, false], null]]}}, {"db_id": "movie_1", "query": "SELECT count(*) ,  T1.director FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID GROUP BY T1.director", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.director", "FROM", "Movie", "AS", "T1", "JOIN", "Rating", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "GROUP", "BY", "T1.director"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "director", "from", "movie", "as", "t1", "join", "rating", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "group", "by", "t1", ".", "director"], "question": "How many movie reviews does each director get?", "question_toks": ["How", "many", "movie", "reviews", "does", "each", "director", "get", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "movie_1", "query": "SELECT count(*) ,  T1.director FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID GROUP BY T1.director", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.director", "FROM", "Movie", "AS", "T1", "JOIN", "Rating", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "GROUP", "BY", "T1.director"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "director", "from", "movie", "as", "t1", "join", "rating", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "group", "by", "t1", ".", "director"], "question": "For each director, how many reviews have they received?", "question_toks": ["For", "each", "director", ",", "how", "many", "reviews", "have", "they", "received", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "movie_1", "query": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) DESC LIMIT 1", "query_toks": ["SELECT", "T2.title", ",", "avg", "(", "T1.stars", ")", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "GROUP", "BY", "T1.mID", "ORDER", "BY", "avg", "(", "T1.stars", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "title", ",", "avg", "(", "t1", ".", "stars", ")", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "group", "by", "t1", ".", "mid", "order", "by", "avg", "(", "t1", ".", "stars", ")", "desc", "limit", "value"], "question": "Find the movies with the highest average rating. Return the movie titles and average rating.", "question_toks": ["Find", "the", "movies", "with", "the", "highest", "average", "rating", ".", "Return", "the", "movie", "titles", "and", "average", "rating", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [5, 9, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [5, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "movie_1", "query": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) DESC LIMIT 1", "query_toks": ["SELECT", "T2.title", ",", "avg", "(", "T1.stars", ")", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "GROUP", "BY", "T1.mID", "ORDER", "BY", "avg", "(", "T1.stars", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "title", ",", "avg", "(", "t1", ".", "stars", ")", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "group", "by", "t1", ".", "mid", "order", "by", "avg", "(", "t1", ".", "stars", ")", "desc", "limit", "value"], "question": "What are the movie titles with the highest average rating and what are those ratings?", "question_toks": ["What", "are", "the", "movie", "titles", "with", "the", "highest", "average", "rating", "and", "what", "are", "those", "ratings", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [5, 9, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [5, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "movie_1", "query": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) LIMIT 1", "query_toks": ["SELECT", "T2.title", ",", "avg", "(", "T1.stars", ")", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "GROUP", "BY", "T1.mID", "ORDER", "BY", "avg", "(", "T1.stars", ")", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "title", ",", "avg", "(", "t1", ".", "stars", ")", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "group", "by", "t1", ".", "mid", "order", "by", "avg", "(", "t1", ".", "stars", ")", "limit", "value"], "question": "What are the movie titles and average rating of the movies with the lowest average rating?", "question_toks": ["What", "are", "the", "movie", "titles", "and", "average", "rating", "of", "the", "movies", "with", "the", "lowest", "average", "rating", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [5, 9, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [5, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "movie_1", "query": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) LIMIT 1", "query_toks": ["SELECT", "T2.title", ",", "avg", "(", "T1.stars", ")", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "GROUP", "BY", "T1.mID", "ORDER", "BY", "avg", "(", "T1.stars", ")", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "title", ",", "avg", "(", "t1", ".", "stars", ")", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "group", "by", "t1", ".", "mid", "order", "by", "avg", "(", "t1", ".", "stars", ")", "limit", "value"], "question": "What are the titles and average ratings for all movies that have the lowest average rating?", "question_toks": ["What", "are", "the", "titles", "and", "average", "ratings", "for", "all", "movies", "that", "have", "the", "lowest", "average", "rating", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [5, 9, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [5, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "movie_1", "query": "SELECT T2.title ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3", "query_toks": ["SELECT", "T2.title", ",", "T2.year", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "ORDER", "BY", "T1.stars", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "t2", ".", "title", ",", "t2", ".", "year", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "order", "by", "t1", ".", "stars", "desc", "limit", "value"], "question": "What are the names and years of the movies that has the top 3 highest rating star?", "question_toks": ["What", "are", "the", "names", "and", "years", "of", "the", "movies", "that", "has", "the", "top", "3", "highest", "rating", "star", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 3, "orderBy": ["desc", [[0, [0, 9, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "movie_1", "query": "SELECT T2.title ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3", "query_toks": ["SELECT", "T2.title", ",", "T2.year", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "ORDER", "BY", "T1.stars", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "t2", ".", "title", ",", "t2", ".", "year", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "order", "by", "t1", ".", "stars", "desc", "limit", "value"], "question": "What are the names and years released for the movies with the top 3 highest ratings?", "question_toks": ["What", "are", "the", "names", "and", "years", "released", "for", "the", "movies", "with", "the", "top", "3", "highest", "ratings", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 3, "orderBy": ["desc", [[0, [0, 9, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "movie_1", "query": "SELECT T2.title ,  T1.stars ,  T2.director ,  max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE director != \"null\" GROUP BY director", "query_toks": ["SELECT", "T2.title", ",", "T1.stars", ",", "T2.director", ",", "max", "(", "T1.stars", ")", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "WHERE", "director", "!", "=", "``", "null", "''", "GROUP", "BY", "director"], "query_toks_no_value": ["select", "t2", ".", "title", ",", "t1", ".", "stars", ",", "t2", ".", "director", ",", "max", "(", "t1", ".", "stars", ")", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "where", "director", "!", "=", "value", "group", "by", "director"], "question": "For each director, return the director's name together with the title of the movie they directed that received the highest rating among all of their movies, and the value of that rating. Ignore movies whose director is NULL.", "question_toks": ["For", "each", "director", ",", "return", "the", "director", "'s", "name", "together", "with", "the", "title", "of", "the", "movie", "they", "directed", "that", "received", "the", "highest", "rating", "among", "all", "of", "their", "movies", ",", "and", "the", "value", "of", "that", "rating", ".", "Ignore", "movies", "whose", "director", "is", "NULL", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 9, false], null]], [0, [0, [0, 4, false], null]], [1, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 4, false], null], "\"null\"", null]]}}, {"db_id": "movie_1", "query": "SELECT T2.title ,  T1.stars ,  T2.director ,  max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE director != \"null\" GROUP BY director", "query_toks": ["SELECT", "T2.title", ",", "T1.stars", ",", "T2.director", ",", "max", "(", "T1.stars", ")", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "WHERE", "director", "!", "=", "``", "null", "''", "GROUP", "BY", "director"], "query_toks_no_value": ["select", "t2", ".", "title", ",", "t1", ".", "stars", ",", "t2", ".", "director", ",", "max", "(", "t1", ".", "stars", ")", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "where", "director", "!", "=", "value", "group", "by", "director"], "question": "For each director, what are the titles and ratings for all the movies they reviewed?", "question_toks": ["For", "each", "director", ",", "what", "are", "the", "titles", "and", "ratings", "for", "all", "the", "movies", "they", "reviewed", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 9, false], null]], [0, [0, [0, 4, false], null]], [1, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 4, false], null], "\"null\"", null]]}}, {"db_id": "movie_1", "query": "SELECT T2.title ,  T1.rID ,  T1.stars ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.rID", "query_toks": ["SELECT", "T2.title", ",", "T1.rID", ",", "T1.stars", ",", "min", "(", "T1.stars", ")", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "GROUP", "BY", "T1.rID"], "query_toks_no_value": ["select", "t2", ".", "title", ",", "t1", ".", "rid", ",", "t1", ".", "stars", ",", "min", "(", "t1", ".", "stars", ")", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "group", "by", "t1", ".", "rid"], "question": "Find the title and star rating of the movie that got the least rating star for each reviewer.", "question_toks": ["Find", "the", "title", "and", "star", "rating", "of", "the", "movie", "that", "got", "the", "least", "rating", "star", "for", "each", "reviewer", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]], [2, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "movie_1", "query": "SELECT T2.title ,  T1.rID ,  T1.stars ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.rID", "query_toks": ["SELECT", "T2.title", ",", "T1.rID", ",", "T1.stars", ",", "min", "(", "T1.stars", ")", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "GROUP", "BY", "T1.rID"], "query_toks_no_value": ["select", "t2", ".", "title", ",", "t1", ".", "rid", ",", "t1", ".", "stars", ",", "min", "(", "t1", ".", "stars", ")", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "group", "by", "t1", ".", "rid"], "question": "For each reviewer id, what is the title and rating for the movie with the smallest rating?", "question_toks": ["For", "each", "reviewer", "id", ",", "what", "is", "the", "title", "and", "rating", "for", "the", "movie", "with", "the", "smallest", "rating", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]], [2, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "movie_1", "query": "SELECT T2.title ,  T1.stars ,  T2.director ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T2.director", "query_toks": ["SELECT", "T2.title", ",", "T1.stars", ",", "T2.director", ",", "min", "(", "T1.stars", ")", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "GROUP", "BY", "T2.director"], "query_toks_no_value": ["select", "t2", ".", "title", ",", "t1", ".", "stars", ",", "t2", ".", "director", ",", "min", "(", "t1", ".", "stars", ")", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "group", "by", "t2", ".", "director"], "question": "Find the title and score of the movie with the lowest rating among all movies directed by each director.", "question_toks": ["Find", "the", "title", "and", "score", "of", "the", "movie", "with", "the", "lowest", "rating", "among", "all", "movies", "directed", "by", "each", "director", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 9, false], null]], [0, [0, [0, 4, false], null]], [2, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "movie_1", "query": "SELECT T2.title ,  T1.stars ,  T2.director ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T2.director", "query_toks": ["SELECT", "T2.title", ",", "T1.stars", ",", "T2.director", ",", "min", "(", "T1.stars", ")", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "GROUP", "BY", "T2.director"], "query_toks_no_value": ["select", "t2", ".", "title", ",", "t1", ".", "stars", ",", "t2", ".", "director", ",", "min", "(", "t1", ".", "stars", ")", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "group", "by", "t2", ".", "director"], "question": "For each director, what is the title and score of their most poorly rated movie?", "question_toks": ["For", "each", "director", ",", "what", "is", "the", "title", "and", "score", "of", "their", "most", "poorly", "rated", "movie", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 9, false], null]], [0, [0, [0, 4, false], null]], [2, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "movie_1", "query": "SELECT T2.title ,  T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.title", ",", "T1.mID", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "GROUP", "BY", "T1.mID", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "title", ",", "t1", ".", "mid", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "group", "by", "t1", ".", "mid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name of the movie that is rated by most of times?", "question_toks": ["What", "is", "the", "name", "of", "the", "movie", "that", "is", "rated", "by", "most", "of", "times", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "movie_1", "query": "SELECT T2.title ,  T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.title", ",", "T1.mID", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "GROUP", "BY", "T1.mID", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "title", ",", "t1", ".", "mid", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "group", "by", "t1", ".", "mid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name of the movie that has been reviewed the most?", "question_toks": ["What", "is", "the", "name", "of", "the", "movie", "that", "has", "been", "reviewed", "the", "most", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "movie_1", "query": "SELECT mID ,  avg(stars) FROM Rating WHERE mID NOT IN (SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name  =  \"Brittany Harris\") GROUP BY mID", "query_toks": ["SELECT", "mID", ",", "avg", "(", "stars", ")", "FROM", "Rating", "WHERE", "mID", "NOT", "IN", "(", "SELECT", "T1.mID", "FROM", "Rating", "AS", "T1", "JOIN", "Reviewer", "AS", "T2", "ON", "T1.rID", "=", "T2.rID", "WHERE", "T2.name", "=", "``", "Brittany", "Harris", "''", ")", "GROUP", "BY", "mID"], "query_toks_no_value": ["select", "mid", ",", "avg", "(", "stars", ")", "from", "rating", "where", "mid", "not", "in", "(", "select", "t1", ".", "mid", "from", "rating", "as", "t1", "join", "reviewer", "as", "t2", "on", "t1", ".", "rid", "=", "t2", ".", "rid", "where", "t2", ".", "name", "=", "value", ")", "group", "by", "mid"], "question": "Find the average rating star for each movie that are not reviewed by Brittany Harris.", "question_toks": ["Find", "the", "average", "rating", "star", "for", "each", "movie", "that", "are", "not", "reviewed", "by", "Brittany", "Harris", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [5, [0, [0, 9, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 8, false], null], {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 5, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"Brittany Harris\"", null]]}, null]]}}, {"db_id": "movie_1", "query": "SELECT mID ,  avg(stars) FROM Rating WHERE mID NOT IN (SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name  =  \"Brittany Harris\") GROUP BY mID", "query_toks": ["SELECT", "mID", ",", "avg", "(", "stars", ")", "FROM", "Rating", "WHERE", "mID", "NOT", "IN", "(", "SELECT", "T1.mID", "FROM", "Rating", "AS", "T1", "JOIN", "Reviewer", "AS", "T2", "ON", "T1.rID", "=", "T2.rID", "WHERE", "T2.name", "=", "``", "Brittany", "Harris", "''", ")", "GROUP", "BY", "mID"], "query_toks_no_value": ["select", "mid", ",", "avg", "(", "stars", ")", "from", "rating", "where", "mid", "not", "in", "(", "select", "t1", ".", "mid", "from", "rating", "as", "t1", "join", "reviewer", "as", "t2", "on", "t1", ".", "rid", "=", "t2", ".", "rid", "where", "t2", ".", "name", "=", "value", ")", "group", "by", "mid"], "question": "What is the average rating for each movie that has never been reviewed by Brittany Harris?", "question_toks": ["What", "is", "the", "average", "rating", "for", "each", "movie", "that", "has", "never", "been", "reviewed", "by", "Brittany", "Harris", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [5, [0, [0, 9, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 8, false], null], {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 5, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"Brittany Harris\"", null]]}, null]]}}, {"db_id": "movie_1", "query": "SELECT mID ,  avg(stars) FROM Rating GROUP BY mID HAVING count(*)  >=  2", "query_toks": ["SELECT", "mID", ",", "avg", "(", "stars", ")", "FROM", "Rating", "GROUP", "BY", "mID", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "mid", ",", "avg", "(", "stars", ")", "from", "rating", "group", "by", "mid", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Find the average rating star for each movie that received at least 2 ratings.", "question_toks": ["Find", "the", "average", "rating", "star", "for", "each", "movie", "that", "received", "at", "least", "2", "ratings", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 8, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [5, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "movie_1", "query": "SELECT mID ,  avg(stars) FROM Rating GROUP BY mID HAVING count(*)  >=  2", "query_toks": ["SELECT", "mID", ",", "avg", "(", "stars", ")", "FROM", "Rating", "GROUP", "BY", "mID", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "mid", ",", "avg", "(", "stars", ")", "from", "rating", "group", "by", "mid", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "For each movie that received more than 3 reviews, what is the average rating?", "question_toks": ["For", "each", "movie", "that", "received", "more", "than", "3", "reviews", ",", "what", "is", "the", "average", "rating", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 8, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [5, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "county_public_safety", "query": "SELECT min(Crime_rate) ,  max(Crime_rate) FROM county_public_safety", "query_toks": ["SELECT", "min", "(", "Crime_rate", ")", ",", "max", "(", "Crime_rate", ")", "FROM", "county_public_safety"], "query_toks_no_value": ["select", "min", "(", "crime_rate", ")", ",", "max", "(", "crime_rate", ")", "from", "county_public_safety"], "question": "What are the minimum and maximum crime rate of counties?", "question_toks": ["What", "are", "the", "minimum", "and", "maximum", "crime", "rate", "of", "counties", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 7, false], null]], [1, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "county_public_safety", "query": "SELECT min(Crime_rate) ,  max(Crime_rate) FROM county_public_safety", "query_toks": ["SELECT", "min", "(", "Crime_rate", ")", ",", "max", "(", "Crime_rate", ")", "FROM", "county_public_safety"], "query_toks_no_value": ["select", "min", "(", "crime_rate", ")", ",", "max", "(", "crime_rate", ")", "from", "county_public_safety"], "question": "Return the minimum and maximum crime rates across all counties.", "question_toks": ["Return", "the", "minimum", "and", "maximum", "crime", "rates", "across", "all", "counties", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 7, false], null]], [1, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "county_public_safety", "query": "SELECT T1.Name ,  T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID", "query_toks": ["SELECT", "T1.Name", ",", "T2.Name", "FROM", "city", "AS", "T1", "JOIN", "county_public_safety", "AS", "T2", "ON", "T1.County_ID", "=", "T2.County_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "name", "from", "city", "as", "t1", "join", "county_public_safety", "as", "t2", "on", "t1", ".", "county_id", "=", "t2", ".", "county_id"], "question": "Show names of cities and names of counties they are in.", "question_toks": ["Show", "names", "of", "cities", "and", "names", "of", "counties", "they", "are", "in", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "county_public_safety", "query": "SELECT T1.Name ,  T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID", "query_toks": ["SELECT", "T1.Name", ",", "T2.Name", "FROM", "city", "AS", "T1", "JOIN", "county_public_safety", "AS", "T2", "ON", "T1.County_ID", "=", "T2.County_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "name", "from", "city", "as", "t1", "join", "county_public_safety", "as", "t2", "on", "t1", ".", "county_id", "=", "t2", ".", "county_id"], "question": "What are the names of cities, as well as the names of the counties they correspond to?", "question_toks": ["What", "are", "the", "names", "of", "cities", ",", "as", "well", "as", "the", "names", "of", "the", "counties", "they", "correspond", "to", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "county_public_safety", "query": "SELECT T1.White ,  T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID", "query_toks": ["SELECT", "T1.White", ",", "T2.Crime_rate", "FROM", "city", "AS", "T1", "JOIN", "county_public_safety", "AS", "T2", "ON", "T1.County_ID", "=", "T2.County_ID"], "query_toks_no_value": ["select", "t1", ".", "white", ",", "t2", ".", "crime_rate", "from", "city", "as", "t1", "join", "county_public_safety", "as", "t2", "on", "t1", ".", "county_id", "=", "t2", ".", "county_id"], "question": "Show white percentages of cities and the crime rates of counties they are in.", "question_toks": ["Show", "white", "percentages", "of", "cities", "and", "the", "crime", "rates", "of", "counties", "they", "are", "in", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "county_public_safety", "query": "SELECT T1.White ,  T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID", "query_toks": ["SELECT", "T1.White", ",", "T2.Crime_rate", "FROM", "city", "AS", "T1", "JOIN", "county_public_safety", "AS", "T2", "ON", "T1.County_ID", "=", "T2.County_ID"], "query_toks_no_value": ["select", "t1", ".", "white", ",", "t2", ".", "crime_rate", "from", "city", "as", "t1", "join", "county_public_safety", "as", "t2", "on", "t1", ".", "county_id", "=", "t2", ".", "county_id"], "question": "What are the white percentages of cities, and the corresponding crime rates of the counties they correspond to?", "question_toks": ["What", "are", "the", "white", "percentages", "of", "cities", ",", "and", "the", "corresponding", "crime", "rates", "of", "the", "counties", "they", "correspond", "to", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "county_public_safety", "query": "SELECT Police_force ,  COUNT(*) FROM county_public_safety GROUP BY Police_force", "query_toks": ["SELECT", "Police_force", ",", "COUNT", "(", "*", ")", "FROM", "county_public_safety", "GROUP", "BY", "Police_force"], "query_toks_no_value": ["select", "police_force", ",", "count", "(", "*", ")", "from", "county_public_safety", "group", "by", "police_force"], "question": "Please show the police forces and the number of counties with each police force.", "question_toks": ["Please", "show", "the", "police", "forces", "and", "the", "number", "of", "counties", "with", "each", "police", "force", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "county_public_safety", "query": "SELECT Police_force ,  COUNT(*) FROM county_public_safety GROUP BY Police_force", "query_toks": ["SELECT", "Police_force", ",", "COUNT", "(", "*", ")", "FROM", "county_public_safety", "GROUP", "BY", "Police_force"], "query_toks_no_value": ["select", "police_force", ",", "count", "(", "*", ")", "from", "county_public_safety", "group", "by", "police_force"], "question": "How many counties correspond to each police force?", "question_toks": ["How", "many", "counties", "correspond", "to", "each", "police", "force", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "inn_1", "query": "SELECT roomName ,  RoomId FROM Rooms WHERE basePrice  >  160 AND maxOccupancy  >  2;", "query_toks": ["SELECT", "roomName", ",", "RoomId", "FROM", "Rooms", "WHERE", "basePrice", ">", "160", "AND", "maxOccupancy", ">", "2", ";"], "query_toks_no_value": ["select", "roomname", ",", "roomid", "from", "rooms", "where", "baseprice", ">", "value", "and", "maxoccupancy", ">", "value"], "question": "Find all the rooms that have a price higher than 160 and can accommodate more than 2 people. Report room names and ids.", "question_toks": ["Find", "all", "the", "rooms", "that", "have", "a", "price", "higher", "than", "160", "and", "can", "accommodate", "more", "than", "2", "people", ".", "Report", "room", "names", "and", "ids", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 6, false], null], 160.0, null], "and", [false, 3, [0, [0, 5, false], null], 2.0, null]]}}, {"db_id": "inn_1", "query": "SELECT roomName ,  RoomId FROM Rooms WHERE basePrice  >  160 AND maxOccupancy  >  2;", "query_toks": ["SELECT", "roomName", ",", "RoomId", "FROM", "Rooms", "WHERE", "basePrice", ">", "160", "AND", "maxOccupancy", ">", "2", ";"], "query_toks_no_value": ["select", "roomname", ",", "roomid", "from", "rooms", "where", "baseprice", ">", "value", "and", "maxoccupancy", ">", "value"], "question": "What are the room names and ids of all the rooms that cost more than 160 and can accommodate more than two people.", "question_toks": ["What", "are", "the", "room", "names", "and", "ids", "of", "all", "the", "rooms", "that", "cost", "more", "than", "160", "and", "can", "accommodate", "more", "than", "two", "people", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 6, false], null], 160.0, null], "and", [false, 3, [0, [0, 5, false], null], 2.0, null]]}}, {"db_id": "inn_1", "query": "SELECT T2.roomName ,  T1.Rate ,  T1.CheckIn ,  T1.CheckOut FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY T1.Rate DESC LIMIT 1;", "query_toks": ["SELECT", "T2.roomName", ",", "T1.Rate", ",", "T1.CheckIn", ",", "T1.CheckOut", "FROM", "Reservations", "AS", "T1", "JOIN", "Rooms", "AS", "T2", "ON", "T1.Room", "=", "T2.RoomId", "GROUP", "BY", "T1.Room", "ORDER", "BY", "T1.Rate", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t2", ".", "roomname", ",", "t1", ".", "rate", ",", "t1", ".", "checkin", ",", "t1", ".", "checkout", "from", "reservations", "as", "t1", "join", "rooms", "as", "t2", "on", "t1", ".", "room", "=", "t2", ".", "roomid", "group", "by", "t1", ".", "room", "order", "by", "t1", ".", "rate", "desc", "limit", "value"], "question": "Which room has the highest rate? List the room's full name, rate, check in and check out date.", "question_toks": ["Which", "room", "has", "the", "highest", "rate", "?", "List", "the", "room", "'s", "full", "name", ",", "rate", ",", "check", "in", "and", "check", "out", "date", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 12, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "inn_1", "query": "SELECT T2.roomName ,  T1.Rate ,  T1.CheckIn ,  T1.CheckOut FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY T1.Rate DESC LIMIT 1;", "query_toks": ["SELECT", "T2.roomName", ",", "T1.Rate", ",", "T1.CheckIn", ",", "T1.CheckOut", "FROM", "Reservations", "AS", "T1", "JOIN", "Rooms", "AS", "T2", "ON", "T1.Room", "=", "T2.RoomId", "GROUP", "BY", "T1.Room", "ORDER", "BY", "T1.Rate", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t2", ".", "roomname", ",", "t1", ".", "rate", ",", "t1", ".", "checkin", ",", "t1", ".", "checkout", "from", "reservations", "as", "t1", "join", "rooms", "as", "t2", "on", "t1", ".", "room", "=", "t2", ".", "roomid", "group", "by", "t1", ".", "room", "order", "by", "t1", ".", "rate", "desc", "limit", "value"], "question": "Return the name, rate, check in and check out date for the room with the highest rate.", "question_toks": ["Return", "the", "name", ",", "rate", ",", "check", "in", "and", "check", "out", "date", "for", "the", "room", "with", "the", "highest", "rate", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 12, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "inn_1", "query": "SELECT roomName ,  decor FROM Rooms WHERE bedtype  =  'King' ORDER BY basePrice;", "query_toks": ["SELECT", "roomName", ",", "decor", "FROM", "Rooms", "WHERE", "bedtype", "=", "'King", "'", "ORDER", "BY", "basePrice", ";"], "query_toks_no_value": ["select", "roomname", ",", "decor", "from", "rooms", "where", "bedtype", "=", "value", "order", "by", "baseprice"], "question": "List the names and decor of rooms that have a king bed. Sort the list by their price.", "question_toks": ["List", "the", "names", "and", "decor", "of", "rooms", "that", "have", "a", "king", "bed", ".", "Sort", "the", "list", "by", "their", "price", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"King\"", null]]}}, {"db_id": "inn_1", "query": "SELECT roomName ,  decor FROM Rooms WHERE bedtype  =  'King' ORDER BY basePrice;", "query_toks": ["SELECT", "roomName", ",", "decor", "FROM", "Rooms", "WHERE", "bedtype", "=", "'King", "'", "ORDER", "BY", "basePrice", ";"], "query_toks_no_value": ["select", "roomname", ",", "decor", "from", "rooms", "where", "bedtype", "=", "value", "order", "by", "baseprice"], "question": "What are the names and decor of rooms with a king bed? Sort them by their price", "question_toks": ["What", "are", "the", "names", "and", "decor", "of", "rooms", "with", "a", "king", "bed", "?", "Sort", "them", "by", "their", "price"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"King\"", null]]}}, {"db_id": "inn_1", "query": "SELECT roomName ,  basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1;", "query_toks": ["SELECT", "roomName", ",", "basePrice", "FROM", "Rooms", "ORDER", "BY", "basePrice", "ASC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "roomname", ",", "baseprice", "from", "rooms", "order", "by", "baseprice", "asc", "limit", "value"], "question": "Which room has cheapest base price? List the room's name and the base price.", "question_toks": ["Which", "room", "has", "cheapest", "base", "price", "?", "List", "the", "room", "'s", "name", "and", "the", "base", "price", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "inn_1", "query": "SELECT roomName ,  basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1;", "query_toks": ["SELECT", "roomName", ",", "basePrice", "FROM", "Rooms", "ORDER", "BY", "basePrice", "ASC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "roomname", ",", "baseprice", "from", "rooms", "order", "by", "baseprice", "asc", "limit", "value"], "question": "What are the room name and base price of the room with the lowest base price?", "question_toks": ["What", "are", "the", "room", "name", "and", "base", "price", "of", "the", "room", "with", "the", "lowest", "base", "price", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "inn_1", "query": "SELECT bedType ,  avg(basePrice) FROM Rooms GROUP BY bedType;", "query_toks": ["SELECT", "bedType", ",", "avg", "(", "basePrice", ")", "FROM", "Rooms", "GROUP", "BY", "bedType", ";"], "query_toks_no_value": ["select", "bedtype", ",", "avg", "(", "baseprice", ")", "from", "rooms", "group", "by", "bedtype"], "question": "What is the average base price of different bed type? List bed type and average base price.", "question_toks": ["What", "is", "the", "average", "base", "price", "of", "different", "bed", "type", "?", "List", "bed", "type", "and", "average", "base", "price", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [5, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "inn_1", "query": "SELECT bedType ,  avg(basePrice) FROM Rooms GROUP BY bedType;", "query_toks": ["SELECT", "bedType", ",", "avg", "(", "basePrice", ")", "FROM", "Rooms", "GROUP", "BY", "bedType", ";"], "query_toks_no_value": ["select", "bedtype", ",", "avg", "(", "baseprice", ")", "from", "rooms", "group", "by", "bedtype"], "question": "For each bed type, find the average base price of different bed type.", "question_toks": ["For", "each", "bed", "type", ",", "find", "the", "average", "base", "price", "of", "different", "bed", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [5, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "inn_1", "query": "SELECT T1.firstname ,  T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Rate - T2.basePrice  >  0", "query_toks": ["SELECT", "T1.firstname", ",", "T1.lastname", "FROM", "Reservations", "AS", "T1", "JOIN", "Rooms", "AS", "T2", "ON", "T1.Room", "=", "T2.RoomId", "WHERE", "T1.Rate", "-", "T2.basePrice", ">", "0"], "query_toks_no_value": ["select", "t1", ".", "firstname", ",", "t1", ".", "lastname", "from", "reservations", "as", "t1", "join", "rooms", "as", "t2", "on", "t1", ".", "room", "=", "t2", ".", "roomid", "where", "t1", ".", "rate", "-", "t2", ".", "baseprice", ">", "value"], "question": "Find the first and last names of people who payed more than the rooms' base prices.", "question_toks": ["Find", "the", "first", "and", "last", "names", "of", "people", "who", "payed", "more", "than", "the", "rooms", "'", "base", "prices", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": [[false, 3, [1, [0, 12, false], [0, 6, false]], 0.0, null]]}}, {"db_id": "inn_1", "query": "SELECT T1.firstname ,  T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Rate - T2.basePrice  >  0", "query_toks": ["SELECT", "T1.firstname", ",", "T1.lastname", "FROM", "Reservations", "AS", "T1", "JOIN", "Rooms", "AS", "T2", "ON", "T1.Room", "=", "T2.RoomId", "WHERE", "T1.Rate", "-", "T2.basePrice", ">", "0"], "query_toks_no_value": ["select", "t1", ".", "firstname", ",", "t1", ".", "lastname", "from", "reservations", "as", "t1", "join", "rooms", "as", "t2", "on", "t1", ".", "room", "=", "t2", ".", "roomid", "where", "t1", ".", "rate", "-", "t2", ".", "baseprice", ">", "value"], "question": "What are the first and last names of people who payed more than the rooms' base prices?", "question_toks": ["What", "are", "the", "first", "and", "last", "names", "of", "people", "who", "payed", "more", "than", "the", "rooms", "'", "base", "prices", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": [[false, 3, [1, [0, 12, false], [0, 6, false]], 0.0, null]]}}, {"db_id": "inn_1", "query": "SELECT bedType ,  count(*) FROM Rooms GROUP BY bedType;", "query_toks": ["SELECT", "bedType", ",", "count", "(", "*", ")", "FROM", "Rooms", "GROUP", "BY", "bedType", ";"], "query_toks_no_value": ["select", "bedtype", ",", "count", "(", "*", ")", "from", "rooms", "group", "by", "bedtype"], "question": "Find the number of rooms for each bed type.", "question_toks": ["Find", "the", "number", "of", "rooms", "for", "each", "bed", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "inn_1", "query": "SELECT bedType ,  count(*) FROM Rooms GROUP BY bedType;", "query_toks": ["SELECT", "bedType", ",", "count", "(", "*", ")", "FROM", "Rooms", "GROUP", "BY", "bedType", ";"], "query_toks_no_value": ["select", "bedtype", ",", "count", "(", "*", ")", "from", "rooms", "group", "by", "bedtype"], "question": "What are the number of rooms for each bed type?", "question_toks": ["What", "are", "the", "number", "of", "rooms", "for", "each", "bed", "type", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "inn_1", "query": "SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 1;", "query_toks": ["SELECT", "RoomId", ",", "roomName", "FROM", "Rooms", "ORDER", "BY", "basePrice", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "roomid", ",", "roomname", "from", "rooms", "order", "by", "baseprice", "desc", "limit", "value"], "question": "Find the id and name of the most expensive base price room.", "question_toks": ["Find", "the", "id", "and", "name", "of", "the", "most", "expensive", "base", "price", "room", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "inn_1", "query": "SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 1;", "query_toks": ["SELECT", "RoomId", ",", "roomName", "FROM", "Rooms", "ORDER", "BY", "basePrice", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "roomid", ",", "roomname", "from", "rooms", "order", "by", "baseprice", "desc", "limit", "value"], "question": "Which room has the highest base price?", "question_toks": ["Which", "room", "has", "the", "highest", "base", "price", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "inn_1", "query": "SELECT roomName ,  bedType FROM Rooms WHERE decor = \"traditional\";", "query_toks": ["SELECT", "roomName", ",", "bedType", "FROM", "Rooms", "WHERE", "decor", "=", "``", "traditional", "''", ";"], "query_toks_no_value": ["select", "roomname", ",", "bedtype", "from", "rooms", "where", "decor", "=", "value"], "question": "List the type of bed and name of all traditional rooms.", "question_toks": ["List", "the", "type", "of", "bed", "and", "name", "of", "all", "traditional", "rooms", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"traditional\"", null]]}}, {"db_id": "inn_1", "query": "SELECT roomName ,  bedType FROM Rooms WHERE decor = \"traditional\";", "query_toks": ["SELECT", "roomName", ",", "bedType", "FROM", "Rooms", "WHERE", "decor", "=", "``", "traditional", "''", ";"], "query_toks_no_value": ["select", "roomname", ",", "bedtype", "from", "rooms", "where", "decor", "=", "value"], "question": "What are the bed type and name of all the rooms with traditional decor?", "question_toks": ["What", "are", "the", "bed", "type", "and", "name", "of", "all", "the", "rooms", "with", "traditional", "decor", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"traditional\"", null]]}}, {"db_id": "inn_1", "query": "SELECT decor ,  count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor;", "query_toks": ["SELECT", "decor", ",", "count", "(", "*", ")", "FROM", "Rooms", "WHERE", "bedType", "=", "``", "King", "''", "GROUP", "BY", "decor", ";"], "query_toks_no_value": ["select", "decor", ",", "count", "(", "*", ")", "from", "rooms", "where", "bedtype", "=", "value", "group", "by", "decor"], "question": "Find the number of rooms with king bed for each decor type.", "question_toks": ["Find", "the", "number", "of", "rooms", "with", "king", "bed", "for", "each", "decor", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"King\"", null]]}}, {"db_id": "inn_1", "query": "SELECT decor ,  count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor;", "query_toks": ["SELECT", "decor", ",", "count", "(", "*", ")", "FROM", "Rooms", "WHERE", "bedType", "=", "``", "King", "''", "GROUP", "BY", "decor", ";"], "query_toks_no_value": ["select", "decor", ",", "count", "(", "*", ")", "from", "rooms", "where", "bedtype", "=", "value", "group", "by", "decor"], "question": "How many rooms have king beds? Report the number for each decor type.", "question_toks": ["How", "many", "rooms", "have", "king", "beds", "?", "Report", "the", "number", "for", "each", "decor", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"King\"", null]]}}, {"db_id": "inn_1", "query": "SELECT decor , avg(basePrice) ,  min(basePrice) FROM Rooms GROUP BY decor;", "query_toks": ["SELECT", "decor", ",", "avg", "(", "basePrice", ")", ",", "min", "(", "basePrice", ")", "FROM", "Rooms", "GROUP", "BY", "decor", ";"], "query_toks_no_value": ["select", "decor", ",", "avg", "(", "baseprice", ")", ",", "min", "(", "baseprice", ")", "from", "rooms", "group", "by", "decor"], "question": "Find the average and minimum price of the rooms in different decor.", "question_toks": ["Find", "the", "average", "and", "minimum", "price", "of", "the", "rooms", "in", "different", "decor", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [5, [0, [0, 6, false], null]], [2, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "inn_1", "query": "SELECT decor , avg(basePrice) ,  min(basePrice) FROM Rooms GROUP BY decor;", "query_toks": ["SELECT", "decor", ",", "avg", "(", "basePrice", ")", ",", "min", "(", "basePrice", ")", "FROM", "Rooms", "GROUP", "BY", "decor", ";"], "query_toks_no_value": ["select", "decor", ",", "avg", "(", "baseprice", ")", ",", "min", "(", "baseprice", ")", "from", "rooms", "group", "by", "decor"], "question": "What is the average minimum and price of the rooms for each different decor.", "question_toks": ["What", "is", "the", "average", "minimum", "and", "price", "of", "the", "rooms", "for", "each", "different", "decor", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [5, [0, [0, 6, false], null]], [2, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "inn_1", "query": "SELECT decor , count(*) FROM Rooms WHERE basePrice  >  120 GROUP BY decor;", "query_toks": ["SELECT", "decor", ",", "count", "(", "*", ")", "FROM", "Rooms", "WHERE", "basePrice", ">", "120", "GROUP", "BY", "decor", ";"], "query_toks_no_value": ["select", "decor", ",", "count", "(", "*", ")", "from", "rooms", "where", "baseprice", ">", "value", "group", "by", "decor"], "question": "Find the number of rooms with price higher than 120 for different decor.", "question_toks": ["Find", "the", "number", "of", "rooms", "with", "price", "higher", "than", "120", "for", "different", "decor", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 6, false], null], 120.0, null]]}}, {"db_id": "inn_1", "query": "SELECT decor , count(*) FROM Rooms WHERE basePrice  >  120 GROUP BY decor;", "query_toks": ["SELECT", "decor", ",", "count", "(", "*", ")", "FROM", "Rooms", "WHERE", "basePrice", ">", "120", "GROUP", "BY", "decor", ";"], "query_toks_no_value": ["select", "decor", ",", "count", "(", "*", ")", "from", "rooms", "where", "baseprice", ">", "value", "group", "by", "decor"], "question": "How many rooms cost more than 120, for each different decor?", "question_toks": ["How", "many", "rooms", "cost", "more", "than", "120", ",", "for", "each", "different", "decor", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 6, false], null], 120.0, null]]}}, {"db_id": "inn_1", "query": "SELECT bedType ,  avg(basePrice) FROM Rooms GROUP BY bedType;", "query_toks": ["SELECT", "bedType", ",", "avg", "(", "basePrice", ")", "FROM", "Rooms", "GROUP", "BY", "bedType", ";"], "query_toks_no_value": ["select", "bedtype", ",", "avg", "(", "baseprice", ")", "from", "rooms", "group", "by", "bedtype"], "question": "For each bed type, find the average room price.", "question_toks": ["For", "each", "bed", "type", ",", "find", "the", "average", "room", "price", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [5, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "inn_1", "query": "SELECT bedType ,  avg(basePrice) FROM Rooms GROUP BY bedType;", "query_toks": ["SELECT", "bedType", ",", "avg", "(", "basePrice", ")", "FROM", "Rooms", "GROUP", "BY", "bedType", ";"], "query_toks_no_value": ["select", "bedtype", ",", "avg", "(", "baseprice", ")", "from", "rooms", "group", "by", "bedtype"], "question": "What is the average base price of rooms, for each bed type?", "question_toks": ["What", "is", "the", "average", "base", "price", "of", "rooms", ",", "for", "each", "bed", "type", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [5, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "inn_1", "query": "SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3;", "query_toks": ["SELECT", "RoomId", ",", "roomName", "FROM", "Rooms", "ORDER", "BY", "basePrice", "DESC", "LIMIT", "3", ";"], "query_toks_no_value": ["select", "roomid", ",", "roomname", "from", "rooms", "order", "by", "baseprice", "desc", "limit", "value"], "question": "Find the name and id of the top 3 expensive rooms.", "question_toks": ["Find", "the", "name", "and", "id", "of", "the", "top", "3", "expensive", "rooms", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 3, "orderBy": ["desc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "inn_1", "query": "SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3;", "query_toks": ["SELECT", "RoomId", ",", "roomName", "FROM", "Rooms", "ORDER", "BY", "basePrice", "DESC", "LIMIT", "3", ";"], "query_toks_no_value": ["select", "roomid", ",", "roomname", "from", "rooms", "order", "by", "baseprice", "desc", "limit", "value"], "question": "What are the name and id of the three highest priced rooms?", "question_toks": ["What", "are", "the", "name", "and", "id", "of", "the", "three", "highest", "priced", "rooms", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 3, "orderBy": ["desc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "inn_1", "query": "SELECT T2.roomName ,  count(*) ,  T1.Room FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room", "query_toks": ["SELECT", "T2.roomName", ",", "count", "(", "*", ")", ",", "T1.Room", "FROM", "Reservations", "AS", "T1", "JOIN", "Rooms", "AS", "T2", "ON", "T1.Room", "=", "T2.RoomId", "GROUP", "BY", "T1.Room"], "query_toks_no_value": ["select", "t2", ".", "roomname", ",", "count", "(", "*", ")", ",", "t1", ".", "room", "from", "reservations", "as", "t1", "join", "rooms", "as", "t2", "on", "t1", ".", "room", "=", "t2", ".", "roomid", "group", "by", "t1", ".", "room"], "question": "Return the name and number of reservations made for each of the rooms.", "question_toks": ["Return", "the", "name", "and", "number", "of", "reservations", "made", "for", "each", "of", "the", "rooms", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "inn_1", "query": "SELECT T2.roomName ,  count(*) ,  T1.Room FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room", "query_toks": ["SELECT", "T2.roomName", ",", "count", "(", "*", ")", ",", "T1.Room", "FROM", "Reservations", "AS", "T1", "JOIN", "Rooms", "AS", "T2", "ON", "T1.Room", "=", "T2.RoomId", "GROUP", "BY", "T1.Room"], "query_toks_no_value": ["select", "t2", ".", "roomname", ",", "count", "(", "*", ")", ",", "t1", ".", "room", "from", "reservations", "as", "t1", "join", "rooms", "as", "t2", "on", "t1", ".", "room", "=", "t2", ".", "roomid", "group", "by", "t1", ".", "room"], "question": "For each room, find its name and the number of times reservations were made for it.", "question_toks": ["For", "each", "room", ",", "find", "its", "name", "and", "the", "number", "of", "times", "reservations", "were", "made", "for", "it", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "local_govt_mdm", "query": "SELECT T1.cmi_cross_ref_id ,  T1.source_system_code FROM CMI_Cross_References AS T1 JOIN Council_Tax AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id GROUP BY T1.cmi_cross_ref_id HAVING count(*)  >=  1", "query_toks": ["SELECT", "T1.cmi_cross_ref_id", ",", "T1.source_system_code", "FROM", "CMI_Cross_References", "AS", "T1", "JOIN", "Council_Tax", "AS", "T2", "ON", "T1.cmi_cross_ref_id", "=", "T2.cmi_cross_ref_id", "GROUP", "BY", "T1.cmi_cross_ref_id", "HAVING", "count", "(", "*", ")", ">", "=", "1"], "query_toks_no_value": ["select", "t1", ".", "cmi_cross_ref_id", ",", "t1", ".", "source_system_code", "from", "cmi_cross_references", "as", "t1", "join", "council_tax", "as", "t2", "on", "t1", ".", "cmi_cross_ref_id", "=", "t2", ".", "cmi_cross_ref_id", "group", "by", "t1", ".", "cmi_cross_ref_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What is the cmi cross reference id that is related to at least one council tax entry? List the cross reference id and source system code.", "question_toks": ["What", "is", "the", "cmi", "cross", "reference", "id", "that", "is", "related", "to", "at", "least", "one", "council", "tax", "entry", "?", "List", "the", "cross", "reference", "id", "and", "source", "system", "code", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 7, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 3, false]], "having": [[false, 5, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "local_govt_mdm", "query": "SELECT T2.cmi_cross_ref_id ,  T2.master_customer_id ,  count(*) FROM Business_Rates AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id GROUP BY T2.cmi_cross_ref_id", "query_toks": ["SELECT", "T2.cmi_cross_ref_id", ",", "T2.master_customer_id", ",", "count", "(", "*", ")", "FROM", "Business_Rates", "AS", "T1", "JOIN", "CMI_Cross_References", "AS", "T2", "ON", "T1.cmi_cross_ref_id", "=", "T2.cmi_cross_ref_id", "GROUP", "BY", "T2.cmi_cross_ref_id"], "query_toks_no_value": ["select", "t2", ".", "cmi_cross_ref_id", ",", "t2", ".", "master_customer_id", ",", "count", "(", "*", ")", "from", "business_rates", "as", "t1", "join", "cmi_cross_references", "as", "t2", "on", "t1", ".", "cmi_cross_ref_id", "=", "t2", ".", "cmi_cross_ref_id", "group", "by", "t2", ".", "cmi_cross_ref_id"], "question": "How many business rates are related to each cmi cross reference? List cross reference id, master customer id and the n", "question_toks": ["How", "many", "business", "rates", "are", "related", "to", "each", "cmi", "cross", "reference", "?", "List", "cross", "reference", "id", ",", "master", "customer", "id", "and", "the", "n"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 3, false], null]], "table_units": [["table_unit", 3], ["table_unit", 1]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "local_govt_mdm", "query": "SELECT T1.source_system_code ,  T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Benefits_Overpayments AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id ORDER BY T2.council_tax_id", "query_toks": ["SELECT", "T1.source_system_code", ",", "T2.council_tax_id", "FROM", "CMI_Cross_References", "AS", "T1", "JOIN", "Benefits_Overpayments", "AS", "T2", "ON", "T1.cmi_cross_ref_id", "=", "T2.cmi_cross_ref_id", "ORDER", "BY", "T2.council_tax_id"], "query_toks_no_value": ["select", "t1", ".", "source_system_code", ",", "t2", ".", "council_tax_id", "from", "cmi_cross_references", "as", "t1", "join", "benefits_overpayments", "as", "t2", "on", "t1", ".", "cmi_cross_ref_id", "=", "t2", ".", "cmi_cross_ref_id", "order", "by", "t2", ".", "council_tax_id"], "question": "What is the tax source system code related to the benefits and overpayments? List the code and the benifit id, order by benifit id.", "question_toks": ["What", "is", "the", "tax", "source", "system", "code", "related", "to", "the", "benefits", "and", "overpayments", "?", "List", "the", "code", "and", "the", "benifit", "id", ",", "order", "by", "benifit", "id", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 11, false], null]], "table_units": [["table_unit", 1], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 10, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "local_govt_mdm", "query": "SELECT T1.source_system_code ,  T1.master_customer_id ,  T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Parking_Fines AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id", "query_toks": ["SELECT", "T1.source_system_code", ",", "T1.master_customer_id", ",", "T2.council_tax_id", "FROM", "CMI_Cross_References", "AS", "T1", "JOIN", "Parking_Fines", "AS", "T2", "ON", "T1.cmi_cross_ref_id", "=", "T2.cmi_cross_ref_id"], "query_toks_no_value": ["select", "t1", ".", "source_system_code", ",", "t1", ".", "master_customer_id", ",", "t2", ".", "council_tax_id", "from", "cmi_cross_references", "as", "t1", "join", "parking_fines", "as", "t2", "on", "t1", ".", "cmi_cross_ref_id", "=", "t2", ".", "cmi_cross_ref_id"], "question": "Wat is the tax source system code and master customer id of the taxes related to each parking fine id?", "question_toks": ["Wat", "is", "the", "tax", "source", "system", "code", "and", "master", "customer", "id", "of", "the", "taxes", "related", "to", "each", "parking", "fine", "id", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 13, false], null]], "table_units": [["table_unit", 1], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "local_govt_mdm", "query": "SELECT council_tax_id ,  cmi_cross_ref_id FROM parking_fines", "query_toks": ["SELECT", "council_tax_id", ",", "cmi_cross_ref_id", "FROM", "parking_fines"], "query_toks_no_value": ["select", "council_tax_id", ",", "cmi_cross_ref_id", "from", "parking_fines"], "question": "List the council tax ids and their related cmi cross references of all the parking fines.", "question_toks": ["List", "the", "council", "tax", "ids", "and", "their", "related", "cmi", "cross", "references", "of", "all", "the", "parking", "fines", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "party_host", "query": "SELECT Party_Theme ,  LOCATION FROM party", "query_toks": ["SELECT", "Party_Theme", ",", "LOCATION", "FROM", "party"], "query_toks_no_value": ["select", "party_theme", ",", "location", "from", "party"], "question": "What are the themes and locations of parties?", "question_toks": ["What", "are", "the", "themes", "and", "locations", "of", "parties", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "party_host", "query": "SELECT Party_Theme ,  LOCATION FROM party", "query_toks": ["SELECT", "Party_Theme", ",", "LOCATION", "FROM", "party"], "query_toks_no_value": ["select", "party_theme", ",", "location", "from", "party"], "question": "Give me the theme and location of each party.", "question_toks": ["Give", "me", "the", "theme", "and", "location", "of", "each", "party", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "party_host", "query": "SELECT First_year ,  Last_year FROM party WHERE Party_Theme  =  \"Spring\" OR Party_Theme  =  \"Teqnology\"", "query_toks": ["SELECT", "First_year", ",", "Last_year", "FROM", "party", "WHERE", "Party_Theme", "=", "``", "Spring", "''", "OR", "Party_Theme", "=", "``", "Teqnology", "''"], "query_toks_no_value": ["select", "first_year", ",", "last_year", "from", "party", "where", "party_theme", "=", "value", "or", "party_theme", "=", "value"], "question": "Show the first year and last year of parties with theme \"Spring\" or \"Teqnology\".", "question_toks": ["Show", "the", "first", "year", "and", "last", "year", "of", "parties", "with", "theme", "``", "Spring", "''", "or", "``", "Teqnology", "''", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Spring\"", null], "or", [false, 2, [0, [0, 2, false], null], "\"Teqnology\"", null]]}}, {"db_id": "party_host", "query": "SELECT First_year ,  Last_year FROM party WHERE Party_Theme  =  \"Spring\" OR Party_Theme  =  \"Teqnology\"", "query_toks": ["SELECT", "First_year", ",", "Last_year", "FROM", "party", "WHERE", "Party_Theme", "=", "``", "Spring", "''", "OR", "Party_Theme", "=", "``", "Teqnology", "''"], "query_toks_no_value": ["select", "first_year", ",", "last_year", "from", "party", "where", "party_theme", "=", "value", "or", "party_theme", "=", "value"], "question": "What are the first year and last year of the parties whose theme is \"Spring\" or \"Teqnology\"?", "question_toks": ["What", "are", "the", "first", "year", "and", "last", "year", "of", "the", "parties", "whose", "theme", "is", "``", "Spring", "''", "or", "``", "Teqnology", "''", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Spring\"", null], "or", [false, 2, [0, [0, 2, false], null], "\"Teqnology\"", null]]}}, {"db_id": "party_host", "query": "SELECT Nationality ,  COUNT(*) FROM HOST GROUP BY Nationality", "query_toks": ["SELECT", "Nationality", ",", "COUNT", "(", "*", ")", "FROM", "HOST", "GROUP", "BY", "Nationality"], "query_toks_no_value": ["select", "nationality", ",", "count", "(", "*", ")", "from", "host", "group", "by", "nationality"], "question": "Show different nationalities along with the number of hosts of each nationality.", "question_toks": ["Show", "different", "nationalities", "along", "with", "the", "number", "of", "hosts", "of", "each", "nationality", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "party_host", "query": "SELECT Nationality ,  COUNT(*) FROM HOST GROUP BY Nationality", "query_toks": ["SELECT", "Nationality", ",", "COUNT", "(", "*", ")", "FROM", "HOST", "GROUP", "BY", "Nationality"], "query_toks_no_value": ["select", "nationality", ",", "count", "(", "*", ")", "from", "host", "group", "by", "nationality"], "question": "How many hosts does each nationality have? List the nationality and the count.", "question_toks": ["How", "many", "hosts", "does", "each", "nationality", "have", "?", "List", "the", "nationality", "and", "the", "count", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "party_host", "query": "SELECT T3.Party_Theme ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID", "query_toks": ["SELECT", "T3.Party_Theme", ",", "T2.Name", "FROM", "party_host", "AS", "T1", "JOIN", "HOST", "AS", "T2", "ON", "T1.Host_ID", "=", "T2.Host_ID", "JOIN", "party", "AS", "T3", "ON", "T1.Party_ID", "=", "T3.Party_ID"], "query_toks_no_value": ["select", "t3", ".", "party_theme", ",", "t2", ".", "name", "from", "party_host", "as", "t1", "join", "host", "as", "t2", "on", "t1", ".", "host_id", "=", "t2", ".", "host_id", "join", "party", "as", "t3", "on", "t1", ".", "party_id", "=", "t3", ".", "party_id"], "question": "Show the themes of parties and the names of the party hosts.", "question_toks": ["Show", "the", "themes", "of", "parties", "and", "the", "names", "of", "the", "party", "hosts", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 12, false], null], [0, 7, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "party_host", "query": "SELECT T3.Party_Theme ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID", "query_toks": ["SELECT", "T3.Party_Theme", ",", "T2.Name", "FROM", "party_host", "AS", "T1", "JOIN", "HOST", "AS", "T2", "ON", "T1.Host_ID", "=", "T2.Host_ID", "JOIN", "party", "AS", "T3", "ON", "T1.Party_ID", "=", "T3.Party_ID"], "query_toks_no_value": ["select", "t3", ".", "party_theme", ",", "t2", ".", "name", "from", "party_host", "as", "t1", "join", "host", "as", "t2", "on", "t1", ".", "host_id", "=", "t2", ".", "host_id", "join", "party", "as", "t3", "on", "t1", ".", "party_id", "=", "t3", ".", "party_id"], "question": "For each party, return its theme and the name of its host.", "question_toks": ["For", "each", "party", ",", "return", "its", "theme", "and", "the", "name", "of", "its", "host", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 12, false], null], [0, 7, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "party_host", "query": "SELECT T3.Location ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID ORDER BY T2.Age", "query_toks": ["SELECT", "T3.Location", ",", "T2.Name", "FROM", "party_host", "AS", "T1", "JOIN", "HOST", "AS", "T2", "ON", "T1.Host_ID", "=", "T2.Host_ID", "JOIN", "party", "AS", "T3", "ON", "T1.Party_ID", "=", "T3.Party_ID", "ORDER", "BY", "T2.Age"], "query_toks_no_value": ["select", "t3", ".", "location", ",", "t2", ".", "name", "from", "party_host", "as", "t1", "join", "host", "as", "t2", "on", "t1", ".", "host_id", "=", "t2", ".", "host_id", "join", "party", "as", "t3", "on", "t1", ".", "party_id", "=", "t3", ".", "party_id", "order", "by", "t2", ".", "age"], "question": "Show the locations of parties and the names of the party hosts in ascending order of the age of the host.", "question_toks": ["Show", "the", "locations", "of", "parties", "and", "the", "names", "of", "the", "party", "hosts", "in", "ascending", "order", "of", "the", "age", "of", "the", "host", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 12, false], null], [0, 7, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 10, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "party_host", "query": "SELECT T3.Location ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID ORDER BY T2.Age", "query_toks": ["SELECT", "T3.Location", ",", "T2.Name", "FROM", "party_host", "AS", "T1", "JOIN", "HOST", "AS", "T2", "ON", "T1.Host_ID", "=", "T2.Host_ID", "JOIN", "party", "AS", "T3", "ON", "T1.Party_ID", "=", "T3.Party_ID", "ORDER", "BY", "T2.Age"], "query_toks_no_value": ["select", "t3", ".", "location", ",", "t2", ".", "name", "from", "party_host", "as", "t1", "join", "host", "as", "t2", "on", "t1", ".", "host_id", "=", "t2", ".", "host_id", "join", "party", "as", "t3", "on", "t1", ".", "party_id", "=", "t3", ".", "party_id", "order", "by", "t2", ".", "age"], "question": "For each party, find its location and the name of its host. Sort the result in ascending order of the age of the host.", "question_toks": ["For", "each", "party", ",", "find", "its", "location", "and", "the", "name", "of", "its", "host", ".", "Sort", "the", "result", "in", "ascending", "order", "of", "the", "age", "of", "the", "host", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 12, false], null], [0, 7, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 10, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "party_host", "query": "SELECT Name ,  Nationality FROM HOST ORDER BY Age DESC LIMIT 1", "query_toks": ["SELECT", "Name", ",", "Nationality", "FROM", "HOST", "ORDER", "BY", "Age", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "nationality", "from", "host", "order", "by", "age", "desc", "limit", "value"], "question": "Show the name and the nationality of the oldest host.", "question_toks": ["Show", "the", "name", "and", "the", "nationality", "of", "the", "oldest", "host", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 10, false], null]]], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "party_host", "query": "SELECT Name ,  Nationality FROM HOST ORDER BY Age DESC LIMIT 1", "query_toks": ["SELECT", "Name", ",", "Nationality", "FROM", "HOST", "ORDER", "BY", "Age", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "nationality", "from", "host", "order", "by", "age", "desc", "limit", "value"], "question": "What are the name and the nationality of the host of the highest age?", "question_toks": ["What", "are", "the", "name", "and", "the", "nationality", "of", "the", "host", "of", "the", "highest", "age", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 10, false], null]]], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "storm_record", "query": "SELECT region_code ,  region_name FROM region ORDER BY region_code", "query_toks": ["SELECT", "region_code", ",", "region_name", "FROM", "region", "ORDER", "BY", "region_code"], "query_toks_no_value": ["select", "region_code", ",", "region_name", "from", "region", "order", "by", "region_code"], "question": "Show all region code and region name sorted by the codes.", "question_toks": ["Show", "all", "region", "code", "and", "region", "name", "sorted", "by", "the", "codes", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 8, false], null]]], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "storm_record", "query": "SELECT region_code ,  region_name FROM region ORDER BY region_code", "query_toks": ["SELECT", "region_code", ",", "region_name", "FROM", "region", "ORDER", "BY", "region_code"], "query_toks_no_value": ["select", "region_code", ",", "region_name", "from", "region", "order", "by", "region_code"], "question": "What are the codes and names for all regions, sorted by codes?", "question_toks": ["What", "are", "the", "codes", "and", "names", "for", "all", "regions", ",", "sorted", "by", "codes", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 8, false], null]]], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "storm_record", "query": "SELECT name ,  dates_active ,  number_deaths FROM storm WHERE number_deaths  >=  1", "query_toks": ["SELECT", "name", ",", "dates_active", ",", "number_deaths", "FROM", "storm", "WHERE", "number_deaths", ">", "=", "1"], "query_toks_no_value": ["select", "name", ",", "dates_active", ",", "number_deaths", "from", "storm", "where", "number_deaths", ">", "=", "value"], "question": "List name, dates active, and number of deaths for all storms with at least 1 death.", "question_toks": ["List", "name", ",", "dates", "active", ",", "and", "number", "of", "deaths", "for", "all", "storms", "with", "at", "least", "1", "death", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 5, [0, [0, 6, false], null], 1.0, null]]}}, {"db_id": "storm_record", "query": "SELECT name ,  dates_active ,  number_deaths FROM storm WHERE number_deaths  >=  1", "query_toks": ["SELECT", "name", ",", "dates_active", ",", "number_deaths", "FROM", "storm", "WHERE", "number_deaths", ">", "=", "1"], "query_toks_no_value": ["select", "name", ",", "dates_active", ",", "number_deaths", "from", "storm", "where", "number_deaths", ">", "=", "value"], "question": "What are the names, dates active, and number of deaths for storms that had 1 or more death?", "question_toks": ["What", "are", "the", "names", ",", "dates", "active", ",", "and", "number", "of", "deaths", "for", "storms", "that", "had", "1", "or", "more", "death", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 5, [0, [0, 6, false], null], 1.0, null]]}}, {"db_id": "storm_record", "query": "SELECT avg(damage_millions_USD) ,  max(damage_millions_USD) FROM storm WHERE max_speed  >  1000", "query_toks": ["SELECT", "avg", "(", "damage_millions_USD", ")", ",", "max", "(", "damage_millions_USD", ")", "FROM", "storm", "WHERE", "max_speed", ">", "1000"], "query_toks_no_value": ["select", "avg", "(", "damage_millions_usd", ")", ",", "max", "(", "damage_millions_usd", ")", "from", "storm", "where", "max_speed", ">", "value"], "question": "Show the average and maximum damage for all storms with max speed higher than 1000.", "question_toks": ["Show", "the", "average", "and", "maximum", "damage", "for", "all", "storms", "with", "max", "speed", "higher", "than", "1000", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 5, false], null]], [1, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 4, false], null], 1000.0, null]]}}, {"db_id": "storm_record", "query": "SELECT avg(damage_millions_USD) ,  max(damage_millions_USD) FROM storm WHERE max_speed  >  1000", "query_toks": ["SELECT", "avg", "(", "damage_millions_USD", ")", ",", "max", "(", "damage_millions_USD", ")", "FROM", "storm", "WHERE", "max_speed", ">", "1000"], "query_toks_no_value": ["select", "avg", "(", "damage_millions_usd", ")", ",", "max", "(", "damage_millions_usd", ")", "from", "storm", "where", "max_speed", ">", "value"], "question": "What is the average and maximum damage in millions for storms that had a max speed over 1000?", "question_toks": ["What", "is", "the", "average", "and", "maximum", "damage", "in", "millions", "for", "storms", "that", "had", "a", "max", "speed", "over", "1000", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 5, false], null]], [1, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 4, false], null], 1000.0, null]]}}, {"db_id": "storm_record", "query": "SELECT sum(number_deaths) ,  sum(damage_millions_USD) FROM storm WHERE max_speed  >  (SELECT avg(max_speed) FROM storm)", "query_toks": ["SELECT", "sum", "(", "number_deaths", ")", ",", "sum", "(", "damage_millions_USD", ")", "FROM", "storm", "WHERE", "max_speed", ">", "(", "SELECT", "avg", "(", "max_speed", ")", "FROM", "storm", ")"], "query_toks_no_value": ["select", "sum", "(", "number_deaths", ")", ",", "sum", "(", "damage_millions_usd", ")", "from", "storm", "where", "max_speed", ">", "(", "select", "avg", "(", "max_speed", ")", "from", "storm", ")"], "question": "What is the total number of deaths and damage for all storms with a max speed greater than the average?", "question_toks": ["What", "is", "the", "total", "number", "of", "deaths", "and", "damage", "for", "all", "storms", "with", "a", "max", "speed", "greater", "than", "the", "average", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 6, false], null]], [4, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 4, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "storm_record", "query": "SELECT sum(number_deaths) ,  sum(damage_millions_USD) FROM storm WHERE max_speed  >  (SELECT avg(max_speed) FROM storm)", "query_toks": ["SELECT", "sum", "(", "number_deaths", ")", ",", "sum", "(", "damage_millions_USD", ")", "FROM", "storm", "WHERE", "max_speed", ">", "(", "SELECT", "avg", "(", "max_speed", ")", "FROM", "storm", ")"], "query_toks_no_value": ["select", "sum", "(", "number_deaths", ")", ",", "sum", "(", "damage_millions_usd", ")", "from", "storm", "where", "max_speed", ">", "(", "select", "avg", "(", "max_speed", ")", "from", "storm", ")"], "question": "Return the total number of deaths and total damange in millions for storms that had a max speed greater than the average.", "question_toks": ["Return", "the", "total", "number", "of", "deaths", "and", "total", "damange", "in", "millions", "for", "storms", "that", "had", "a", "max", "speed", "greater", "than", "the", "average", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 6, false], null]], [4, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 4, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "storm_record", "query": "SELECT name ,  damage_millions_USD FROM storm ORDER BY max_speed DESC", "query_toks": ["SELECT", "name", ",", "damage_millions_USD", "FROM", "storm", "ORDER", "BY", "max_speed", "DESC"], "query_toks_no_value": ["select", "name", ",", "damage_millions_usd", "from", "storm", "order", "by", "max_speed", "desc"], "question": "List name and damage for all storms in a descending order of max speed.", "question_toks": ["List", "name", "and", "damage", "for", "all", "storms", "in", "a", "descending", "order", "of", "max", "speed", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 4, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "storm_record", "query": "SELECT name ,  damage_millions_USD FROM storm ORDER BY max_speed DESC", "query_toks": ["SELECT", "name", ",", "damage_millions_USD", "FROM", "storm", "ORDER", "BY", "max_speed", "DESC"], "query_toks_no_value": ["select", "name", ",", "damage_millions_usd", "from", "storm", "order", "by", "max_speed", "desc"], "question": "What are the names and damage in millions for storms, ordered by their max speeds descending?", "question_toks": ["What", "are", "the", "names", "and", "damage", "in", "millions", "for", "storms", ",", "ordered", "by", "their", "max", "speeds", "descending", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 4, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "storm_record", "query": "SELECT T1.region_name ,  count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id", "query_toks": ["SELECT", "T1.region_name", ",", "count", "(", "*", ")", "FROM", "region", "AS", "T1", "JOIN", "affected_region", "AS", "T2", "ON", "T1.region_id", "=", "T2.region_id", "GROUP", "BY", "T1.region_id"], "query_toks_no_value": ["select", "t1", ".", "region_name", ",", "count", "(", "*", ")", "from", "region", "as", "t1", "join", "affected_region", "as", "t2", "on", "t1", ".", "region_id", "=", "t2", ".", "region_id", "group", "by", "t1", ".", "region_id"], "question": "Show the name for regions and the number of storms for each region.", "question_toks": ["Show", "the", "name", "for", "regions", "and", "the", "number", "of", "storms", "for", "each", "region", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 10, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "storm_record", "query": "SELECT T1.region_name ,  count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id", "query_toks": ["SELECT", "T1.region_name", ",", "count", "(", "*", ")", "FROM", "region", "AS", "T1", "JOIN", "affected_region", "AS", "T2", "ON", "T1.region_id", "=", "T2.region_id", "GROUP", "BY", "T1.region_id"], "query_toks_no_value": ["select", "t1", ".", "region_name", ",", "count", "(", "*", ")", "from", "region", "as", "t1", "join", "affected_region", "as", "t2", "on", "t1", ".", "region_id", "=", "t2", ".", "region_id", "group", "by", "t1", ".", "region_id"], "question": "How many storms occured in each region?", "question_toks": ["How", "many", "storms", "occured", "in", "each", "region", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 10, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "storm_record", "query": "SELECT T1.name ,  count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id", "query_toks": ["SELECT", "T1.name", ",", "count", "(", "*", ")", "FROM", "storm", "AS", "T1", "JOIN", "affected_region", "AS", "T2", "ON", "T1.storm_id", "=", "T2.storm_id", "GROUP", "BY", "T1.storm_id"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "count", "(", "*", ")", "from", "storm", "as", "t1", "join", "affected_region", "as", "t2", "on", "t1", ".", "storm_id", "=", "t2", ".", "storm_id", "group", "by", "t1", ".", "storm_id"], "question": "List the name for storms and the number of affected regions for each storm.", "question_toks": ["List", "the", "name", "for", "storms", "and", "the", "number", "of", "affected", "regions", "for", "each", "storm", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 11, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "storm_record", "query": "SELECT T1.name ,  count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id", "query_toks": ["SELECT", "T1.name", ",", "count", "(", "*", ")", "FROM", "storm", "AS", "T1", "JOIN", "affected_region", "AS", "T2", "ON", "T1.storm_id", "=", "T2.storm_id", "GROUP", "BY", "T1.storm_id"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "count", "(", "*", ")", "from", "storm", "as", "t1", "join", "affected_region", "as", "t2", "on", "t1", ".", "storm_id", "=", "t2", ".", "storm_id", "group", "by", "t1", ".", "storm_id"], "question": "How many regions were affected by each storm?", "question_toks": ["How", "many", "regions", "were", "affected", "by", "each", "storm", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 11, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "storm_record", "query": "SELECT T1.name ,  T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", ",", "T1.max_speed", "FROM", "storm", "AS", "T1", "JOIN", "affected_region", "AS", "T2", "ON", "T1.storm_id", "=", "T2.storm_id", "GROUP", "BY", "T1.storm_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "max_speed", "from", "storm", "as", "t1", "join", "affected_region", "as", "t2", "on", "t1", ".", "storm_id", "=", "t2", ".", "storm_id", "group", "by", "t1", ".", "storm_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the storm name and max speed which affected the greatest number of regions?", "question_toks": ["What", "is", "the", "storm", "name", "and", "max", "speed", "which", "affected", "the", "greatest", "number", "of", "regions", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 11, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "storm_record", "query": "SELECT T1.name ,  T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", ",", "T1.max_speed", "FROM", "storm", "AS", "T1", "JOIN", "affected_region", "AS", "T2", "ON", "T1.storm_id", "=", "T2.storm_id", "GROUP", "BY", "T1.storm_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "max_speed", "from", "storm", "as", "t1", "join", "affected_region", "as", "t2", "on", "t1", ".", "storm_id", "=", "t2", ".", "storm_id", "group", "by", "t1", ".", "storm_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Return the name and max speed of the storm that affected the most regions.", "question_toks": ["Return", "the", "name", "and", "max", "speed", "of", "the", "storm", "that", "affected", "the", "most", "regions", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 11, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "election", "query": "SELECT County_name ,  Population FROM county", "query_toks": ["SELECT", "County_name", ",", "Population", "FROM", "county"], "query_toks_no_value": ["select", "county_name", ",", "population", "from", "county"], "question": "Show the county name and population of all counties.", "question_toks": ["Show", "the", "county", "name", "and", "population", "of", "all", "counties", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "election", "query": "SELECT County_name ,  Population FROM county", "query_toks": ["SELECT", "County_name", ",", "Population", "FROM", "county"], "query_toks_no_value": ["select", "county_name", ",", "population", "from", "county"], "question": "What are the name and population of each county?", "question_toks": ["What", "are", "the", "name", "and", "population", "of", "each", "county", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "election", "query": "SELECT max(Population) ,  min(Population) FROM county", "query_toks": ["SELECT", "max", "(", "Population", ")", ",", "min", "(", "Population", ")", "FROM", "county"], "query_toks_no_value": ["select", "max", "(", "population", ")", ",", "min", "(", "population", ")", "from", "county"], "question": "Return the maximum and minimum population among all counties.", "question_toks": ["Return", "the", "maximum", "and", "minimum", "population", "among", "all", "counties", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 3, false], null]], [2, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "election", "query": "SELECT max(Population) ,  min(Population) FROM county", "query_toks": ["SELECT", "max", "(", "Population", ")", ",", "min", "(", "Population", ")", "FROM", "county"], "query_toks_no_value": ["select", "max", "(", "population", ")", ",", "min", "(", "population", ")", "from", "county"], "question": "What are the maximum and minimum population of the counties?", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "population", "of", "the", "counties", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 3, false], null]], [2, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "election", "query": "SELECT Delegate ,  Committee FROM election", "query_toks": ["SELECT", "Delegate", ",", "Committee", "FROM", "election"], "query_toks_no_value": ["select", "delegate", ",", "committee", "from", "election"], "question": "Show the delegate and committee information of elections.", "question_toks": ["Show", "the", "delegate", "and", "committee", "information", "of", "elections", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": []}}, {"db_id": "election", "query": "SELECT Delegate ,  Committee FROM election", "query_toks": ["SELECT", "Delegate", ",", "Committee", "FROM", "election"], "query_toks_no_value": ["select", "delegate", ",", "committee", "from", "election"], "question": "What are the delegate and committee information for each election record?", "question_toks": ["What", "are", "the", "delegate", "and", "committee", "information", "for", "each", "election", "record", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": []}}, {"db_id": "election", "query": "SELECT Lieutenant_Governor ,  Comptroller FROM party WHERE Party  =  \"Democratic\"", "query_toks": ["SELECT", "Lieutenant_Governor", ",", "Comptroller", "FROM", "party", "WHERE", "Party", "=", "``", "Democratic", "''"], "query_toks_no_value": ["select", "lieutenant_governor", ",", "comptroller", "from", "party", "where", "party", "=", "value"], "question": "Show the lieutenant governor and comptroller from the democratic party.", "question_toks": ["Show", "the", "lieutenant", "governor", "and", "comptroller", "from", "the", "democratic", "party", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"Democratic\"", null]]}}, {"db_id": "election", "query": "SELECT Lieutenant_Governor ,  Comptroller FROM party WHERE Party  =  \"Democratic\"", "query_toks": ["SELECT", "Lieutenant_Governor", ",", "Comptroller", "FROM", "party", "WHERE", "Party", "=", "``", "Democratic", "''"], "query_toks_no_value": ["select", "lieutenant_governor", ",", "comptroller", "from", "party", "where", "party", "=", "value"], "question": "Who are the lieutenant governor and comptroller from the democratic party?", "question_toks": ["Who", "are", "the", "lieutenant", "governor", "and", "comptroller", "from", "the", "democratic", "party", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"Democratic\"", null]]}}, {"db_id": "election", "query": "SELECT T2.Delegate ,  T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District", "query_toks": ["SELECT", "T2.Delegate", ",", "T1.County_name", "FROM", "county", "AS", "T1", "JOIN", "election", "AS", "T2", "ON", "T1.County_id", "=", "T2.District"], "query_toks_no_value": ["select", "t2", ".", "delegate", ",", "t1", ".", "county_name", "from", "county", "as", "t1", "join", "election", "as", "t2", "on", "t1", ".", "county_id", "=", "t2", ".", "district"], "question": "Show the delegates and the names of county they belong to.", "question_toks": ["Show", "the", "delegates", "and", "the", "names", "of", "county", "they", "belong", "to", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "election", "query": "SELECT T2.Delegate ,  T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District", "query_toks": ["SELECT", "T2.Delegate", ",", "T1.County_name", "FROM", "county", "AS", "T1", "JOIN", "election", "AS", "T2", "ON", "T1.County_id", "=", "T2.District"], "query_toks_no_value": ["select", "t2", ".", "delegate", ",", "t1", ".", "county_name", "from", "county", "as", "t1", "join", "election", "as", "t2", "on", "t1", ".", "county_id", "=", "t2", ".", "district"], "question": "What are the delegate and name of the county they belong to, for each county?", "question_toks": ["What", "are", "the", "delegate", "and", "name", "of", "the", "county", "they", "belong", "to", ",", "for", "each", "county", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "election", "query": "SELECT T1.Delegate ,  T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID", "query_toks": ["SELECT", "T1.Delegate", ",", "T2.Party", "FROM", "election", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.Party", "=", "T2.Party_ID"], "query_toks_no_value": ["select", "t1", ".", "delegate", ",", "t2", ".", "party", "from", "election", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party", "=", "t2", ".", "party_id"], "question": "Show the delegates and the names of the party they belong to.", "question_toks": ["Show", "the", "delegates", "and", "the", "names", "of", "the", "party", "they", "belong", "to", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 17, false], null], [0, 5, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "election", "query": "SELECT T1.Delegate ,  T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID", "query_toks": ["SELECT", "T1.Delegate", ",", "T2.Party", "FROM", "election", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.Party", "=", "T2.Party_ID"], "query_toks_no_value": ["select", "t1", ".", "delegate", ",", "t2", ".", "party", "from", "election", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party", "=", "t2", ".", "party_id"], "question": "For each delegate, find the names of the party they are part of.", "question_toks": ["For", "each", "delegate", ",", "find", "the", "names", "of", "the", "party", "they", "are", "part", "of", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 17, false], null], [0, 5, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "election", "query": "SELECT T1.County_name ,  COUNT(*) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id", "query_toks": ["SELECT", "T1.County_name", ",", "COUNT", "(", "*", ")", "FROM", "county", "AS", "T1", "JOIN", "election", "AS", "T2", "ON", "T1.County_id", "=", "T2.District", "GROUP", "BY", "T1.County_id"], "query_toks_no_value": ["select", "t1", ".", "county_name", ",", "count", "(", "*", ")", "from", "county", "as", "t1", "join", "election", "as", "t2", "on", "t1", ".", "county_id", "=", "t2", ".", "district", "group", "by", "t1", ".", "county_id"], "question": "Show the name of each county along with the corresponding number of delegates from that county.", "question_toks": ["Show", "the", "name", "of", "each", "county", "along", "with", "the", "corresponding", "number", "of", "delegates", "from", "that", "county", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "election", "query": "SELECT T1.County_name ,  COUNT(*) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id", "query_toks": ["SELECT", "T1.County_name", ",", "COUNT", "(", "*", ")", "FROM", "county", "AS", "T1", "JOIN", "election", "AS", "T2", "ON", "T1.County_id", "=", "T2.District", "GROUP", "BY", "T1.County_id"], "query_toks_no_value": ["select", "t1", ".", "county_name", ",", "count", "(", "*", ")", "from", "county", "as", "t1", "join", "election", "as", "t2", "on", "t1", ".", "county_id", "=", "t2", ".", "district", "group", "by", "t1", ".", "county_id"], "question": "For each county, find the name of the county and the number of delegates from that county.", "question_toks": ["For", "each", "county", ",", "find", "the", "name", "of", "the", "county", "and", "the", "number", "of", "delegates", "from", "that", "county", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "election", "query": "SELECT T2.Party ,  COUNT(*) FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party", "query_toks": ["SELECT", "T2.Party", ",", "COUNT", "(", "*", ")", "FROM", "election", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.Party", "=", "T2.Party_ID", "GROUP", "BY", "T1.Party"], "query_toks_no_value": ["select", "t2", ".", "party", ",", "count", "(", "*", ")", "from", "election", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party", "=", "t2", ".", "party_id", "group", "by", "t1", ".", "party"], "question": "Show the name of each party and the corresponding number of delegates from that party.", "question_toks": ["Show", "the", "name", "of", "each", "party", "and", "the", "corresponding", "number", "of", "delegates", "from", "that", "party", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 17, false], null], [0, 5, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 17, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "election", "query": "SELECT T2.Party ,  COUNT(*) FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party", "query_toks": ["SELECT", "T2.Party", ",", "COUNT", "(", "*", ")", "FROM", "election", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.Party", "=", "T2.Party_ID", "GROUP", "BY", "T1.Party"], "query_toks_no_value": ["select", "t2", ".", "party", ",", "count", "(", "*", ")", "from", "election", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party", "=", "t2", ".", "party_id", "group", "by", "t1", ".", "party"], "question": "For each party, return the name of the party and the number of delegates from that party.", "question_toks": ["For", "each", "party", ",", "return", "the", "name", "of", "the", "party", "and", "the", "number", "of", "delegates", "from", "that", "party", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 17, false], null], [0, 5, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 17, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "election", "query": "SELECT Comptroller ,  COUNT(*) FROM party GROUP BY Comptroller ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Comptroller", ",", "COUNT", "(", "*", ")", "FROM", "party", "GROUP", "BY", "Comptroller", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "comptroller", ",", "count", "(", "*", ")", "from", "party", "group", "by", "comptroller", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Show the people that have been comptroller the most times and the corresponding number of times.", "question_toks": ["Show", "the", "people", "that", "have", "been", "comptroller", "the", "most", "times", "and", "the", "corresponding", "number", "of", "times", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "election", "query": "SELECT Comptroller ,  COUNT(*) FROM party GROUP BY Comptroller ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Comptroller", ",", "COUNT", "(", "*", ")", "FROM", "party", "GROUP", "BY", "Comptroller", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "comptroller", ",", "count", "(", "*", ")", "from", "party", "group", "by", "comptroller", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which people severed as comptroller most frequently? Give me the name of the person and the frequency count.", "question_toks": ["Which", "people", "severed", "as", "comptroller", "most", "frequently", "?", "Give", "me", "the", "name", "of", "the", "person", "and", "the", "frequency", "count", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "news_report", "query": "SELECT Nationality ,  Age FROM journalist", "query_toks": ["SELECT", "Nationality", ",", "Age", "FROM", "journalist"], "query_toks_no_value": ["select", "nationality", ",", "age", "from", "journalist"], "question": "What are the nationalities and ages of journalists?", "question_toks": ["What", "are", "the", "nationalities", "and", "ages", "of", "journalists", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "news_report", "query": "SELECT Nationality ,  COUNT(*) FROM journalist GROUP BY Nationality", "query_toks": ["SELECT", "Nationality", ",", "COUNT", "(", "*", ")", "FROM", "journalist", "GROUP", "BY", "Nationality"], "query_toks_no_value": ["select", "nationality", ",", "count", "(", "*", ")", "from", "journalist", "group", "by", "nationality"], "question": "Show the different nationalities and the number of journalists of each nationality.", "question_toks": ["Show", "the", "different", "nationalities", "and", "the", "number", "of", "journalists", "of", "each", "nationality", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "news_report", "query": "SELECT Date ,  Name ,  venue FROM event ORDER BY Event_Attendance DESC", "query_toks": ["SELECT", "Date", ",", "Name", ",", "venue", "FROM", "event", "ORDER", "BY", "Event_Attendance", "DESC"], "query_toks_no_value": ["select", "date", ",", "name", ",", "venue", "from", "event", "order", "by", "event_attendance", "desc"], "question": "Show the dates, places, and names of events in descending order of the attendance.", "question_toks": ["Show", "the", "dates", ",", "places", ",", "and", "names", "of", "events", "in", "descending", "order", "of", "the", "attendance", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "news_report", "query": "SELECT T3.Name ,  T2.Date FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID", "query_toks": ["SELECT", "T3.Name", ",", "T2.Date", "FROM", "news_report", "AS", "T1", "JOIN", "event", "AS", "T2", "ON", "T1.Event_ID", "=", "T2.Event_ID", "JOIN", "journalist", "AS", "T3", "ON", "T1.journalist_ID", "=", "T3.journalist_ID"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "date", "from", "news_report", "as", "t1", "join", "event", "as", "t2", "on", "t1", ".", "event_id", "=", "t2", ".", "event_id", "join", "journalist", "as", "t3", "on", "t1", ".", "journalist_id", "=", "t3", ".", "journalist_id"], "question": "Show the names of journalists and the dates of the events they reported.", "question_toks": ["Show", "the", "names", "of", "journalists", "and", "the", "dates", "of", "the", "events", "they", "reported", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 12, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "news_report", "query": "SELECT T3.Name ,  T2.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID ORDER BY T2.Event_Attendance ASC", "query_toks": ["SELECT", "T3.Name", ",", "T2.Name", "FROM", "news_report", "AS", "T1", "JOIN", "event", "AS", "T2", "ON", "T1.Event_ID", "=", "T2.Event_ID", "JOIN", "journalist", "AS", "T3", "ON", "T1.journalist_ID", "=", "T3.journalist_ID", "ORDER", "BY", "T2.Event_Attendance", "ASC"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "name", "from", "news_report", "as", "t1", "join", "event", "as", "t2", "on", "t1", ".", "event_id", "=", "t2", ".", "event_id", "join", "journalist", "as", "t3", "on", "t1", ".", "journalist_id", "=", "t3", ".", "journalist_id", "order", "by", "t2", ".", "event_attendance", "asc"], "question": "Show the names of journalists and the names of the events they reported in ascending order", "question_toks": ["Show", "the", "names", "of", "journalists", "and", "the", "names", "of", "the", "events", "they", "reported", "in", "ascending", "order"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 12, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "news_report", "query": "SELECT T3.Name ,  COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID GROUP BY T3.Name", "query_toks": ["SELECT", "T3.Name", ",", "COUNT", "(", "*", ")", "FROM", "news_report", "AS", "T1", "JOIN", "event", "AS", "T2", "ON", "T1.Event_ID", "=", "T2.Event_ID", "JOIN", "journalist", "AS", "T3", "ON", "T1.journalist_ID", "=", "T3.journalist_ID", "GROUP", "BY", "T3.Name"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "count", "(", "*", ")", "from", "news_report", "as", "t1", "join", "event", "as", "t2", "on", "t1", ".", "event_id", "=", "t2", ".", "event_id", "join", "journalist", "as", "t3", "on", "t1", ".", "journalist_id", "=", "t3", ".", "journalist_id", "group", "by", "t3", ".", "name"], "question": "Show the names of journalists and the number of events they reported.", "question_toks": ["Show", "the", "names", "of", "journalists", "and", "the", "number", "of", "events", "they", "reported", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 12, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "news_report", "query": "SELECT avg(Event_Attendance) ,  max(Event_Attendance) FROM event", "query_toks": ["SELECT", "avg", "(", "Event_Attendance", ")", ",", "max", "(", "Event_Attendance", ")", "FROM", "event"], "query_toks_no_value": ["select", "avg", "(", "event_attendance", ")", ",", "max", "(", "event_attendance", ")", "from", "event"], "question": "what are the average and maximum attendances of all events?", "question_toks": ["what", "are", "the", "average", "and", "maximum", "attendances", "of", "all", "events", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 5, false], null]], [1, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "news_report", "query": "SELECT avg(t1.age) ,  avg(Years_working) ,  t2.work_type FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id  =  t2.journalist_id GROUP BY t2.work_type", "query_toks": ["SELECT", "avg", "(", "t1.age", ")", ",", "avg", "(", "Years_working", ")", ",", "t2.work_type", "FROM", "journalist", "AS", "t1", "JOIN", "news_report", "AS", "t2", "ON", "t1.journalist_id", "=", "t2.journalist_id", "GROUP", "BY", "t2.work_type"], "query_toks_no_value": ["select", "avg", "(", "t1", ".", "age", ")", ",", "avg", "(", "years_working", ")", ",", "t2", ".", "work_type", "from", "journalist", "as", "t1", "join", "news_report", "as", "t2", "on", "t1", ".", "journalist_id", "=", "t2", ".", "journalist_id", "group", "by", "t2", ".", "work_type"], "question": "Find the average age and experience working length of journalists working on different role type.", "question_toks": ["Find", "the", "average", "age", "and", "experience", "working", "length", "of", "journalists", "working", "on", "different", "role", "type", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 9, false], null]], [5, [0, [0, 10, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "news_report", "query": "SELECT venue ,  name FROM event ORDER BY Event_Attendance DESC LIMIT 2", "query_toks": ["SELECT", "venue", ",", "name", "FROM", "event", "ORDER", "BY", "Event_Attendance", "DESC", "LIMIT", "2"], "query_toks_no_value": ["select", "venue", ",", "name", "from", "event", "order", "by", "event_attendance", "desc", "limit", "value"], "question": "List the event venues and names that have the top 2 most number of people attended.", "question_toks": ["List", "the", "event", "venues", "and", "names", "that", "have", "the", "top", "2", "most", "number", "of", "people", "attended", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 2, "orderBy": ["desc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "restaurant_1", "query": "SELECT ResName , Rating FROM Restaurant ORDER BY Rating DESC LIMIT 1;", "query_toks": ["SELECT", "ResName", ",", "Rating", "FROM", "Restaurant", "ORDER", "BY", "Rating", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "resname", ",", "rating", "from", "restaurant", "order", "by", "rating", "desc", "limit", "value"], "question": "Which restaurants have highest rating? List the restaurant name and its rating.", "question_toks": ["Which", "restaurants", "have", "highest", "rating", "?", "List", "the", "restaurant", "name", "and", "its", "rating", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 12, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "restaurant_1", "query": "SELECT Fname , Lname FROM Student WHERE Major  =  600;", "query_toks": ["SELECT", "Fname", ",", "Lname", "FROM", "Student", "WHERE", "Major", "=", "600", ";"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "student", "where", "major", "=", "value"], "question": "List all students' first names and last names who majored in 600.", "question_toks": ["List", "all", "students", "'", "first", "names", "and", "last", "names", "who", "majored", "in", "600", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], 600.0, null]]}}, {"db_id": "restaurant_1", "query": "SELECT Advisor ,  count(*) FROM Student GROUP BY Advisor ORDER BY count(Advisor) DESC LIMIT 1;", "query_toks": ["SELECT", "Advisor", ",", "count", "(", "*", ")", "FROM", "Student", "GROUP", "BY", "Advisor", "ORDER", "BY", "count", "(", "Advisor", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "advisor", ",", "count", "(", "*", ")", "from", "student", "group", "by", "advisor", "order", "by", "count", "(", "advisor", ")", "desc", "limit", "value"], "question": "Which Advisor has most of students? List advisor and the number of students.", "question_toks": ["Which", "Advisor", "has", "most", "of", "students", "?", "List", "advisor", "and", "the", "number", "of", "students", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 7, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "restaurant_1", "query": "SELECT Major ,  count(*) FROM Student GROUP BY Major ORDER BY count(Major) ASC LIMIT 1;", "query_toks": ["SELECT", "Major", ",", "count", "(", "*", ")", "FROM", "Student", "GROUP", "BY", "Major", "ORDER", "BY", "count", "(", "Major", ")", "ASC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "major", ",", "count", "(", "*", ")", "from", "student", "group", "by", "major", "order", "by", "count", "(", "major", ")", "asc", "limit", "value"], "question": "Which major has least number of students? List the major and the number of students.", "question_toks": ["Which", "major", "has", "least", "number", "of", "students", "?", "List", "the", "major", "and", "the", "number", "of", "students", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 6, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "restaurant_1", "query": "SELECT Major ,  count(*) FROM Student GROUP BY Major HAVING count(Major) BETWEEN 2 AND 30;", "query_toks": ["SELECT", "Major", ",", "count", "(", "*", ")", "FROM", "Student", "GROUP", "BY", "Major", "HAVING", "count", "(", "Major", ")", "BETWEEN", "2", "AND", "30", ";"], "query_toks_no_value": ["select", "major", ",", "count", "(", "*", ")", "from", "student", "group", "by", "major", "having", "count", "(", "major", ")", "between", "value", "and", "value"], "question": "Which major has between 2 and 30 number of students? List major and the number of students.", "question_toks": ["Which", "major", "has", "between", "2", "and", "30", "number", "of", "students", "?", "List", "major", "and", "the", "number", "of", "students", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [[false, 1, [0, [3, 6, false], null], 2.0, 30.0]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "restaurant_1", "query": "SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major = 600;", "query_toks": ["SELECT", "Fname", ",", "Lname", "FROM", "Student", "WHERE", "Age", ">", "18", "AND", "Major", "=", "600", ";"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "student", "where", "age", ">", "value", "and", "major", "=", "value"], "question": "Which student's age is older than 18 and is majoring in 600? List each student's first and last name.", "question_toks": ["Which", "student", "'s", "age", "is", "older", "than", "18", "and", "is", "majoring", "in", "600", "?", "List", "each", "student", "'s", "first", "and", "last", "name", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 4, false], null], 18.0, null], "and", [false, 2, [0, [0, 6, false], null], 600.0, null]]}}, {"db_id": "restaurant_1", "query": "SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major != 600 AND Sex = 'F';", "query_toks": ["SELECT", "Fname", ",", "Lname", "FROM", "Student", "WHERE", "Age", ">", "18", "AND", "Major", "!", "=", "600", "AND", "Sex", "=", "'F", "'", ";"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "student", "where", "age", ">", "value", "and", "major", "!", "=", "value", "and", "sex", "=", "value"], "question": "List all female students age is older than 18 who is not majoring in 600. List students' first name and last name.", "question_toks": ["List", "all", "female", "students", "age", "is", "older", "than", "18", "who", "is", "not", "majoring", "in", "600", ".", "List", "students", "'", "first", "name", "and", "last", "name", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 4, false], null], 18.0, null], "and", [false, 7, [0, [0, 6, false], null], 600.0, null], "and", [false, 2, [0, [0, 5, false], null], "\"F\"", null]]}}, {"db_id": "restaurant_1", "query": "SELECT Restaurant.ResName ,  sum(Visits_Restaurant.Spent) FROM Visits_Restaurant JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID GROUP BY Restaurant.ResID ORDER BY sum(Visits_Restaurant.Spent) ASC LIMIT 1;", "query_toks": ["SELECT", "Restaurant.ResName", ",", "sum", "(", "Visits_Restaurant.Spent", ")", "FROM", "Visits_Restaurant", "JOIN", "Restaurant", "ON", "Visits_Restaurant.ResID", "=", "Restaurant.ResID", "GROUP", "BY", "Restaurant.ResID", "ORDER", "BY", "sum", "(", "Visits_Restaurant.Spent", ")", "ASC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "restaurant.resname", ",", "sum", "(", "visits_restaurant.spent", ")", "from", "visits_restaurant", "join", "restaurant", "on", "visits_restaurant.resid", "=", "restaurant.resid", "group", "by", "restaurant.resid", "order", "by", "sum", "(", "visits_restaurant.spent", ")", "asc", "limit", "value"], "question": "At which restaurant did the students spend the least amount of time? List restaurant and the time students spent on in total.", "question_toks": ["At", "which", "restaurant", "did", "the", "students", "spend", "the", "least", "amount", "of", "time", "?", "List", "restaurant", "and", "the", "time", "students", "spent", "on", "in", "total", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 19, false], null], [0, 9, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [4, 21, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [4, [0, [0, 21, false], null]]]], "union": null, "where": []}}, {"db_id": "restaurant_1", "query": "SELECT Student.Fname , Student.Lname FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID GROUP BY Student.StuID ORDER BY count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "Student.Fname", ",", "Student.Lname", "FROM", "Student", "JOIN", "Visits_Restaurant", "ON", "Student.StuID", "=", "Visits_Restaurant.StuID", "GROUP", "BY", "Student.StuID", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "student.fname", ",", "student.lname", "from", "student", "join", "visits_restaurant", "on", "student.stuid", "=", "visits_restaurant.stuid", "group", "by", "student.stuid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which student visited restaurant most often? List student's first name and last name.", "question_toks": ["Which", "student", "visited", "restaurant", "most", "often", "?", "List", "student", "'s", "first", "name", "and", "last", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 18, false], null]], "table_units": [["table_unit", 0], ["table_unit", 4]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "customer_deliveries", "query": "SELECT t1.product_name ,   t1.product_price FROM products AS t1 JOIN regular_order_products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t2.product_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "t1.product_name", ",", "t1.product_price", "FROM", "products", "AS", "t1", "JOIN", "regular_order_products", "AS", "t2", "ON", "t1.product_id", "=", "t2.product_id", "GROUP", "BY", "t2.product_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "product_name", ",", "t1", ".", "product_price", "from", "products", "as", "t1", "join", "regular_order_products", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "group", "by", "t2", ".", "product_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the name and price of the product that has been ordered the greatest number of times.", "question_toks": ["Find", "the", "name", "and", "price", "of", "the", "product", "that", "has", "been", "ordered", "the", "greatest", "number", "of", "times", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 20, false], null]], "table_units": [["table_unit", 0], ["table_unit", 4]]}, "groupBy": [[0, 20, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "customer_deliveries", "query": "SELECT customer_email ,  customer_name FROM customers WHERE payment_method  =  'Visa'", "query_toks": ["SELECT", "customer_email", ",", "customer_name", "FROM", "customers", "WHERE", "payment_method", "=", "'Visa", "'"], "query_toks_no_value": ["select", "customer_email", ",", "customer_name", "from", "customers", "where", "payment_method", "=", "value"], "question": "List the names and emails of customers who payed by Visa card.", "question_toks": ["List", "the", "names", "and", "emails", "of", "customers", "who", "payed", "by", "Visa", "card", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"Visa\"", null]]}}, {"db_id": "customer_deliveries", "query": "SELECT t1.customer_name ,  t1.customer_phone FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  'California'", "query_toks": ["SELECT", "t1.customer_name", ",", "t1.customer_phone", "FROM", "customers", "AS", "t1", "JOIN", "customer_addresses", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "JOIN", "addresses", "AS", "t3", "ON", "t2.address_id", "=", "t3.address_id", "WHERE", "t3.state_province_county", "=", "'California", "'"], "query_toks_no_value": ["select", "t1", ".", "customer_name", ",", "t1", ".", "customer_phone", "from", "customers", "as", "t1", "join", "customer_addresses", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "addresses", "as", "t3", "on", "t2", ".", "address_id", "=", "t3", ".", "address_id", "where", "t3", ".", "state_province_county", "=", "value"], "question": "Find the names and phone numbers of customers living in California state.", "question_toks": ["Find", "the", "names", "and", "phone", "numbers", "of", "customers", "living", "in", "California", "state", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 27, false], null]], "table_units": [["table_unit", 2], ["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], "\"California\"", null]]}}, {"db_id": "customer_deliveries", "query": "SELECT customer_name ,  customer_phone ,  customer_email FROM Customers ORDER BY date_became_customer", "query_toks": ["SELECT", "customer_name", ",", "customer_phone", ",", "customer_email", "FROM", "Customers", "ORDER", "BY", "date_became_customer"], "query_toks_no_value": ["select", "customer_name", ",", "customer_phone", ",", "customer_email", "from", "customers", "order", "by", "date_became_customer"], "question": "List the names, phone numbers, and emails of all customers sorted by their dates of becoming customers.", "question_toks": ["List", "the", "names", ",", "phone", "numbers", ",", "and", "emails", "of", "all", "customers", "sorted", "by", "their", "dates", "of", "becoming", "customers", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 16, false], null]]], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": []}}, {"db_id": "customer_deliveries", "query": "SELECT t2.state_province_county ,  count(*) FROM customer_addresses AS t1 JOIN addresses AS t2 ON t1.address_id  =  t2.address_id GROUP BY t2.state_province_county", "query_toks": ["SELECT", "t2.state_province_county", ",", "count", "(", "*", ")", "FROM", "customer_addresses", "AS", "t1", "JOIN", "addresses", "AS", "t2", "ON", "t1.address_id", "=", "t2.address_id", "GROUP", "BY", "t2.state_province_county"], "query_toks_no_value": ["select", "t2", ".", "state_province_county", ",", "count", "(", "*", ")", "from", "customer_addresses", "as", "t1", "join", "addresses", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "address_id", "group", "by", "t2", ".", "state_province_county"], "question": "List the state names and the number of customers living in each state.", "question_toks": ["List", "the", "state", "names", "and", "the", "number", "of", "customers", "living", "in", "each", "state", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 28, false], null], [0, 5, false], null]], "table_units": [["table_unit", 7], ["table_unit", 1]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "icfp_1", "query": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"University of Oxford\"", "query_toks": ["SELECT", "DISTINCT", "t1.fname", ",", "t1.lname", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "inst", "AS", "t3", "ON", "t2.instid", "=", "t3.instid", "WHERE", "t3.name", "=", "``", "University", "of", "Oxford", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "inst", "as", "t3", "on", "t2", ".", "instid", "=", "t3", ".", "instid", "where", "t3", ".", "name", "=", "value"], "question": "Who belong to the institution \"University of Oxford\"? Show the first names and last names.", "question_toks": ["Who", "belong", "to", "the", "institution", "``", "University", "of", "Oxford", "''", "?", "Show", "the", "first", "names", "and", "last", "names", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]], "table_units": [["table_unit", 1], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"University of Oxford\"", null]]}}, {"db_id": "icfp_1", "query": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"University of Oxford\"", "query_toks": ["SELECT", "DISTINCT", "t1.fname", ",", "t1.lname", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "inst", "AS", "t3", "ON", "t2.instid", "=", "t3.instid", "WHERE", "t3.name", "=", "``", "University", "of", "Oxford", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "inst", "as", "t3", "on", "t2", ".", "instid", "=", "t3", ".", "instid", "where", "t3", ".", "name", "=", "value"], "question": "Find the first names and last names of the authors whose institution affiliation is \"University of Oxford\".", "question_toks": ["Find", "the", "first", "names", "and", "last", "names", "of", "the", "authors", "whose", "institution", "affiliation", "is", "``", "University", "of", "Oxford", "''", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]], "table_units": [["table_unit", 1], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"University of Oxford\"", null]]}}, {"db_id": "icfp_1", "query": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Google\"", "query_toks": ["SELECT", "DISTINCT", "t1.fname", ",", "t1.lname", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "inst", "AS", "t3", "ON", "t2.instid", "=", "t3.instid", "WHERE", "t3.name", "=", "``", "Google", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "inst", "as", "t3", "on", "t2", ".", "instid", "=", "t3", ".", "instid", "where", "t3", ".", "name", "=", "value"], "question": "Which authors belong to the institution \"Google\"? Show the first names and last names.", "question_toks": ["Which", "authors", "belong", "to", "the", "institution", "``", "Google", "''", "?", "Show", "the", "first", "names", "and", "last", "names", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]], "table_units": [["table_unit", 1], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Google\"", null]]}}, {"db_id": "icfp_1", "query": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Google\"", "query_toks": ["SELECT", "DISTINCT", "t1.fname", ",", "t1.lname", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "inst", "AS", "t3", "ON", "t2.instid", "=", "t3.instid", "WHERE", "t3.name", "=", "``", "Google", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "inst", "as", "t3", "on", "t2", ".", "instid", "=", "t3", ".", "instid", "where", "t3", ".", "name", "=", "value"], "question": "Find the first names and last names of the authors whose institution affiliation is \"Google\".", "question_toks": ["Find", "the", "first", "names", "and", "last", "names", "of", "the", "authors", "whose", "institution", "affiliation", "is", "``", "Google", "''", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]], "table_units": [["table_unit", 1], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Google\"", null]]}}, {"db_id": "icfp_1", "query": "SELECT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"Nameless ,  Painless\"", "query_toks": ["SELECT", "t1.fname", ",", "t1.lname", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "papers", "AS", "t3", "ON", "t2.paperid", "=", "t3.paperid", "WHERE", "t3.title", "=", "``", "Nameless", ",", "Painless", "''"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "papers", "as", "t3", "on", "t2", ".", "paperid", "=", "t3", ".", "paperid", "where", "t3", ".", "title", "=", "value"], "question": "Find the first and last name of the author(s) who wrote the paper \"Nameless, Painless\".", "question_toks": ["Find", "the", "first", "and", "last", "name", "of", "the", "author", "(", "s", ")", "who", "wrote", "the", "paper", "``", "Nameless", ",", "Painless", "''", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]], "table_units": [["table_unit", 1], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 8, false], null], "\"Nameless ,  Painless\"", null]]}}, {"db_id": "icfp_1", "query": "SELECT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"Nameless ,  Painless\"", "query_toks": ["SELECT", "t1.fname", ",", "t1.lname", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "papers", "AS", "t3", "ON", "t2.paperid", "=", "t3.paperid", "WHERE", "t3.title", "=", "``", "Nameless", ",", "Painless", "''"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "papers", "as", "t3", "on", "t2", ".", "paperid", "=", "t3", ".", "paperid", "where", "t3", ".", "title", "=", "value"], "question": "What are the first and last name of the author who published the paper titled \"Nameless, Painless\"?", "question_toks": ["What", "are", "the", "first", "and", "last", "name", "of", "the", "author", "who", "published", "the", "paper", "titled", "``", "Nameless", ",", "Painless", "''", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]], "table_units": [["table_unit", 1], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 8, false], null], "\"Nameless ,  Painless\"", null]]}}, {"db_id": "icfp_1", "query": "SELECT fname ,  lname FROM authors ORDER BY lname", "query_toks": ["SELECT", "fname", ",", "lname", "FROM", "authors", "ORDER", "BY", "lname"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "authors", "order", "by", "lname"], "question": "Retrieve all the first and last names of authors in the alphabetical order of last names.", "question_toks": ["Retrieve", "all", "the", "first", "and", "last", "names", "of", "authors", "in", "the", "alphabetical", "order", "of", "last", "names", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "icfp_1", "query": "SELECT fname ,  lname FROM authors ORDER BY lname", "query_toks": ["SELECT", "fname", ",", "lname", "FROM", "authors", "ORDER", "BY", "lname"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "authors", "order", "by", "lname"], "question": "Sort the list of all the first and last names of authors in alphabetical order of the last names.", "question_toks": ["Sort", "the", "list", "of", "all", "the", "first", "and", "last", "names", "of", "authors", "in", "alphabetical", "order", "of", "the", "last", "names", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "sakila_1", "query": "SELECT first_name ,  last_name FROM actor GROUP BY first_name ,  last_name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "actor", "GROUP", "BY", "first_name", ",", "last_name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "first_name", ",", "last_name", "from", "actor", "group", "by", "first_name", ",", "last_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the most popular full name of the actors?", "question_toks": ["What", "is", "the", "most", "popular", "full", "name", "of", "the", "actors", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 2, false], [0, 3, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "sakila_1", "query": "SELECT first_name ,  last_name FROM actor GROUP BY first_name ,  last_name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "actor", "GROUP", "BY", "first_name", ",", "last_name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "first_name", ",", "last_name", "from", "actor", "group", "by", "first_name", ",", "last_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Return the most common full name among all actors.", "question_toks": ["Return", "the", "most", "common", "full", "name", "among", "all", "actors", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 2, false], [0, 3, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "sakila_1", "query": "SELECT phone ,  postal_code FROM address WHERE address  =  '1031 Daugavpils Parkway'", "query_toks": ["SELECT", "phone", ",", "postal_code", "FROM", "address", "WHERE", "address", "=", "'1031", "Daugavpils", "Parkway", "'"], "query_toks_no_value": ["select", "phone", ",", "postal_code", "from", "address", "where", "address", "=", "value"], "question": "What is the phone number and postal code of the address 1031 Daugavpils Parkway?", "question_toks": ["What", "is", "the", "phone", "number", "and", "postal", "code", "of", "the", "address", "1031", "Daugavpils", "Parkway", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"1031 Daugavpils Parkway\"", null]]}}, {"db_id": "sakila_1", "query": "SELECT phone ,  postal_code FROM address WHERE address  =  '1031 Daugavpils Parkway'", "query_toks": ["SELECT", "phone", ",", "postal_code", "FROM", "address", "WHERE", "address", "=", "'1031", "Daugavpils", "Parkway", "'"], "query_toks_no_value": ["select", "phone", ",", "postal_code", "from", "address", "where", "address", "=", "value"], "question": "Give the phone and postal code corresponding to the address '1031 Daugavpils Parkway'.", "question_toks": ["Give", "the", "phone", "and", "postal", "code", "corresponding", "to", "the", "address", "'1031", "Daugavpils", "Parkway", "'", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"1031 Daugavpils Parkway\"", null]]}}, {"db_id": "sakila_1", "query": "SELECT T2.city ,  count(*) ,  T1.city_id FROM address AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id GROUP BY T1.city_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.city", ",", "count", "(", "*", ")", ",", "T1.city_id", "FROM", "address", "AS", "T1", "JOIN", "city", "AS", "T2", "ON", "T1.city_id", "=", "T2.city_id", "GROUP", "BY", "T1.city_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "city", ",", "count", "(", "*", ")", ",", "t1", ".", "city_id", "from", "address", "as", "t1", "join", "city", "as", "t2", "on", "t1", ".", "city_id", "=", "t2", ".", "city_id", "group", "by", "t1", ".", "city_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which city has the most addresses? List the city name, number of addresses, and city id.", "question_toks": ["Which", "city", "has", "the", "most", "addresses", "?", "List", "the", "city", "name", ",", "number", "of", "addresses", ",", "and", "city", "id", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 16, false], null]], "table_units": [["table_unit", 1], ["table_unit", 3]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 17, false], null]], [3, [0, [0, 0, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "sakila_1", "query": "SELECT T2.city ,  count(*) ,  T1.city_id FROM address AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id GROUP BY T1.city_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.city", ",", "count", "(", "*", ")", ",", "T1.city_id", "FROM", "address", "AS", "T1", "JOIN", "city", "AS", "T2", "ON", "T1.city_id", "=", "T2.city_id", "GROUP", "BY", "T1.city_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "city", ",", "count", "(", "*", ")", ",", "t1", ".", "city_id", "from", "address", "as", "t1", "join", "city", "as", "t2", "on", "t1", ".", "city_id", "=", "t2", ".", "city_id", "group", "by", "t1", ".", "city_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the city name, id, and number of addresses corresponding to the city with the most addressed?", "question_toks": ["What", "are", "the", "city", "name", ",", "id", ",", "and", "number", "of", "addresses", "corresponding", "to", "the", "city", "with", "the", "most", "addressed", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 16, false], null]], "table_units": [["table_unit", 1], ["table_unit", 3]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 17, false], null]], [3, [0, [0, 0, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "sakila_1", "query": "SELECT title ,  film_id FROM film WHERE rental_rate  =  0.99 INTERSECT SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id HAVING count(*)  <  3", "query_toks": ["SELECT", "title", ",", "film_id", "FROM", "film", "WHERE", "rental_rate", "=", "0.99", "INTERSECT", "SELECT", "T1.title", ",", "T1.film_id", "FROM", "film", "AS", "T1", "JOIN", "inventory", "AS", "T2", "ON", "T1.film_id", "=", "T2.film_id", "GROUP", "BY", "T1.film_id", "HAVING", "count", "(", "*", ")", "<", "3"], "query_toks_no_value": ["select", "title", ",", "film_id", "from", "film", "where", "rental_rate", "=", "value", "intersect", "select", "t1", ".", "title", ",", "t1", ".", "film_id", "from", "film", "as", "t1", "join", "inventory", "as", "t2", "on", "t1", ".", "film_id", "=", "t2", ".", "film_id", "group", "by", "t1", ".", "film_id", "having", "count", "(", "*", ")", "<", "value"], "question": "Which film is rented at a fee of 0.99 and has less than 3 in the inventory? List the film title and id.", "question_toks": ["Which", "film", "is", "rented", "at", "a", "fee", "of", "0.99", "and", "has", "less", "than", "3", "in", "the", "inventory", "?", "List", "the", "film", "title", "and", "id", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 32, false], null], [0, 55, false], null]], "table_units": [["table_unit", 6], ["table_unit", 10]]}, "groupBy": [[0, 32, false]], "having": [[false, 4, [0, [3, 0, false], null], 3.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 32, false], null]]]], "union": null, "where": []}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 32, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 39, false], null], 0.99, null]]}}, {"db_id": "sakila_1", "query": "SELECT title ,  film_id FROM film WHERE rental_rate  =  0.99 INTERSECT SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id HAVING count(*)  <  3", "query_toks": ["SELECT", "title", ",", "film_id", "FROM", "film", "WHERE", "rental_rate", "=", "0.99", "INTERSECT", "SELECT", "T1.title", ",", "T1.film_id", "FROM", "film", "AS", "T1", "JOIN", "inventory", "AS", "T2", "ON", "T1.film_id", "=", "T2.film_id", "GROUP", "BY", "T1.film_id", "HAVING", "count", "(", "*", ")", "<", "3"], "query_toks_no_value": ["select", "title", ",", "film_id", "from", "film", "where", "rental_rate", "=", "value", "intersect", "select", "t1", ".", "title", ",", "t1", ".", "film_id", "from", "film", "as", "t1", "join", "inventory", "as", "t2", "on", "t1", ".", "film_id", "=", "t2", ".", "film_id", "group", "by", "t1", ".", "film_id", "having", "count", "(", "*", ")", "<", "value"], "question": "What are the title and id of the film which has a rental rate of 0.99 and an inventory of below 3?", "question_toks": ["What", "are", "the", "title", "and", "id", "of", "the", "film", "which", "has", "a", "rental", "rate", "of", "0.99", "and", "an", "inventory", "of", "below", "3", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 32, false], null], [0, 55, false], null]], "table_units": [["table_unit", 6], ["table_unit", 10]]}, "groupBy": [[0, 32, false]], "having": [[false, 4, [0, [3, 0, false], null], 3.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 32, false], null]]]], "union": null, "where": []}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 32, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 39, false], null], 0.99, null]]}}, {"db_id": "sakila_1", "query": "SELECT title ,  rental_rate FROM film ORDER BY rental_rate DESC LIMIT 1", "query_toks": ["SELECT", "title", ",", "rental_rate", "FROM", "film", "ORDER", "BY", "rental_rate", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "title", ",", "rental_rate", "from", "film", "order", "by", "rental_rate", "desc", "limit", "value"], "question": "Which film has the highest rental rate? And what is the rate?", "question_toks": ["Which", "film", "has", "the", "highest", "rental", "rate", "?", "And", "what", "is", "the", "rate", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 39, false], null]]], "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 39, false], null]]]], "union": null, "where": []}}, {"db_id": "sakila_1", "query": "SELECT title ,  rental_rate FROM film ORDER BY rental_rate DESC LIMIT 1", "query_toks": ["SELECT", "title", ",", "rental_rate", "FROM", "film", "ORDER", "BY", "rental_rate", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "title", ",", "rental_rate", "from", "film", "order", "by", "rental_rate", "desc", "limit", "value"], "question": "What are the title and rental rate of the film with the highest rental rate?", "question_toks": ["What", "are", "the", "title", "and", "rental", "rate", "of", "the", "film", "with", "the", "highest", "rental", "rate", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 39, false], null]]], "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 39, false], null]]]], "union": null, "where": []}}, {"db_id": "sakila_1", "query": "SELECT T2.title ,  T2.film_id ,  T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.title", ",", "T2.film_id", ",", "T2.description", "FROM", "film_actor", "AS", "T1", "JOIN", "film", "AS", "T2", "ON", "T1.film_id", "=", "T2.film_id", "GROUP", "BY", "T2.film_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "title", ",", "t2", ".", "film_id", ",", "t2", ".", "description", "from", "film_actor", "as", "t1", "join", "film", "as", "t2", "on", "t1", ".", "film_id", "=", "t2", ".", "film_id", "group", "by", "t2", ".", "film_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which film has the most number of actors or actresses? List the film name, film id and description.", "question_toks": ["Which", "film", "has", "the", "most", "number", "of", "actors", "or", "actresses", "?", "List", "the", "film", "name", ",", "film", "id", "and", "description", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 46, false], null], [0, 32, false], null]], "table_units": [["table_unit", 7], ["table_unit", 6]]}, "groupBy": [[0, 32, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 32, false], null]], [0, [0, [0, 34, false], null]]]], "union": null, "where": []}}, {"db_id": "sakila_1", "query": "SELECT T2.title ,  T2.film_id ,  T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.title", ",", "T2.film_id", ",", "T2.description", "FROM", "film_actor", "AS", "T1", "JOIN", "film", "AS", "T2", "ON", "T1.film_id", "=", "T2.film_id", "GROUP", "BY", "T2.film_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "title", ",", "t2", ".", "film_id", ",", "t2", ".", "description", "from", "film_actor", "as", "t1", "join", "film", "as", "t2", "on", "t1", ".", "film_id", "=", "t2", ".", "film_id", "group", "by", "t2", ".", "film_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the title, id, and description of the movie with the greatest number of actors?", "question_toks": ["What", "are", "the", "title", ",", "id", ",", "and", "description", "of", "the", "movie", "with", "the", "greatest", "number", "of", "actors", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 46, false], null], [0, 32, false], null]], "table_units": [["table_unit", 7], ["table_unit", 6]]}, "groupBy": [[0, 32, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 32, false], null]], [0, [0, [0, 34, false], null]]]], "union": null, "where": []}}, {"db_id": "sakila_1", "query": "SELECT T2.first_name ,  T2.last_name ,  T2.actor_id FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.first_name", ",", "T2.last_name", ",", "T2.actor_id", "FROM", "film_actor", "AS", "T1", "JOIN", "actor", "AS", "T2", "ON", "T1.actor_id", "=", "T2.actor_id", "GROUP", "BY", "T2.actor_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "first_name", ",", "t2", ".", "last_name", ",", "t2", ".", "actor_id", "from", "film_actor", "as", "t1", "join", "actor", "as", "t2", "on", "t1", ".", "actor_id", "=", "t2", ".", "actor_id", "group", "by", "t2", ".", "actor_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which film actor (actress) starred the most films? List his or her first name, last name and actor id.", "question_toks": ["Which", "film", "actor", "(", "actress", ")", "starred", "the", "most", "films", "?", "List", "his", "or", "her", "first", "name", ",", "last", "name", "and", "actor", "id", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 45, false], null], [0, 1, false], null]], "table_units": [["table_unit", 7], ["table_unit", 0]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": []}}, {"db_id": "sakila_1", "query": "SELECT T2.first_name ,  T2.last_name ,  T2.actor_id FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.first_name", ",", "T2.last_name", ",", "T2.actor_id", "FROM", "film_actor", "AS", "T1", "JOIN", "actor", "AS", "T2", "ON", "T1.actor_id", "=", "T2.actor_id", "GROUP", "BY", "T2.actor_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "first_name", ",", "t2", ".", "last_name", ",", "t2", ".", "actor_id", "from", "film_actor", "as", "t1", "join", "actor", "as", "t2", "on", "t1", ".", "actor_id", "=", "t2", ".", "actor_id", "group", "by", "t2", ".", "actor_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Return the full name and id of the actor or actress who starred in the greatest number of films.", "question_toks": ["Return", "the", "full", "name", "and", "id", "of", "the", "actor", "or", "actress", "who", "starred", "in", "the", "greatest", "number", "of", "films", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 45, false], null], [0, 1, false], null]], "table_units": [["table_unit", 7], ["table_unit", 0]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": []}}, {"db_id": "sakila_1", "query": "SELECT T2.first_name ,  T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id HAVING count(*)  >  30", "query_toks": ["SELECT", "T2.first_name", ",", "T2.last_name", "FROM", "film_actor", "AS", "T1", "JOIN", "actor", "AS", "T2", "ON", "T1.actor_id", "=", "T2.actor_id", "GROUP", "BY", "T2.actor_id", "HAVING", "count", "(", "*", ")", ">", "30"], "query_toks_no_value": ["select", "t2", ".", "first_name", ",", "t2", ".", "last_name", "from", "film_actor", "as", "t1", "join", "actor", "as", "t2", "on", "t1", ".", "actor_id", "=", "t2", ".", "actor_id", "group", "by", "t2", ".", "actor_id", "having", "count", "(", "*", ")", ">", "value"], "question": "Which film actors (actresses) played a role in more than 30 films? List his or her first name and last name.", "question_toks": ["Which", "film", "actors", "(", "actresses", ")", "played", "a", "role", "in", "more", "than", "30", "films", "?", "List", "his", "or", "her", "first", "name", "and", "last", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 45, false], null], [0, 1, false], null]], "table_units": [["table_unit", 7], ["table_unit", 0]]}, "groupBy": [[0, 1, false]], "having": [[false, 3, [0, [3, 0, false], null], 30.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "sakila_1", "query": "SELECT T2.first_name ,  T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id HAVING count(*)  >  30", "query_toks": ["SELECT", "T2.first_name", ",", "T2.last_name", "FROM", "film_actor", "AS", "T1", "JOIN", "actor", "AS", "T2", "ON", "T1.actor_id", "=", "T2.actor_id", "GROUP", "BY", "T2.actor_id", "HAVING", "count", "(", "*", ")", ">", "30"], "query_toks_no_value": ["select", "t2", ".", "first_name", ",", "t2", ".", "last_name", "from", "film_actor", "as", "t1", "join", "actor", "as", "t2", "on", "t1", ".", "actor_id", "=", "t2", ".", "actor_id", "group", "by", "t2", ".", "actor_id", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the full names of actors who had roles in more than 30 films?", "question_toks": ["What", "are", "the", "full", "names", "of", "actors", "who", "had", "roles", "in", "more", "than", "30", "films", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 45, false], null], [0, 1, false], null]], "table_units": [["table_unit", 7], ["table_unit", 0]]}, "groupBy": [[0, 1, false]], "having": [[false, 3, [0, [3, 0, false], null], 30.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "sakila_1", "query": "SELECT T1.first_name ,  T1.last_name ,  T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY sum(amount) ASC LIMIT 1", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", ",", "T1.customer_id", "FROM", "customer", "AS", "T1", "JOIN", "payment", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id", "ORDER", "BY", "sum", "(", "amount", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", ",", "t1", ".", "customer_id", "from", "customer", "as", "t1", "join", "payment", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id", "order", "by", "sum", "(", "amount", ")", "asc", "limit", "value"], "question": "Which customer, who has made at least one payment, has spent the least money? List his or her first name, last name, and the id.", "question_toks": ["Which", "customer", ",", "who", "has", "made", "at", "least", "one", "payment", ",", "has", "spent", "the", "least", "money", "?", "List", "his", "or", "her", "first", "name", ",", "last", "name", ",", "and", "the", "id", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 23, false], null], [0, 62, false], null]], "table_units": [["table_unit", 5], ["table_unit", 12]]}, "groupBy": [[0, 23, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [4, 65, false], null]]], "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 26, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": []}}, {"db_id": "sakila_1", "query": "SELECT T1.first_name ,  T1.last_name ,  T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY sum(amount) ASC LIMIT 1", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", ",", "T1.customer_id", "FROM", "customer", "AS", "T1", "JOIN", "payment", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id", "ORDER", "BY", "sum", "(", "amount", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", ",", "t1", ".", "customer_id", "from", "customer", "as", "t1", "join", "payment", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id", "order", "by", "sum", "(", "amount", ")", "asc", "limit", "value"], "question": "What is the full name and id of the customer who has the lowest total amount of payment?", "question_toks": ["What", "is", "the", "full", "name", "and", "id", "of", "the", "customer", "who", "has", "the", "lowest", "total", "amount", "of", "payment", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 23, false], null], [0, 62, false], null]], "table_units": [["table_unit", 5], ["table_unit", 12]]}, "groupBy": [[0, 23, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [4, 65, false], null]]], "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 26, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": []}}, {"db_id": "sakila_1", "query": "SELECT T2.name ,  T1.category_id ,  count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id  =  T2.category_id GROUP BY T1.category_id", "query_toks": ["SELECT", "T2.name", ",", "T1.category_id", ",", "count", "(", "*", ")", "FROM", "film_category", "AS", "T1", "JOIN", "category", "AS", "T2", "ON", "T1.category_id", "=", "T2.category_id", "GROUP", "BY", "T1.category_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t1", ".", "category_id", ",", "count", "(", "*", ")", "from", "film_category", "as", "t1", "join", "category", "as", "t2", "on", "t1", ".", "category_id", "=", "t2", ".", "category_id", "group", "by", "t1", ".", "category_id"], "question": "How many films are there in each category? List the genre name, genre id and the count.", "question_toks": ["How", "many", "films", "are", "there", "in", "each", "category", "?", "List", "the", "genre", "name", ",", "genre", "id", "and", "the", "count", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 49, false], null], [0, 13, false], null]], "table_units": [["table_unit", 8], ["table_unit", 2]]}, "groupBy": [[0, 49, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 49, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "sakila_1", "query": "SELECT T2.name ,  T1.category_id ,  count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id  =  T2.category_id GROUP BY T1.category_id", "query_toks": ["SELECT", "T2.name", ",", "T1.category_id", ",", "count", "(", "*", ")", "FROM", "film_category", "AS", "T1", "JOIN", "category", "AS", "T2", "ON", "T1.category_id", "=", "T2.category_id", "GROUP", "BY", "T1.category_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t1", ".", "category_id", ",", "count", "(", "*", ")", "from", "film_category", "as", "t1", "join", "category", "as", "t2", "on", "t1", ".", "category_id", "=", "t2", ".", "category_id", "group", "by", "t1", ".", "category_id"], "question": "What are the names and ids of the different categories, and how many films are in each?", "question_toks": ["What", "are", "the", "names", "and", "ids", "of", "the", "different", "categories", ",", "and", "how", "many", "films", "are", "in", "each", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 49, false], null], [0, 13, false], null]], "table_units": [["table_unit", 8], ["table_unit", 2]]}, "groupBy": [[0, 49, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 49, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "sakila_1", "query": "SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.title", ",", "T1.film_id", "FROM", "film", "AS", "T1", "JOIN", "inventory", "AS", "T2", "ON", "T1.film_id", "=", "T2.film_id", "GROUP", "BY", "T1.film_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t1", ".", "film_id", "from", "film", "as", "t1", "join", "inventory", "as", "t2", "on", "t1", ".", "film_id", "=", "t2", ".", "film_id", "group", "by", "t1", ".", "film_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which film has the most copies in the inventory? List both title and id.", "question_toks": ["Which", "film", "has", "the", "most", "copies", "in", "the", "inventory", "?", "List", "both", "title", "and", "id", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 32, false], null], [0, 55, false], null]], "table_units": [["table_unit", 6], ["table_unit", 10]]}, "groupBy": [[0, 32, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 32, false], null]]]], "union": null, "where": []}}, {"db_id": "sakila_1", "query": "SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.title", ",", "T1.film_id", "FROM", "film", "AS", "T1", "JOIN", "inventory", "AS", "T2", "ON", "T1.film_id", "=", "T2.film_id", "GROUP", "BY", "T1.film_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t1", ".", "film_id", "from", "film", "as", "t1", "join", "inventory", "as", "t2", "on", "t1", ".", "film_id", "=", "t2", ".", "film_id", "group", "by", "t1", ".", "film_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the title and id of the film that has the greatest number of copies in inventory?", "question_toks": ["What", "is", "the", "title", "and", "id", "of", "the", "film", "that", "has", "the", "greatest", "number", "of", "copies", "in", "inventory", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 32, false], null], [0, 55, false], null]], "table_units": [["table_unit", 6], ["table_unit", 10]]}, "groupBy": [[0, 32, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 32, false], null]]]], "union": null, "where": []}}, {"db_id": "sakila_1", "query": "SELECT T1.title ,  T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id JOIN rental AS T3 ON T2.inventory_id  =  T3.inventory_id GROUP BY T2.inventory_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.title", ",", "T2.inventory_id", "FROM", "film", "AS", "T1", "JOIN", "inventory", "AS", "T2", "ON", "T1.film_id", "=", "T2.film_id", "JOIN", "rental", "AS", "T3", "ON", "T2.inventory_id", "=", "T3.inventory_id", "GROUP", "BY", "T2.inventory_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t2", ".", "inventory_id", "from", "film", "as", "t1", "join", "inventory", "as", "t2", "on", "t1", ".", "film_id", "=", "t2", ".", "film_id", "join", "rental", "as", "t3", "on", "t2", ".", "inventory_id", "=", "t3", ".", "inventory_id", "group", "by", "t2", ".", "inventory_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the film title and inventory id of the item in the inventory which was rented most frequently?", "question_toks": ["What", "is", "the", "film", "title", "and", "inventory", "id", "of", "the", "item", "in", "the", "inventory", "which", "was", "rented", "most", "frequently", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 32, false], null], [0, 55, false], null]], "table_units": [["table_unit", 6], ["table_unit", 10]]}, "groupBy": [[0, 54, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 54, false], null]]]], "union": null, "where": []}}, {"db_id": "sakila_1", "query": "SELECT T1.title ,  T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id JOIN rental AS T3 ON T2.inventory_id  =  T3.inventory_id GROUP BY T2.inventory_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.title", ",", "T2.inventory_id", "FROM", "film", "AS", "T1", "JOIN", "inventory", "AS", "T2", "ON", "T1.film_id", "=", "T2.film_id", "JOIN", "rental", "AS", "T3", "ON", "T2.inventory_id", "=", "T3.inventory_id", "GROUP", "BY", "T2.inventory_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t2", ".", "inventory_id", "from", "film", "as", "t1", "join", "inventory", "as", "t2", "on", "t1", ".", "film_id", "=", "t2", ".", "film_id", "join", "rental", "as", "t3", "on", "t2", ".", "inventory_id", "=", "t3", ".", "inventory_id", "group", "by", "t2", ".", "inventory_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Return the title and inventory id of the film that is rented most often.", "question_toks": ["Return", "the", "title", "and", "inventory", "id", "of", "the", "film", "that", "is", "rented", "most", "often", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 32, false], null], [0, 55, false], null]], "table_units": [["table_unit", 6], ["table_unit", 10]]}, "groupBy": [[0, 54, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 54, false], null]]]], "union": null, "where": []}}, {"db_id": "sakila_1", "query": "SELECT T1.first_name ,  T1.last_name ,  T1.staff_id FROM staff AS T1 JOIN payment AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T1.staff_id ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", ",", "T1.staff_id", "FROM", "staff", "AS", "T1", "JOIN", "payment", "AS", "T2", "ON", "T1.staff_id", "=", "T2.staff_id", "GROUP", "BY", "T1.staff_id", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", ",", "t1", ".", "staff_id", "from", "staff", "as", "t1", "join", "payment", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "staff_id", "group", "by", "t1", ".", "staff_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "Which staff handled least number of payments? List the full name and the id.", "question_toks": ["Which", "staff", "handled", "least", "number", "of", "payments", "?", "List", "the", "full", "name", "and", "the", "id", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 75, false], null], [0, 63, false], null]], "table_units": [["table_unit", 14], ["table_unit", 12]]}, "groupBy": [[0, 75, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 76, false], null]], [0, [0, [0, 77, false], null]], [0, [0, [0, 75, false], null]]]], "union": null, "where": []}}, {"db_id": "sakila_1", "query": "SELECT T1.first_name ,  T1.last_name ,  T1.staff_id FROM staff AS T1 JOIN payment AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T1.staff_id ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", ",", "T1.staff_id", "FROM", "staff", "AS", "T1", "JOIN", "payment", "AS", "T2", "ON", "T1.staff_id", "=", "T2.staff_id", "GROUP", "BY", "T1.staff_id", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", ",", "t1", ".", "staff_id", "from", "staff", "as", "t1", "join", "payment", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "staff_id", "group", "by", "t1", ".", "staff_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "Give the full name and staff id of the staff who has handled the fewest payments.", "question_toks": ["Give", "the", "full", "name", "and", "staff", "id", "of", "the", "staff", "who", "has", "handled", "the", "fewest", "payments", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 75, false], null], [0, 63, false], null]], "table_units": [["table_unit", 14], ["table_unit", 12]]}, "groupBy": [[0, 75, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 76, false], null]], [0, [0, [0, 77, false], null]], [0, [0, [0, 75, false], null]]]], "union": null, "where": []}}, {"db_id": "sakila_1", "query": "SELECT T2.address ,  T1.email FROM customer AS T1 JOIN address AS T2 ON T2.address_id  =  T1.address_id WHERE T1.first_name  =  'LINDA'", "query_toks": ["SELECT", "T2.address", ",", "T1.email", "FROM", "customer", "AS", "T1", "JOIN", "address", "AS", "T2", "ON", "T2.address_id", "=", "T1.address_id", "WHERE", "T1.first_name", "=", "'LINDA", "'"], "query_toks_no_value": ["select", "t2", ".", "address", ",", "t1", ".", "email", "from", "customer", "as", "t1", "join", "address", "as", "t2", "on", "t2", ".", "address_id", "=", "t1", ".", "address_id", "where", "t1", ".", "first_name", "=", "value"], "question": "Where does the customer with the first name Linda live? And what is her email?", "question_toks": ["Where", "does", "the", "customer", "with", "the", "first", "name", "Linda", "live", "?", "And", "what", "is", "her", "email", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 5, false], null], [0, 28, false], null]], "table_units": [["table_unit", 5], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 27, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 25, false], null], "\"LINDA\"", null]]}}, {"db_id": "sakila_1", "query": "SELECT T2.address ,  T1.email FROM customer AS T1 JOIN address AS T2 ON T2.address_id  =  T1.address_id WHERE T1.first_name  =  'LINDA'", "query_toks": ["SELECT", "T2.address", ",", "T1.email", "FROM", "customer", "AS", "T1", "JOIN", "address", "AS", "T2", "ON", "T2.address_id", "=", "T1.address_id", "WHERE", "T1.first_name", "=", "'LINDA", "'"], "query_toks_no_value": ["select", "t2", ".", "address", ",", "t1", ".", "email", "from", "customer", "as", "t1", "join", "address", "as", "t2", "on", "t2", ".", "address_id", "=", "t1", ".", "address_id", "where", "t1", ".", "first_name", "=", "value"], "question": "Return the address and email of the customer with the first name Linda.", "question_toks": ["Return", "the", "address", "and", "email", "of", "the", "customer", "with", "the", "first", "name", "Linda", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 5, false], null], [0, 28, false], null]], "table_units": [["table_unit", 5], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 27, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 25, false], null], "\"LINDA\"", null]]}}, {"db_id": "sakila_1", "query": "SELECT T1.first_name ,  T1.last_name FROM customer AS T1 JOIN rental AS T2 ON T1.customer_id  =  T2.customer_id ORDER BY T2.rental_date ASC LIMIT 1", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", "FROM", "customer", "AS", "T1", "JOIN", "rental", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "ORDER", "BY", "T2.rental_date", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", "from", "customer", "as", "t1", "join", "rental", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "order", "by", "t2", ".", "rental_date", "asc", "limit", "value"], "question": "What is the first name and the last name of the customer who made the earliest rental?", "question_toks": ["What", "is", "the", "first", "name", "and", "the", "last", "name", "of", "the", "customer", "who", "made", "the", "earliest", "rental", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 23, false], null], [0, 71, false], null]], "table_units": [["table_unit", 5], ["table_unit", 13]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 69, false], null]]], "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 26, false], null]]]], "union": null, "where": []}}, {"db_id": "sakila_1", "query": "SELECT T1.first_name ,  T1.last_name FROM customer AS T1 JOIN rental AS T2 ON T1.customer_id  =  T2.customer_id ORDER BY T2.rental_date ASC LIMIT 1", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", "FROM", "customer", "AS", "T1", "JOIN", "rental", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "ORDER", "BY", "T2.rental_date", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", "from", "customer", "as", "t1", "join", "rental", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "order", "by", "t2", ".", "rental_date", "asc", "limit", "value"], "question": "Return the full name of the customer who made the first rental.", "question_toks": ["Return", "the", "full", "name", "of", "the", "customer", "who", "made", "the", "first", "rental", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 23, false], null], [0, 71, false], null]], "table_units": [["table_unit", 5], ["table_unit", 13]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 69, false], null]]], "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 26, false], null]]]], "union": null, "where": []}}, {"db_id": "sakila_1", "query": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM staff AS T1 JOIN rental AS T2 ON T1.staff_id  =  T2.staff_id JOIN customer AS T3 ON T2.customer_id  =  T3.customer_id WHERE T3.first_name  =  'APRIL' AND T3.last_name  =  'BURNS'", "query_toks": ["SELECT", "DISTINCT", "T1.first_name", ",", "T1.last_name", "FROM", "staff", "AS", "T1", "JOIN", "rental", "AS", "T2", "ON", "T1.staff_id", "=", "T2.staff_id", "JOIN", "customer", "AS", "T3", "ON", "T2.customer_id", "=", "T3.customer_id", "WHERE", "T3.first_name", "=", "'APRIL", "'", "AND", "T3.last_name", "=", "'BURNS", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "first_name", ",", "t1", ".", "last_name", "from", "staff", "as", "t1", "join", "rental", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "staff_id", "join", "customer", "as", "t3", "on", "t2", ".", "customer_id", "=", "t3", ".", "customer_id", "where", "t3", ".", "first_name", "=", "value", "and", "t3", ".", "last_name", "=", "value"], "question": "What is the full name of the staff member who has rented a film to a customer with the first name April and the last name Burns?", "question_toks": ["What", "is", "the", "full", "name", "of", "the", "staff", "member", "who", "has", "rented", "a", "film", "to", "a", "customer", "with", "the", "first", "name", "April", "and", "the", "last", "name", "Burns", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 75, false], null], [0, 73, false], null]], "table_units": [["table_unit", 14], ["table_unit", 13]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 76, false], null]], [0, [0, [0, 77, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 25, false], null], "\"APRIL\"", null], "and", [false, 2, [0, [0, 26, false], null], "\"BURNS\"", null]]}}, {"db_id": "sakila_1", "query": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM staff AS T1 JOIN rental AS T2 ON T1.staff_id  =  T2.staff_id JOIN customer AS T3 ON T2.customer_id  =  T3.customer_id WHERE T3.first_name  =  'APRIL' AND T3.last_name  =  'BURNS'", "query_toks": ["SELECT", "DISTINCT", "T1.first_name", ",", "T1.last_name", "FROM", "staff", "AS", "T1", "JOIN", "rental", "AS", "T2", "ON", "T1.staff_id", "=", "T2.staff_id", "JOIN", "customer", "AS", "T3", "ON", "T2.customer_id", "=", "T3.customer_id", "WHERE", "T3.first_name", "=", "'APRIL", "'", "AND", "T3.last_name", "=", "'BURNS", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "first_name", ",", "t1", ".", "last_name", "from", "staff", "as", "t1", "join", "rental", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "staff_id", "join", "customer", "as", "t3", "on", "t2", ".", "customer_id", "=", "t3", ".", "customer_id", "where", "t3", ".", "first_name", "=", "value", "and", "t3", ".", "last_name", "=", "value"], "question": "Return the full name of the staff who provided a customer with the first name April and the last name Burns with a film rental.", "question_toks": ["Return", "the", "full", "name", "of", "the", "staff", "who", "provided", "a", "customer", "with", "the", "first", "name", "April", "and", "the", "last", "name", "Burns", "with", "a", "film", "rental", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 75, false], null], [0, 73, false], null]], "table_units": [["table_unit", 14], ["table_unit", 13]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 76, false], null]], [0, [0, [0, 77, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 25, false], null], "\"APRIL\"", null], "and", [false, 2, [0, [0, 26, false], null], "\"BURNS\"", null]]}}, {"db_id": "loan_1", "query": "SELECT city ,  state FROM bank WHERE bname  =  'morningside'", "query_toks": ["SELECT", "city", ",", "state", "FROM", "bank", "WHERE", "bname", "=", "'morningside", "'"], "query_toks_no_value": ["select", "city", ",", "state", "from", "bank", "where", "bname", "=", "value"], "question": "Find the city and state of the bank branch named morningside.", "question_toks": ["Find", "the", "city", "and", "state", "of", "the", "bank", "branch", "named", "morningside", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"morningside\"", null]]}}, {"db_id": "loan_1", "query": "SELECT city ,  state FROM bank WHERE bname  =  'morningside'", "query_toks": ["SELECT", "city", ",", "state", "FROM", "bank", "WHERE", "bname", "=", "'morningside", "'"], "query_toks_no_value": ["select", "city", ",", "state", "from", "bank", "where", "bname", "=", "value"], "question": "What city and state is the bank with the name morningside in?", "question_toks": ["What", "city", "and", "state", "is", "the", "bank", "with", "the", "name", "morningside", "in", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"morningside\"", null]]}}, {"db_id": "loan_1", "query": "SELECT state ,  acc_type ,  credit_score FROM customer WHERE no_of_loans  =  0", "query_toks": ["SELECT", "state", ",", "acc_type", ",", "credit_score", "FROM", "customer", "WHERE", "no_of_loans", "=", "0"], "query_toks_no_value": ["select", "state", ",", "acc_type", ",", "credit_score", "from", "customer", "where", "no_of_loans", "=", "value"], "question": "Find the state, account type, and credit score of the customer whose number of loan is 0.", "question_toks": ["Find", "the", "state", ",", "account", "type", ",", "and", "credit", "score", "of", "the", "customer", "whose", "number", "of", "loan", "is", "0", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 8, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], 0.0, null]]}}, {"db_id": "loan_1", "query": "SELECT state ,  acc_type ,  credit_score FROM customer WHERE no_of_loans  =  0", "query_toks": ["SELECT", "state", ",", "acc_type", ",", "credit_score", "FROM", "customer", "WHERE", "no_of_loans", "=", "0"], "query_toks_no_value": ["select", "state", ",", "acc_type", ",", "credit_score", "from", "customer", "where", "no_of_loans", "=", "value"], "question": "What are the states, account types, and credit scores for customers who have 0 loans?", "question_toks": ["What", "are", "the", "states", ",", "account", "types", ",", "and", "credit", "scores", "for", "customers", "who", "have", "0", "loans", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 8, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], 0.0, null]]}}, {"db_id": "loan_1", "query": "SELECT cust_name ,  acc_bal FROM customer WHERE cust_name LIKE '%a%'", "query_toks": ["SELECT", "cust_name", ",", "acc_bal", "FROM", "customer", "WHERE", "cust_name", "LIKE", "'", "%", "a", "%", "'"], "query_toks_no_value": ["select", "cust_name", ",", "acc_bal", "from", "customer", "where", "cust_name", "like", "value"], "question": "Find the name and account balance of the customer whose name includes the letter \u2018a\u2019.", "question_toks": ["Find", "the", "name", "and", "account", "balance", "of", "the", "customer", "whose", "name", "includes", "the", "letter", "\u2018a\u2019", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 7, false], null], "\"%a%\"", null]]}}, {"db_id": "loan_1", "query": "SELECT cust_name ,  acc_bal FROM customer WHERE cust_name LIKE '%a%'", "query_toks": ["SELECT", "cust_name", ",", "acc_bal", "FROM", "customer", "WHERE", "cust_name", "LIKE", "'", "%", "a", "%", "'"], "query_toks_no_value": ["select", "cust_name", ",", "acc_bal", "from", "customer", "where", "cust_name", "like", "value"], "question": "What are the names and account balances of customers with the letter a in their names?", "question_toks": ["What", "are", "the", "names", "and", "account", "balances", "of", "customers", "with", "the", "letter", "a", "in", "their", "names", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 7, false], null], "\"%a%\"", null]]}}, {"db_id": "loan_1", "query": "SELECT cust_name ,  acc_type ,  acc_bal FROM customer ORDER BY credit_score DESC LIMIT 1", "query_toks": ["SELECT", "cust_name", ",", "acc_type", ",", "acc_bal", "FROM", "customer", "ORDER", "BY", "credit_score", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "cust_name", ",", "acc_type", ",", "acc_bal", "from", "customer", "order", "by", "credit_score", "desc", "limit", "value"], "question": "Find the name, account type, and account balance of the customer who has the highest credit score.", "question_toks": ["Find", "the", "name", ",", "account", "type", ",", "and", "account", "balance", "of", "the", "customer", "who", "has", "the", "highest", "credit", "score", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 11, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "loan_1", "query": "SELECT cust_name ,  acc_type ,  acc_bal FROM customer ORDER BY credit_score DESC LIMIT 1", "query_toks": ["SELECT", "cust_name", ",", "acc_type", ",", "acc_bal", "FROM", "customer", "ORDER", "BY", "credit_score", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "cust_name", ",", "acc_type", ",", "acc_bal", "from", "customer", "order", "by", "credit_score", "desc", "limit", "value"], "question": "What is the name, account type, and account balance corresponding to the customer with the highest credit score?", "question_toks": ["What", "is", "the", "name", ",", "account", "type", ",", "and", "account", "balance", "corresponding", "to", "the", "customer", "with", "the", "highest", "credit", "score", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 11, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "loan_1", "query": "SELECT avg(acc_bal) ,  acc_type FROM customer WHERE credit_score  <  50 GROUP BY acc_type", "query_toks": ["SELECT", "avg", "(", "acc_bal", ")", ",", "acc_type", "FROM", "customer", "WHERE", "credit_score", "<", "50", "GROUP", "BY", "acc_type"], "query_toks_no_value": ["select", "avg", "(", "acc_bal", ")", ",", "acc_type", "from", "customer", "where", "credit_score", "<", "value", "group", "by", "acc_type"], "question": "For each account type, find the average account balance of customers with credit score lower than 50.", "question_toks": ["For", "each", "account", "type", ",", "find", "the", "average", "account", "balance", "of", "customers", "with", "credit", "score", "lower", "than", "50", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 9, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 11, false], null], 50.0, null]]}}, {"db_id": "loan_1", "query": "SELECT avg(acc_bal) ,  acc_type FROM customer WHERE credit_score  <  50 GROUP BY acc_type", "query_toks": ["SELECT", "avg", "(", "acc_bal", ")", ",", "acc_type", "FROM", "customer", "WHERE", "credit_score", "<", "50", "GROUP", "BY", "acc_type"], "query_toks_no_value": ["select", "avg", "(", "acc_bal", ")", ",", "acc_type", "from", "customer", "where", "credit_score", "<", "value", "group", "by", "acc_type"], "question": "What is the average account balance of customers with credit score below 50 for the different account types?", "question_toks": ["What", "is", "the", "average", "account", "balance", "of", "customers", "with", "credit", "score", "below", "50", "for", "the", "different", "account", "types", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 9, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 11, false], null], 50.0, null]]}}, {"db_id": "loan_1", "query": "SELECT sum(acc_bal) ,  state FROM customer WHERE credit_score  >  100 GROUP BY state", "query_toks": ["SELECT", "sum", "(", "acc_bal", ")", ",", "state", "FROM", "customer", "WHERE", "credit_score", ">", "100", "GROUP", "BY", "state"], "query_toks_no_value": ["select", "sum", "(", "acc_bal", ")", ",", "state", "from", "customer", "where", "credit_score", ">", "value", "group", "by", "state"], "question": "For each state, find the total account balance of customers whose credit score is above 100.", "question_toks": ["For", "each", "state", ",", "find", "the", "total", "account", "balance", "of", "customers", "whose", "credit", "score", "is", "above", "100", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 9, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 11, false], null], 100.0, null]]}}, {"db_id": "loan_1", "query": "SELECT sum(acc_bal) ,  state FROM customer WHERE credit_score  >  100 GROUP BY state", "query_toks": ["SELECT", "sum", "(", "acc_bal", ")", ",", "state", "FROM", "customer", "WHERE", "credit_score", ">", "100", "GROUP", "BY", "state"], "query_toks_no_value": ["select", "sum", "(", "acc_bal", ")", ",", "state", "from", "customer", "where", "credit_score", ">", "value", "group", "by", "state"], "question": "What is the total account balance for customers with a credit score of above 100 for the different states?", "question_toks": ["What", "is", "the", "total", "account", "balance", "for", "customers", "with", "a", "credit", "score", "of", "above", "100", "for", "the", "different", "states", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 9, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 11, false], null], 100.0, null]]}}, {"db_id": "loan_1", "query": "SELECT sum(amount) ,  T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname", "query_toks": ["SELECT", "sum", "(", "amount", ")", ",", "T1.bname", "FROM", "bank", "AS", "T1", "JOIN", "loan", "AS", "T2", "ON", "T1.branch_id", "=", "T2.branch_id", "GROUP", "BY", "T1.bname"], "query_toks_no_value": ["select", "sum", "(", "amount", ")", ",", "t1", ".", "bname", "from", "bank", "as", "t1", "join", "loan", "as", "t2", "on", "t1", ".", "branch_id", "=", "t2", ".", "branch_id", "group", "by", "t1", ".", "bname"], "question": "Find the total amount of loans offered by each bank branch.", "question_toks": ["Find", "the", "total", "amount", "of", "loans", "offered", "by", "each", "bank", "branch", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 18, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "loan_1", "query": "SELECT sum(amount) ,  T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname", "query_toks": ["SELECT", "sum", "(", "amount", ")", ",", "T1.bname", "FROM", "bank", "AS", "T1", "JOIN", "loan", "AS", "T2", "ON", "T1.branch_id", "=", "T2.branch_id", "GROUP", "BY", "T1.bname"], "query_toks_no_value": ["select", "sum", "(", "amount", ")", ",", "t1", ".", "bname", "from", "bank", "as", "t1", "join", "loan", "as", "t2", "on", "t1", ".", "branch_id", "=", "t2", ".", "branch_id", "group", "by", "t1", ".", "bname"], "question": "What are the names of the different bank branches, and what are their total loan amounts?", "question_toks": ["What", "are", "the", "names", "of", "the", "different", "bank", "branches", ",", "and", "what", "are", "their", "total", "loan", "amounts", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 18, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "loan_1", "query": "SELECT T1.cust_name ,  T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING sum(T2.amount)  >  5000", "query_toks": ["SELECT", "T1.cust_name", ",", "T1.acc_type", "FROM", "customer", "AS", "T1", "JOIN", "loan", "AS", "T2", "ON", "T1.cust_id", "=", "T2.cust_id", "GROUP", "BY", "T1.cust_name", "HAVING", "sum", "(", "T2.amount", ")", ">", "5000"], "query_toks_no_value": ["select", "t1", ".", "cust_name", ",", "t1", ".", "acc_type", "from", "customer", "as", "t1", "join", "loan", "as", "t2", "on", "t1", ".", "cust_id", "=", "t2", ".", "cust_id", "group", "by", "t1", ".", "cust_name", "having", "sum", "(", "t2", ".", "amount", ")", ">", "value"], "question": "Find the name and account balance of the customers who have loans with a total amount of more than 5000.", "question_toks": ["Find", "the", "name", "and", "account", "balance", "of", "the", "customers", "who", "have", "loans", "with", "a", "total", "amount", "of", "more", "than", "5000", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 16, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 7, false]], "having": [[false, 3, [0, [4, 18, false], null], 5000.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "loan_1", "query": "SELECT T1.cust_name ,  T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING sum(T2.amount)  >  5000", "query_toks": ["SELECT", "T1.cust_name", ",", "T1.acc_type", "FROM", "customer", "AS", "T1", "JOIN", "loan", "AS", "T2", "ON", "T1.cust_id", "=", "T2.cust_id", "GROUP", "BY", "T1.cust_name", "HAVING", "sum", "(", "T2.amount", ")", ">", "5000"], "query_toks_no_value": ["select", "t1", ".", "cust_name", ",", "t1", ".", "acc_type", "from", "customer", "as", "t1", "join", "loan", "as", "t2", "on", "t1", ".", "cust_id", "=", "t2", ".", "cust_id", "group", "by", "t1", ".", "cust_name", "having", "sum", "(", "t2", ".", "amount", ")", ">", "value"], "question": "What are the names and account balances for customers who have taken a total amount of more than 5000 in loans?", "question_toks": ["What", "are", "the", "names", "and", "account", "balances", "for", "customers", "who", "have", "taken", "a", "total", "amount", "of", "more", "than", "5000", "in", "loans", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 16, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 7, false]], "having": [[false, 3, [0, [4, 18, false], null], 5000.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "loan_1", "query": "SELECT DISTINCT T1.cust_name ,  T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id", "query_toks": ["SELECT", "DISTINCT", "T1.cust_name", ",", "T1.credit_score", "FROM", "customer", "AS", "T1", "JOIN", "loan", "AS", "T2", "ON", "T1.cust_id", "=", "T2.cust_id"], "query_toks_no_value": ["select", "distinct", "t1", ".", "cust_name", ",", "t1", ".", "credit_score", "from", "customer", "as", "t1", "join", "loan", "as", "t2", "on", "t1", ".", "cust_id", "=", "t2", ".", "cust_id"], "question": "Find the name and credit score of the customers who have some loans.", "question_toks": ["Find", "the", "name", "and", "credit", "score", "of", "the", "customers", "who", "have", "some", "loans", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 16, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 7, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "loan_1", "query": "SELECT DISTINCT T1.cust_name ,  T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id", "query_toks": ["SELECT", "DISTINCT", "T1.cust_name", ",", "T1.credit_score", "FROM", "customer", "AS", "T1", "JOIN", "loan", "AS", "T2", "ON", "T1.cust_id", "=", "T2.cust_id"], "query_toks_no_value": ["select", "distinct", "t1", ".", "cust_name", ",", "t1", ".", "credit_score", "from", "customer", "as", "t1", "join", "loan", "as", "t2", "on", "t1", ".", "cust_id", "=", "t2", ".", "cust_id"], "question": "What are the different names and credit scores of customers who have taken a loan?", "question_toks": ["What", "are", "the", "different", "names", "and", "credit", "scores", "of", "customers", "who", "have", "taken", "a", "loan", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 16, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 7, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "loan_1", "query": "SELECT T1.bname ,  T1.city FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.loan_type  =  'Business'", "query_toks": ["SELECT", "T1.bname", ",", "T1.city", "FROM", "bank", "AS", "T1", "JOIN", "loan", "AS", "T2", "ON", "T1.branch_id", "=", "T2.branch_id", "WHERE", "T2.loan_type", "=", "'Business", "'"], "query_toks_no_value": ["select", "t1", ".", "bname", ",", "t1", ".", "city", "from", "bank", "as", "t1", "join", "loan", "as", "t2", "on", "t1", ".", "branch_id", "=", "t2", ".", "branch_id", "where", "t2", ".", "loan_type", "=", "value"], "question": "Find the city and name of bank branches that provide business loans.", "question_toks": ["Find", "the", "city", "and", "name", "of", "bank", "branches", "that", "provide", "business", "loans", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 15, false], null], "\"Business\"", null]]}}, {"db_id": "loan_1", "query": "SELECT T1.bname ,  T1.city FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.loan_type  =  'Business'", "query_toks": ["SELECT", "T1.bname", ",", "T1.city", "FROM", "bank", "AS", "T1", "JOIN", "loan", "AS", "T2", "ON", "T1.branch_id", "=", "T2.branch_id", "WHERE", "T2.loan_type", "=", "'Business", "'"], "query_toks_no_value": ["select", "t1", ".", "bname", ",", "t1", ".", "city", "from", "bank", "as", "t1", "join", "loan", "as", "t2", "on", "t1", ".", "branch_id", "=", "t2", ".", "branch_id", "where", "t2", ".", "loan_type", "=", "value"], "question": "What are the names and cities of bank branches that offer loans for business?", "question_toks": ["What", "are", "the", "names", "and", "cities", "of", "bank", "branches", "that", "offer", "loans", "for", "business", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 15, false], null], "\"Business\"", null]]}}, {"db_id": "behavior_monitoring", "query": "SELECT date_incident_start ,  date_incident_end FROM Behavior_Incident WHERE incident_type_code  =  \"NOISE\"", "query_toks": ["SELECT", "date_incident_start", ",", "date_incident_end", "FROM", "Behavior_Incident", "WHERE", "incident_type_code", "=", "``", "NOISE", "''"], "query_toks_no_value": ["select", "date_incident_start", ",", "date_incident_end", "from", "behavior_incident", "where", "incident_type_code", "=", "value"], "question": "What are the start and end dates for incidents with incident type code \"NOISE\"?", "question_toks": ["What", "are", "the", "start", "and", "end", "dates", "for", "incidents", "with", "incident", "type", "code", "``", "NOISE", "''", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 44, false], null]], [0, [0, [0, 45, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 42, false], null], "\"NOISE\"", null]]}}, {"db_id": "behavior_monitoring", "query": "SELECT cell_mobile_number ,  email_address FROM STUDENTS", "query_toks": ["SELECT", "cell_mobile_number", ",", "email_address", "FROM", "STUDENTS"], "query_toks_no_value": ["select", "cell_mobile_number", ",", "email_address", "from", "students"], "question": "Return the cell phone number and email address for all students.", "question_toks": ["Return", "the", "cell", "phone", "number", "and", "email", "address", "for", "all", "students", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 22, false], null]]]], "union": null, "where": []}}, {"db_id": "behavior_monitoring", "query": "SELECT max(monthly_rental) ,  min(monthly_rental) FROM Student_Addresses", "query_toks": ["SELECT", "max", "(", "monthly_rental", ")", ",", "min", "(", "monthly_rental", ")", "FROM", "Student_Addresses"], "query_toks_no_value": ["select", "max", "(", "monthly_rental", ")", ",", "min", "(", "monthly_rental", ")", "from", "student_addresses"], "question": "Find the maximum and minimum monthly rental for all student addresses.", "question_toks": ["Find", "the", "maximum", "and", "minimum", "monthly", "rental", "for", "all", "student", "addresses", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 9]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 60, false], null]], [2, [0, [0, 60, false], null]]]], "union": null, "where": []}}, {"db_id": "behavior_monitoring", "query": "SELECT first_name ,  last_name FROM Teachers ORDER BY last_name", "query_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "Teachers", "ORDER", "BY", "last_name"], "query_toks_no_value": ["select", "first_name", ",", "last_name", "from", "teachers", "order", "by", "last_name"], "question": "Find the first names and last names of teachers in alphabetical order of last name.", "question_toks": ["Find", "the", "first", "names", "and", "last", "names", "of", "teachers", "in", "alphabetical", "order", "of", "last", "name", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 30, false], null]]], "select": [false, [[0, [0, [0, 28, false], null]], [0, [0, [0, 30, false], null]]]], "union": null, "where": []}}, {"db_id": "behavior_monitoring", "query": "SELECT T1.student_id ,  T2.first_name FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.student_id", ",", "T2.first_name", "FROM", "Assessment_Notes", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "GROUP", "BY", "T1.student_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "student_id", ",", "t2", ".", "first_name", "from", "assessment_notes", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "group", "by", "t1", ".", "student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the id and first name of the student that has the most number of assessment notes?", "question_toks": ["Find", "the", "id", "and", "first", "name", "of", "the", "student", "that", "has", "the", "most", "number", "of", "assessment", "notes", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 36, false], null], [0, 16, false], null]], "table_units": [["table_unit", 6], ["table_unit", 4]]}, "groupBy": [[0, 36, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 36, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": []}}, {"db_id": "behavior_monitoring", "query": "SELECT T1.teacher_id ,  T2.first_name FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id ORDER BY count(*) DESC LIMIT 3", "query_toks": ["SELECT", "T1.teacher_id", ",", "T2.first_name", "FROM", "Assessment_Notes", "AS", "T1", "JOIN", "Teachers", "AS", "T2", "ON", "T1.teacher_id", "=", "T2.teacher_id", "GROUP", "BY", "T1.teacher_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "t1", ".", "teacher_id", ",", "t2", ".", "first_name", "from", "assessment_notes", "as", "t1", "join", "teachers", "as", "t2", "on", "t1", ".", "teacher_id", "=", "t2", ".", "teacher_id", "group", "by", "t1", ".", "teacher_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the ids and first names of the 3 teachers that have the most number of assessment notes?", "question_toks": ["Find", "the", "ids", "and", "first", "names", "of", "the", "3", "teachers", "that", "have", "the", "most", "number", "of", "assessment", "notes", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 37, false], null], [0, 26, false], null]], "table_units": [["table_unit", 6], ["table_unit", 5]]}, "groupBy": [[0, 37, false]], "having": [], "intersect": null, "limit": 3, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 37, false], null]], [0, [0, [0, 28, false], null]]]], "union": null, "where": []}}, {"db_id": "behavior_monitoring", "query": "SELECT T1.student_id ,  T2.last_name FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.student_id", ",", "T2.last_name", "FROM", "Behavior_Incident", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "GROUP", "BY", "T1.student_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "student_id", ",", "t2", ".", "last_name", "from", "behavior_incident", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "group", "by", "t1", ".", "student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the id and last name of the student that has the most behavior incidents?", "question_toks": ["Find", "the", "id", "and", "last", "name", "of", "the", "student", "that", "has", "the", "most", "behavior", "incidents", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 43, false], null], [0, 16, false], null]], "table_units": [["table_unit", 7], ["table_unit", 4]]}, "groupBy": [[0, 43, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 43, false], null]], [0, [0, [0, 20, false], null]]]], "union": null, "where": []}}, {"db_id": "behavior_monitoring", "query": "SELECT T1.teacher_id ,  T2.last_name FROM Detention AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T1.detention_type_code  =  \"AFTER\" GROUP BY T1.teacher_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.teacher_id", ",", "T2.last_name", "FROM", "Detention", "AS", "T1", "JOIN", "Teachers", "AS", "T2", "ON", "T1.teacher_id", "=", "T2.teacher_id", "WHERE", "T1.detention_type_code", "=", "``", "AFTER", "''", "GROUP", "BY", "T1.teacher_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "teacher_id", ",", "t2", ".", "last_name", "from", "detention", "as", "t1", "join", "teachers", "as", "t2", "on", "t1", ".", "teacher_id", "=", "t2", ".", "teacher_id", "where", "t1", ".", "detention_type_code", "=", "value", "group", "by", "t1", ".", "teacher_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the id and last name of the teacher that has the most detentions with detention type code \"AFTER\"?", "question_toks": ["Find", "the", "id", "and", "last", "name", "of", "the", "teacher", "that", "has", "the", "most", "detentions", "with", "detention", "type", "code", "``", "AFTER", "''", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 51, false], null], [0, 26, false], null]], "table_units": [["table_unit", 8], ["table_unit", 5]]}, "groupBy": [[0, 51, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 51, false], null]], [0, [0, [0, 30, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 50, false], null], "\"AFTER\"", null]]}}, {"db_id": "behavior_monitoring", "query": "SELECT T1.student_id ,  T2.first_name FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY AVG(monthly_rental) DESC LIMIT 1", "query_toks": ["SELECT", "T1.student_id", ",", "T2.first_name", "FROM", "Student_Addresses", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "GROUP", "BY", "T1.student_id", "ORDER", "BY", "AVG", "(", "monthly_rental", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "student_id", ",", "t2", ".", "first_name", "from", "student_addresses", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "group", "by", "t1", ".", "student_id", "order", "by", "avg", "(", "monthly_rental", ")", "desc", "limit", "value"], "question": "What are the id and first name of the student whose addresses have the highest average monthly rental?", "question_toks": ["What", "are", "the", "id", "and", "first", "name", "of", "the", "student", "whose", "addresses", "have", "the", "highest", "average", "monthly", "rental", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 56, false], null], [0, 16, false], null]], "table_units": [["table_unit", 9], ["table_unit", 4]]}, "groupBy": [[0, 56, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [5, 60, false], null]]], "select": [false, [[0, [0, [0, 56, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": []}}, {"db_id": "behavior_monitoring", "query": "SELECT T2.address_id ,  T1.city FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id GROUP BY T2.address_id ORDER BY AVG(monthly_rental) DESC LIMIT 1", "query_toks": ["SELECT", "T2.address_id", ",", "T1.city", "FROM", "Addresses", "AS", "T1", "JOIN", "Student_Addresses", "AS", "T2", "ON", "T1.address_id", "=", "T2.address_id", "GROUP", "BY", "T2.address_id", "ORDER", "BY", "AVG", "(", "monthly_rental", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "address_id", ",", "t1", ".", "city", "from", "addresses", "as", "t1", "join", "student_addresses", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "address_id", "group", "by", "t2", ".", "address_id", "order", "by", "avg", "(", "monthly_rental", ")", "desc", "limit", "value"], "question": "Find the id and city of the student address with the highest average monthly rental.", "question_toks": ["Find", "the", "id", "and", "city", "of", "the", "student", "address", "with", "the", "highest", "average", "monthly", "rental", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 57, false], null]], "table_units": [["table_unit", 3], ["table_unit", 9]]}, "groupBy": [[0, 57, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [5, 60, false], null]]], "select": [false, [[0, [0, [0, 57, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "behavior_monitoring", "query": "SELECT T1.incident_type_code ,  T2.incident_type_description FROM Behavior_Incident AS T1 JOIN Ref_Incident_Type AS T2 ON T1.incident_type_code  =  T2.incident_type_code GROUP BY T1.incident_type_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.incident_type_code", ",", "T2.incident_type_description", "FROM", "Behavior_Incident", "AS", "T1", "JOIN", "Ref_Incident_Type", "AS", "T2", "ON", "T1.incident_type_code", "=", "T2.incident_type_code", "GROUP", "BY", "T1.incident_type_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "incident_type_code", ",", "t2", ".", "incident_type_description", "from", "behavior_incident", "as", "t1", "join", "ref_incident_type", "as", "t2", "on", "t1", ".", "incident_type_code", "=", "t2", ".", "incident_type_code", "group", "by", "t1", ".", "incident_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the code and description of the most frequent behavior incident type?", "question_toks": ["What", "are", "the", "code", "and", "description", "of", "the", "most", "frequent", "behavior", "incident", "type", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 42, false], null], [0, 5, false], null]], "table_units": [["table_unit", 7], ["table_unit", 2]]}, "groupBy": [[0, 42, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 42, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "behavior_monitoring", "query": "SELECT T1.detention_type_code ,  T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code  =  T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "T1.detention_type_code", ",", "T2.detention_type_description", "FROM", "Detention", "AS", "T1", "JOIN", "Ref_Detention_Type", "AS", "T2", "ON", "T1.detention_type_code", "=", "T2.detention_type_code", "GROUP", "BY", "T1.detention_type_code", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "detention_type_code", ",", "t2", ".", "detention_type_description", "from", "detention", "as", "t1", "join", "ref_detention_type", "as", "t2", "on", "t1", ".", "detention_type_code", "=", "t2", ".", "detention_type_code", "group", "by", "t1", ".", "detention_type_code", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "What are the code and description of the least frequent detention type ?", "question_toks": ["What", "are", "the", "code", "and", "description", "of", "the", "least", "frequent", "detention", "type", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 50, false], null], [0, 3, false], null]], "table_units": [["table_unit", 8], ["table_unit", 1]]}, "groupBy": [[0, 50, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 50, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "behavior_monitoring", "query": "SELECT T1.date_incident_start ,  date_incident_end FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.last_name  =  \"Fahey\"", "query_toks": ["SELECT", "T1.date_incident_start", ",", "date_incident_end", "FROM", "Behavior_Incident", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "WHERE", "T2.last_name", "=", "``", "Fahey", "''"], "query_toks_no_value": ["select", "t1", ".", "date_incident_start", ",", "date_incident_end", "from", "behavior_incident", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "where", "t2", ".", "last_name", "=", "value"], "question": "Find the start and end dates of behavior incidents of students with last name \"Fahey\".", "question_toks": ["Find", "the", "start", "and", "end", "dates", "of", "behavior", "incidents", "of", "students", "with", "last", "name", "``", "Fahey", "''", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 43, false], null], [0, 16, false], null]], "table_units": [["table_unit", 7], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 44, false], null]], [0, [0, [0, 45, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 20, false], null], "\"Fahey\"", null]]}}, {"db_id": "behavior_monitoring", "query": "SELECT T1.datetime_detention_start ,  datetime_detention_end FROM Detention AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.last_name  =  \"Schultz\"", "query_toks": ["SELECT", "T1.datetime_detention_start", ",", "datetime_detention_end", "FROM", "Detention", "AS", "T1", "JOIN", "Teachers", "AS", "T2", "ON", "T1.teacher_id", "=", "T2.teacher_id", "WHERE", "T2.last_name", "=", "``", "Schultz", "''"], "query_toks_no_value": ["select", "t1", ".", "datetime_detention_start", ",", "datetime_detention_end", "from", "detention", "as", "t1", "join", "teachers", "as", "t2", "on", "t1", ".", "teacher_id", "=", "t2", ".", "teacher_id", "where", "t2", ".", "last_name", "=", "value"], "question": "Find the start and end dates of detentions of teachers with last name \"Schultz\".", "question_toks": ["Find", "the", "start", "and", "end", "dates", "of", "detentions", "of", "teachers", "with", "last", "name", "``", "Schultz", "''", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 51, false], null], [0, 26, false], null]], "table_units": [["table_unit", 8], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 52, false], null]], [0, [0, [0, 53, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 30, false], null], "\"Schultz\"", null]]}}, {"db_id": "behavior_monitoring", "query": "SELECT T2.address_id ,  T1.zip_postcode FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id ORDER BY monthly_rental DESC LIMIT 1", "query_toks": ["SELECT", "T2.address_id", ",", "T1.zip_postcode", "FROM", "Addresses", "AS", "T1", "JOIN", "Student_Addresses", "AS", "T2", "ON", "T1.address_id", "=", "T2.address_id", "ORDER", "BY", "monthly_rental", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "address_id", ",", "t1", ".", "zip_postcode", "from", "addresses", "as", "t1", "join", "student_addresses", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "address_id", "order", "by", "monthly_rental", "desc", "limit", "value"], "question": "What are the id and zip code of the address with the highest monthly rental?", "question_toks": ["What", "are", "the", "id", "and", "zip", "code", "of", "the", "address", "with", "the", "highest", "monthly", "rental", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 57, false], null]], "table_units": [["table_unit", 3], ["table_unit", 9]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 60, false], null]]], "select": [false, [[0, [0, [0, 57, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "behavior_monitoring", "query": "SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.address_id WHERE T1.state_province_county  =  \"Wisconsin\"", "query_toks": ["SELECT", "T2.first_name", ",", "T2.last_name", "FROM", "Addresses", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.address_id", "=", "T2.address_id", "WHERE", "T1.state_province_county", "=", "``", "Wisconsin", "''"], "query_toks_no_value": ["select", "t2", ".", "first_name", ",", "t2", ".", "last_name", "from", "addresses", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "address_id", "where", "t1", ".", "state_province_county", "=", "value"], "question": "What are the first names and last names of students with address in Wisconsin state?", "question_toks": ["What", "are", "the", "first", "names", "and", "last", "names", "of", "students", "with", "address", "in", "Wisconsin", "state", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 17, false], null]], "table_units": [["table_unit", 3], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 20, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 13, false], null], "\"Wisconsin\"", null]]}}, {"db_id": "behavior_monitoring", "query": "SELECT T1.line_1 ,  avg(T2.monthly_rental) FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id GROUP BY T2.address_id", "query_toks": ["SELECT", "T1.line_1", ",", "avg", "(", "T2.monthly_rental", ")", "FROM", "Addresses", "AS", "T1", "JOIN", "Student_Addresses", "AS", "T2", "ON", "T1.address_id", "=", "T2.address_id", "GROUP", "BY", "T2.address_id"], "query_toks_no_value": ["select", "t1", ".", "line_1", ",", "avg", "(", "t2", ".", "monthly_rental", ")", "from", "addresses", "as", "t1", "join", "student_addresses", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "address_id", "group", "by", "t2", ".", "address_id"], "question": "What are the line 1 and average monthly rentals of all student addresses?", "question_toks": ["What", "are", "the", "line", "1", "and", "average", "monthly", "rentals", "of", "all", "student", "addresses", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 57, false], null]], "table_units": [["table_unit", 3], ["table_unit", 9]]}, "groupBy": [[0, 57, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [5, [0, [0, 60, false], null]]]], "union": null, "where": []}}, {"db_id": "assets_maintenance", "query": "SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Asset_Parts AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  =  2 INTERSECT SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  <  2", "query_toks": ["SELECT", "T1.asset_id", ",", "T1.asset_details", "FROM", "Assets", "AS", "T1", "JOIN", "Asset_Parts", "AS", "T2", "ON", "T1.asset_id", "=", "T2.asset_id", "GROUP", "BY", "T1.asset_id", "HAVING", "count", "(", "*", ")", "=", "2", "INTERSECT", "SELECT", "T1.asset_id", ",", "T1.asset_details", "FROM", "Assets", "AS", "T1", "JOIN", "Fault_Log", "AS", "T2", "ON", "T1.asset_id", "=", "T2.asset_id", "GROUP", "BY", "T1.asset_id", "HAVING", "count", "(", "*", ")", "<", "2"], "query_toks_no_value": ["select", "t1", ".", "asset_id", ",", "t1", ".", "asset_details", "from", "assets", "as", "t1", "join", "asset_parts", "as", "t2", "on", "t1", ".", "asset_id", "=", "t2", ".", "asset_id", "group", "by", "t1", ".", "asset_id", "having", "count", "(", "*", ")", "=", "value", "intersect", "select", "t1", ".", "asset_id", ",", "t1", ".", "asset_details", "from", "assets", "as", "t1", "join", "fault_log", "as", "t2", "on", "t1", ".", "asset_id", "=", "t2", ".", "asset_id", "group", "by", "t1", ".", "asset_id", "having", "count", "(", "*", ")", "<", "value"], "question": "Which assets have 2 parts and have less than 2 fault logs? List the asset id and detail.", "question_toks": ["Which", "assets", "have", "2", "parts", "and", "have", "less", "than", "2", "fault", "logs", "?", "List", "the", "asset", "id", "and", "detail", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 23, false], null], [0, 42, false], null]], "table_units": [["table_unit", 5], ["table_unit", 6]]}, "groupBy": [[0, 23, false]], "having": [[false, 2, [0, [3, 0, false], null], 2.0, null]], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 23, false], null], [0, 42, false], null]], "table_units": [["table_unit", 5], ["table_unit", 9]]}, "groupBy": [[0, 23, false]], "having": [[false, 4, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 26, false], null]]]], "union": null, "where": []}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 26, false], null]]]], "union": null, "where": []}}, {"db_id": "assets_maintenance", "query": "SELECT count(*) ,  T1.maintenance_contract_id FROM Maintenance_Contracts AS T1 JOIN Assets AS T2 ON T1.maintenance_contract_id  =  T2.maintenance_contract_id GROUP BY T1.maintenance_contract_id", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.maintenance_contract_id", "FROM", "Maintenance_Contracts", "AS", "T1", "JOIN", "Assets", "AS", "T2", "ON", "T1.maintenance_contract_id", "=", "T2.maintenance_contract_id", "GROUP", "BY", "T1.maintenance_contract_id"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "maintenance_contract_id", "from", "maintenance_contracts", "as", "t1", "join", "assets", "as", "t2", "on", "t1", ".", "maintenance_contract_id", "=", "t2", ".", "maintenance_contract_id", "group", "by", "t1", ".", "maintenance_contract_id"], "question": "How many assets does each maintenance contract contain? List the number and the contract id.", "question_toks": ["How", "many", "assets", "does", "each", "maintenance", "contract", "contain", "?", "List", "the", "number", "and", "the", "contract", "id", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 24, false], null]], "table_units": [["table_unit", 1], ["table_unit", 5]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "assets_maintenance", "query": "SELECT count(*) ,  T1.company_id FROM Third_Party_Companies AS T1 JOIN Assets AS T2 ON T1.company_id  =  T2.supplier_company_id GROUP BY T1.company_id", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.company_id", "FROM", "Third_Party_Companies", "AS", "T1", "JOIN", "Assets", "AS", "T2", "ON", "T1.company_id", "=", "T2.supplier_company_id", "GROUP", "BY", "T1.company_id"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "company_id", "from", "third_party_companies", "as", "t1", "join", "assets", "as", "t2", "on", "t1", ".", "company_id", "=", "t2", ".", "supplier_company_id", "group", "by", "t1", ".", "company_id"], "question": "How many assets does each third party company supply? List the count and the company id.", "question_toks": ["How", "many", "assets", "does", "each", "third", "party", "company", "supply", "?", "List", "the", "count", "and", "the", "company", "id", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]], "table_units": [["table_unit", 0], ["table_unit", 5]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": []}}, {"db_id": "assets_maintenance", "query": "SELECT T1.company_id ,  T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Engineers AS T2 ON T1.company_id  =  T2.company_id GROUP BY T1.company_id HAVING count(*)  >=  2 UNION SELECT T3.company_id ,  T3.company_name FROM Third_Party_Companies AS T3 JOIN Maintenance_Contracts AS T4 ON T3.company_id  =  T4.maintenance_contract_company_id GROUP BY T3.company_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.company_id", ",", "T1.company_name", "FROM", "Third_Party_Companies", "AS", "T1", "JOIN", "Maintenance_Engineers", "AS", "T2", "ON", "T1.company_id", "=", "T2.company_id", "GROUP", "BY", "T1.company_id", "HAVING", "count", "(", "*", ")", ">", "=", "2", "UNION", "SELECT", "T3.company_id", ",", "T3.company_name", "FROM", "Third_Party_Companies", "AS", "T3", "JOIN", "Maintenance_Contracts", "AS", "T4", "ON", "T3.company_id", "=", "T4.maintenance_contract_company_id", "GROUP", "BY", "T3.company_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "company_id", ",", "t1", ".", "company_name", "from", "third_party_companies", "as", "t1", "join", "maintenance_engineers", "as", "t2", "on", "t1", ".", "company_id", "=", "t2", ".", "company_id", "group", "by", "t1", ".", "company_id", "having", "count", "(", "*", ")", ">", "=", "value", "union", "select", "t3", ".", "company_id", ",", "t3", ".", "company_name", "from", "third_party_companies", "as", "t3", "join", "maintenance_contracts", "as", "t4", "on", "t3", ".", "company_id", "=", "t4", ".", "maintenance_contract_company_id", "group", "by", "t3", ".", "company_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Which third party companies have at least 2 maintenance engineers or have at least 2 maintenance contracts? List the company id and name.", "question_toks": ["Which", "third", "party", "companies", "have", "at", "least", "2", "maintenance", "engineers", "or", "have", "at", "least", "2", "maintenance", "contracts", "?", "List", "the", "company", "id", "and", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 35, false], null]], "table_units": [["table_unit", 0], ["table_unit", 7]]}, "groupBy": [[0, 1, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 3, false], null]]]], "union": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 1, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}, "where": []}}, {"db_id": "assets_maintenance", "query": "SELECT T1.staff_name ,  T1.staff_id FROM Staff AS T1 JOIN Fault_Log AS T2 ON T1.staff_id  =  T2.recorded_by_staff_id EXCEPT SELECT T3.staff_name ,  T3.staff_id FROM Staff AS T3 JOIN Engineer_Visits AS T4 ON T3.staff_id  =  T4.contact_staff_id", "query_toks": ["SELECT", "T1.staff_name", ",", "T1.staff_id", "FROM", "Staff", "AS", "T1", "JOIN", "Fault_Log", "AS", "T2", "ON", "T1.staff_id", "=", "T2.recorded_by_staff_id", "EXCEPT", "SELECT", "T3.staff_name", ",", "T3.staff_id", "FROM", "Staff", "AS", "T3", "JOIN", "Engineer_Visits", "AS", "T4", "ON", "T3.staff_id", "=", "T4.contact_staff_id"], "query_toks_no_value": ["select", "t1", ".", "staff_name", ",", "t1", ".", "staff_id", "from", "staff", "as", "t1", "join", "fault_log", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "recorded_by_staff_id", "except", "select", "t3", ".", "staff_name", ",", "t3", ".", "staff_id", "from", "staff", "as", "t3", "join", "engineer_visits", "as", "t4", "on", "t3", ".", "staff_id", "=", "t4", ".", "contact_staff_id"], "question": "What is the name and id of the staff who recorded the fault log but has not contacted any visiting engineers?", "question_toks": ["What", "is", "the", "name", "and", "id", "of", "the", "staff", "who", "recorded", "the", "fault", "log", "but", "has", "not", "contacted", "any", "visiting", "engineers", "?"], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 19, false], null], [0, 48, false], null]], "table_units": [["table_unit", 4], ["table_unit", 10]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": []}, "from": {"conds": [[false, 2, [0, [0, 19, false], null], [0, 43, false], null]], "table_units": [["table_unit", 4], ["table_unit", 9]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": []}}, {"db_id": "assets_maintenance", "query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 GROUP BY T1.engineer_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.engineer_id", ",", "T1.first_name", ",", "T1.last_name", "FROM", "Maintenance_Engineers", "AS", "T1", "JOIN", "Engineer_Visits", "AS", "T2", "GROUP", "BY", "T1.engineer_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "engineer_id", ",", "t1", ".", "first_name", ",", "t1", ".", "last_name", "from", "maintenance_engineers", "as", "t1", "join", "engineer_visits", "as", "t2", "group", "by", "t1", ".", "engineer_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which engineer has visited the most times? Show the engineer id, first name and last name.", "question_toks": ["Which", "engineer", "has", "visited", "the", "most", "times", "?", "Show", "the", "engineer", "id", ",", "first", "name", "and", "last", "name", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7], ["table_unit", 10]]}, "groupBy": [[0, 34, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]]]], "union": null, "where": []}}, {"db_id": "assets_maintenance", "query": "SELECT T1.part_name ,  T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_id HAVING count(*)  >  2", "query_toks": ["SELECT", "T1.part_name", ",", "T1.part_id", "FROM", "Parts", "AS", "T1", "JOIN", "Part_Faults", "AS", "T2", "ON", "T1.part_id", "=", "T2.part_id", "GROUP", "BY", "T1.part_id", "HAVING", "count", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "t1", ".", "part_name", ",", "t1", ".", "part_id", "from", "parts", "as", "t1", "join", "part_faults", "as", "t2", "on", "t1", ".", "part_id", "=", "t2", ".", "part_id", "group", "by", "t1", ".", "part_id", "having", "count", "(", "*", ")", ">", "value"], "question": "Which parts have more than 2 faults? Show the part name and id.", "question_toks": ["Which", "parts", "have", "more", "than", "2", "faults", "?", "Show", "the", "part", "name", "and", "id", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 56, false], null]], "table_units": [["table_unit", 2], ["table_unit", 11]]}, "groupBy": [[0, 11, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "assets_maintenance", "query": "SELECT T1.first_name ,  T1.last_name ,  T1.other_details ,  T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id  =  T2.engineer_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", ",", "T1.other_details", ",", "T3.skill_description", "FROM", "Maintenance_Engineers", "AS", "T1", "JOIN", "Engineer_Skills", "AS", "T2", "ON", "T1.engineer_id", "=", "T2.engineer_id", "JOIN", "Skills", "AS", "T3", "ON", "T2.skill_id", "=", "T3.skill_id"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", ",", "t1", ".", "other_details", ",", "t3", ".", "skill_description", "from", "maintenance_engineers", "as", "t1", "join", "engineer_skills", "as", "t2", "on", "t1", ".", "engineer_id", "=", "t2", ".", "engineer_id", "join", "skills", "as", "t3", "on", "t2", ".", "skill_id", "=", "t3", ".", "skill_id"], "question": "List all every engineer's first name, last name, details and coresponding skill description.", "question_toks": ["List", "all", "every", "engineer", "'s", "first", "name", ",", "last", "name", ",", "details", "and", "coresponding", "skill", "description", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 34, false], null], [0, 39, false], null]], "table_units": [["table_unit", 7], ["table_unit", 8]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]], [0, [0, [0, 38, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": []}}, {"db_id": "assets_maintenance", "query": "SELECT T1.fault_short_name ,  T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id  =  T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id", "query_toks": ["SELECT", "T1.fault_short_name", ",", "T3.skill_description", "FROM", "Part_Faults", "AS", "T1", "JOIN", "Skills_Required_To_Fix", "AS", "T2", "ON", "T1.part_fault_id", "=", "T2.part_fault_id", "JOIN", "Skills", "AS", "T3", "ON", "T2.skill_id", "=", "T3.skill_id"], "query_toks_no_value": ["select", "t1", ".", "fault_short_name", ",", "t3", ".", "skill_description", "from", "part_faults", "as", "t1", "join", "skills_required_to_fix", "as", "t2", "on", "t1", ".", "part_fault_id", "=", "t2", ".", "part_fault_id", "join", "skills", "as", "t3", "on", "t2", ".", "skill_id", "=", "t3", ".", "skill_id"], "question": "For all the faults of different parts, what are all the decriptions of the skills required to fix them? List the name of the faults and the skill description.", "question_toks": ["For", "all", "the", "faults", "of", "different", "parts", ",", "what", "are", "all", "the", "decriptions", "of", "the", "skills", "required", "to", "fix", "them", "?", "List", "the", "name", "of", "the", "faults", "and", "the", "skill", "description", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 55, false], null], [0, 63, false], null]], "table_units": [["table_unit", 11], ["table_unit", 13]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 57, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": []}}, {"db_id": "assets_maintenance", "query": "SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name", "query_toks": ["SELECT", "T1.part_name", ",", "count", "(", "*", ")", "FROM", "Parts", "AS", "T1", "JOIN", "Asset_Parts", "AS", "T2", "ON", "T1.part_id", "=", "T2.part_id", "GROUP", "BY", "T1.part_name"], "query_toks_no_value": ["select", "t1", ".", "part_name", ",", "count", "(", "*", ")", "from", "parts", "as", "t1", "join", "asset_parts", "as", "t2", "on", "t1", ".", "part_id", "=", "t2", ".", "part_id", "group", "by", "t1", ".", "part_name"], "question": "How many assets can each parts be used in? List the part name and the number.", "question_toks": ["How", "many", "assets", "can", "each", "parts", "be", "used", "in", "?", "List", "the", "part", "name", "and", "the", "number", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 33, false], null]], "table_units": [["table_unit", 2], ["table_unit", 6]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "assets_maintenance", "query": "SELECT T1.fault_description ,  T2.fault_status FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id", "query_toks": ["SELECT", "T1.fault_description", ",", "T2.fault_status", "FROM", "Fault_Log", "AS", "T1", "JOIN", "Fault_Log_Parts", "AS", "T2", "ON", "T1.fault_log_entry_id", "=", "T2.fault_log_entry_id"], "query_toks_no_value": ["select", "t1", ".", "fault_description", ",", "t2", ".", "fault_status", "from", "fault_log", "as", "t1", "join", "fault_log_parts", "as", "t2", "on", "t1", ".", "fault_log_entry_id", "=", "t2", ".", "fault_log_entry_id"], "question": "What are all the fault descriptions and the fault status of all the faults recoreded in the logs?", "question_toks": ["What", "are", "all", "the", "fault", "descriptions", "and", "the", "fault", "status", "of", "all", "the", "faults", "recoreded", "in", "the", "logs", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 41, false], null], [0, 60, false], null]], "table_units": [["table_unit", 9], ["table_unit", 12]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 45, false], null]], [0, [0, [0, 62, false], null]]]], "union": null, "where": []}}, {"db_id": "assets_maintenance", "query": "SELECT count(*) ,  T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.fault_log_entry_id", "FROM", "Fault_Log", "AS", "T1", "JOIN", "Engineer_Visits", "AS", "T2", "ON", "T1.fault_log_entry_id", "=", "T2.fault_log_entry_id", "GROUP", "BY", "T1.fault_log_entry_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "fault_log_entry_id", "from", "fault_log", "as", "t1", "join", "engineer_visits", "as", "t2", "on", "t1", ".", "fault_log_entry_id", "=", "t2", ".", "fault_log_entry_id", "group", "by", "t1", ".", "fault_log_entry_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "How many engineer visits are required at most for a single fault log? List the number and the log entry id.", "question_toks": ["How", "many", "engineer", "visits", "are", "required", "at", "most", "for", "a", "single", "fault", "log", "?", "List", "the", "number", "and", "the", "log", "entry", "id", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 41, false], null], [0, 50, false], null]], "table_units": [["table_unit", 9], ["table_unit", 10]]}, "groupBy": [[0, 41, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 41, false], null]]]], "union": null, "where": []}}, {"db_id": "assets_maintenance", "query": "SELECT first_name ,  last_name FROM Maintenance_Engineers WHERE engineer_id NOT IN (SELECT engineer_id FROM Engineer_Visits)", "query_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "Maintenance_Engineers", "WHERE", "engineer_id", "NOT", "IN", "(", "SELECT", "engineer_id", "FROM", "Engineer_Visits", ")"], "query_toks_no_value": ["select", "first_name", ",", "last_name", "from", "maintenance_engineers", "where", "engineer_id", "not", "in", "(", "select", "engineer_id", "from", "engineer_visits", ")"], "question": "Which engineers have never visited to maintain the assets? List the engineer first name and last name.", "question_toks": ["Which", "engineers", "have", "never", "visited", "to", "maintain", "the", "assets", "?", "List", "the", "engineer", "first", "name", "and", "last", "name", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 34, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 10]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 49, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "assets_maintenance", "query": "SELECT asset_id ,  asset_details ,  asset_make ,  asset_model FROM Assets", "query_toks": ["SELECT", "asset_id", ",", "asset_details", ",", "asset_make", ",", "asset_model", "FROM", "Assets"], "query_toks_no_value": ["select", "asset_id", ",", "asset_details", ",", "asset_make", ",", "asset_model", "from", "assets"], "question": "List the asset id, details, make and model for every asset.", "question_toks": ["List", "the", "asset", "id", ",", "details", ",", "make", "and", "model", "for", "every", "asset", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 26, false], null]], [0, [0, [0, 27, false], null]], [0, [0, [0, 28, false], null]]]], "union": null, "where": []}}, {"db_id": "assets_maintenance", "query": "SELECT T1.part_id ,  T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id  =  T3.part_fault_id GROUP BY T1.part_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.part_id", ",", "T1.part_name", "FROM", "Parts", "AS", "T1", "JOIN", "Part_Faults", "AS", "T2", "ON", "T1.part_id", "=", "T2.part_id", "JOIN", "Skills_Required_To_Fix", "AS", "T3", "ON", "T2.part_fault_id", "=", "T3.part_fault_id", "GROUP", "BY", "T1.part_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "part_id", ",", "t1", ".", "part_name", "from", "parts", "as", "t1", "join", "part_faults", "as", "t2", "on", "t1", ".", "part_id", "=", "t2", ".", "part_id", "join", "skills_required_to_fix", "as", "t3", "on", "t2", ".", "part_fault_id", "=", "t3", ".", "part_fault_id", "group", "by", "t1", ".", "part_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which part fault requires the most number of skills to fix? List part id and name.", "question_toks": ["Which", "part", "fault", "requires", "the", "most", "number", "of", "skills", "to", "fix", "?", "List", "part", "id", "and", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 56, false], null]], "table_units": [["table_unit", 2], ["table_unit", 11]]}, "groupBy": [[0, 11, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "assets_maintenance", "query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "T1.engineer_id", ",", "T1.first_name", ",", "T1.last_name", "FROM", "Maintenance_Engineers", "AS", "T1", "JOIN", "Engineer_Visits", "AS", "T2", "ON", "T1.engineer_id", "=", "T2.engineer_id", "GROUP", "BY", "T1.engineer_id", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "engineer_id", ",", "t1", ".", "first_name", ",", "t1", ".", "last_name", "from", "maintenance_engineers", "as", "t1", "join", "engineer_visits", "as", "t2", "on", "t1", ".", "engineer_id", "=", "t2", ".", "engineer_id", "group", "by", "t1", ".", "engineer_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "Among those engineers who have visited, which engineer makes the least number of visits? List the engineer id, first name and last name.", "question_toks": ["Among", "those", "engineers", "who", "have", "visited", ",", "which", "engineer", "makes", "the", "least", "number", "of", "visits", "?", "List", "the", "engineer", "id", ",", "first", "name", "and", "last", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 34, false], null], [0, 49, false], null]], "table_units": [["table_unit", 7], ["table_unit", 10]]}, "groupBy": [[0, 34, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]]]], "union": null, "where": []}}, {"db_id": "assets_maintenance", "query": "SELECT T1.staff_name ,  T3.first_name ,  T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id  =  T3.engineer_id", "query_toks": ["SELECT", "T1.staff_name", ",", "T3.first_name", ",", "T3.last_name", "FROM", "Staff", "AS", "T1", "JOIN", "Engineer_Visits", "AS", "T2", "ON", "T1.staff_id", "=", "T2.contact_staff_id", "JOIN", "Maintenance_Engineers", "AS", "T3", "ON", "T2.engineer_id", "=", "T3.engineer_id"], "query_toks_no_value": ["select", "t1", ".", "staff_name", ",", "t3", ".", "first_name", ",", "t3", ".", "last_name", "from", "staff", "as", "t1", "join", "engineer_visits", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "contact_staff_id", "join", "maintenance_engineers", "as", "t3", "on", "t2", ".", "engineer_id", "=", "t3", ".", "engineer_id"], "question": "Which staff have contacted which engineers? List the staff name and the engineer first name and last name.", "question_toks": ["Which", "staff", "have", "contacted", "which", "engineers", "?", "List", "the", "staff", "name", "and", "the", "engineer", "first", "name", "and", "last", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 19, false], null], [0, 48, false], null]], "table_units": [["table_unit", 4], ["table_unit", 10]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]]]], "union": null, "where": []}}, {"db_id": "assets_maintenance", "query": "SELECT T1.fault_log_entry_id ,  T1.fault_description ,  T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.fault_log_entry_id", ",", "T1.fault_description", ",", "T1.fault_log_entry_datetime", "FROM", "Fault_Log", "AS", "T1", "JOIN", "Fault_Log_Parts", "AS", "T2", "ON", "T1.fault_log_entry_id", "=", "T2.fault_log_entry_id", "GROUP", "BY", "T1.fault_log_entry_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "fault_log_entry_id", ",", "t1", ".", "fault_description", ",", "t1", ".", "fault_log_entry_datetime", "from", "fault_log", "as", "t1", "join", "fault_log_parts", "as", "t2", "on", "t1", ".", "fault_log_entry_id", "=", "t2", ".", "fault_log_entry_id", "group", "by", "t1", ".", "fault_log_entry_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which fault log included the most number of faulty parts? List the fault log id, description and record time.", "question_toks": ["Which", "fault", "log", "included", "the", "most", "number", "of", "faulty", "parts", "?", "List", "the", "fault", "log", "id", ",", "description", "and", "record", "time", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 41, false], null], [0, 60, false], null]], "table_units": [["table_unit", 9], ["table_unit", 12]]}, "groupBy": [[0, 41, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 41, false], null]], [0, [0, [0, 45, false], null]], [0, [0, [0, 44, false], null]]]], "union": null, "where": []}}, {"db_id": "assets_maintenance", "query": "SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.skill_id", ",", "T1.skill_description", "FROM", "Skills", "AS", "T1", "JOIN", "Skills_Required_To_Fix", "AS", "T2", "ON", "T1.skill_id", "=", "T2.skill_id", "GROUP", "BY", "T1.skill_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "skill_id", ",", "t1", ".", "skill_description", "from", "skills", "as", "t1", "join", "skills_required_to_fix", "as", "t2", "on", "t1", ".", "skill_id", "=", "t2", ".", "skill_id", "group", "by", "t1", ".", "skill_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which skill is used in fixing the most number of faults? List the skill id and description.", "question_toks": ["Which", "skill", "is", "used", "in", "fixing", "the", "most", "number", "of", "faults", "?", "List", "the", "skill", "id", "and", "description", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 16, false], null], [0, 64, false], null]], "table_units": [["table_unit", 3], ["table_unit", 13]]}, "groupBy": [[0, 16, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": []}}, {"db_id": "assets_maintenance", "query": "SELECT asset_make ,  asset_model ,  asset_details FROM Assets ORDER BY asset_disposed_date ASC", "query_toks": ["SELECT", "asset_make", ",", "asset_model", ",", "asset_details", "FROM", "Assets", "ORDER", "BY", "asset_disposed_date", "ASC"], "query_toks_no_value": ["select", "asset_make", ",", "asset_model", ",", "asset_details", "from", "assets", "order", "by", "asset_disposed_date", "asc"], "question": "List the all the assets make, model, details by the disposed date ascendingly.", "question_toks": ["List", "the", "all", "the", "assets", "make", ",", "model", ",", "details", "by", "the", "disposed", "date", "ascendingly", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 30, false], null]]], "select": [false, [[0, [0, [0, 27, false], null]], [0, [0, [0, 28, false], null]], [0, [0, [0, 26, false], null]]]], "union": null, "where": []}}, {"db_id": "assets_maintenance", "query": "SELECT part_id ,  chargeable_amount FROM Parts ORDER BY chargeable_amount ASC LIMIT 1", "query_toks": ["SELECT", "part_id", ",", "chargeable_amount", "FROM", "Parts", "ORDER", "BY", "chargeable_amount", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "part_id", ",", "chargeable_amount", "from", "parts", "order", "by", "chargeable_amount", "asc", "limit", "value"], "question": "Which part has the least chargeable amount? List the part id and amount.", "question_toks": ["Which", "part", "has", "the", "least", "chargeable", "amount", "?", "List", "the", "part", "id", "and", "amount", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 14, false], null]]], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "assets_maintenance", "query": "SELECT T1.staff_name ,  count(*) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id GROUP BY T1.staff_name", "query_toks": ["SELECT", "T1.staff_name", ",", "count", "(", "*", ")", "FROM", "Staff", "AS", "T1", "JOIN", "Engineer_Visits", "AS", "T2", "ON", "T1.staff_id", "=", "T2.contact_staff_id", "GROUP", "BY", "T1.staff_name"], "query_toks_no_value": ["select", "t1", ".", "staff_name", ",", "count", "(", "*", ")", "from", "staff", "as", "t1", "join", "engineer_visits", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "contact_staff_id", "group", "by", "t1", ".", "staff_name"], "question": "How many engineers did each staff contact? List both the contact staff name and number of engineers contacted.", "question_toks": ["How", "many", "engineers", "did", "each", "staff", "contact", "?", "List", "both", "the", "contact", "staff", "name", "and", "number", "of", "engineers", "contacted", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 19, false], null], [0, 48, false], null]], "table_units": [["table_unit", 4], ["table_unit", 10]]}, "groupBy": [[0, 20, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "station_weather", "query": "SELECT local_authority ,  services FROM station", "query_toks": ["SELECT", "local_authority", ",", "services", "FROM", "station"], "query_toks_no_value": ["select", "local_authority", ",", "services", "from", "station"], "question": "list the local authorities and services provided by all stations.", "question_toks": ["list", "the", "local", "authorities", "and", "services", "provided", "by", "all", "stations", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "station_weather", "query": "SELECT train_number ,  name FROM train ORDER BY TIME", "query_toks": ["SELECT", "train_number", ",", "name", "FROM", "train", "ORDER", "BY", "TIME"], "query_toks_no_value": ["select", "train_number", ",", "name", "from", "train", "order", "by", "time"], "question": "show all train numbers and names ordered by their time from early to late.", "question_toks": ["show", "all", "train", "numbers", "and", "names", "ordered", "by", "their", "time", "from", "early", "to", "late", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "station_weather", "query": "SELECT TIME ,  train_number FROM train WHERE destination  =  'Chennai' ORDER BY TIME", "query_toks": ["SELECT", "TIME", ",", "train_number", "FROM", "train", "WHERE", "destination", "=", "'Chennai", "'", "ORDER", "BY", "TIME"], "query_toks_no_value": ["select", "time", ",", "train_number", "from", "train", "where", "destination", "=", "value", "order", "by", "time"], "question": "Give me the times and numbers of all trains that go to Chennai, ordered by time.", "question_toks": ["Give", "me", "the", "times", "and", "numbers", "of", "all", "trains", "that", "go", "to", "Chennai", ",", "ordered", "by", "time", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"Chennai\"", null]]}}, {"db_id": "station_weather", "query": "SELECT train_number ,  TIME FROM train WHERE origin  =  'Chennai' AND destination  =  'Guruvayur'", "query_toks": ["SELECT", "train_number", ",", "TIME", "FROM", "train", "WHERE", "origin", "=", "'Chennai", "'", "AND", "destination", "=", "'Guruvayur", "'"], "query_toks_no_value": ["select", "train_number", ",", "time", "from", "train", "where", "origin", "=", "value", "and", "destination", "=", "value"], "question": "Find the number and time of the train that goes from Chennai to Guruvayur.", "question_toks": ["Find", "the", "number", "and", "time", "of", "the", "train", "that", "goes", "from", "Chennai", "to", "Guruvayur", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"Chennai\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"Guruvayur\"", null]]}}, {"db_id": "station_weather", "query": "SELECT origin ,  count(*) FROM train GROUP BY origin", "query_toks": ["SELECT", "origin", ",", "count", "(", "*", ")", "FROM", "train", "GROUP", "BY", "origin"], "query_toks_no_value": ["select", "origin", ",", "count", "(", "*", ")", "from", "train", "group", "by", "origin"], "question": "Find the number of trains starting from each origin.", "question_toks": ["Find", "the", "number", "of", "trains", "starting", "from", "each", "origin", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "station_weather", "query": "SELECT count(*) ,  t1.network_name ,  t1.services FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id GROUP BY t2.station_id", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "t1.network_name", ",", "t1.services", "FROM", "station", "AS", "t1", "JOIN", "route", "AS", "t2", "ON", "t1.id", "=", "t2.station_id", "GROUP", "BY", "t2.station_id"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "network_name", ",", "t1", ".", "services", "from", "station", "as", "t1", "join", "route", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "station_id", "group", "by", "t2", ".", "station_id"], "question": "Find the number of trains for each station, as well as the station network name and services.", "question_toks": ["Find", "the", "number", "of", "trains", "for", "each", "station", ",", "as", "well", "as", "the", "station", "network", "name", "and", "services", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 13, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "station_weather", "query": "SELECT avg(high_temperature) ,  day_of_week FROM weekly_weather GROUP BY day_of_week", "query_toks": ["SELECT", "avg", "(", "high_temperature", ")", ",", "day_of_week", "FROM", "weekly_weather", "GROUP", "BY", "day_of_week"], "query_toks_no_value": ["select", "avg", "(", "high_temperature", ")", ",", "day_of_week", "from", "weekly_weather", "group", "by", "day_of_week"], "question": "What is the average high temperature for each day of week?", "question_toks": ["What", "is", "the", "average", "high", "temperature", "for", "each", "day", "of", "week", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 16, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": []}}, {"db_id": "station_weather", "query": "SELECT max(t1.low_temperature) ,  avg(t1.precipitation) FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id WHERE t2.network_name  =  \"Amersham\"", "query_toks": ["SELECT", "max", "(", "t1.low_temperature", ")", ",", "avg", "(", "t1.precipitation", ")", "FROM", "weekly_weather", "AS", "t1", "JOIN", "station", "AS", "t2", "ON", "t1.station_id", "=", "t2.id", "WHERE", "t2.network_name", "=", "``", "Amersham", "''"], "query_toks_no_value": ["select", "max", "(", "t1", ".", "low_temperature", ")", ",", "avg", "(", "t1", ".", "precipitation", ")", "from", "weekly_weather", "as", "t1", "join", "station", "as", "t2", "on", "t1", ".", "station_id", "=", "t2", ".", "id", "where", "t2", ".", "network_name", "=", "value"], "question": "Give me the maximum low temperature and average precipitation at the Amersham station.", "question_toks": ["Give", "me", "the", "maximum", "low", "temperature", "and", "average", "precipitation", "at", "the", "Amersham", "station", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 14, false], null], [0, 8, false], null]], "table_units": [["table_unit", 3], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 17, false], null]], [5, [0, [0, 18, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], "\"Amersham\"", null]]}}, {"db_id": "station_weather", "query": "SELECT t3.name ,  t3.time FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id JOIN train AS t3 ON t2.train_id  =  t3.id WHERE t1.local_authority  =  \"Chiltern\"", "query_toks": ["SELECT", "t3.name", ",", "t3.time", "FROM", "station", "AS", "t1", "JOIN", "route", "AS", "t2", "ON", "t1.id", "=", "t2.station_id", "JOIN", "train", "AS", "t3", "ON", "t2.train_id", "=", "t3.id", "WHERE", "t1.local_authority", "=", "``", "Chiltern", "''"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t3", ".", "time", "from", "station", "as", "t1", "join", "route", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "station_id", "join", "train", "as", "t3", "on", "t2", ".", "train_id", "=", "t3", ".", "id", "where", "t1", ".", "local_authority", "=", "value"], "question": "Find names and times of trains that run through stations for the local authority Chiltern.", "question_toks": ["Find", "names", "and", "times", "of", "trains", "that", "run", "through", "stations", "for", "the", "local", "authority", "Chiltern", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 13, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"Chiltern\"", null]]}}, {"db_id": "station_weather", "query": "SELECT t2.id ,  t2.local_authority FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id GROUP BY t1.station_id ORDER BY avg(high_temperature) DESC LIMIT 1", "query_toks": ["SELECT", "t2.id", ",", "t2.local_authority", "FROM", "weekly_weather", "AS", "t1", "JOIN", "station", "AS", "t2", "ON", "t1.station_id", "=", "t2.id", "GROUP", "BY", "t1.station_id", "ORDER", "BY", "avg", "(", "high_temperature", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "id", ",", "t2", ".", "local_authority", "from", "weekly_weather", "as", "t1", "join", "station", "as", "t2", "on", "t1", ".", "station_id", "=", "t2", ".", "id", "group", "by", "t1", ".", "station_id", "order", "by", "avg", "(", "high_temperature", ")", "desc", "limit", "value"], "question": "Find the id and local authority of the station with has the highest average high temperature.", "question_toks": ["Find", "the", "id", "and", "local", "authority", "of", "the", "station", "with", "has", "the", "highest", "average", "high", "temperature", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 14, false], null], [0, 8, false], null]], "table_units": [["table_unit", 3], ["table_unit", 1]]}, "groupBy": [[0, 14, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [5, 16, false], null]]], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "station_weather", "query": "SELECT t2.id ,  t2.local_authority FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id GROUP BY t1.station_id HAVING max(t1.precipitation)  >  50", "query_toks": ["SELECT", "t2.id", ",", "t2.local_authority", "FROM", "weekly_weather", "AS", "t1", "JOIN", "station", "AS", "t2", "ON", "t1.station_id", "=", "t2.id", "GROUP", "BY", "t1.station_id", "HAVING", "max", "(", "t1.precipitation", ")", ">", "50"], "query_toks_no_value": ["select", "t2", ".", "id", ",", "t2", ".", "local_authority", "from", "weekly_weather", "as", "t1", "join", "station", "as", "t2", "on", "t1", ".", "station_id", "=", "t2", ".", "id", "group", "by", "t1", ".", "station_id", "having", "max", "(", "t1", ".", "precipitation", ")", ">", "value"], "question": "Find the id and local authority of the station whose maximum precipitation is higher than 50.", "question_toks": ["Find", "the", "id", "and", "local", "authority", "of", "the", "station", "whose", "maximum", "precipitation", "is", "higher", "than", "50", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 14, false], null], [0, 8, false], null]], "table_units": [["table_unit", 3], ["table_unit", 1]]}, "groupBy": [[0, 14, false]], "having": [[false, 3, [0, [1, 18, false], null], 50.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "station_weather", "query": "SELECT min(low_temperature) ,  max(wind_speed_mph) FROM weekly_weather", "query_toks": ["SELECT", "min", "(", "low_temperature", ")", ",", "max", "(", "wind_speed_mph", ")", "FROM", "weekly_weather"], "query_toks_no_value": ["select", "min", "(", "low_temperature", ")", ",", "max", "(", "wind_speed_mph", ")", "from", "weekly_weather"], "question": "show the lowest low temperature and highest wind speed in miles per hour.", "question_toks": ["show", "the", "lowest", "low", "temperature", "and", "highest", "wind", "speed", "in", "miles", "per", "hour", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 17, false], null]], [1, [0, [0, 19, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT T3.EMP_FNAME ,  T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM  =  T3.EMP_NUM WHERE DEPT_NAME  =  \"Biology\"", "query_toks": ["SELECT", "T3.EMP_FNAME", ",", "T3.EMP_LNAME", "FROM", "professor", "AS", "T1", "JOIN", "department", "AS", "T2", "ON", "T1.dept_code", "=", "T2.dept_code", "JOIN", "employee", "AS", "T3", "ON", "T1.EMP_NUM", "=", "T3.EMP_NUM", "WHERE", "DEPT_NAME", "=", "``", "Biology", "''"], "query_toks_no_value": ["select", "t3", ".", "emp_fname", ",", "t3", ".", "emp_lname", "from", "professor", "as", "t1", "join", "department", "as", "t2", "on", "t1", ".", "dept_code", "=", "t2", ".", "dept_code", "join", "employee", "as", "t3", "on", "t1", ".", "emp_num", "=", "t3", ".", "emp_num", "where", "dept_name", "=", "value"], "question": "What is the first and last name of the professor in biology department?", "question_toks": ["What", "is", "the", "first", "and", "last", "name", "of", "the", "professor", "in", "biology", "department", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 28, false], null], [0, 11, false], null]], "table_units": [["table_unit", 5], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"Biology\"", null]]}}, {"db_id": "college_1", "query": "SELECT T3.EMP_FNAME ,  T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM  =  T3.EMP_NUM WHERE DEPT_NAME  =  \"Biology\"", "query_toks": ["SELECT", "T3.EMP_FNAME", ",", "T3.EMP_LNAME", "FROM", "professor", "AS", "T1", "JOIN", "department", "AS", "T2", "ON", "T1.dept_code", "=", "T2.dept_code", "JOIN", "employee", "AS", "T3", "ON", "T1.EMP_NUM", "=", "T3.EMP_NUM", "WHERE", "DEPT_NAME", "=", "``", "Biology", "''"], "query_toks_no_value": ["select", "t3", ".", "emp_fname", ",", "t3", ".", "emp_lname", "from", "professor", "as", "t1", "join", "department", "as", "t2", "on", "t1", ".", "dept_code", "=", "t2", ".", "dept_code", "join", "employee", "as", "t3", "on", "t1", ".", "emp_num", "=", "t3", ".", "emp_num", "where", "dept_name", "=", "value"], "question": "What are the first and last name of all biology professors?", "question_toks": ["What", "are", "the", "first", "and", "last", "name", "of", "all", "biology", "professors", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 28, false], null], [0, 11, false], null]], "table_units": [["table_unit", 5], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"Biology\"", null]]}}, {"db_id": "college_1", "query": "SELECT DISTINCT T1.EMP_FNAME ,  T1.EMP_DOB FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE CRS_CODE  =  \"ACCT-211\"", "query_toks": ["SELECT", "DISTINCT", "T1.EMP_FNAME", ",", "T1.EMP_DOB", "FROM", "employee", "AS", "T1", "JOIN", "CLASS", "AS", "T2", "ON", "T1.EMP_NUM", "=", "T2.PROF_NUM", "WHERE", "CRS_CODE", "=", "``", "ACCT-211", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "emp_fname", ",", "t1", ".", "emp_dob", "from", "employee", "as", "t1", "join", "class", "as", "t2", "on", "t1", ".", "emp_num", "=", "t2", ".", "prof_num", "where", "crs_code", "=", "value"], "question": "What are the first names and date of birth of professors teaching course ACCT-211?", "question_toks": ["What", "are", "the", "first", "names", "and", "date", "of", "birth", "of", "professors", "teaching", "course", "ACCT-211", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 17, false], null], [0, 6, false], null]], "table_units": [["table_unit", 3], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 19, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"ACCT-211\"", null]]}}, {"db_id": "college_1", "query": "SELECT DISTINCT T1.EMP_FNAME ,  T1.EMP_DOB FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE CRS_CODE  =  \"ACCT-211\"", "query_toks": ["SELECT", "DISTINCT", "T1.EMP_FNAME", ",", "T1.EMP_DOB", "FROM", "employee", "AS", "T1", "JOIN", "CLASS", "AS", "T2", "ON", "T1.EMP_NUM", "=", "T2.PROF_NUM", "WHERE", "CRS_CODE", "=", "``", "ACCT-211", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "emp_fname", ",", "t1", ".", "emp_dob", "from", "employee", "as", "t1", "join", "class", "as", "t2", "on", "t1", ".", "emp_num", "=", "t2", ".", "prof_num", "where", "crs_code", "=", "value"], "question": "What are the first names and birthdates of the professors in charge of ACCT-211?", "question_toks": ["What", "are", "the", "first", "names", "and", "birthdates", "of", "the", "professors", "in", "charge", "of", "ACCT-211", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 17, false], null], [0, 6, false], null]], "table_units": [["table_unit", 3], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 19, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"ACCT-211\"", null]]}}, {"db_id": "college_1", "query": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'CIS-220'", "query_toks": ["SELECT", "crs_credit", ",", "crs_description", "FROM", "course", "WHERE", "crs_code", "=", "'CIS-220", "'"], "query_toks_no_value": ["select", "crs_credit", ",", "crs_description", "from", "course", "where", "crs_code", "=", "value"], "question": "How many credits does course CIS-220 have, and what its description?", "question_toks": ["How", "many", "credits", "does", "course", "CIS-220", "have", ",", "and", "what", "its", "description", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"CIS-220\"", null]]}}, {"db_id": "college_1", "query": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'CIS-220'", "query_toks": ["SELECT", "crs_credit", ",", "crs_description", "FROM", "course", "WHERE", "crs_code", "=", "'CIS-220", "'"], "query_toks_no_value": ["select", "crs_credit", ",", "crs_description", "from", "course", "where", "crs_code", "=", "value"], "question": "What is the description for the CIS-220 and how many credits does it have?", "question_toks": ["What", "is", "the", "description", "for", "the", "CIS-220", "and", "how", "many", "credits", "does", "it", "have", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"CIS-220\"", null]]}}, {"db_id": "college_1", "query": "SELECT count(DISTINCT dept_address) ,  school_code FROM department GROUP BY school_code", "query_toks": ["SELECT", "count", "(", "DISTINCT", "dept_address", ")", ",", "school_code", "FROM", "department", "GROUP", "BY", "school_code"], "query_toks_no_value": ["select", "count", "(", "distinct", "dept_address", ")", ",", "school_code", "from", "department", "group", "by", "school_code"], "question": "How many different locations does each school have?", "question_toks": ["How", "many", "different", "locations", "does", "each", "school", "have", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 15, true], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT count(DISTINCT dept_address) ,  school_code FROM department GROUP BY school_code", "query_toks": ["SELECT", "count", "(", "DISTINCT", "dept_address", ")", ",", "school_code", "FROM", "department", "GROUP", "BY", "school_code"], "query_toks_no_value": ["select", "count", "(", "distinct", "dept_address", ")", ",", "school_code", "from", "department", "group", "by", "school_code"], "question": "Count different addresses of each school.", "question_toks": ["Count", "different", "addresses", "of", "each", "school", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 15, true], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'QM-261'", "query_toks": ["SELECT", "crs_credit", ",", "crs_description", "FROM", "course", "WHERE", "crs_code", "=", "'QM-261", "'"], "query_toks_no_value": ["select", "crs_credit", ",", "crs_description", "from", "course", "where", "crs_code", "=", "value"], "question": "Find the description and credit for the course QM-261?", "question_toks": ["Find", "the", "description", "and", "credit", "for", "the", "course", "QM-261", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"QM-261\"", null]]}}, {"db_id": "college_1", "query": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'QM-261'", "query_toks": ["SELECT", "crs_credit", ",", "crs_description", "FROM", "course", "WHERE", "crs_code", "=", "'QM-261", "'"], "query_toks_no_value": ["select", "crs_credit", ",", "crs_description", "from", "course", "where", "crs_code", "=", "value"], "question": "What is the course description and number of credits for QM-261?", "question_toks": ["What", "is", "the", "course", "description", "and", "number", "of", "credits", "for", "QM-261", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"QM-261\"", null]]}}, {"db_id": "college_1", "query": "SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code", "query_toks": ["SELECT", "count", "(", "DISTINCT", "dept_name", ")", ",", "school_code", "FROM", "department", "GROUP", "BY", "school_code"], "query_toks_no_value": ["select", "count", "(", "distinct", "dept_name", ")", ",", "school_code", "from", "department", "group", "by", "school_code"], "question": "Find the number of departments in each school.", "question_toks": ["Find", "the", "number", "of", "departments", "in", "each", "school", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 12, true], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code", "query_toks": ["SELECT", "count", "(", "DISTINCT", "dept_name", ")", ",", "school_code", "FROM", "department", "GROUP", "BY", "school_code"], "query_toks_no_value": ["select", "count", "(", "distinct", "dept_name", ")", ",", "school_code", "from", "department", "group", "by", "school_code"], "question": "How many departments are in each school?", "question_toks": ["How", "many", "departments", "are", "in", "each", "school", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 12, true], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code HAVING count(DISTINCT dept_name)  <  5", "query_toks": ["SELECT", "count", "(", "DISTINCT", "dept_name", ")", ",", "school_code", "FROM", "department", "GROUP", "BY", "school_code", "HAVING", "count", "(", "DISTINCT", "dept_name", ")", "<", "5"], "query_toks_no_value": ["select", "count", "(", "distinct", "dept_name", ")", ",", "school_code", "from", "department", "group", "by", "school_code", "having", "count", "(", "distinct", "dept_name", ")", "<", "value"], "question": "Find the number of different departments in each school whose number of different departments is less than 5.", "question_toks": ["Find", "the", "number", "of", "different", "departments", "in", "each", "school", "whose", "number", "of", "different", "departments", "is", "less", "than", "5", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 13, false]], "having": [[false, 4, [0, [3, 12, true], null], 5.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 12, true], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code HAVING count(DISTINCT dept_name)  <  5", "query_toks": ["SELECT", "count", "(", "DISTINCT", "dept_name", ")", ",", "school_code", "FROM", "department", "GROUP", "BY", "school_code", "HAVING", "count", "(", "DISTINCT", "dept_name", ")", "<", "5"], "query_toks_no_value": ["select", "count", "(", "distinct", "dept_name", ")", ",", "school_code", "from", "department", "group", "by", "school_code", "having", "count", "(", "distinct", "dept_name", ")", "<", "value"], "question": "How many different departments are there in each school that has less than 5 apartments?", "question_toks": ["How", "many", "different", "departments", "are", "there", "in", "each", "school", "that", "has", "less", "than", "5", "apartments", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 13, false]], "having": [[false, 4, [0, [3, 12, true], null], 5.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 12, true], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT count(*) ,  crs_code FROM CLASS GROUP BY crs_code", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "crs_code", "FROM", "CLASS", "GROUP", "BY", "crs_code"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "crs_code", "from", "class", "group", "by", "crs_code"], "question": "How many sections does each course has?", "question_toks": ["How", "many", "sections", "does", "each", "course", "has", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT count(*) ,  crs_code FROM CLASS GROUP BY crs_code", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "crs_code", "FROM", "CLASS", "GROUP", "BY", "crs_code"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "crs_code", "from", "class", "group", "by", "crs_code"], "question": "How many sections does each course have?", "question_toks": ["How", "many", "sections", "does", "each", "course", "have", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT sum(crs_credit) ,  dept_code FROM course GROUP BY dept_code", "query_toks": ["SELECT", "sum", "(", "crs_credit", ")", ",", "dept_code", "FROM", "course", "GROUP", "BY", "dept_code"], "query_toks_no_value": ["select", "sum", "(", "crs_credit", ")", ",", "dept_code", "from", "course", "group", "by", "dept_code"], "question": "What is the total credit does each department offer?", "question_toks": ["What", "is", "the", "total", "credit", "does", "each", "department", "offer", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 10, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT sum(crs_credit) ,  dept_code FROM course GROUP BY dept_code", "query_toks": ["SELECT", "sum", "(", "crs_credit", ")", ",", "dept_code", "FROM", "course", "GROUP", "BY", "dept_code"], "query_toks_no_value": ["select", "sum", "(", "crs_credit", ")", ",", "dept_code", "from", "course", "group", "by", "dept_code"], "question": "How many credits does the department offer?", "question_toks": ["How", "many", "credits", "does", "the", "department", "offer", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 10, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT count(*) ,  class_room FROM CLASS GROUP BY class_room HAVING count(*)  >=  2", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "class_room", "FROM", "CLASS", "GROUP", "BY", "class_room", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "class_room", "from", "class", "group", "by", "class_room", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Find the number of classes offered for all class rooms that held at least 2 classes.", "question_toks": ["Find", "the", "number", "of", "classes", "offered", "for", "all", "class", "rooms", "that", "held", "at", "least", "2", "classes", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT count(*) ,  class_room FROM CLASS GROUP BY class_room HAVING count(*)  >=  2", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "class_room", "FROM", "CLASS", "GROUP", "BY", "class_room", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "class_room", "from", "class", "group", "by", "class_room", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "For each classroom with at least 2 classes, how many classes are offered?", "question_toks": ["For", "each", "classroom", "with", "at", "least", "2", "classes", ",", "how", "many", "classes", "are", "offered", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT count(*) ,  dept_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY dept_code", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "dept_code", "FROM", "CLASS", "AS", "T1", "JOIN", "course", "AS", "T2", "ON", "T1.crs_code", "=", "T2.crs_code", "GROUP", "BY", "dept_code"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "dept_code", "from", "class", "as", "t1", "join", "course", "as", "t2", "on", "t1", ".", "crs_code", "=", "t2", ".", "crs_code", "group", "by", "dept_code"], "question": "Find the number of classes in each department.", "question_toks": ["Find", "the", "number", "of", "classes", "in", "each", "department", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 2, false], null], [0, 7, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT count(*) ,  dept_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY dept_code", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "dept_code", "FROM", "CLASS", "AS", "T1", "JOIN", "course", "AS", "T2", "ON", "T1.crs_code", "=", "T2.crs_code", "GROUP", "BY", "dept_code"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "dept_code", "from", "class", "as", "t1", "join", "course", "as", "t2", "on", "t1", ".", "crs_code", "=", "t2", ".", "crs_code", "group", "by", "dept_code"], "question": "How many classes are held in each department?", "question_toks": ["How", "many", "classes", "are", "held", "in", "each", "department", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 2, false], null], [0, 7, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT count(*) ,  T3.school_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T2.dept_code  =  T3.dept_code GROUP BY T3.school_code", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T3.school_code", "FROM", "CLASS", "AS", "T1", "JOIN", "course", "AS", "T2", "ON", "T1.crs_code", "=", "T2.crs_code", "JOIN", "department", "AS", "T3", "ON", "T2.dept_code", "=", "T3.dept_code", "GROUP", "BY", "T3.school_code"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t3", ".", "school_code", "from", "class", "as", "t1", "join", "course", "as", "t2", "on", "t1", ".", "crs_code", "=", "t2", ".", "crs_code", "join", "department", "as", "t3", "on", "t2", ".", "dept_code", "=", "t3", ".", "dept_code", "group", "by", "t3", ".", "school_code"], "question": "Find the number of classes in each school.", "question_toks": ["Find", "the", "number", "of", "classes", "in", "each", "school", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 2, false], null], [0, 7, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT count(*) ,  T3.school_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T2.dept_code  =  T3.dept_code GROUP BY T3.school_code", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T3.school_code", "FROM", "CLASS", "AS", "T1", "JOIN", "course", "AS", "T2", "ON", "T1.crs_code", "=", "T2.crs_code", "JOIN", "department", "AS", "T3", "ON", "T2.dept_code", "=", "T3.dept_code", "GROUP", "BY", "T3.school_code"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t3", ".", "school_code", "from", "class", "as", "t1", "join", "course", "as", "t2", "on", "t1", ".", "crs_code", "=", "t2", ".", "crs_code", "join", "department", "as", "t3", "on", "t2", ".", "dept_code", "=", "t3", ".", "dept_code", "group", "by", "t3", ".", "school_code"], "question": "How many classes exist for each school?", "question_toks": ["How", "many", "classes", "exist", "for", "each", "school", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 2, false], null], [0, 7, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT count(*) ,  T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.school_code", "FROM", "department", "AS", "T1", "JOIN", "professor", "AS", "T2", "ON", "T1.dept_code", "=", "T2.dept_code", "GROUP", "BY", "T1.school_code"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "school_code", "from", "department", "as", "t1", "join", "professor", "as", "t2", "on", "t1", ".", "dept_code", "=", "t2", ".", "dept_code", "group", "by", "t1", ".", "school_code"], "question": "What is the number of professors for different school?", "question_toks": ["What", "is", "the", "number", "of", "professors", "for", "different", "school", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 28, false], null]], "table_units": [["table_unit", 2], ["table_unit", 5]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT count(*) ,  T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.school_code", "FROM", "department", "AS", "T1", "JOIN", "professor", "AS", "T2", "ON", "T1.dept_code", "=", "T2.dept_code", "GROUP", "BY", "T1.school_code"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "school_code", "from", "department", "as", "t1", "join", "professor", "as", "t2", "on", "t1", ".", "dept_code", "=", "t2", ".", "dept_code", "group", "by", "t1", ".", "school_code"], "question": "How many different professors are there for the different schools?", "question_toks": ["How", "many", "different", "professors", "are", "there", "for", "the", "different", "schools", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 28, false], null]], "table_units": [["table_unit", 2], ["table_unit", 5]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT emp_jobcode ,  count(*) FROM employee GROUP BY emp_jobcode ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "emp_jobcode", ",", "count", "(", "*", ")", "FROM", "employee", "GROUP", "BY", "emp_jobcode", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "emp_jobcode", ",", "count", "(", "*", ")", "from", "employee", "group", "by", "emp_jobcode", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the count and code of the job has most employees.", "question_toks": ["Find", "the", "count", "and", "code", "of", "the", "job", "has", "most", "employees", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 21, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 21, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT emp_jobcode ,  count(*) FROM employee GROUP BY emp_jobcode ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "emp_jobcode", ",", "count", "(", "*", ")", "FROM", "employee", "GROUP", "BY", "emp_jobcode", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "emp_jobcode", ",", "count", "(", "*", ")", "from", "employee", "group", "by", "emp_jobcode", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the count and code of the job with the most employee?", "question_toks": ["What", "is", "the", "count", "and", "code", "of", "the", "job", "with", "the", "most", "employee", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 21, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 21, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT count(*) ,  dept_code FROM professor WHERE prof_high_degree  =  'Ph.D.' GROUP BY dept_code", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "dept_code", "FROM", "professor", "WHERE", "prof_high_degree", "=", "'Ph.D", ".", "'", "GROUP", "BY", "dept_code"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "dept_code", "from", "professor", "where", "prof_high_degree", "=", "value", "group", "by", "dept_code"], "question": "Find the number of professors with a Ph.D. degree in each department.", "question_toks": ["Find", "the", "number", "of", "professors", "with", "a", "Ph.D.", "degree", "in", "each", "department", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 28, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 28, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 31, false], null], "\"Ph.D.\"", null]]}}, {"db_id": "college_1", "query": "SELECT count(*) ,  dept_code FROM professor WHERE prof_high_degree  =  'Ph.D.' GROUP BY dept_code", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "dept_code", "FROM", "professor", "WHERE", "prof_high_degree", "=", "'Ph.D", ".", "'", "GROUP", "BY", "dept_code"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "dept_code", "from", "professor", "where", "prof_high_degree", "=", "value", "group", "by", "dept_code"], "question": "How many professors have a Ph.D. in each department?", "question_toks": ["How", "many", "professors", "have", "a", "Ph.D.", "in", "each", "department", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 28, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 28, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 31, false], null], "\"Ph.D.\"", null]]}}, {"db_id": "college_1", "query": "SELECT count(*) ,  dept_code FROM student GROUP BY dept_code", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "dept_code", "FROM", "student", "GROUP", "BY", "dept_code"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "dept_code", "from", "student", "group", "by", "dept_code"], "question": "Find the number of students for each department.", "question_toks": ["Find", "the", "number", "of", "students", "for", "each", "department", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 41, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 41, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT count(*) ,  dept_code FROM student GROUP BY dept_code", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "dept_code", "FROM", "student", "GROUP", "BY", "dept_code"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "dept_code", "from", "student", "group", "by", "dept_code"], "question": "How many students are in each department?", "question_toks": ["How", "many", "students", "are", "in", "each", "department", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 41, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 41, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT sum(stu_hrs) ,  dept_code FROM student GROUP BY dept_code", "query_toks": ["SELECT", "sum", "(", "stu_hrs", ")", ",", "dept_code", "FROM", "student", "GROUP", "BY", "dept_code"], "query_toks_no_value": ["select", "sum", "(", "stu_hrs", ")", ",", "dept_code", "from", "student", "group", "by", "dept_code"], "question": "Find the total number of hours have done for all students in each department.", "question_toks": ["Find", "the", "total", "number", "of", "hours", "have", "done", "for", "all", "students", "in", "each", "department", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 41, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 37, false], null]], [0, [0, [0, 41, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT sum(stu_hrs) ,  dept_code FROM student GROUP BY dept_code", "query_toks": ["SELECT", "sum", "(", "stu_hrs", ")", ",", "dept_code", "FROM", "student", "GROUP", "BY", "dept_code"], "query_toks_no_value": ["select", "sum", "(", "stu_hrs", ")", ",", "dept_code", "from", "student", "group", "by", "dept_code"], "question": "How many hours do the students spend studying in each department?", "question_toks": ["How", "many", "hours", "do", "the", "students", "spend", "studying", "in", "each", "department", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 41, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 37, false], null]], [0, [0, [0, 41, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT max(stu_gpa) ,  avg(stu_gpa) ,  min(stu_gpa) ,  dept_code FROM student GROUP BY dept_code", "query_toks": ["SELECT", "max", "(", "stu_gpa", ")", ",", "avg", "(", "stu_gpa", ")", ",", "min", "(", "stu_gpa", ")", ",", "dept_code", "FROM", "student", "GROUP", "BY", "dept_code"], "query_toks_no_value": ["select", "max", "(", "stu_gpa", ")", ",", "avg", "(", "stu_gpa", ")", ",", "min", "(", "stu_gpa", ")", ",", "dept_code", "from", "student", "group", "by", "dept_code"], "question": "Find the max, average, and minimum gpa of all students in each department.", "question_toks": ["Find", "the", "max", ",", "average", ",", "and", "minimum", "gpa", "of", "all", "students", "in", "each", "department", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 41, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 39, false], null]], [5, [0, [0, 39, false], null]], [2, [0, [0, 39, false], null]], [0, [0, [0, 41, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT max(stu_gpa) ,  avg(stu_gpa) ,  min(stu_gpa) ,  dept_code FROM student GROUP BY dept_code", "query_toks": ["SELECT", "max", "(", "stu_gpa", ")", ",", "avg", "(", "stu_gpa", ")", ",", "min", "(", "stu_gpa", ")", ",", "dept_code", "FROM", "student", "GROUP", "BY", "dept_code"], "query_toks_no_value": ["select", "max", "(", "stu_gpa", ")", ",", "avg", "(", "stu_gpa", ")", ",", "min", "(", "stu_gpa", ")", ",", "dept_code", "from", "student", "group", "by", "dept_code"], "question": "What is the highest, lowest, and average student GPA for every department?", "question_toks": ["What", "is", "the", "highest", ",", "lowest", ",", "and", "average", "student", "GPA", "for", "every", "department", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 41, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 39, false], null]], [5, [0, [0, 39, false], null]], [2, [0, [0, 39, false], null]], [0, [0, [0, 41, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT T2.dept_name ,  avg(T1.stu_gpa) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY avg(T1.stu_gpa) DESC LIMIT 1", "query_toks": ["SELECT", "T2.dept_name", ",", "avg", "(", "T1.stu_gpa", ")", "FROM", "student", "AS", "T1", "JOIN", "department", "AS", "T2", "ON", "T1.dept_code", "=", "T2.dept_code", "GROUP", "BY", "T1.dept_code", "ORDER", "BY", "avg", "(", "T1.stu_gpa", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "dept_name", ",", "avg", "(", "t1", ".", "stu_gpa", ")", "from", "student", "as", "t1", "join", "department", "as", "t2", "on", "t1", ".", "dept_code", "=", "t2", ".", "dept_code", "group", "by", "t1", ".", "dept_code", "order", "by", "avg", "(", "t1", ".", "stu_gpa", ")", "desc", "limit", "value"], "question": "What is the name and the average gpa of department whose students have the highest average gpa?", "question_toks": ["What", "is", "the", "name", "and", "the", "average", "gpa", "of", "department", "whose", "students", "have", "the", "highest", "average", "gpa", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 41, false], null], [0, 11, false], null]], "table_units": [["table_unit", 6], ["table_unit", 2]]}, "groupBy": [[0, 41, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [5, 39, false], null]]], "select": [false, [[0, [0, [0, 12, false], null]], [5, [0, [0, 39, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT T2.dept_name ,  avg(T1.stu_gpa) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY avg(T1.stu_gpa) DESC LIMIT 1", "query_toks": ["SELECT", "T2.dept_name", ",", "avg", "(", "T1.stu_gpa", ")", "FROM", "student", "AS", "T1", "JOIN", "department", "AS", "T2", "ON", "T1.dept_code", "=", "T2.dept_code", "GROUP", "BY", "T1.dept_code", "ORDER", "BY", "avg", "(", "T1.stu_gpa", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "dept_name", ",", "avg", "(", "t1", ".", "stu_gpa", ")", "from", "student", "as", "t1", "join", "department", "as", "t2", "on", "t1", ".", "dept_code", "=", "t2", ".", "dept_code", "group", "by", "t1", ".", "dept_code", "order", "by", "avg", "(", "t1", ".", "stu_gpa", ")", "desc", "limit", "value"], "question": "Which department has the highest average student GPA, and what is the average gpa?", "question_toks": ["Which", "department", "has", "the", "highest", "average", "student", "GPA", ",", "and", "what", "is", "the", "average", "gpa", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 41, false], null], [0, 11, false], null]], "table_units": [["table_unit", 6], ["table_unit", 2]]}, "groupBy": [[0, 41, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [5, 39, false], null]]], "select": [false, [[0, [0, [0, 12, false], null]], [5, [0, [0, 39, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT sum(T1.crs_credit) ,  T1.dept_code FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY T1.dept_code", "query_toks": ["SELECT", "sum", "(", "T1.crs_credit", ")", ",", "T1.dept_code", "FROM", "course", "AS", "T1", "JOIN", "CLASS", "AS", "T2", "ON", "T1.crs_code", "=", "T2.crs_code", "GROUP", "BY", "T1.dept_code"], "query_toks_no_value": ["select", "sum", "(", "t1", ".", "crs_credit", ")", ",", "t1", ".", "dept_code", "from", "course", "as", "t1", "join", "class", "as", "t2", "on", "t1", ".", "crs_code", "=", "t2", ".", "crs_code", "group", "by", "t1", ".", "dept_code"], "question": "Find the total credits of all classes offered by each department.", "question_toks": ["Find", "the", "total", "credits", "of", "all", "classes", "offered", "by", "each", "department", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 10, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT sum(T1.crs_credit) ,  T1.dept_code FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY T1.dept_code", "query_toks": ["SELECT", "sum", "(", "T1.crs_credit", ")", ",", "T1.dept_code", "FROM", "course", "AS", "T1", "JOIN", "CLASS", "AS", "T2", "ON", "T1.crs_code", "=", "T2.crs_code", "GROUP", "BY", "T1.dept_code"], "query_toks_no_value": ["select", "sum", "(", "t1", ".", "crs_credit", ")", ",", "t1", ".", "dept_code", "from", "course", "as", "t1", "join", "class", "as", "t2", "on", "t1", ".", "crs_code", "=", "t2", ".", "crs_code", "group", "by", "t1", ".", "dept_code"], "question": "What are the total number of credits offered by each department?", "question_toks": ["What", "are", "the", "total", "number", "of", "credits", "offered", "by", "each", "department", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 10, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num ORDER BY T2.emp_fname", "query_toks": ["SELECT", "T2.emp_fname", ",", "T1.prof_office", "FROM", "professor", "AS", "T1", "JOIN", "employee", "AS", "T2", "ON", "T1.emp_num", "=", "T2.emp_num", "ORDER", "BY", "T2.emp_fname"], "query_toks_no_value": ["select", "t2", ".", "emp_fname", ",", "t1", ".", "prof_office", "from", "professor", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "emp_num", "=", "t2", ".", "emp_num", "order", "by", "t2", ".", "emp_fname"], "question": "Find the first names and offices of all professors sorted by alphabetical order of their first name.", "question_toks": ["Find", "the", "first", "names", "and", "offices", "of", "all", "professors", "sorted", "by", "alphabetical", "order", "of", "their", "first", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 27, false], null], [0, 17, false], null]], "table_units": [["table_unit", 5], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 19, false], null]]], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 29, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num ORDER BY T2.emp_fname", "query_toks": ["SELECT", "T2.emp_fname", ",", "T1.prof_office", "FROM", "professor", "AS", "T1", "JOIN", "employee", "AS", "T2", "ON", "T1.emp_num", "=", "T2.emp_num", "ORDER", "BY", "T2.emp_fname"], "query_toks_no_value": ["select", "t2", ".", "emp_fname", ",", "t1", ".", "prof_office", "from", "professor", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "emp_num", "=", "t2", ".", "emp_num", "order", "by", "t2", ".", "emp_fname"], "question": "What are the first names and office locations for all professors sorted alphabetically by first name?", "question_toks": ["What", "are", "the", "first", "names", "and", "office", "locations", "for", "all", "professors", "sorted", "alphabetically", "by", "first", "name", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 27, false], null], [0, 17, false], null]], "table_units": [["table_unit", 5], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 19, false], null]]], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 29, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT emp_fname ,  emp_lname FROM employee ORDER BY emp_dob LIMIT 1", "query_toks": ["SELECT", "emp_fname", ",", "emp_lname", "FROM", "employee", "ORDER", "BY", "emp_dob", "LIMIT", "1"], "query_toks_no_value": ["select", "emp_fname", ",", "emp_lname", "from", "employee", "order", "by", "emp_dob", "limit", "value"], "question": "What is the first and last name of the oldest employee?", "question_toks": ["What", "is", "the", "first", "and", "last", "name", "of", "the", "oldest", "employee", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 23, false], null]]], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT emp_fname ,  emp_lname FROM employee ORDER BY emp_dob LIMIT 1", "query_toks": ["SELECT", "emp_fname", ",", "emp_lname", "FROM", "employee", "ORDER", "BY", "emp_dob", "LIMIT", "1"], "query_toks_no_value": ["select", "emp_fname", ",", "emp_lname", "from", "employee", "order", "by", "emp_dob", "limit", "value"], "question": "What are the first and last names of the employee with the earliest date of birth?", "question_toks": ["What", "are", "the", "first", "and", "last", "names", "of", "the", "employee", "with", "the", "earliest", "date", "of", "birth", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 23, false], null]]], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT stu_fname ,  stu_lname ,  stu_gpa FROM student WHERE stu_gpa  >  3 ORDER BY stu_dob DESC LIMIT 1", "query_toks": ["SELECT", "stu_fname", ",", "stu_lname", ",", "stu_gpa", "FROM", "student", "WHERE", "stu_gpa", ">", "3", "ORDER", "BY", "stu_dob", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "stu_fname", ",", "stu_lname", ",", "stu_gpa", "from", "student", "where", "stu_gpa", ">", "value", "order", "by", "stu_dob", "desc", "limit", "value"], "question": "What is the first, last name, gpa of the youngest one among students whose GPA is above 3?", "question_toks": ["What", "is", "the", "first", ",", "last", "name", ",", "gpa", "of", "the", "youngest", "one", "among", "students", "whose", "GPA", "is", "above", "3", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 36, false], null]]], "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 33, false], null]], [0, [0, [0, 39, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 39, false], null], 3.0, null]]}}, {"db_id": "college_1", "query": "SELECT stu_fname ,  stu_lname ,  stu_gpa FROM student WHERE stu_gpa  >  3 ORDER BY stu_dob DESC LIMIT 1", "query_toks": ["SELECT", "stu_fname", ",", "stu_lname", ",", "stu_gpa", "FROM", "student", "WHERE", "stu_gpa", ">", "3", "ORDER", "BY", "stu_dob", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "stu_fname", ",", "stu_lname", ",", "stu_gpa", "from", "student", "where", "stu_gpa", ">", "value", "order", "by", "stu_dob", "desc", "limit", "value"], "question": "What is the first and last name of the youngest student with a GPA above 3, and what is their GPA?", "question_toks": ["What", "is", "the", "first", "and", "last", "name", "of", "the", "youngest", "student", "with", "a", "GPA", "above", "3", ",", "and", "what", "is", "their", "GPA", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 36, false], null]]], "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 33, false], null]], [0, [0, [0, 39, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 39, false], null], 3.0, null]]}}, {"db_id": "college_1", "query": "SELECT T2.dept_name ,  T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.prof_high_degree  =  'Ph.D.' GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.dept_name", ",", "T1.dept_code", "FROM", "professor", "AS", "T1", "JOIN", "department", "AS", "T2", "ON", "T1.dept_code", "=", "T2.dept_code", "WHERE", "T1.prof_high_degree", "=", "'Ph.D", ".", "'", "GROUP", "BY", "T1.dept_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "dept_name", ",", "t1", ".", "dept_code", "from", "professor", "as", "t1", "join", "department", "as", "t2", "on", "t1", ".", "dept_code", "=", "t2", ".", "dept_code", "where", "t1", ".", "prof_high_degree", "=", "value", "group", "by", "t1", ".", "dept_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name of department where has the largest number of professors with a Ph.D. degree?", "question_toks": ["What", "is", "the", "name", "of", "department", "where", "has", "the", "largest", "number", "of", "professors", "with", "a", "Ph.D.", "degree", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 28, false], null], [0, 11, false], null]], "table_units": [["table_unit", 5], ["table_unit", 2]]}, "groupBy": [[0, 28, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 28, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 31, false], null], "\"Ph.D.\"", null]]}}, {"db_id": "college_1", "query": "SELECT T2.dept_name ,  T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.prof_high_degree  =  'Ph.D.' GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.dept_name", ",", "T1.dept_code", "FROM", "professor", "AS", "T1", "JOIN", "department", "AS", "T2", "ON", "T1.dept_code", "=", "T2.dept_code", "WHERE", "T1.prof_high_degree", "=", "'Ph.D", ".", "'", "GROUP", "BY", "T1.dept_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "dept_name", ",", "t1", ".", "dept_code", "from", "professor", "as", "t1", "join", "department", "as", "t2", "on", "t1", ".", "dept_code", "=", "t2", ".", "dept_code", "where", "t1", ".", "prof_high_degree", "=", "value", "group", "by", "t1", ".", "dept_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which department has the most professors with a Ph.D.?", "question_toks": ["Which", "department", "has", "the", "most", "professors", "with", "a", "Ph.D.", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 28, false], null], [0, 11, false], null]], "table_units": [["table_unit", 5], ["table_unit", 2]]}, "groupBy": [[0, 28, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 28, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 31, false], null], "\"Ph.D.\"", null]]}}, {"db_id": "college_1", "query": "SELECT T1.emp_lname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History'", "query_toks": ["SELECT", "T1.emp_lname", ",", "T2.prof_office", "FROM", "employee", "AS", "T1", "JOIN", "professor", "AS", "T2", "ON", "T1.emp_num", "=", "T2.emp_num", "JOIN", "department", "AS", "T3", "ON", "T2.dept_code", "=", "T3.dept_code", "WHERE", "T3.dept_name", "=", "'History", "'"], "query_toks_no_value": ["select", "t1", ".", "emp_lname", ",", "t2", ".", "prof_office", "from", "employee", "as", "t1", "join", "professor", "as", "t2", "on", "t1", ".", "emp_num", "=", "t2", ".", "emp_num", "join", "department", "as", "t3", "on", "t2", ".", "dept_code", "=", "t3", ".", "dept_code", "where", "t3", ".", "dept_name", "=", "value"], "question": "What is the last name and office of the professor from the history department?", "question_toks": ["What", "is", "the", "last", "name", "and", "office", "of", "the", "professor", "from", "the", "history", "department", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 17, false], null], [0, 27, false], null]], "table_units": [["table_unit", 3], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 29, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"History\"", null]]}}, {"db_id": "college_1", "query": "SELECT T1.emp_lname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History'", "query_toks": ["SELECT", "T1.emp_lname", ",", "T2.prof_office", "FROM", "employee", "AS", "T1", "JOIN", "professor", "AS", "T2", "ON", "T1.emp_num", "=", "T2.emp_num", "JOIN", "department", "AS", "T3", "ON", "T2.dept_code", "=", "T3.dept_code", "WHERE", "T3.dept_name", "=", "'History", "'"], "query_toks_no_value": ["select", "t1", ".", "emp_lname", ",", "t2", ".", "prof_office", "from", "employee", "as", "t1", "join", "professor", "as", "t2", "on", "t1", ".", "emp_num", "=", "t2", ".", "emp_num", "join", "department", "as", "t3", "on", "t2", ".", "dept_code", "=", "t3", ".", "dept_code", "where", "t3", ".", "dept_name", "=", "value"], "question": "What are the last name and office of all history professors?", "question_toks": ["What", "are", "the", "last", "name", "and", "office", "of", "all", "history", "professors", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 17, false], null], [0, 27, false], null]], "table_units": [["table_unit", 3], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 29, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"History\"", null]]}}, {"db_id": "college_1", "query": "SELECT T3.dept_name  ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T1.emp_lname  =  'Heffington'", "query_toks": ["SELECT", "T3.dept_name", ",", "T2.prof_office", "FROM", "employee", "AS", "T1", "JOIN", "professor", "AS", "T2", "ON", "T1.emp_num", "=", "T2.emp_num", "JOIN", "department", "AS", "T3", "ON", "T2.dept_code", "=", "T3.dept_code", "WHERE", "T1.emp_lname", "=", "'Heffington", "'"], "query_toks_no_value": ["select", "t3", ".", "dept_name", ",", "t2", ".", "prof_office", "from", "employee", "as", "t1", "join", "professor", "as", "t2", "on", "t1", ".", "emp_num", "=", "t2", ".", "emp_num", "join", "department", "as", "t3", "on", "t2", ".", "dept_code", "=", "t3", ".", "dept_code", "where", "t1", ".", "emp_lname", "=", "value"], "question": "What is department name and office for the professor whose last name is Heffington?", "question_toks": ["What", "is", "department", "name", "and", "office", "for", "the", "professor", "whose", "last", "name", "is", "Heffington", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 17, false], null], [0, 27, false], null]], "table_units": [["table_unit", 3], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 29, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 18, false], null], "\"Heffington\"", null]]}}, {"db_id": "college_1", "query": "SELECT T3.dept_name  ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T1.emp_lname  =  'Heffington'", "query_toks": ["SELECT", "T3.dept_name", ",", "T2.prof_office", "FROM", "employee", "AS", "T1", "JOIN", "professor", "AS", "T2", "ON", "T1.emp_num", "=", "T2.emp_num", "JOIN", "department", "AS", "T3", "ON", "T2.dept_code", "=", "T3.dept_code", "WHERE", "T1.emp_lname", "=", "'Heffington", "'"], "query_toks_no_value": ["select", "t3", ".", "dept_name", ",", "t2", ".", "prof_office", "from", "employee", "as", "t1", "join", "professor", "as", "t2", "on", "t1", ".", "emp_num", "=", "t2", ".", "emp_num", "join", "department", "as", "t3", "on", "t2", ".", "dept_code", "=", "t3", ".", "dept_code", "where", "t1", ".", "emp_lname", "=", "value"], "question": "What is the name of the department and office location for the professor with the last name of Heffington?", "question_toks": ["What", "is", "the", "name", "of", "the", "department", "and", "office", "location", "for", "the", "professor", "with", "the", "last", "name", "of", "Heffington", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 17, false], null], [0, 27, false], null]], "table_units": [["table_unit", 3], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 29, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 18, false], null], "\"Heffington\"", null]]}}, {"db_id": "college_1", "query": "SELECT T1.emp_lname ,  T1.emp_hiredate FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num WHERE T2.prof_office  =  'DRE 102'", "query_toks": ["SELECT", "T1.emp_lname", ",", "T1.emp_hiredate", "FROM", "employee", "AS", "T1", "JOIN", "professor", "AS", "T2", "ON", "T1.emp_num", "=", "T2.emp_num", "WHERE", "T2.prof_office", "=", "'DRE", "102", "'"], "query_toks_no_value": ["select", "t1", ".", "emp_lname", ",", "t1", ".", "emp_hiredate", "from", "employee", "as", "t1", "join", "professor", "as", "t2", "on", "t1", ".", "emp_num", "=", "t2", ".", "emp_num", "where", "t2", ".", "prof_office", "=", "value"], "question": "Find the last name and hire date of the professor who is in office DRE 102.", "question_toks": ["Find", "the", "last", "name", "and", "hire", "date", "of", "the", "professor", "who", "is", "in", "office", "DRE", "102", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 17, false], null], [0, 27, false], null]], "table_units": [["table_unit", 3], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 22, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 29, false], null], "\"DRE 102\"", null]]}}, {"db_id": "college_1", "query": "SELECT T1.emp_lname ,  T1.emp_hiredate FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num WHERE T2.prof_office  =  'DRE 102'", "query_toks": ["SELECT", "T1.emp_lname", ",", "T1.emp_hiredate", "FROM", "employee", "AS", "T1", "JOIN", "professor", "AS", "T2", "ON", "T1.emp_num", "=", "T2.emp_num", "WHERE", "T2.prof_office", "=", "'DRE", "102", "'"], "query_toks_no_value": ["select", "t1", ".", "emp_lname", ",", "t1", ".", "emp_hiredate", "from", "employee", "as", "t1", "join", "professor", "as", "t2", "on", "t1", ".", "emp_num", "=", "t2", ".", "emp_num", "where", "t2", ".", "prof_office", "=", "value"], "question": "What is the last name of the professor whose office is located in DRE 102, and when were they hired?", "question_toks": ["What", "is", "the", "last", "name", "of", "the", "professor", "whose", "office", "is", "located", "in", "DRE", "102", ",", "and", "when", "were", "they", "hired", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 17, false], null], [0, 27, false], null]], "table_units": [["table_unit", 3], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 22, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 29, false], null], "\"DRE 102\"", null]]}}, {"db_id": "college_1", "query": "SELECT T4.crs_description ,  T4.crs_credit FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num JOIN course AS T4 ON T4.crs_code  =  T1.crs_code WHERE T3.stu_lname  =  'Smithson'", "query_toks": ["SELECT", "T4.crs_description", ",", "T4.crs_credit", "FROM", "CLASS", "AS", "T1", "JOIN", "enroll", "AS", "T2", "ON", "T1.class_code", "=", "T2.class_code", "JOIN", "student", "AS", "T3", "ON", "T3.stu_num", "=", "T2.stu_num", "JOIN", "course", "AS", "T4", "ON", "T4.crs_code", "=", "T1.crs_code", "WHERE", "T3.stu_lname", "=", "'Smithson", "'"], "query_toks_no_value": ["select", "t4", ".", "crs_description", ",", "t4", ".", "crs_credit", "from", "class", "as", "t1", "join", "enroll", "as", "t2", "on", "t1", ".", "class_code", "=", "t2", ".", "class_code", "join", "student", "as", "t3", "on", "t3", ".", "stu_num", "=", "t2", ".", "stu_num", "join", "course", "as", "t4", "on", "t4", ".", "crs_code", "=", "t1", ".", "crs_code", "where", "t3", ".", "stu_lname", "=", "value"], "question": "What are the description and credit of the course which the student whose last name is Smithson took?", "question_toks": ["What", "are", "the", "description", "and", "credit", "of", "the", "course", "which", "the", "student", "whose", "last", "name", "is", "Smithson", "took", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 24, false], null]], "table_units": [["table_unit", 0], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 33, false], null], "\"Smithson\"", null]]}}, {"db_id": "college_1", "query": "SELECT T4.crs_description ,  T4.crs_credit FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num JOIN course AS T4 ON T4.crs_code  =  T1.crs_code WHERE T3.stu_lname  =  'Smithson'", "query_toks": ["SELECT", "T4.crs_description", ",", "T4.crs_credit", "FROM", "CLASS", "AS", "T1", "JOIN", "enroll", "AS", "T2", "ON", "T1.class_code", "=", "T2.class_code", "JOIN", "student", "AS", "T3", "ON", "T3.stu_num", "=", "T2.stu_num", "JOIN", "course", "AS", "T4", "ON", "T4.crs_code", "=", "T1.crs_code", "WHERE", "T3.stu_lname", "=", "'Smithson", "'"], "query_toks_no_value": ["select", "t4", ".", "crs_description", ",", "t4", ".", "crs_credit", "from", "class", "as", "t1", "join", "enroll", "as", "t2", "on", "t1", ".", "class_code", "=", "t2", ".", "class_code", "join", "student", "as", "t3", "on", "t3", ".", "stu_num", "=", "t2", ".", "stu_num", "join", "course", "as", "t4", "on", "t4", ".", "crs_code", "=", "t1", ".", "crs_code", "where", "t3", ".", "stu_lname", "=", "value"], "question": "How many credits is the course that the student with the last name Smithson took, and what is its description?", "question_toks": ["How", "many", "credits", "is", "the", "course", "that", "the", "student", "with", "the", "last", "name", "Smithson", "took", ",", "and", "what", "is", "its", "description", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 24, false], null]], "table_units": [["table_unit", 0], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 33, false], null], "\"Smithson\"", null]]}}, {"db_id": "college_1", "query": "SELECT stu_gpa ,  stu_phone ,  stu_fname FROM student ORDER BY stu_gpa DESC LIMIT 5", "query_toks": ["SELECT", "stu_gpa", ",", "stu_phone", ",", "stu_fname", "FROM", "student", "ORDER", "BY", "stu_gpa", "DESC", "LIMIT", "5"], "query_toks_no_value": ["select", "stu_gpa", ",", "stu_phone", ",", "stu_fname", "from", "student", "order", "by", "stu_gpa", "desc", "limit", "value"], "question": "What is the first name, gpa and phone number of the top 5 students with highest gpa?", "question_toks": ["What", "is", "the", "first", "name", ",", "gpa", "and", "phone", "number", "of", "the", "top", "5", "students", "with", "highest", "gpa", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": 5, "orderBy": ["desc", [[0, [0, 39, false], null]]], "select": [false, [[0, [0, [0, 39, false], null]], [0, [0, [0, 42, false], null]], [0, [0, [0, 34, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT stu_gpa ,  stu_phone ,  stu_fname FROM student ORDER BY stu_gpa DESC LIMIT 5", "query_toks": ["SELECT", "stu_gpa", ",", "stu_phone", ",", "stu_fname", "FROM", "student", "ORDER", "BY", "stu_gpa", "DESC", "LIMIT", "5"], "query_toks_no_value": ["select", "stu_gpa", ",", "stu_phone", ",", "stu_fname", "from", "student", "order", "by", "stu_gpa", "desc", "limit", "value"], "question": "What is the first name, GPA, and phone number of the students with the top 5 GPAs?", "question_toks": ["What", "is", "the", "first", "name", ",", "GPA", ",", "and", "phone", "number", "of", "the", "students", "with", "the", "top", "5", "GPAs", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": 5, "orderBy": ["desc", [[0, [0, 39, false], null]]], "select": [false, [[0, [0, [0, 39, false], null]], [0, [0, [0, 42, false], null]], [0, [0, [0, 34, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT stu_fname ,  stu_gpa FROM student WHERE stu_gpa  <  (SELECT avg(stu_gpa) FROM student)", "query_toks": ["SELECT", "stu_fname", ",", "stu_gpa", "FROM", "student", "WHERE", "stu_gpa", "<", "(", "SELECT", "avg", "(", "stu_gpa", ")", "FROM", "student", ")"], "query_toks_no_value": ["select", "stu_fname", ",", "stu_gpa", "from", "student", "where", "stu_gpa", "<", "(", "select", "avg", "(", "stu_gpa", ")", "from", "student", ")"], "question": "Find the first name and gpa of the students whose gpa is lower than the average gpa of all students.", "question_toks": ["Find", "the", "first", "name", "and", "gpa", "of", "the", "students", "whose", "gpa", "is", "lower", "than", "the", "average", "gpa", "of", "all", "students", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 39, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 39, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 39, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "college_1", "query": "SELECT stu_fname ,  stu_gpa FROM student WHERE stu_gpa  <  (SELECT avg(stu_gpa) FROM student)", "query_toks": ["SELECT", "stu_fname", ",", "stu_gpa", "FROM", "student", "WHERE", "stu_gpa", "<", "(", "SELECT", "avg", "(", "stu_gpa", ")", "FROM", "student", ")"], "query_toks_no_value": ["select", "stu_fname", ",", "stu_gpa", "from", "student", "where", "stu_gpa", "<", "(", "select", "avg", "(", "stu_gpa", ")", "from", "student", ")"], "question": "What is the first name and GPA of every student that has a GPA lower than average?", "question_toks": ["What", "is", "the", "first", "name", "and", "GPA", "of", "every", "student", "that", "has", "a", "GPA", "lower", "than", "average", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 39, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 39, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 39, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "college_1", "query": "SELECT T2.dept_name ,  T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.dept_name", ",", "T2.dept_address", "FROM", "student", "AS", "T1", "JOIN", "department", "AS", "T2", "ON", "T1.dept_code", "=", "T2.dept_code", "GROUP", "BY", "T1.dept_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "dept_name", ",", "t2", ".", "dept_address", "from", "student", "as", "t1", "join", "department", "as", "t2", "on", "t1", ".", "dept_code", "=", "t2", ".", "dept_code", "group", "by", "t1", ".", "dept_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the name and address of the department that has the highest number of students.", "question_toks": ["Find", "the", "name", "and", "address", "of", "the", "department", "that", "has", "the", "highest", "number", "of", "students", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 41, false], null], [0, 11, false], null]], "table_units": [["table_unit", 6], ["table_unit", 2]]}, "groupBy": [[0, 41, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT T2.dept_name ,  T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.dept_name", ",", "T2.dept_address", "FROM", "student", "AS", "T1", "JOIN", "department", "AS", "T2", "ON", "T1.dept_code", "=", "T2.dept_code", "GROUP", "BY", "T1.dept_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "dept_name", ",", "t2", ".", "dept_address", "from", "student", "as", "t1", "join", "department", "as", "t2", "on", "t1", ".", "dept_code", "=", "t2", ".", "dept_code", "group", "by", "t1", ".", "dept_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name and address of the department with the most students?", "question_toks": ["What", "is", "the", "name", "and", "address", "of", "the", "department", "with", "the", "most", "students", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 41, false], null], [0, 11, false], null]], "table_units": [["table_unit", 6], ["table_unit", 2]]}, "groupBy": [[0, 41, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT T2.dept_name ,  T2.dept_address ,  count(*) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 3", "query_toks": ["SELECT", "T2.dept_name", ",", "T2.dept_address", ",", "count", "(", "*", ")", "FROM", "student", "AS", "T1", "JOIN", "department", "AS", "T2", "ON", "T1.dept_code", "=", "T2.dept_code", "GROUP", "BY", "T1.dept_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "t2", ".", "dept_name", ",", "t2", ".", "dept_address", ",", "count", "(", "*", ")", "from", "student", "as", "t1", "join", "department", "as", "t2", "on", "t1", ".", "dept_code", "=", "t2", ".", "dept_code", "group", "by", "t1", ".", "dept_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the name, address, number of students in the departments that have the top 3 highest number of students.", "question_toks": ["Find", "the", "name", ",", "address", ",", "number", "of", "students", "in", "the", "departments", "that", "have", "the", "top", "3", "highest", "number", "of", "students", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 41, false], null], [0, 11, false], null]], "table_units": [["table_unit", 6], ["table_unit", 2]]}, "groupBy": [[0, 41, false]], "having": [], "intersect": null, "limit": 3, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 15, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT T2.dept_name ,  T2.dept_address ,  count(*) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 3", "query_toks": ["SELECT", "T2.dept_name", ",", "T2.dept_address", ",", "count", "(", "*", ")", "FROM", "student", "AS", "T1", "JOIN", "department", "AS", "T2", "ON", "T1.dept_code", "=", "T2.dept_code", "GROUP", "BY", "T1.dept_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "t2", ".", "dept_name", ",", "t2", ".", "dept_address", ",", "count", "(", "*", ")", "from", "student", "as", "t1", "join", "department", "as", "t2", "on", "t1", ".", "dept_code", "=", "t2", ".", "dept_code", "group", "by", "t1", ".", "dept_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name, address, and number of students in the departments that have the 3 most students?", "question_toks": ["What", "is", "the", "name", ",", "address", ",", "and", "number", "of", "students", "in", "the", "departments", "that", "have", "the", "3", "most", "students", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 41, false], null], [0, 11, false], null]], "table_units": [["table_unit", 6], ["table_unit", 2]]}, "groupBy": [[0, 41, false]], "having": [], "intersect": null, "limit": 3, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 15, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT T1.emp_fname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T3.dept_code  =  T2.dept_code WHERE T3.dept_name  =  'History' AND T2.prof_high_degree  =  'Ph.D.'", "query_toks": ["SELECT", "T1.emp_fname", ",", "T2.prof_office", "FROM", "employee", "AS", "T1", "JOIN", "professor", "AS", "T2", "ON", "T1.emp_num", "=", "T2.emp_num", "JOIN", "department", "AS", "T3", "ON", "T3.dept_code", "=", "T2.dept_code", "WHERE", "T3.dept_name", "=", "'History", "'", "AND", "T2.prof_high_degree", "=", "'Ph.D", ".", "'"], "query_toks_no_value": ["select", "t1", ".", "emp_fname", ",", "t2", ".", "prof_office", "from", "employee", "as", "t1", "join", "professor", "as", "t2", "on", "t1", ".", "emp_num", "=", "t2", ".", "emp_num", "join", "department", "as", "t3", "on", "t3", ".", "dept_code", "=", "t2", ".", "dept_code", "where", "t3", ".", "dept_name", "=", "value", "and", "t2", ".", "prof_high_degree", "=", "value"], "question": "Find the first name and office of the professor who is in the history department and has a Ph.D. degree.", "question_toks": ["Find", "the", "first", "name", "and", "office", "of", "the", "professor", "who", "is", "in", "the", "history", "department", "and", "has", "a", "Ph.D.", "degree", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 17, false], null], [0, 27, false], null]], "table_units": [["table_unit", 3], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 29, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"History\"", null], "and", [false, 2, [0, [0, 31, false], null], "\"Ph.D.\"", null]]}}, {"db_id": "college_1", "query": "SELECT T1.emp_fname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T3.dept_code  =  T2.dept_code WHERE T3.dept_name  =  'History' AND T2.prof_high_degree  =  'Ph.D.'", "query_toks": ["SELECT", "T1.emp_fname", ",", "T2.prof_office", "FROM", "employee", "AS", "T1", "JOIN", "professor", "AS", "T2", "ON", "T1.emp_num", "=", "T2.emp_num", "JOIN", "department", "AS", "T3", "ON", "T3.dept_code", "=", "T2.dept_code", "WHERE", "T3.dept_name", "=", "'History", "'", "AND", "T2.prof_high_degree", "=", "'Ph.D", ".", "'"], "query_toks_no_value": ["select", "t1", ".", "emp_fname", ",", "t2", ".", "prof_office", "from", "employee", "as", "t1", "join", "professor", "as", "t2", "on", "t1", ".", "emp_num", "=", "t2", ".", "emp_num", "join", "department", "as", "t3", "on", "t3", ".", "dept_code", "=", "t2", ".", "dept_code", "where", "t3", ".", "dept_name", "=", "value", "and", "t2", ".", "prof_high_degree", "=", "value"], "question": "What are the first names and office of the professors who are in the history department and have a Ph.D?", "question_toks": ["What", "are", "the", "first", "names", "and", "office", "of", "the", "professors", "who", "are", "in", "the", "history", "department", "and", "have", "a", "Ph.D", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 17, false], null], [0, 27, false], null]], "table_units": [["table_unit", 3], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 29, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"History\"", null], "and", [false, 2, [0, [0, 31, false], null], "\"Ph.D.\"", null]]}}, {"db_id": "college_1", "query": "SELECT T2.emp_fname ,  T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num", "query_toks": ["SELECT", "T2.emp_fname", ",", "T1.crs_code", "FROM", "CLASS", "AS", "T1", "JOIN", "employee", "AS", "T2", "ON", "T1.prof_num", "=", "T2.emp_num"], "query_toks_no_value": ["select", "t2", ".", "emp_fname", ",", "t1", ".", "crs_code", "from", "class", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "prof_num", "=", "t2", ".", "emp_num"], "question": "Find the first names of all instructors who have taught some course and the course code.", "question_toks": ["Find", "the", "first", "names", "of", "all", "instructors", "who", "have", "taught", "some", "course", "and", "the", "course", "code", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 17, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT T2.emp_fname ,  T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num", "query_toks": ["SELECT", "T2.emp_fname", ",", "T1.crs_code", "FROM", "CLASS", "AS", "T1", "JOIN", "employee", "AS", "T2", "ON", "T1.prof_num", "=", "T2.emp_num"], "query_toks_no_value": ["select", "t2", ".", "emp_fname", ",", "t1", ".", "crs_code", "from", "class", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "prof_num", "=", "t2", ".", "emp_num"], "question": "What are the first names of all teachers who have taught a course and the corresponding course codes?", "question_toks": ["What", "are", "the", "first", "names", "of", "all", "teachers", "who", "have", "taught", "a", "course", "and", "the", "corresponding", "course", "codes", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 17, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT T2.emp_fname ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code", "query_toks": ["SELECT", "T2.emp_fname", ",", "T3.crs_description", "FROM", "CLASS", "AS", "T1", "JOIN", "employee", "AS", "T2", "ON", "T1.prof_num", "=", "T2.emp_num", "JOIN", "course", "AS", "T3", "ON", "T1.crs_code", "=", "T3.crs_code"], "query_toks_no_value": ["select", "t2", ".", "emp_fname", ",", "t3", ".", "crs_description", "from", "class", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "prof_num", "=", "t2", ".", "emp_num", "join", "course", "as", "t3", "on", "t1", ".", "crs_code", "=", "t3", ".", "crs_code"], "question": "Find the first names of all instructors who have taught some course and the course description.", "question_toks": ["Find", "the", "first", "names", "of", "all", "instructors", "who", "have", "taught", "some", "course", "and", "the", "course", "description", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 17, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT T2.emp_fname ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code", "query_toks": ["SELECT", "T2.emp_fname", ",", "T3.crs_description", "FROM", "CLASS", "AS", "T1", "JOIN", "employee", "AS", "T2", "ON", "T1.prof_num", "=", "T2.emp_num", "JOIN", "course", "AS", "T3", "ON", "T1.crs_code", "=", "T3.crs_code"], "query_toks_no_value": ["select", "t2", ".", "emp_fname", ",", "t3", ".", "crs_description", "from", "class", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "prof_num", "=", "t2", ".", "emp_num", "join", "course", "as", "t3", "on", "t1", ".", "crs_code", "=", "t3", ".", "crs_code"], "question": "What are the first names of all teachers who have taught a course and the corresponding descriptions?", "question_toks": ["What", "are", "the", "first", "names", "of", "all", "teachers", "who", "have", "taught", "a", "course", "and", "the", "corresponding", "descriptions", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 17, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num", "query_toks": ["SELECT", "T2.emp_fname", ",", "T4.prof_office", ",", "T3.crs_description", "FROM", "CLASS", "AS", "T1", "JOIN", "employee", "AS", "T2", "ON", "T1.prof_num", "=", "T2.emp_num", "JOIN", "course", "AS", "T3", "ON", "T1.crs_code", "=", "T3.crs_code", "JOIN", "professor", "AS", "T4", "ON", "T2.emp_num", "=", "T4.emp_num"], "query_toks_no_value": ["select", "t2", ".", "emp_fname", ",", "t4", ".", "prof_office", ",", "t3", ".", "crs_description", "from", "class", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "prof_num", "=", "t2", ".", "emp_num", "join", "course", "as", "t3", "on", "t1", ".", "crs_code", "=", "t3", ".", "crs_code", "join", "professor", "as", "t4", "on", "t2", ".", "emp_num", "=", "t4", ".", "emp_num"], "question": "Find the first names and offices of all instructors who have taught some course and also find the course description.", "question_toks": ["Find", "the", "first", "names", "and", "offices", "of", "all", "instructors", "who", "have", "taught", "some", "course", "and", "also", "find", "the", "course", "description", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 17, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 29, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num", "query_toks": ["SELECT", "T2.emp_fname", ",", "T4.prof_office", ",", "T3.crs_description", "FROM", "CLASS", "AS", "T1", "JOIN", "employee", "AS", "T2", "ON", "T1.prof_num", "=", "T2.emp_num", "JOIN", "course", "AS", "T3", "ON", "T1.crs_code", "=", "T3.crs_code", "JOIN", "professor", "AS", "T4", "ON", "T2.emp_num", "=", "T4.emp_num"], "query_toks_no_value": ["select", "t2", ".", "emp_fname", ",", "t4", ".", "prof_office", ",", "t3", ".", "crs_description", "from", "class", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "prof_num", "=", "t2", ".", "emp_num", "join", "course", "as", "t3", "on", "t1", ".", "crs_code", "=", "t3", ".", "crs_code", "join", "professor", "as", "t4", "on", "t2", ".", "emp_num", "=", "t4", ".", "emp_num"], "question": "What are the first names, office locations of all lecturers who have taught some course?", "question_toks": ["What", "are", "the", "first", "names", ",", "office", "locations", "of", "all", "lecturers", "who", "have", "taught", "some", "course", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 17, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 29, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description ,  T5.dept_name FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num JOIN department AS T5 ON T4.dept_code  =  T5.dept_code", "query_toks": ["SELECT", "T2.emp_fname", ",", "T4.prof_office", ",", "T3.crs_description", ",", "T5.dept_name", "FROM", "CLASS", "AS", "T1", "JOIN", "employee", "AS", "T2", "ON", "T1.prof_num", "=", "T2.emp_num", "JOIN", "course", "AS", "T3", "ON", "T1.crs_code", "=", "T3.crs_code", "JOIN", "professor", "AS", "T4", "ON", "T2.emp_num", "=", "T4.emp_num", "JOIN", "department", "AS", "T5", "ON", "T4.dept_code", "=", "T5.dept_code"], "query_toks_no_value": ["select", "t2", ".", "emp_fname", ",", "t4", ".", "prof_office", ",", "t3", ".", "crs_description", ",", "t5", ".", "dept_name", "from", "class", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "prof_num", "=", "t2", ".", "emp_num", "join", "course", "as", "t3", "on", "t1", ".", "crs_code", "=", "t3", ".", "crs_code", "join", "professor", "as", "t4", "on", "t2", ".", "emp_num", "=", "t4", ".", "emp_num", "join", "department", "as", "t5", "on", "t4", ".", "dept_code", "=", "t5", ".", "dept_code"], "question": "Find the first names and offices of all instructors who have taught some course and the course description and the department name.", "question_toks": ["Find", "the", "first", "names", "and", "offices", "of", "all", "instructors", "who", "have", "taught", "some", "course", "and", "the", "course", "description", "and", "the", "department", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 17, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 29, false], null]], [0, [0, [0, 9, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description ,  T5.dept_name FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num JOIN department AS T5 ON T4.dept_code  =  T5.dept_code", "query_toks": ["SELECT", "T2.emp_fname", ",", "T4.prof_office", ",", "T3.crs_description", ",", "T5.dept_name", "FROM", "CLASS", "AS", "T1", "JOIN", "employee", "AS", "T2", "ON", "T1.prof_num", "=", "T2.emp_num", "JOIN", "course", "AS", "T3", "ON", "T1.crs_code", "=", "T3.crs_code", "JOIN", "professor", "AS", "T4", "ON", "T2.emp_num", "=", "T4.emp_num", "JOIN", "department", "AS", "T5", "ON", "T4.dept_code", "=", "T5.dept_code"], "query_toks_no_value": ["select", "t2", ".", "emp_fname", ",", "t4", ".", "prof_office", ",", "t3", ".", "crs_description", ",", "t5", ".", "dept_name", "from", "class", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "prof_num", "=", "t2", ".", "emp_num", "join", "course", "as", "t3", "on", "t1", ".", "crs_code", "=", "t3", ".", "crs_code", "join", "professor", "as", "t4", "on", "t2", ".", "emp_num", "=", "t4", ".", "emp_num", "join", "department", "as", "t5", "on", "t4", ".", "dept_code", "=", "t5", ".", "dept_code"], "question": "What are the first names, office locations, and departments of all instructors, and also what are the descriptions of the courses they teach?", "question_toks": ["What", "are", "the", "first", "names", ",", "office", "locations", ",", "and", "departments", "of", "all", "instructors", ",", "and", "also", "what", "are", "the", "descriptions", "of", "the", "courses", "they", "teach", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 17, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 29, false], null]], [0, [0, [0, 9, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT T1.stu_fname ,  T1.stu_lname ,  T4.crs_description FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code", "query_toks": ["SELECT", "T1.stu_fname", ",", "T1.stu_lname", ",", "T4.crs_description", "FROM", "student", "AS", "T1", "JOIN", "enroll", "AS", "T2", "ON", "T1.stu_num", "=", "T2.stu_num", "JOIN", "CLASS", "AS", "T3", "ON", "T2.class_code", "=", "T3.class_code", "JOIN", "course", "AS", "T4", "ON", "T3.crs_code", "=", "T4.crs_code"], "query_toks_no_value": ["select", "t1", ".", "stu_fname", ",", "t1", ".", "stu_lname", ",", "t4", ".", "crs_description", "from", "student", "as", "t1", "join", "enroll", "as", "t2", "on", "t1", ".", "stu_num", "=", "t2", ".", "stu_num", "join", "class", "as", "t3", "on", "t2", ".", "class_code", "=", "t3", ".", "class_code", "join", "course", "as", "t4", "on", "t3", ".", "crs_code", "=", "t4", ".", "crs_code"], "question": "Find names of all students who took some course and the course description.", "question_toks": ["Find", "names", "of", "all", "students", "who", "took", "some", "course", "and", "the", "course", "description", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 32, false], null], [0, 25, false], null]], "table_units": [["table_unit", 6], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 33, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT T1.stu_fname ,  T1.stu_lname ,  T4.crs_description FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code", "query_toks": ["SELECT", "T1.stu_fname", ",", "T1.stu_lname", ",", "T4.crs_description", "FROM", "student", "AS", "T1", "JOIN", "enroll", "AS", "T2", "ON", "T1.stu_num", "=", "T2.stu_num", "JOIN", "CLASS", "AS", "T3", "ON", "T2.class_code", "=", "T3.class_code", "JOIN", "course", "AS", "T4", "ON", "T3.crs_code", "=", "T4.crs_code"], "query_toks_no_value": ["select", "t1", ".", "stu_fname", ",", "t1", ".", "stu_lname", ",", "t4", ".", "crs_description", "from", "student", "as", "t1", "join", "enroll", "as", "t2", "on", "t1", ".", "stu_num", "=", "t2", ".", "stu_num", "join", "class", "as", "t3", "on", "t2", ".", "class_code", "=", "t3", ".", "class_code", "join", "course", "as", "t4", "on", "t3", ".", "crs_code", "=", "t4", ".", "crs_code"], "question": "What are the names of all students who took a class and the corresponding course descriptions?", "question_toks": ["What", "are", "the", "names", "of", "all", "students", "who", "took", "a", "class", "and", "the", "corresponding", "course", "descriptions", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 32, false], null], [0, 25, false], null]], "table_units": [["table_unit", 6], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 33, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "college_1", "query": "SELECT T1.stu_fname ,  T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'C' OR T2.enroll_grade  =  'A'", "query_toks": ["SELECT", "T1.stu_fname", ",", "T1.stu_lname", "FROM", "student", "AS", "T1", "JOIN", "enroll", "AS", "T2", "ON", "T1.stu_num", "=", "T2.stu_num", "WHERE", "T2.enroll_grade", "=", "'C", "'", "OR", "T2.enroll_grade", "=", "'A", "'"], "query_toks_no_value": ["select", "t1", ".", "stu_fname", ",", "t1", ".", "stu_lname", "from", "student", "as", "t1", "join", "enroll", "as", "t2", "on", "t1", ".", "stu_num", "=", "t2", ".", "stu_num", "where", "t2", ".", "enroll_grade", "=", "value", "or", "t2", ".", "enroll_grade", "=", "value"], "question": "Find names of all students who took some course and got A or C.", "question_toks": ["Find", "names", "of", "all", "students", "who", "took", "some", "course", "and", "got", "A", "or", "C", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 32, false], null], [0, 25, false], null]], "table_units": [["table_unit", 6], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 33, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 26, false], null], "\"C\"", null], "or", [false, 2, [0, [0, 26, false], null], "\"A\"", null]]}}, {"db_id": "college_1", "query": "SELECT T1.stu_fname ,  T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'C' OR T2.enroll_grade  =  'A'", "query_toks": ["SELECT", "T1.stu_fname", ",", "T1.stu_lname", "FROM", "student", "AS", "T1", "JOIN", "enroll", "AS", "T2", "ON", "T1.stu_num", "=", "T2.stu_num", "WHERE", "T2.enroll_grade", "=", "'C", "'", "OR", "T2.enroll_grade", "=", "'A", "'"], "query_toks_no_value": ["select", "t1", ".", "stu_fname", ",", "t1", ".", "stu_lname", "from", "student", "as", "t1", "join", "enroll", "as", "t2", "on", "t1", ".", "stu_num", "=", "t2", ".", "stu_num", "where", "t2", ".", "enroll_grade", "=", "value", "or", "t2", ".", "enroll_grade", "=", "value"], "question": "What are the names of all students taking a course who received an A or C?", "question_toks": ["What", "are", "the", "names", "of", "all", "students", "taking", "a", "course", "who", "received", "an", "A", "or", "C", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 32, false], null], [0, 25, false], null]], "table_units": [["table_unit", 6], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 33, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 26, false], null], "\"C\"", null], "or", [false, 2, [0, [0, 26, false], null], "\"A\"", null]]}}, {"db_id": "college_1", "query": "SELECT T2.emp_fname ,  T1.class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Accounting'", "query_toks": ["SELECT", "T2.emp_fname", ",", "T1.class_room", "FROM", "CLASS", "AS", "T1", "JOIN", "employee", "AS", "T2", "ON", "T1.prof_num", "=", "T2.emp_num", "JOIN", "professor", "AS", "T3", "ON", "T2.emp_num", "=", "T3.emp_num", "JOIN", "department", "AS", "T4", "ON", "T4.dept_code", "=", "T3.dept_code", "WHERE", "T4.dept_name", "=", "'Accounting", "'"], "query_toks_no_value": ["select", "t2", ".", "emp_fname", ",", "t1", ".", "class_room", "from", "class", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "prof_num", "=", "t2", ".", "emp_num", "join", "professor", "as", "t3", "on", "t2", ".", "emp_num", "=", "t3", ".", "emp_num", "join", "department", "as", "t4", "on", "t4", ".", "dept_code", "=", "t3", ".", "dept_code", "where", "t4", ".", "dept_name", "=", "value"], "question": "Find the first names of all professors in the Accounting department who is teaching some course and the class room.", "question_toks": ["Find", "the", "first", "names", "of", "all", "professors", "in", "the", "Accounting", "department", "who", "is", "teaching", "some", "course", "and", "the", "class", "room", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 17, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"Accounting\"", null]]}}, {"db_id": "college_1", "query": "SELECT T2.emp_fname ,  T1.class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Accounting'", "query_toks": ["SELECT", "T2.emp_fname", ",", "T1.class_room", "FROM", "CLASS", "AS", "T1", "JOIN", "employee", "AS", "T2", "ON", "T1.prof_num", "=", "T2.emp_num", "JOIN", "professor", "AS", "T3", "ON", "T2.emp_num", "=", "T3.emp_num", "JOIN", "department", "AS", "T4", "ON", "T4.dept_code", "=", "T3.dept_code", "WHERE", "T4.dept_name", "=", "'Accounting", "'"], "query_toks_no_value": ["select", "t2", ".", "emp_fname", ",", "t1", ".", "class_room", "from", "class", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "prof_num", "=", "t2", ".", "emp_num", "join", "professor", "as", "t3", "on", "t2", ".", "emp_num", "=", "t3", ".", "emp_num", "join", "department", "as", "t4", "on", "t4", ".", "dept_code", "=", "t3", ".", "dept_code", "where", "t4", ".", "dept_name", "=", "value"], "question": "What are the first names of all Accounting professors who teach and what are the classrooms of the courses they teach?", "question_toks": ["What", "are", "the", "first", "names", "of", "all", "Accounting", "professors", "who", "teach", "and", "what", "are", "the", "classrooms", "of", "the", "courses", "they", "teach", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 17, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"Accounting\"", null]]}}, {"db_id": "college_1", "query": "SELECT DISTINCT T2.emp_fname ,  T3.prof_high_degree FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Computer Info. Systems'", "query_toks": ["SELECT", "DISTINCT", "T2.emp_fname", ",", "T3.prof_high_degree", "FROM", "CLASS", "AS", "T1", "JOIN", "employee", "AS", "T2", "ON", "T1.prof_num", "=", "T2.emp_num", "JOIN", "professor", "AS", "T3", "ON", "T2.emp_num", "=", "T3.emp_num", "JOIN", "department", "AS", "T4", "ON", "T4.dept_code", "=", "T3.dept_code", "WHERE", "T4.dept_name", "=", "'Computer", "Info", ".", "Systems", "'"], "query_toks_no_value": ["select", "distinct", "t2", ".", "emp_fname", ",", "t3", ".", "prof_high_degree", "from", "class", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "prof_num", "=", "t2", ".", "emp_num", "join", "professor", "as", "t3", "on", "t2", ".", "emp_num", "=", "t3", ".", "emp_num", "join", "department", "as", "t4", "on", "t4", ".", "dept_code", "=", "t3", ".", "dept_code", "where", "t4", ".", "dept_name", "=", "value"], "question": "Find the first names and degree of all professors who are teaching some class in Computer Info. Systems department.", "question_toks": ["Find", "the", "first", "names", "and", "degree", "of", "all", "professors", "who", "are", "teaching", "some", "class", "in", "Computer", "Info", ".", "Systems", "department", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 17, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 19, false], null]], [0, [0, [0, 31, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"Computer Info. Systems\"", null]]}}, {"db_id": "college_1", "query": "SELECT DISTINCT T2.emp_fname ,  T3.prof_high_degree FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Computer Info. Systems'", "query_toks": ["SELECT", "DISTINCT", "T2.emp_fname", ",", "T3.prof_high_degree", "FROM", "CLASS", "AS", "T1", "JOIN", "employee", "AS", "T2", "ON", "T1.prof_num", "=", "T2.emp_num", "JOIN", "professor", "AS", "T3", "ON", "T2.emp_num", "=", "T3.emp_num", "JOIN", "department", "AS", "T4", "ON", "T4.dept_code", "=", "T3.dept_code", "WHERE", "T4.dept_name", "=", "'Computer", "Info", ".", "Systems", "'"], "query_toks_no_value": ["select", "distinct", "t2", ".", "emp_fname", ",", "t3", ".", "prof_high_degree", "from", "class", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "prof_num", "=", "t2", ".", "emp_num", "join", "professor", "as", "t3", "on", "t2", ".", "emp_num", "=", "t3", ".", "emp_num", "join", "department", "as", "t4", "on", "t4", ".", "dept_code", "=", "t3", ".", "dept_code", "where", "t4", ".", "dept_name", "=", "value"], "question": "What are the different first names and highest degree attained for professors teaching in the Computer Information Systems department?", "question_toks": ["What", "are", "the", "different", "first", "names", "and", "highest", "degree", "attained", "for", "professors", "teaching", "in", "the", "Computer", "Information", "Systems", "department", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 17, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 19, false], null]], [0, [0, [0, 31, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"Computer Info. Systems\"", null]]}}, {"db_id": "college_1", "query": "SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T1.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History' AND T1.prof_high_degree != 'Ph.D.'", "query_toks": ["SELECT", "T2.emp_fname", ",", "T1.prof_office", "FROM", "professor", "AS", "T1", "JOIN", "employee", "AS", "T2", "ON", "T1.emp_num", "=", "T2.emp_num", "JOIN", "department", "AS", "T3", "ON", "T1.dept_code", "=", "T3.dept_code", "WHERE", "T3.dept_name", "=", "'History", "'", "AND", "T1.prof_high_degree", "!", "=", "'Ph.D", ".", "'"], "query_toks_no_value": ["select", "t2", ".", "emp_fname", ",", "t1", ".", "prof_office", "from", "professor", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "emp_num", "=", "t2", ".", "emp_num", "join", "department", "as", "t3", "on", "t1", ".", "dept_code", "=", "t3", ".", "dept_code", "where", "t3", ".", "dept_name", "=", "value", "and", "t1", ".", "prof_high_degree", "!", "=", "value"], "question": "Find the first name and office of history professor who did not get a Ph.D. degree.", "question_toks": ["Find", "the", "first", "name", "and", "office", "of", "history", "professor", "who", "did", "not", "get", "a", "Ph.D.", "degree", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 27, false], null], [0, 17, false], null]], "table_units": [["table_unit", 5], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 29, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"History\"", null], "and", [false, 7, [0, [0, 31, false], null], "\"Ph.D.\"", null]]}}, {"db_id": "college_1", "query": "SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T1.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History' AND T1.prof_high_degree != 'Ph.D.'", "query_toks": ["SELECT", "T2.emp_fname", ",", "T1.prof_office", "FROM", "professor", "AS", "T1", "JOIN", "employee", "AS", "T2", "ON", "T1.emp_num", "=", "T2.emp_num", "JOIN", "department", "AS", "T3", "ON", "T1.dept_code", "=", "T3.dept_code", "WHERE", "T3.dept_name", "=", "'History", "'", "AND", "T1.prof_high_degree", "!", "=", "'Ph.D", ".", "'"], "query_toks_no_value": ["select", "t2", ".", "emp_fname", ",", "t1", ".", "prof_office", "from", "professor", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "emp_num", "=", "t2", ".", "emp_num", "join", "department", "as", "t3", "on", "t1", ".", "dept_code", "=", "t3", ".", "dept_code", "where", "t3", ".", "dept_name", "=", "value", "and", "t1", ".", "prof_high_degree", "!", "=", "value"], "question": "What are the first names and offices of history professors who don't have Ph.D.s?", "question_toks": ["What", "are", "the", "first", "names", "and", "offices", "of", "history", "professors", "who", "do", "n't", "have", "Ph.D.s", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 27, false], null], [0, 17, false], null]], "table_units": [["table_unit", 5], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 29, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"History\"", null], "and", [false, 7, [0, [0, 31, false], null], "\"Ph.D.\"", null]]}}, {"db_id": "sports_competition", "query": "SELECT Competition_type ,  Country FROM competition", "query_toks": ["SELECT", "Competition_type", ",", "Country", "FROM", "competition"], "query_toks_no_value": ["select", "competition_type", ",", "country", "from", "competition"], "question": "What are the types and countries of competitions?", "question_toks": ["What", "are", "the", "types", "and", "countries", "of", "competitions", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 22, false], null]]]], "union": null, "where": []}}, {"db_id": "sports_competition", "query": "SELECT Competition_type ,  Country FROM competition", "query_toks": ["SELECT", "Competition_type", ",", "Country", "FROM", "competition"], "query_toks_no_value": ["select", "competition_type", ",", "country", "from", "competition"], "question": "What are the types of every competition and in which countries are they located?", "question_toks": ["What", "are", "the", "types", "of", "every", "competition", "and", "in", "which", "countries", "are", "they", "located", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 22, false], null]]]], "union": null, "where": []}}, {"db_id": "sports_competition", "query": "SELECT max(Silver) ,  min(Silver) FROM club_rank", "query_toks": ["SELECT", "max", "(", "Silver", ")", ",", "min", "(", "Silver", ")", "FROM", "club_rank"], "query_toks_no_value": ["select", "max", "(", "silver", ")", ",", "min", "(", "silver", ")", "from", "club_rank"], "question": "What are the maximum and minimum number of silver medals for clubs.", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "number", "of", "silver", "medals", "for", "clubs", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 8, false], null]], [2, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "sports_competition", "query": "SELECT max(Silver) ,  min(Silver) FROM club_rank", "query_toks": ["SELECT", "max", "(", "Silver", ")", ",", "min", "(", "Silver", ")", "FROM", "club_rank"], "query_toks_no_value": ["select", "max", "(", "silver", ")", ",", "min", "(", "silver", ")", "from", "club_rank"], "question": "What are the maximum and minimum number of silver medals for all the clubs?", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "number", "of", "silver", "medals", "for", "all", "the", "clubs", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 8, false], null]], [2, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "sports_competition", "query": "SELECT T1.name ,  T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID", "query_toks": ["SELECT", "T1.name", ",", "T2.Player_id", "FROM", "club", "AS", "T1", "JOIN", "player", "AS", "T2", "ON", "T1.Club_ID", "=", "T2.Club_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "player_id", "from", "club", "as", "t1", "join", "player", "as", "t2", "on", "t1", ".", "club_id", "=", "t2", ".", "club_id"], "question": "Please show the names and the players of clubs.", "question_toks": ["Please", "show", "the", "names", "and", "the", "players", "of", "clubs", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 14, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "sports_competition", "query": "SELECT T1.name ,  T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID", "query_toks": ["SELECT", "T1.name", ",", "T2.Player_id", "FROM", "club", "AS", "T1", "JOIN", "player", "AS", "T2", "ON", "T1.Club_ID", "=", "T2.Club_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "player_id", "from", "club", "as", "t1", "join", "player", "as", "t2", "on", "t1", ".", "club_id", "=", "t2", ".", "club_id"], "question": "What are the names and players of all the clubs?", "question_toks": ["What", "are", "the", "names", "and", "players", "of", "all", "the", "clubs", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 14, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "sports_competition", "query": "SELECT POSITION ,  avg(Points) FROM player GROUP BY POSITION", "query_toks": ["SELECT", "POSITION", ",", "avg", "(", "Points", ")", "FROM", "player", "GROUP", "BY", "POSITION"], "query_toks_no_value": ["select", "position", ",", "avg", "(", "points", ")", "from", "player", "group", "by", "position"], "question": "List the position of players and the average number of points of players of each position.", "question_toks": ["List", "the", "position", "of", "players", "and", "the", "average", "number", "of", "points", "of", "players", "of", "each", "position", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [5, [0, [0, 18, false], null]]]], "union": null, "where": []}}, {"db_id": "sports_competition", "query": "SELECT POSITION ,  avg(Points) FROM player GROUP BY POSITION", "query_toks": ["SELECT", "POSITION", ",", "avg", "(", "Points", ")", "FROM", "player", "GROUP", "BY", "POSITION"], "query_toks_no_value": ["select", "position", ",", "avg", "(", "points", ")", "from", "player", "group", "by", "position"], "question": "For each position, what is the average number of points for players in that position?", "question_toks": ["For", "each", "position", ",", "what", "is", "the", "average", "number", "of", "points", "for", "players", "in", "that", "position", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [5, [0, [0, 18, false], null]]]], "union": null, "where": []}}, {"db_id": "sports_competition", "query": "SELECT Competition_type ,  COUNT(*) FROM competition GROUP BY Competition_type", "query_toks": ["SELECT", "Competition_type", ",", "COUNT", "(", "*", ")", "FROM", "competition", "GROUP", "BY", "Competition_type"], "query_toks_no_value": ["select", "competition_type", ",", "count", "(", "*", ")", "from", "competition", "group", "by", "competition_type"], "question": "List the types of competition and the number of competitions of each type.", "question_toks": ["List", "the", "types", "of", "competition", "and", "the", "number", "of", "competitions", "of", "each", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 21, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 21, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "sports_competition", "query": "SELECT Competition_type ,  COUNT(*) FROM competition GROUP BY Competition_type", "query_toks": ["SELECT", "Competition_type", ",", "COUNT", "(", "*", ")", "FROM", "competition", "GROUP", "BY", "Competition_type"], "query_toks_no_value": ["select", "competition_type", ",", "count", "(", "*", ")", "from", "competition", "group", "by", "competition_type"], "question": "What are the types of competition and number of competitions for that type?", "question_toks": ["What", "are", "the", "types", "of", "competition", "and", "number", "of", "competitions", "for", "that", "type", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 21, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 21, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "sports_competition", "query": "SELECT count(*) ,  POSITION FROM player WHERE points  <  30 GROUP BY POSITION", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "POSITION", "FROM", "player", "WHERE", "points", "<", "30", "GROUP", "BY", "POSITION"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "position", "from", "player", "where", "points", "<", "value", "group", "by", "position"], "question": "find the number of players whose points are lower than 30 in each position.", "question_toks": ["find", "the", "number", "of", "players", "whose", "points", "are", "lower", "than", "30", "in", "each", "position", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 18, false], null], 30.0, null]]}}, {"db_id": "sports_competition", "query": "SELECT count(*) ,  POSITION FROM player WHERE points  <  30 GROUP BY POSITION", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "POSITION", "FROM", "player", "WHERE", "points", "<", "30", "GROUP", "BY", "POSITION"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "position", "from", "player", "where", "points", "<", "value", "group", "by", "position"], "question": "What is the number of players who have points less than 30 for each position?", "question_toks": ["What", "is", "the", "number", "of", "players", "who", "have", "points", "less", "than", "30", "for", "each", "position", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 18, false], null], 30.0, null]]}}, {"db_id": "manufacturer", "query": "SELECT name ,  furniture_id FROM furniture ORDER BY market_rate DESC LIMIT 1", "query_toks": ["SELECT", "name", ",", "furniture_id", "FROM", "furniture", "ORDER", "BY", "market_rate", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "furniture_id", "from", "furniture", "order", "by", "market_rate", "desc", "limit", "value"], "question": "Return the name and id of the furniture with the highest market rate.", "question_toks": ["Return", "the", "name", "and", "id", "of", "the", "furniture", "with", "the", "highest", "market", "rate", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 9, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "manufacturer", "query": "SELECT Num_of_Component ,  name FROM furniture WHERE Num_of_Component  >  10", "query_toks": ["SELECT", "Num_of_Component", ",", "name", "FROM", "furniture", "WHERE", "Num_of_Component", ">", "10"], "query_toks_no_value": ["select", "num_of_component", ",", "name", "from", "furniture", "where", "num_of_component", ">", "value"], "question": "Find the component amounts and names of all furnitures that have more than 10 components.", "question_toks": ["Find", "the", "component", "amounts", "and", "names", "of", "all", "furnitures", "that", "have", "more", "than", "10", "components", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 8, false], null], 10.0, null]]}}, {"db_id": "manufacturer", "query": "SELECT name ,  Num_of_Component FROM furniture ORDER BY market_rate LIMIT 1", "query_toks": ["SELECT", "name", ",", "Num_of_Component", "FROM", "furniture", "ORDER", "BY", "market_rate", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "num_of_component", "from", "furniture", "order", "by", "market_rate", "limit", "value"], "question": "Find the name and component amount of the least popular furniture.", "question_toks": ["Find", "the", "name", "and", "component", "amount", "of", "the", "least", "popular", "furniture", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 9, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "manufacturer", "query": "SELECT open_year ,  name FROM manufacturer ORDER BY num_of_shops DESC LIMIT 1", "query_toks": ["SELECT", "open_year", ",", "name", "FROM", "manufacturer", "ORDER", "BY", "num_of_shops", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "open_year", ",", "name", "from", "manufacturer", "order", "by", "num_of_shops", "desc", "limit", "value"], "question": "Which manufacturer has the most number of shops? List its name and year of opening.", "question_toks": ["Which", "manufacturer", "has", "the", "most", "number", "of", "shops", "?", "List", "its", "name", "and", "year", "of", "opening", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "manufacturer", "query": "SELECT name ,  manufacturer_id FROM manufacturer ORDER BY open_year", "query_toks": ["SELECT", "name", ",", "manufacturer_id", "FROM", "manufacturer", "ORDER", "BY", "open_year"], "query_toks_no_value": ["select", "name", ",", "manufacturer_id", "from", "manufacturer", "order", "by", "open_year"], "question": "List all manufacturer names and ids ordered by their opening year.", "question_toks": ["List", "all", "manufacturer", "names", "and", "ids", "ordered", "by", "their", "opening", "year", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 2, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": []}}, {"db_id": "manufacturer", "query": "SELECT name ,  open_year FROM manufacturer WHERE num_of_shops  >  10 OR Num_of_Factories  <  10", "query_toks": ["SELECT", "name", ",", "open_year", "FROM", "manufacturer", "WHERE", "num_of_shops", ">", "10", "OR", "Num_of_Factories", "<", "10"], "query_toks_no_value": ["select", "name", ",", "open_year", "from", "manufacturer", "where", "num_of_shops", ">", "value", "or", "num_of_factories", "<", "value"], "question": "Give me the name and year of opening of the manufacturers that have either less than 10 factories or more than 10 shops.", "question_toks": ["Give", "me", "the", "name", "and", "year", "of", "opening", "of", "the", "manufacturers", "that", "have", "either", "less", "than", "10", "factories", "or", "more", "than", "10", "shops", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 5, false], null], 10.0, null], "or", [false, 4, [0, [0, 4, false], null], 10.0, null]]}}, {"db_id": "manufacturer", "query": "SELECT max(num_of_shops) ,  avg(Num_of_Factories) FROM manufacturer WHERE open_year  <  1990", "query_toks": ["SELECT", "max", "(", "num_of_shops", ")", ",", "avg", "(", "Num_of_Factories", ")", "FROM", "manufacturer", "WHERE", "open_year", "<", "1990"], "query_toks_no_value": ["select", "max", "(", "num_of_shops", ")", ",", "avg", "(", "num_of_factories", ")", "from", "manufacturer", "where", "open_year", "<", "value"], "question": "what is the average number of factories and maximum number of shops for manufacturers that opened before 1990.", "question_toks": ["what", "is", "the", "average", "number", "of", "factories", "and", "maximum", "number", "of", "shops", "for", "manufacturers", "that", "opened", "before", "1990", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 5, false], null]], [5, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 2, false], null], 1990.0, null]]}}, {"db_id": "manufacturer", "query": "SELECT t1.manufacturer_id ,  t1.num_of_shops FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id  =  t2.manufacturer_id ORDER BY t2.Price_in_Dollar DESC LIMIT 1", "query_toks": ["SELECT", "t1.manufacturer_id", ",", "t1.num_of_shops", "FROM", "manufacturer", "AS", "t1", "JOIN", "furniture_manufacte", "AS", "t2", "ON", "t1.manufacturer_id", "=", "t2.manufacturer_id", "ORDER", "BY", "t2.Price_in_Dollar", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "manufacturer_id", ",", "t1", ".", "num_of_shops", "from", "manufacturer", "as", "t1", "join", "furniture_manufacte", "as", "t2", "on", "t1", ".", "manufacturer_id", "=", "t2", ".", "manufacturer_id", "order", "by", "t2", ".", "price_in_dollar", "desc", "limit", "value"], "question": "Find the id and number of shops for the company that produces the most expensive furniture.", "question_toks": ["Find", "the", "id", "and", "number", "of", "shops", "for", "the", "company", "that", "produces", "the", "most", "expensive", "furniture", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 12, false], null]]], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "manufacturer", "query": "SELECT count(*) ,  t1.name FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id  =  t2.manufacturer_id GROUP BY t1.manufacturer_id", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "t1.name", "FROM", "manufacturer", "AS", "t1", "JOIN", "furniture_manufacte", "AS", "t2", "ON", "t1.manufacturer_id", "=", "t2.manufacturer_id", "GROUP", "BY", "t1.manufacturer_id"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "name", "from", "manufacturer", "as", "t1", "join", "furniture_manufacte", "as", "t2", "on", "t1", ".", "manufacturer_id", "=", "t2", ".", "manufacturer_id", "group", "by", "t1", ".", "manufacturer_id"], "question": "Find the number of funiture types produced by each manufacturer as well as the company names.", "question_toks": ["Find", "the", "number", "of", "funiture", "types", "produced", "by", "each", "manufacturer", "as", "well", "as", "the", "company", "names", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "manufacturer", "query": "SELECT t1.name ,  t2.price_in_dollar FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID", "query_toks": ["SELECT", "t1.name", ",", "t2.price_in_dollar", "FROM", "furniture", "AS", "t1", "JOIN", "furniture_manufacte", "AS", "t2", "ON", "t1.Furniture_ID", "=", "t2.Furniture_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "price_in_dollar", "from", "furniture", "as", "t1", "join", "furniture_manufacte", "as", "t2", "on", "t1", ".", "furniture_id", "=", "t2", ".", "furniture_id"], "question": "Give me the names and prices of furnitures which some companies are manufacturing.", "question_toks": ["Give", "me", "the", "names", "and", "prices", "of", "furnitures", "which", "some", "companies", "are", "manufacturing", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "manufacturer", "query": "SELECT Market_Rate ,  name FROM furniture WHERE Furniture_ID NOT IN (SELECT Furniture_ID FROM furniture_manufacte)", "query_toks": ["SELECT", "Market_Rate", ",", "name", "FROM", "furniture", "WHERE", "Furniture_ID", "NOT", "IN", "(", "SELECT", "Furniture_ID", "FROM", "furniture_manufacte", ")"], "query_toks_no_value": ["select", "market_rate", ",", "name", "from", "furniture", "where", "furniture_id", "not", "in", "(", "select", "furniture_id", "from", "furniture_manufacte", ")"], "question": "Find the market shares and names of furnitures which no any company is producing in our records.", "question_toks": ["Find", "the", "market", "shares", "and", "names", "of", "furnitures", "which", "no", "any", "company", "is", "producing", "in", "our", "records", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 6, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "hr_1", "query": "SELECT T1.first_name ,  T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id", "query_toks": ["SELECT", "T1.first_name", ",", "T2.department_name", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t2", ".", "department_name", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id"], "question": "Display the first name and department name for each employee.", "question_toks": ["Display", "the", "first", "name", "and", "department", "name", "for", "each", "employee", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "hr_1", "query": "SELECT T1.first_name ,  T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id", "query_toks": ["SELECT", "T1.first_name", ",", "T2.department_name", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t2", ".", "department_name", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id"], "question": "What are the first name and department name of all employees?", "question_toks": ["What", "are", "the", "first", "name", "and", "department", "name", "of", "all", "employees", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  salary FROM employees WHERE salary  <  6000", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "salary", "FROM", "employees", "WHERE", "salary", "<", "6000"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "salary", "from", "employees", "where", "salary", "<", "value"], "question": "List the full name (first and last name), and salary for those employees who earn below 6000.", "question_toks": ["List", "the", "full", "name", "(", "first", "and", "last", "name", ")", ",", "and", "salary", "for", "those", "employees", "who", "earn", "below", "6000", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 21, false], null], 6000.0, null]]}}, {"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  salary FROM employees WHERE salary  <  6000", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "salary", "FROM", "employees", "WHERE", "salary", "<", "6000"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "salary", "from", "employees", "where", "salary", "<", "value"], "question": "What are the full names and salaries for any employees earning less than 6000?", "question_toks": ["What", "are", "the", "full", "names", "and", "salaries", "for", "any", "employees", "earning", "less", "than", "6000", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 21, false], null], 6000.0, null]]}}, {"db_id": "hr_1", "query": "SELECT first_name ,  department_id FROM employees WHERE last_name  =  'McEwen'", "query_toks": ["SELECT", "first_name", ",", "department_id", "FROM", "employees", "WHERE", "last_name", "=", "'McEwen", "'"], "query_toks_no_value": ["select", "first_name", ",", "department_id", "from", "employees", "where", "last_name", "=", "value"], "question": "Display the first name, and department number for all employees whose last name is \"McEwen\".", "question_toks": ["Display", "the", "first", "name", ",", "and", "department", "number", "for", "all", "employees", "whose", "last", "name", "is", "``", "McEwen", "''", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 16, false], null], "\"McEwen\"", null]]}}, {"db_id": "hr_1", "query": "SELECT first_name ,  department_id FROM employees WHERE last_name  =  'McEwen'", "query_toks": ["SELECT", "first_name", ",", "department_id", "FROM", "employees", "WHERE", "last_name", "=", "'McEwen", "'"], "query_toks_no_value": ["select", "first_name", ",", "department_id", "from", "employees", "where", "last_name", "=", "value"], "question": "What are the first names and department numbers for employees with last name McEwen?", "question_toks": ["What", "are", "the", "first", "names", "and", "department", "numbers", "for", "employees", "with", "last", "name", "McEwen", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 16, false], null], "\"McEwen\"", null]]}}, {"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%'", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "hire_date", ",", "salary", ",", "department_id", "FROM", "employees", "WHERE", "first_name", "NOT", "LIKE", "'", "%", "M", "%", "'"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "hire_date", ",", "salary", ",", "department_id", "from", "employees", "where", "first_name", "not", "like", "value"], "question": "display the full name (first and last), hire date, salary, and department number for those employees whose first name does not containing the letter M.", "question_toks": ["display", "the", "full", "name", "(", "first", "and", "last", ")", ",", "hire", "date", ",", "salary", ",", "and", "department", "number", "for", "those", "employees", "whose", "first", "name", "does", "not", "containing", "the", "letter", "M", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 19, false], null]], [0, [0, [0, 21, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": [[true, 9, [0, [0, 15, false], null], "\"%M%\"", null]]}}, {"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%'", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "hire_date", ",", "salary", ",", "department_id", "FROM", "employees", "WHERE", "first_name", "NOT", "LIKE", "'", "%", "M", "%", "'"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "hire_date", ",", "salary", ",", "department_id", "from", "employees", "where", "first_name", "not", "like", "value"], "question": "What are the full name, hire date, salary, and department id for employees without the letter M in their first name?", "question_toks": ["What", "are", "the", "full", "name", ",", "hire", "date", ",", "salary", ",", "and", "department", "id", "for", "employees", "without", "the", "letter", "M", "in", "their", "first", "name", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 19, false], null]], [0, [0, [0, 21, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": [[true, 9, [0, [0, 15, false], null], "\"%M%\"", null]]}}, {"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "hire_date", ",", "salary", ",", "department_id", "FROM", "employees", "WHERE", "first_name", "NOT", "LIKE", "'", "%", "M", "%", "'", "ORDER", "BY", "department_id"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "hire_date", ",", "salary", ",", "department_id", "from", "employees", "where", "first_name", "not", "like", "value", "order", "by", "department_id"], "question": "display the full name (first and last), hire date, salary, and department number for those employees whose first name does not containing the letter M and make the result set in ascending order by department number.", "question_toks": ["display", "the", "full", "name", "(", "first", "and", "last", ")", ",", "hire", "date", ",", "salary", ",", "and", "department", "number", "for", "those", "employees", "whose", "first", "name", "does", "not", "containing", "the", "letter", "M", "and", "make", "the", "result", "set", "in", "ascending", "order", "by", "department", "number", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 24, false], null]]], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 19, false], null]], [0, [0, [0, 21, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": [[true, 9, [0, [0, 15, false], null], "\"%M%\"", null]]}}, {"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "hire_date", ",", "salary", ",", "department_id", "FROM", "employees", "WHERE", "first_name", "NOT", "LIKE", "'", "%", "M", "%", "'", "ORDER", "BY", "department_id"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "hire_date", ",", "salary", ",", "department_id", "from", "employees", "where", "first_name", "not", "like", "value", "order", "by", "department_id"], "question": "What are the full name, hire data, salary and department id for employees without the letter M in their first name, ordered by ascending department id?", "question_toks": ["What", "are", "the", "full", "name", ",", "hire", "data", ",", "salary", "and", "department", "id", "for", "employees", "without", "the", "letter", "M", "in", "their", "first", "name", ",", "ordered", "by", "ascending", "department", "id", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 24, false], null]]], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 19, false], null]], [0, [0, [0, 21, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": [[true, 9, [0, [0, 15, false], null], "\"%M%\"", null]]}}, {"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  salary FROM  employees WHERE commission_pct  =  \"null\"", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "salary", "FROM", "employees", "WHERE", "commission_pct", "=", "``", "null", "''"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "salary", "from", "employees", "where", "commission_pct", "=", "value"], "question": "What are the full name (first and last name) and salary for all employees who does not have any value for commission?", "question_toks": ["What", "are", "the", "full", "name", "(", "first", "and", "last", "name", ")", "and", "salary", "for", "all", "employees", "who", "does", "not", "have", "any", "value", "for", "commission", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 22, false], null], "\"null\"", null]]}}, {"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  salary FROM  employees WHERE commission_pct  =  \"null\"", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "salary", "FROM", "employees", "WHERE", "commission_pct", "=", "``", "null", "''"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "salary", "from", "employees", "where", "commission_pct", "=", "value"], "question": "Return the full names and salaries of employees with null commissions.", "question_toks": ["Return", "the", "full", "names", "and", "salaries", "of", "employees", "with", "null", "commissions", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 22, false], null], "\"null\"", null]]}}, {"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  salary FROM employees WHERE first_name LIKE '%m'", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "salary", "FROM", "employees", "WHERE", "first_name", "LIKE", "'", "%", "m", "'"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "salary", "from", "employees", "where", "first_name", "like", "value"], "question": "Display the first and last name, and salary for those employees whose first name is ending with the letter m.", "question_toks": ["Display", "the", "first", "and", "last", "name", ",", "and", "salary", "for", "those", "employees", "whose", "first", "name", "is", "ending", "with", "the", "letter", "m", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 15, false], null], "\"%m\"", null]]}}, {"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  salary FROM employees WHERE first_name LIKE '%m'", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "salary", "FROM", "employees", "WHERE", "first_name", "LIKE", "'", "%", "m", "'"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "salary", "from", "employees", "where", "first_name", "like", "value"], "question": "Return the full names and salaries for employees with first names that end with the letter m.", "question_toks": ["Return", "the", "full", "names", "and", "salaries", "for", "employees", "with", "first", "names", "that", "end", "with", "the", "letter", "m", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 15, false], null], "\"%m\"", null]]}}, {"db_id": "hr_1", "query": "SELECT job_id ,  hire_date FROM employees WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05'", "query_toks": ["SELECT", "job_id", ",", "hire_date", "FROM", "employees", "WHERE", "hire_date", "BETWEEN", "'2007-11-05", "'", "AND", "'2009-07-05", "'"], "query_toks_no_value": ["select", "job_id", ",", "hire_date", "from", "employees", "where", "hire_date", "between", "value", "and", "value"], "question": "Find job id and date of hire for those employees who was hired between November 5th, 2007 and July 5th, 2009.", "question_toks": ["Find", "job", "id", "and", "date", "of", "hire", "for", "those", "employees", "who", "was", "hired", "between", "November", "5th", ",", "2007", "and", "July", "5th", ",", "2009", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": [[false, 1, [0, [0, 19, false], null], "\"2007-11-05\"", "\"2009-07-05\""]]}}, {"db_id": "hr_1", "query": "SELECT job_id ,  hire_date FROM employees WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05'", "query_toks": ["SELECT", "job_id", ",", "hire_date", "FROM", "employees", "WHERE", "hire_date", "BETWEEN", "'2007-11-05", "'", "AND", "'2009-07-05", "'"], "query_toks_no_value": ["select", "job_id", ",", "hire_date", "from", "employees", "where", "hire_date", "between", "value", "and", "value"], "question": "What are the job ids and dates of hire for employees hired after November 5th, 2007 and before July 5th, 2009?", "question_toks": ["What", "are", "the", "job", "ids", "and", "dates", "of", "hire", "for", "employees", "hired", "after", "November", "5th", ",", "2007", "and", "before", "July", "5th", ",", "2009", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": [[false, 1, [0, [0, 19, false], null], "\"2007-11-05\"", "\"2009-07-05\""]]}}, {"db_id": "hr_1", "query": "SELECT first_name ,  last_name FROM employees WHERE department_id  =  70 OR department_id  =  90", "query_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "employees", "WHERE", "department_id", "=", "70", "OR", "department_id", "=", "90"], "query_toks_no_value": ["select", "first_name", ",", "last_name", "from", "employees", "where", "department_id", "=", "value", "or", "department_id", "=", "value"], "question": "What are the first and last name for those employees who works either in department 70 or 90?", "question_toks": ["What", "are", "the", "first", "and", "last", "name", "for", "those", "employees", "who", "works", "either", "in", "department", "70", "or", "90", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], 70.0, null], "or", [false, 2, [0, [0, 24, false], null], 90.0, null]]}}, {"db_id": "hr_1", "query": "SELECT first_name ,  last_name FROM employees WHERE department_id  =  70 OR department_id  =  90", "query_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "employees", "WHERE", "department_id", "=", "70", "OR", "department_id", "=", "90"], "query_toks_no_value": ["select", "first_name", ",", "last_name", "from", "employees", "where", "department_id", "=", "value", "or", "department_id", "=", "value"], "question": "What are the full names of employees who with in department 70 or 90?", "question_toks": ["What", "are", "the", "full", "names", "of", "employees", "who", "with", "in", "department", "70", "or", "90", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], 70.0, null], "or", [false, 2, [0, [0, 24, false], null], 90.0, null]]}}, {"db_id": "hr_1", "query": "SELECT salary ,  manager_id FROM employees WHERE manager_id != \"null\"", "query_toks": ["SELECT", "salary", ",", "manager_id", "FROM", "employees", "WHERE", "manager_id", "!", "=", "``", "null", "''"], "query_toks_no_value": ["select", "salary", ",", "manager_id", "from", "employees", "where", "manager_id", "!", "=", "value"], "question": "Find the salary and manager number for those employees who is working under a manager.", "question_toks": ["Find", "the", "salary", "and", "manager", "number", "for", "those", "employees", "who", "is", "working", "under", "a", "manager", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 23, false], null], "\"null\"", null]]}}, {"db_id": "hr_1", "query": "SELECT salary ,  manager_id FROM employees WHERE manager_id != \"null\"", "query_toks": ["SELECT", "salary", ",", "manager_id", "FROM", "employees", "WHERE", "manager_id", "!", "=", "``", "null", "''"], "query_toks_no_value": ["select", "salary", ",", "manager_id", "from", "employees", "where", "manager_id", "!", "=", "value"], "question": "What are the salaries and manager ids for employees who have managers?", "question_toks": ["What", "are", "the", "salaries", "and", "manager", "ids", "for", "employees", "who", "have", "managers", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 23, false], null], "\"null\"", null]]}}, {"db_id": "hr_1", "query": "SELECT job_title ,  max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000", "query_toks": ["SELECT", "job_title", ",", "max_salary", "-", "min_salary", "FROM", "jobs", "WHERE", "max_salary", "BETWEEN", "12000", "AND", "18000"], "query_toks_no_value": ["select", "job_title", ",", "max_salary", "-", "min_salary", "from", "jobs", "where", "max_salary", "between", "value", "and", "value"], "question": "display job Title, the difference between minimum and maximum salaries for those jobs which max salary within the range 12000 to 18000.", "question_toks": ["display", "job", "Title", ",", "the", "difference", "between", "minimum", "and", "maximum", "salaries", "for", "those", "jobs", "which", "max", "salary", "within", "the", "range", "12000", "to", "18000", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [1, [0, 13, false], [0, 12, false]]]]], "union": null, "where": [[false, 1, [0, [0, 13, false], null], 12000.0, 18000.0]]}}, {"db_id": "hr_1", "query": "SELECT job_title ,  max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000", "query_toks": ["SELECT", "job_title", ",", "max_salary", "-", "min_salary", "FROM", "jobs", "WHERE", "max_salary", "BETWEEN", "12000", "AND", "18000"], "query_toks_no_value": ["select", "job_title", ",", "max_salary", "-", "min_salary", "from", "jobs", "where", "max_salary", "between", "value", "and", "value"], "question": "What are the job titles, and range of salaries for jobs with maximum salary between 12000 and 18000?", "question_toks": ["What", "are", "the", "job", "titles", ",", "and", "range", "of", "salaries", "for", "jobs", "with", "maximum", "salary", "between", "12000", "and", "18000", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [1, [0, 13, false], [0, 12, false]]]]], "union": null, "where": [[false, 1, [0, [0, 13, false], null], 12000.0, 18000.0]]}}, {"db_id": "hr_1", "query": "SELECT employee_id ,  MAX(end_date) FROM job_history GROUP BY employee_id", "query_toks": ["SELECT", "employee_id", ",", "MAX", "(", "end_date", ")", "FROM", "job_history", "GROUP", "BY", "employee_id"], "query_toks_no_value": ["select", "employee_id", ",", "max", "(", "end_date", ")", "from", "job_history", "group", "by", "employee_id"], "question": "display the employee ID for each employee and the date on which he ended his previous job.", "question_toks": ["display", "the", "employee", "ID", "for", "each", "employee", "and", "the", "date", "on", "which", "he", "ended", "his", "previous", "job", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 25, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 25, false], null]], [1, [0, [0, 27, false], null]]]], "union": null, "where": []}}, {"db_id": "hr_1", "query": "SELECT employee_id ,  MAX(end_date) FROM job_history GROUP BY employee_id", "query_toks": ["SELECT", "employee_id", ",", "MAX", "(", "end_date", ")", "FROM", "job_history", "GROUP", "BY", "employee_id"], "query_toks_no_value": ["select", "employee_id", ",", "max", "(", "end_date", ")", "from", "job_history", "group", "by", "employee_id"], "question": "What are the employee ids for each employee and final dates of employment at their last job?", "question_toks": ["What", "are", "the", "employee", "ids", "for", "each", "employee", "and", "final", "dates", "of", "employment", "at", "their", "last", "job", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 25, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 25, false], null]], [1, [0, [0, 27, false], null]]]], "union": null, "where": []}}, {"db_id": "hr_1", "query": "SELECT department_id ,  AVG(salary) FROM employees WHERE commission_pct != \"null\" GROUP BY department_id", "query_toks": ["SELECT", "department_id", ",", "AVG", "(", "salary", ")", "FROM", "employees", "WHERE", "commission_pct", "!", "=", "``", "null", "''", "GROUP", "BY", "department_id"], "query_toks_no_value": ["select", "department_id", ",", "avg", "(", "salary", ")", "from", "employees", "where", "commission_pct", "!", "=", "value", "group", "by", "department_id"], "question": "display the average salary of employees for each department who gets a commission percentage.", "question_toks": ["display", "the", "average", "salary", "of", "employees", "for", "each", "department", "who", "gets", "a", "commission", "percentage", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 24, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 24, false], null]], [5, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 22, false], null], "\"null\"", null]]}}, {"db_id": "hr_1", "query": "SELECT department_id ,  AVG(salary) FROM employees WHERE commission_pct != \"null\" GROUP BY department_id", "query_toks": ["SELECT", "department_id", ",", "AVG", "(", "salary", ")", "FROM", "employees", "WHERE", "commission_pct", "!", "=", "``", "null", "''", "GROUP", "BY", "department_id"], "query_toks_no_value": ["select", "department_id", ",", "avg", "(", "salary", ")", "from", "employees", "where", "commission_pct", "!", "=", "value", "group", "by", "department_id"], "question": "What is the average salary of employees who have a commission percentage that is not null?", "question_toks": ["What", "is", "the", "average", "salary", "of", "employees", "who", "have", "a", "commission", "percentage", "that", "is", "not", "null", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 24, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 24, false], null]], [5, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 22, false], null], "\"null\"", null]]}}, {"db_id": "hr_1", "query": "SELECT country_id ,  COUNT(*) FROM locations GROUP BY country_id", "query_toks": ["SELECT", "country_id", ",", "COUNT", "(", "*", ")", "FROM", "locations", "GROUP", "BY", "country_id"], "query_toks_no_value": ["select", "country_id", ",", "count", "(", "*", ")", "from", "locations", "group", "by", "country_id"], "question": "display the country ID and number of cities for each country.", "question_toks": ["display", "the", "country", "ID", "and", "number", "of", "cities", "for", "each", "country", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 35, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 35, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "hr_1", "query": "SELECT country_id ,  COUNT(*) FROM locations GROUP BY country_id", "query_toks": ["SELECT", "country_id", ",", "COUNT", "(", "*", ")", "FROM", "locations", "GROUP", "BY", "country_id"], "query_toks_no_value": ["select", "country_id", ",", "count", "(", "*", ")", "from", "locations", "group", "by", "country_id"], "question": "Give the country id and corresponding count of cities in each country.", "question_toks": ["Give", "the", "country", "id", "and", "corresponding", "count", "of", "cities", "in", "each", "country", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 35, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 35, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "hr_1", "query": "SELECT T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id", "query_toks": ["SELECT", "T1.employee_id", ",", "T4.country_name", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "JOIN", "locations", "AS", "T3", "ON", "T2.location_id", "=", "T3.location_id", "JOIN", "countries", "AS", "T4", "ON", "T3.country_id", "=", "T4.country_id"], "query_toks_no_value": ["select", "t1", ".", "employee_id", ",", "t4", ".", "country_name", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "join", "locations", "as", "t3", "on", "t2", ".", "location_id", "=", "t3", ".", "location_id", "join", "countries", "as", "t4", "on", "t3", ".", "country_id", "=", "t4", ".", "country_id"], "question": "Find employee with ID and name of the country presently where (s)he is working.", "question_toks": ["Find", "employee", "with", "ID", "and", "name", "of", "the", "country", "presently", "where", "(", "s", ")", "he", "is", "working", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "hr_1", "query": "SELECT T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id", "query_toks": ["SELECT", "T1.employee_id", ",", "T4.country_name", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "JOIN", "locations", "AS", "T3", "ON", "T2.location_id", "=", "T3.location_id", "JOIN", "countries", "AS", "T4", "ON", "T3.country_id", "=", "T4.country_id"], "query_toks_no_value": ["select", "t1", ".", "employee_id", ",", "t4", ".", "country_name", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "join", "locations", "as", "t3", "on", "t2", ".", "location_id", "=", "t3", ".", "location_id", "join", "countries", "as", "t4", "on", "t3", ".", "country_id", "=", "t4", ".", "country_id"], "question": "What are all the employee ids and the names of the countries in which they work?", "question_toks": ["What", "are", "all", "the", "employee", "ids", "and", "the", "names", "of", "the", "countries", "in", "which", "they", "work", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "hr_1", "query": "SELECT T2.department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T2.department_name", "query_toks": ["SELECT", "T2.department_name", ",", "COUNT", "(", "*", ")", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "GROUP", "BY", "T2.department_name"], "query_toks_no_value": ["select", "t2", ".", "department_name", ",", "count", "(", "*", ")", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "group", "by", "t2", ".", "department_name"], "question": "display the department name and number of employees in each of the department.", "question_toks": ["display", "the", "department", "name", "and", "number", "of", "employees", "in", "each", "of", "the", "department", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "hr_1", "query": "SELECT T2.department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T2.department_name", "query_toks": ["SELECT", "T2.department_name", ",", "COUNT", "(", "*", ")", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "GROUP", "BY", "T2.department_name"], "query_toks_no_value": ["select", "t2", ".", "department_name", ",", "count", "(", "*", ")", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "group", "by", "t2", ".", "department_name"], "question": "Give the name of each department and the number of employees in each.", "question_toks": ["Give", "the", "name", "of", "each", "department", "and", "the", "number", "of", "employees", "in", "each", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "hr_1", "query": "SELECT job_title ,  AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id GROUP BY T2.job_title", "query_toks": ["SELECT", "job_title", ",", "AVG", "(", "salary", ")", "FROM", "employees", "AS", "T1", "JOIN", "jobs", "AS", "T2", "ON", "T1.job_id", "=", "T2.job_id", "GROUP", "BY", "T2.job_title"], "query_toks_no_value": ["select", "job_title", ",", "avg", "(", "salary", ")", "from", "employees", "as", "t1", "join", "jobs", "as", "t2", "on", "t1", ".", "job_id", "=", "t2", ".", "job_id", "group", "by", "t2", ".", "job_title"], "question": "display job title and average salary of employees.", "question_toks": ["display", "job", "title", "and", "average", "salary", "of", "employees", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 20, false], null], [0, 10, false], null]], "table_units": [["table_unit", 4], ["table_unit", 3]]}, "groupBy": [[0, 11, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [5, [0, [0, 21, false], null]]]], "union": null, "where": []}}, {"db_id": "hr_1", "query": "SELECT job_title ,  AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id GROUP BY T2.job_title", "query_toks": ["SELECT", "job_title", ",", "AVG", "(", "salary", ")", "FROM", "employees", "AS", "T1", "JOIN", "jobs", "AS", "T2", "ON", "T1.job_id", "=", "T2.job_id", "GROUP", "BY", "T2.job_title"], "query_toks_no_value": ["select", "job_title", ",", "avg", "(", "salary", ")", "from", "employees", "as", "t1", "join", "jobs", "as", "t2", "on", "t1", ".", "job_id", "=", "t2", ".", "job_id", "group", "by", "t2", ".", "job_title"], "question": "What is the average salary for each job title?", "question_toks": ["What", "is", "the", "average", "salary", "for", "each", "job", "title", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 20, false], null], [0, 10, false], null]], "table_units": [["table_unit", 4], ["table_unit", 3]]}, "groupBy": [[0, 11, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [5, [0, [0, 21, false], null]]]], "union": null, "where": []}}, {"db_id": "hr_1", "query": "SELECT first_name ,  last_name FROM employees WHERE salary  >  (SELECT salary FROM employees WHERE employee_id = 163 )", "query_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "employees", "WHERE", "salary", ">", "(", "SELECT", "salary", "FROM", "employees", "WHERE", "employee_id", "=", "163", ")"], "query_toks_no_value": ["select", "first_name", ",", "last_name", "from", "employees", "where", "salary", ">", "(", "select", "salary", "from", "employees", "where", "employee_id", "=", "value", ")"], "question": "What is the full name ( first name and last name ) for those employees who gets more salary than the employee whose id is 163?", "question_toks": ["What", "is", "the", "full", "name", "(", "first", "name", "and", "last", "name", ")", "for", "those", "employees", "who", "gets", "more", "salary", "than", "the", "employee", "whose", "id", "is", "163", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 21, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], 163.0, null]]}, null]]}}, {"db_id": "hr_1", "query": "SELECT first_name ,  last_name FROM employees WHERE salary  >  (SELECT salary FROM employees WHERE employee_id = 163 )", "query_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "employees", "WHERE", "salary", ">", "(", "SELECT", "salary", "FROM", "employees", "WHERE", "employee_id", "=", "163", ")"], "query_toks_no_value": ["select", "first_name", ",", "last_name", "from", "employees", "where", "salary", ">", "(", "select", "salary", "from", "employees", "where", "employee_id", "=", "value", ")"], "question": "Provide the full names of employees earning more than the employee with id 163.", "question_toks": ["Provide", "the", "full", "names", "of", "employees", "earning", "more", "than", "the", "employee", "with", "id", "163", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 21, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], 163.0, null]]}, null]]}}, {"db_id": "hr_1", "query": "SELECT MIN(salary) ,  department_id FROM employees GROUP BY department_id", "query_toks": ["SELECT", "MIN", "(", "salary", ")", ",", "department_id", "FROM", "employees", "GROUP", "BY", "department_id"], "query_toks_no_value": ["select", "min", "(", "salary", ")", ",", "department_id", "from", "employees", "group", "by", "department_id"], "question": "return the smallest salary for every departments.", "question_toks": ["return", "the", "smallest", "salary", "for", "every", "departments", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 24, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 21, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": []}}, {"db_id": "hr_1", "query": "SELECT MIN(salary) ,  department_id FROM employees GROUP BY department_id", "query_toks": ["SELECT", "MIN", "(", "salary", ")", ",", "department_id", "FROM", "employees", "GROUP", "BY", "department_id"], "query_toks_no_value": ["select", "min", "(", "salary", ")", ",", "department_id", "from", "employees", "group", "by", "department_id"], "question": "What is the minimum salary in each department?", "question_toks": ["What", "is", "the", "minimum", "salary", "in", "each", "department", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 24, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 21, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": []}}, {"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN (SELECT MIN(salary) FROM employees GROUP BY department_id)", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "department_id", "FROM", "employees", "WHERE", "salary", "IN", "(", "SELECT", "MIN", "(", "salary", ")", "FROM", "employees", "GROUP", "BY", "department_id", ")"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "department_id", "from", "employees", "where", "salary", "in", "(", "select", "min", "(", "salary", ")", "from", "employees", "group", "by", "department_id", ")"], "question": "Find the first name and last name and department id for those employees who earn such amount of salary which is the smallest salary of any of the departments.", "question_toks": ["Find", "the", "first", "name", "and", "last", "name", "and", "department", "id", "for", "those", "employees", "who", "earn", "such", "amount", "of", "salary", "which", "is", "the", "smallest", "salary", "of", "any", "of", "the", "departments", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 8, [0, [0, 21, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 24, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 21, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN (SELECT MIN(salary) FROM employees GROUP BY department_id)", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "department_id", "FROM", "employees", "WHERE", "salary", "IN", "(", "SELECT", "MIN", "(", "salary", ")", "FROM", "employees", "GROUP", "BY", "department_id", ")"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "department_id", "from", "employees", "where", "salary", "in", "(", "select", "min", "(", "salary", ")", "from", "employees", "group", "by", "department_id", ")"], "question": "What are the full names and department ids for the lowest paid employees across all departments.", "question_toks": ["What", "are", "the", "full", "names", "and", "department", "ids", "for", "the", "lowest", "paid", "employees", "across", "all", "departments", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 8, [0, [0, 21, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 24, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 21, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "hr_1", "query": "SELECT employee_id ,  salary FROM employees WHERE manager_id  =  (SELECT employee_id FROM employees WHERE first_name  =  'Payam' )", "query_toks": ["SELECT", "employee_id", ",", "salary", "FROM", "employees", "WHERE", "manager_id", "=", "(", "SELECT", "employee_id", "FROM", "employees", "WHERE", "first_name", "=", "'Payam", "'", ")"], "query_toks_no_value": ["select", "employee_id", ",", "salary", "from", "employees", "where", "manager_id", "=", "(", "select", "employee_id", "from", "employees", "where", "first_name", "=", "value", ")"], "question": "display the employee id and salary of all employees who report to Payam (first name).", "question_toks": ["display", "the", "employee", "id", "and", "salary", "of", "all", "employees", "who", "report", "to", "Payam", "(", "first", "name", ")", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 23, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 15, false], null], "\"Payam\"", null]]}, null]]}}, {"db_id": "hr_1", "query": "SELECT employee_id ,  salary FROM employees WHERE manager_id  =  (SELECT employee_id FROM employees WHERE first_name  =  'Payam' )", "query_toks": ["SELECT", "employee_id", ",", "salary", "FROM", "employees", "WHERE", "manager_id", "=", "(", "SELECT", "employee_id", "FROM", "employees", "WHERE", "first_name", "=", "'Payam", "'", ")"], "query_toks_no_value": ["select", "employee_id", ",", "salary", "from", "employees", "where", "manager_id", "=", "(", "select", "employee_id", "from", "employees", "where", "first_name", "=", "value", ")"], "question": "What are the employee ids of employees who report to Payam, and what are their salaries?", "question_toks": ["What", "are", "the", "employee", "ids", "of", "employees", "who", "report", "to", "Payam", ",", "and", "what", "are", "their", "salaries", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 23, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 15, false], null], "\"Payam\"", null]]}, null]]}}, {"db_id": "hr_1", "query": "SELECT T1.employee_id ,  T2.job_title FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id WHERE T1.department_id = 80", "query_toks": ["SELECT", "T1.employee_id", ",", "T2.job_title", "FROM", "employees", "AS", "T1", "JOIN", "jobs", "AS", "T2", "ON", "T1.job_id", "=", "T2.job_id", "WHERE", "T1.department_id", "=", "80"], "query_toks_no_value": ["select", "t1", ".", "employee_id", ",", "t2", ".", "job_title", "from", "employees", "as", "t1", "join", "jobs", "as", "t2", "on", "t1", ".", "job_id", "=", "t2", ".", "job_id", "where", "t1", ".", "department_id", "=", "value"], "question": "display the employee ID and job name for all those jobs in department 80.", "question_toks": ["display", "the", "employee", "ID", "and", "job", "name", "for", "all", "those", "jobs", "in", "department", "80", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 20, false], null], [0, 10, false], null]], "table_units": [["table_unit", 4], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], 80.0, null]]}}, {"db_id": "hr_1", "query": "SELECT T1.employee_id ,  T2.job_title FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id WHERE T1.department_id = 80", "query_toks": ["SELECT", "T1.employee_id", ",", "T2.job_title", "FROM", "employees", "AS", "T1", "JOIN", "jobs", "AS", "T2", "ON", "T1.job_id", "=", "T2.job_id", "WHERE", "T1.department_id", "=", "80"], "query_toks_no_value": ["select", "t1", ".", "employee_id", ",", "t2", ".", "job_title", "from", "employees", "as", "t1", "join", "jobs", "as", "t2", "on", "t1", ".", "job_id", "=", "t2", ".", "job_id", "where", "t1", ".", "department_id", "=", "value"], "question": "what are the employee ids and job titles for employees in department 80?", "question_toks": ["what", "are", "the", "employee", "ids", "and", "job", "titles", "for", "employees", "in", "department", "80", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 20, false], null], [0, 10, false], null]], "table_units": [["table_unit", 4], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], 80.0, null]]}}, {"db_id": "hr_1", "query": "SELECT T1.first_name ,  T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  'Finance'", "query_toks": ["SELECT", "T1.first_name", ",", "T1.job_id", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "WHERE", "T2.department_name", "=", "'Finance", "'"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "job_id", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "where", "t2", ".", "department_name", "=", "value"], "question": "What is the first name and job id for all employees in the Finance department?", "question_toks": ["What", "is", "the", "first", "name", "and", "job", "id", "for", "all", "employees", "in", "the", "Finance", "department", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 20, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"Finance\"", null]]}}, {"db_id": "hr_1", "query": "SELECT T1.first_name ,  T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  'Finance'", "query_toks": ["SELECT", "T1.first_name", ",", "T1.job_id", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "WHERE", "T2.department_name", "=", "'Finance", "'"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "job_id", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "where", "t2", ".", "department_name", "=", "value"], "question": "Give the first name and job id for all employees in the Finance department.", "question_toks": ["Give", "the", "first", "name", "and", "job", "id", "for", "all", "employees", "in", "the", "Finance", "department", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 20, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"Finance\"", null]]}}, {"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  (SELECT department_id FROM employees WHERE first_name  =  \"Clara\")", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "hire_date", "FROM", "employees", "WHERE", "department_id", "=", "(", "SELECT", "department_id", "FROM", "employees", "WHERE", "first_name", "=", "``", "Clara", "''", ")"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "hire_date", "from", "employees", "where", "department_id", "=", "(", "select", "department_id", "from", "employees", "where", "first_name", "=", "value", ")"], "question": "display the employee name ( first name and last name ) and hire date for all employees in the same department as Clara.", "question_toks": ["display", "the", "employee", "name", "(", "first", "name", "and", "last", "name", ")", "and", "hire", "date", "for", "all", "employees", "in", "the", "same", "department", "as", "Clara", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 15, false], null], "\"Clara\"", null]]}, null]]}}, {"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  (SELECT department_id FROM employees WHERE first_name  =  \"Clara\")", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "hire_date", "FROM", "employees", "WHERE", "department_id", "=", "(", "SELECT", "department_id", "FROM", "employees", "WHERE", "first_name", "=", "``", "Clara", "''", ")"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "hire_date", "from", "employees", "where", "department_id", "=", "(", "select", "department_id", "from", "employees", "where", "first_name", "=", "value", ")"], "question": "What are the full names and hire dates for employees in the same department as someone with the first name Clara?", "question_toks": ["What", "are", "the", "full", "names", "and", "hire", "dates", "for", "employees", "in", "the", "same", "department", "as", "someone", "with", "the", "first", "name", "Clara", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 15, false], null], "\"Clara\"", null]]}, null]]}}, {"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  ( SELECT department_id FROM employees WHERE first_name  =  \"Clara\") AND first_name != \"Clara\"", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "hire_date", "FROM", "employees", "WHERE", "department_id", "=", "(", "SELECT", "department_id", "FROM", "employees", "WHERE", "first_name", "=", "``", "Clara", "''", ")", "AND", "first_name", "!", "=", "``", "Clara", "''"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "hire_date", "from", "employees", "where", "department_id", "=", "(", "select", "department_id", "from", "employees", "where", "first_name", "=", "value", ")", "and", "first_name", "!", "=", "value"], "question": "display the employee name ( first name and last name ) and hire date for all employees in the same department as Clara excluding Clara.", "question_toks": ["display", "the", "employee", "name", "(", "first", "name", "and", "last", "name", ")", "and", "hire", "date", "for", "all", "employees", "in", "the", "same", "department", "as", "Clara", "excluding", "Clara", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 15, false], null], "\"Clara\"", null]]}, null], "and", [false, 7, [0, [0, 15, false], null], "\"Clara\"", null]]}}, {"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  ( SELECT department_id FROM employees WHERE first_name  =  \"Clara\") AND first_name != \"Clara\"", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "hire_date", "FROM", "employees", "WHERE", "department_id", "=", "(", "SELECT", "department_id", "FROM", "employees", "WHERE", "first_name", "=", "``", "Clara", "''", ")", "AND", "first_name", "!", "=", "``", "Clara", "''"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "hire_date", "from", "employees", "where", "department_id", "=", "(", "select", "department_id", "from", "employees", "where", "first_name", "=", "value", ")", "and", "first_name", "!", "=", "value"], "question": "What are the full names and hire dates for employees in the same department as someone with the first name Clara, not including Clara?", "question_toks": ["What", "are", "the", "full", "names", "and", "hire", "dates", "for", "employees", "in", "the", "same", "department", "as", "someone", "with", "the", "first", "name", "Clara", ",", "not", "including", "Clara", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 15, false], null], "\"Clara\"", null]]}, null], "and", [false, 7, [0, [0, 15, false], null], "\"Clara\"", null]]}}, {"db_id": "hr_1", "query": "SELECT employee_id ,  first_name ,  last_name FROM employees WHERE department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%T%' )", "query_toks": ["SELECT", "employee_id", ",", "first_name", ",", "last_name", "FROM", "employees", "WHERE", "department_id", "IN", "(", "SELECT", "department_id", "FROM", "employees", "WHERE", "first_name", "LIKE", "'", "%", "T", "%", "'", ")"], "query_toks_no_value": ["select", "employee_id", ",", "first_name", ",", "last_name", "from", "employees", "where", "department_id", "in", "(", "select", "department_id", "from", "employees", "where", "first_name", "like", "value", ")"], "question": "display the employee number and name( first name and last name ) for all employees who work in a department with any employee whose name contains a \u2019T\u2019.", "question_toks": ["display", "the", "employee", "number", "and", "name", "(", "first", "name", "and", "last", "name", ")", "for", "all", "employees", "who", "work", "in", "a", "department", "with", "any", "employee", "whose", "name", "contains", "a", "\u2019T\u2019", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": [[false, 8, [0, [0, 24, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 15, false], null], "\"%T%\"", null]]}, null]]}}, {"db_id": "hr_1", "query": "SELECT employee_id ,  first_name ,  last_name FROM employees WHERE department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%T%' )", "query_toks": ["SELECT", "employee_id", ",", "first_name", ",", "last_name", "FROM", "employees", "WHERE", "department_id", "IN", "(", "SELECT", "department_id", "FROM", "employees", "WHERE", "first_name", "LIKE", "'", "%", "T", "%", "'", ")"], "query_toks_no_value": ["select", "employee_id", ",", "first_name", ",", "last_name", "from", "employees", "where", "department_id", "in", "(", "select", "department_id", "from", "employees", "where", "first_name", "like", "value", ")"], "question": "What are the ids and full names for employees who work in a department that has someone with a first name that contains the letter T?", "question_toks": ["What", "are", "the", "ids", "and", "full", "names", "for", "employees", "who", "work", "in", "a", "department", "that", "has", "someone", "with", "a", "first", "name", "that", "contains", "the", "letter", "T", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": [[false, 8, [0, [0, 24, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 15, false], null], "\"%T%\"", null]]}, null]]}}, {"db_id": "hr_1", "query": "SELECT employee_id ,  first_name ,  last_name ,  salary FROM employees WHERE salary  >  ( SELECT AVG (salary) FROM employees ) AND department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%J%')", "query_toks": ["SELECT", "employee_id", ",", "first_name", ",", "last_name", ",", "salary", "FROM", "employees", "WHERE", "salary", ">", "(", "SELECT", "AVG", "(", "salary", ")", "FROM", "employees", ")", "AND", "department_id", "IN", "(", "SELECT", "department_id", "FROM", "employees", "WHERE", "first_name", "LIKE", "'", "%", "J", "%", "'", ")"], "query_toks_no_value": ["select", "employee_id", ",", "first_name", ",", "last_name", ",", "salary", "from", "employees", "where", "salary", ">", "(", "select", "avg", "(", "salary", ")", "from", "employees", ")", "and", "department_id", "in", "(", "select", "department_id", "from", "employees", "where", "first_name", "like", "value", ")"], "question": "display the employee number, name( first name and last name ), and salary for all employees who earn more than the average salary and who work in a department with any employee with a 'J' in their first name.", "question_toks": ["display", "the", "employee", "number", ",", "name", "(", "first", "name", "and", "last", "name", ")", ",", "and", "salary", "for", "all", "employees", "who", "earn", "more", "than", "the", "average", "salary", "and", "who", "work", "in", "a", "department", "with", "any", "employee", "with", "a", "'J", "'", "in", "their", "first", "name", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 21, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 21, false], null]]]], "union": null, "where": []}, null], "and", [false, 8, [0, [0, 24, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 15, false], null], "\"%J%\"", null]]}, null]]}}, {"db_id": "hr_1", "query": "SELECT employee_id ,  first_name ,  last_name ,  salary FROM employees WHERE salary  >  ( SELECT AVG (salary) FROM employees ) AND department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%J%')", "query_toks": ["SELECT", "employee_id", ",", "first_name", ",", "last_name", ",", "salary", "FROM", "employees", "WHERE", "salary", ">", "(", "SELECT", "AVG", "(", "salary", ")", "FROM", "employees", ")", "AND", "department_id", "IN", "(", "SELECT", "department_id", "FROM", "employees", "WHERE", "first_name", "LIKE", "'", "%", "J", "%", "'", ")"], "query_toks_no_value": ["select", "employee_id", ",", "first_name", ",", "last_name", ",", "salary", "from", "employees", "where", "salary", ">", "(", "select", "avg", "(", "salary", ")", "from", "employees", ")", "and", "department_id", "in", "(", "select", "department_id", "from", "employees", "where", "first_name", "like", "value", ")"], "question": "What are the ids, full names, and salaries for employees making more than average and who work in a department with employees who have the letter J in their first name?", "question_toks": ["What", "are", "the", "ids", ",", "full", "names", ",", "and", "salaries", "for", "employees", "making", "more", "than", "average", "and", "who", "work", "in", "a", "department", "with", "employees", "who", "have", "the", "letter", "J", "in", "their", "first", "name", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 21, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 21, false], null]]]], "union": null, "where": []}, null], "and", [false, 8, [0, [0, 24, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 15, false], null], "\"%J%\"", null]]}, null]]}}, {"db_id": "hr_1", "query": "SELECT employee_id ,  job_id FROM employees WHERE salary  <  ( SELECT min(salary) FROM employees WHERE job_id  =  'MK_MAN' )", "query_toks": ["SELECT", "employee_id", ",", "job_id", "FROM", "employees", "WHERE", "salary", "<", "(", "SELECT", "min", "(", "salary", ")", "FROM", "employees", "WHERE", "job_id", "=", "'MK_MAN", "'", ")"], "query_toks_no_value": ["select", "employee_id", ",", "job_id", "from", "employees", "where", "salary", "<", "(", "select", "min", "(", "salary", ")", "from", "employees", "where", "job_id", "=", "value", ")"], "question": "display the employee number and job id for all employees whose salary is smaller than any salary of those employees whose job title is MK_MAN.", "question_toks": ["display", "the", "employee", "number", "and", "job", "id", "for", "all", "employees", "whose", "salary", "is", "smaller", "than", "any", "salary", "of", "those", "employees", "whose", "job", "title", "is", "MK_MAN", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 20, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 21, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 20, false], null], "\"MK_MAN\"", null]]}, null]]}}, {"db_id": "hr_1", "query": "SELECT employee_id ,  job_id FROM employees WHERE salary  <  ( SELECT min(salary) FROM employees WHERE job_id  =  'MK_MAN' )", "query_toks": ["SELECT", "employee_id", ",", "job_id", "FROM", "employees", "WHERE", "salary", "<", "(", "SELECT", "min", "(", "salary", ")", "FROM", "employees", "WHERE", "job_id", "=", "'MK_MAN", "'", ")"], "query_toks_no_value": ["select", "employee_id", ",", "job_id", "from", "employees", "where", "salary", "<", "(", "select", "min", "(", "salary", ")", "from", "employees", "where", "job_id", "=", "value", ")"], "question": "What are the employee ids and job ids for employees who make less than the lowest earning employee with title MK_MAN?", "question_toks": ["What", "are", "the", "employee", "ids", "and", "job", "ids", "for", "employees", "who", "make", "less", "than", "the", "lowest", "earning", "employee", "with", "title", "MK_MAN", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 20, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 21, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 20, false], null], "\"MK_MAN\"", null]]}, null]]}}, {"db_id": "hr_1", "query": "SELECT employee_id ,  first_name ,  last_name ,  job_id FROM employees WHERE salary  >  ( SELECT max(salary) FROM employees WHERE job_id  =  'PU_MAN' )", "query_toks": ["SELECT", "employee_id", ",", "first_name", ",", "last_name", ",", "job_id", "FROM", "employees", "WHERE", "salary", ">", "(", "SELECT", "max", "(", "salary", ")", "FROM", "employees", "WHERE", "job_id", "=", "'PU_MAN", "'", ")"], "query_toks_no_value": ["select", "employee_id", ",", "first_name", ",", "last_name", ",", "job_id", "from", "employees", "where", "salary", ">", "(", "select", "max", "(", "salary", ")", "from", "employees", "where", "job_id", "=", "value", ")"], "question": "display the employee number, name( first name and last name ) and job title for all employees whose salary is more than any salary of those employees whose job title is PU_MAN.", "question_toks": ["display", "the", "employee", "number", ",", "name", "(", "first", "name", "and", "last", "name", ")", "and", "job", "title", "for", "all", "employees", "whose", "salary", "is", "more", "than", "any", "salary", "of", "those", "employees", "whose", "job", "title", "is", "PU_MAN", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 20, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 21, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 20, false], null], "\"PU_MAN\"", null]]}, null]]}}, {"db_id": "hr_1", "query": "SELECT employee_id ,  first_name ,  last_name ,  job_id FROM employees WHERE salary  >  ( SELECT max(salary) FROM employees WHERE job_id  =  'PU_MAN' )", "query_toks": ["SELECT", "employee_id", ",", "first_name", ",", "last_name", ",", "job_id", "FROM", "employees", "WHERE", "salary", ">", "(", "SELECT", "max", "(", "salary", ")", "FROM", "employees", "WHERE", "job_id", "=", "'PU_MAN", "'", ")"], "query_toks_no_value": ["select", "employee_id", ",", "first_name", ",", "last_name", ",", "job_id", "from", "employees", "where", "salary", ">", "(", "select", "max", "(", "salary", ")", "from", "employees", "where", "job_id", "=", "value", ")"], "question": "What are the employee ids, full names, and job ids for employees who make more than the highest earning employee with title PU_MAN?", "question_toks": ["What", "are", "the", "employee", "ids", ",", "full", "names", ",", "and", "job", "ids", "for", "employees", "who", "make", "more", "than", "the", "highest", "earning", "employee", "with", "title", "PU_MAN", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 20, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 21, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 20, false], null], "\"PU_MAN\"", null]]}, null]]}}, {"db_id": "hr_1", "query": "SELECT department_id ,  SUM(salary) FROM employees GROUP BY department_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "department_id", ",", "SUM", "(", "salary", ")", "FROM", "employees", "GROUP", "BY", "department_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "department_id", ",", "sum", "(", "salary", ")", "from", "employees", "group", "by", "department_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "display the department id and the total salary for those departments which contains at least two employees.", "question_toks": ["display", "the", "department", "id", "and", "the", "total", "salary", "for", "those", "departments", "which", "contains", "at", "least", "two", "employees", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 24, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 24, false], null]], [4, [0, [0, 21, false], null]]]], "union": null, "where": []}}, {"db_id": "hr_1", "query": "SELECT department_id ,  SUM(salary) FROM employees GROUP BY department_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "department_id", ",", "SUM", "(", "salary", ")", "FROM", "employees", "GROUP", "BY", "department_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "department_id", ",", "sum", "(", "salary", ")", "from", "employees", "group", "by", "department_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are total salaries and department id for each department that has more than 2 employees?", "question_toks": ["What", "are", "total", "salaries", "and", "department", "id", "for", "each", "department", "that", "has", "more", "than", "2", "employees", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 24, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 24, false], null]], [4, [0, [0, 21, false], null]]]], "union": null, "where": []}}, {"db_id": "hr_1", "query": "SELECT first_name ,   last_name ,   salary ,  department_id ,  MAX(salary) FROM employees GROUP BY department_id", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "salary", ",", "department_id", ",", "MAX", "(", "salary", ")", "FROM", "employees", "GROUP", "BY", "department_id"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "salary", ",", "department_id", ",", "max", "(", "salary", ")", "from", "employees", "group", "by", "department_id"], "question": "display the department ID, full name (first and last name), salary for those employees who is highest salary in every department.", "question_toks": ["display", "the", "department", "ID", ",", "full", "name", "(", "first", "and", "last", "name", ")", ",", "salary", "for", "those", "employees", "who", "is", "highest", "salary", "in", "every", "department", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 24, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 21, false], null]], [0, [0, [0, 24, false], null]], [1, [0, [0, 21, false], null]]]], "union": null, "where": []}}, {"db_id": "hr_1", "query": "SELECT first_name ,   last_name ,   salary ,  department_id ,  MAX(salary) FROM employees GROUP BY department_id", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "salary", ",", "department_id", ",", "MAX", "(", "salary", ")", "FROM", "employees", "GROUP", "BY", "department_id"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "salary", ",", "department_id", ",", "max", "(", "salary", ")", "from", "employees", "group", "by", "department_id"], "question": "What are the department ids, full names, and salaries for employees who make the most in their departments?", "question_toks": ["What", "are", "the", "department", "ids", ",", "full", "names", ",", "and", "salaries", "for", "employees", "who", "make", "the", "most", "in", "their", "departments", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 24, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 21, false], null]], [0, [0, [0, 24, false], null]], [1, [0, [0, 21, false], null]]]], "union": null, "where": []}}, {"db_id": "hr_1", "query": "SELECT T1.first_name ,  T1.last_name ,  T2.department_name ,  T3.city ,  T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", ",", "T2.department_name", ",", "T3.city", ",", "T3.state_province", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "JOIN", "locations", "AS", "T3", "ON", "T2.location_id", "=", "T3.location_id"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", ",", "t2", ".", "department_name", ",", "t3", ".", "city", ",", "t3", ".", "state_province", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "join", "locations", "as", "t3", "on", "t2", ".", "location_id", "=", "t3", ".", "location_id"], "question": "display the first and last name, department, city, and state province for each employee.", "question_toks": ["display", "the", "first", "and", "last", "name", ",", "department", ",", "city", ",", "and", "state", "province", "for", "each", "employee", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]]]], "union": null, "where": []}}, {"db_id": "hr_1", "query": "SELECT T1.first_name ,  T1.last_name ,  T2.department_name ,  T3.city ,  T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", ",", "T2.department_name", ",", "T3.city", ",", "T3.state_province", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "JOIN", "locations", "AS", "T3", "ON", "T2.location_id", "=", "T3.location_id"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", ",", "t2", ".", "department_name", ",", "t3", ".", "city", ",", "t3", ".", "state_province", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "join", "locations", "as", "t3", "on", "t2", ".", "location_id", "=", "t3", ".", "location_id"], "question": "What are the full names, departments, cities, and state provinces for each employee?", "question_toks": ["What", "are", "the", "full", "names", ",", "departments", ",", "cities", ",", "and", "state", "provinces", "for", "each", "employee", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]]]], "union": null, "where": []}}, {"db_id": "hr_1", "query": "SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%'", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", ",", "T3.city", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "JOIN", "locations", "AS", "T3", "ON", "T2.location_id", "=", "T3.location_id", "WHERE", "T1.first_name", "LIKE", "'", "%", "z", "%", "'"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", ",", "t3", ".", "city", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "join", "locations", "as", "t3", "on", "t2", ".", "location_id", "=", "t3", ".", "location_id", "where", "t1", ".", "first_name", "like", "value"], "question": "display those employees who contain a letter z to their first name and also display their last name, city.", "question_toks": ["display", "those", "employees", "who", "contain", "a", "letter", "z", "to", "their", "first", "name", "and", "also", "display", "their", "last", "name", ",", "city", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 33, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 15, false], null], "\"%z%\"", null]]}}, {"db_id": "hr_1", "query": "SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%'", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", ",", "T3.city", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "JOIN", "locations", "AS", "T3", "ON", "T2.location_id", "=", "T3.location_id", "WHERE", "T1.first_name", "LIKE", "'", "%", "z", "%", "'"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", ",", "t3", ".", "city", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "join", "locations", "as", "t3", "on", "t2", ".", "location_id", "=", "t3", ".", "location_id", "where", "t1", ".", "first_name", "like", "value"], "question": "What are the full names and cities of employees who have the letter Z in their first names?", "question_toks": ["What", "are", "the", "full", "names", "and", "cities", "of", "employees", "who", "have", "the", "letter", "Z", "in", "their", "first", "names", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 33, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 15, false], null], "\"%z%\"", null]]}}, {"db_id": "hr_1", "query": "SELECT T1.department_name ,  T2.city ,  T2.state_province FROM departments AS T1 JOIN locations AS T2 ON T2.location_id  =  T1.location_id", "query_toks": ["SELECT", "T1.department_name", ",", "T2.city", ",", "T2.state_province", "FROM", "departments", "AS", "T1", "JOIN", "locations", "AS", "T2", "ON", "T2.location_id", "=", "T1.location_id"], "query_toks_no_value": ["select", "t1", ".", "department_name", ",", "t2", ".", "city", ",", "t2", ".", "state_province", "from", "departments", "as", "t1", "join", "locations", "as", "t2", "on", "t2", ".", "location_id", "=", "t1", ".", "location_id"], "question": "display the department name, city, and state province for each department.", "question_toks": ["display", "the", "department", "name", ",", "city", ",", "and", "state", "province", "for", "each", "department", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 30, false], null], [0, 9, false], null]], "table_units": [["table_unit", 2], ["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]]]], "union": null, "where": []}}, {"db_id": "hr_1", "query": "SELECT T1.department_name ,  T2.city ,  T2.state_province FROM departments AS T1 JOIN locations AS T2 ON T2.location_id  =  T1.location_id", "query_toks": ["SELECT", "T1.department_name", ",", "T2.city", ",", "T2.state_province", "FROM", "departments", "AS", "T1", "JOIN", "locations", "AS", "T2", "ON", "T2.location_id", "=", "T1.location_id"], "query_toks_no_value": ["select", "t1", ".", "department_name", ",", "t2", ".", "city", ",", "t2", ".", "state_province", "from", "departments", "as", "t1", "join", "locations", "as", "t2", "on", "t2", ".", "location_id", "=", "t1", ".", "location_id"], "question": "What are the department names, cities, and state provinces for each department?", "question_toks": ["What", "are", "the", "department", "names", ",", "cities", ",", "and", "state", "provinces", "for", "each", "department", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 30, false], null], [0, 9, false], null]], "table_units": [["table_unit", 2], ["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]]]], "union": null, "where": []}}, {"db_id": "hr_1", "query": "SELECT T1.first_name ,  T1.last_name , T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", ",", "T1.employee_id", ",", "T4.country_name", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "JOIN", "locations", "AS", "T3", "ON", "T2.location_id", "=", "T3.location_id", "JOIN", "countries", "AS", "T4", "ON", "T3.country_id", "=", "T4.country_id"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", ",", "t1", ".", "employee_id", ",", "t4", ".", "country_name", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "join", "locations", "as", "t3", "on", "t2", ".", "location_id", "=", "t3", ".", "location_id", "join", "countries", "as", "t4", "on", "t3", ".", "country_id", "=", "t4", ".", "country_id"], "question": "display the full name (first and last name ) of employee with ID and name of the country presently where (s)he is working.", "question_toks": ["display", "the", "full", "name", "(", "first", "and", "last", "name", ")", "of", "employee", "with", "ID", "and", "name", "of", "the", "country", "presently", "where", "(", "s", ")", "he", "is", "working", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "hr_1", "query": "SELECT T1.first_name ,  T1.last_name , T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", ",", "T1.employee_id", ",", "T4.country_name", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "JOIN", "locations", "AS", "T3", "ON", "T2.location_id", "=", "T3.location_id", "JOIN", "countries", "AS", "T4", "ON", "T3.country_id", "=", "T4.country_id"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", ",", "t1", ".", "employee_id", ",", "t4", ".", "country_name", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "join", "locations", "as", "t3", "on", "t2", ".", "location_id", "=", "t3", ".", "location_id", "join", "countries", "as", "t4", "on", "t3", ".", "country_id", "=", "t4", ".", "country_id"], "question": "What the full names, ids of each employee and the name of the country they are in?", "question_toks": ["What", "the", "full", "names", ",", "ids", "of", "each", "employee", "and", "the", "name", "of", "the", "country", "they", "are", "in", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "hr_1", "query": "SELECT department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY department_name", "query_toks": ["SELECT", "department_name", ",", "COUNT", "(", "*", ")", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "GROUP", "BY", "department_name"], "query_toks_no_value": ["select", "department_name", ",", "count", "(", "*", ")", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "group", "by", "department_name"], "question": "display the department name and number of employees in each of the department.", "question_toks": ["display", "the", "department", "name", "and", "number", "of", "employees", "in", "each", "of", "the", "department", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "hr_1", "query": "SELECT department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY department_name", "query_toks": ["SELECT", "department_name", ",", "COUNT", "(", "*", ")", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "GROUP", "BY", "department_name"], "query_toks_no_value": ["select", "department_name", ",", "count", "(", "*", ")", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "group", "by", "department_name"], "question": "What are the department names and how many employees work in each of them?", "question_toks": ["What", "are", "the", "department", "names", "and", "how", "many", "employees", "work", "in", "each", "of", "them", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN  locations AS T3 ON T2.location_id  =  T3.location_id WHERE  T3.city  =  'London'", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "salary", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "JOIN", "locations", "AS", "T3", "ON", "T2.location_id", "=", "T3.location_id", "WHERE", "T3.city", "=", "'London", "'"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "salary", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "join", "locations", "as", "t3", "on", "t2", ".", "location_id", "=", "t3", ".", "location_id", "where", "t3", ".", "city", "=", "value"], "question": "display the full name (first and last name), and salary of those employees who working in any department located in London.", "question_toks": ["display", "the", "full", "name", "(", "first", "and", "last", "name", ")", ",", "and", "salary", "of", "those", "employees", "who", "working", "in", "any", "department", "located", "in", "London", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 33, false], null], "\"London\"", null]]}}, {"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN  locations AS T3 ON T2.location_id  =  T3.location_id WHERE  T3.city  =  'London'", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "salary", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "JOIN", "locations", "AS", "T3", "ON", "T2.location_id", "=", "T3.location_id", "WHERE", "T3.city", "=", "'London", "'"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "salary", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "join", "locations", "as", "t3", "on", "t2", ".", "location_id", "=", "t3", ".", "location_id", "where", "t3", ".", "city", "=", "value"], "question": "What are full names and salaries of employees working in the city of London?", "question_toks": ["What", "are", "full", "names", "and", "salaries", "of", "employees", "working", "in", "the", "city", "of", "London", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 33, false], null], "\"London\"", null]]}}, {"db_id": "music_1", "query": "SELECT song_name ,  releasedate FROM song ORDER BY releasedate DESC LIMIT 1", "query_toks": ["SELECT", "song_name", ",", "releasedate", "FROM", "song", "ORDER", "BY", "releasedate", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "song_name", ",", "releasedate", "from", "song", "order", "by", "releasedate", "desc", "limit", "value"], "question": "What is the name of the song that was released in the most recent year?", "question_toks": ["What", "is", "the", "name", "of", "the", "song", "that", "was", "released", "in", "the", "most", "recent", "year", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 20, false], null]]], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 20, false], null]]]], "union": null, "where": []}}, {"db_id": "music_1", "query": "SELECT song_name ,  releasedate FROM song ORDER BY releasedate DESC LIMIT 1", "query_toks": ["SELECT", "song_name", ",", "releasedate", "FROM", "song", "ORDER", "BY", "releasedate", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "song_name", ",", "releasedate", "from", "song", "order", "by", "releasedate", "desc", "limit", "value"], "question": "What is the name of the song that was released most recently?", "question_toks": ["What", "is", "the", "name", "of", "the", "song", "that", "was", "released", "most", "recently", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 20, false], null]]], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 20, false], null]]]], "union": null, "where": []}}, {"db_id": "music_1", "query": "SELECT DISTINCT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.rating  >  9", "query_toks": ["SELECT", "DISTINCT", "T1.artist_name", ",", "T1.country", "FROM", "artist", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.artist_name", "=", "T2.artist_name", "WHERE", "T2.rating", ">", "9"], "query_toks_no_value": ["select", "distinct", "t1", ".", "artist_name", ",", "t1", ".", "country", "from", "artist", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "artist_name", "=", "t2", ".", "artist_name", "where", "t2", ".", "rating", ">", "value"], "question": "List the name and country of origin for all singers who have produced songs with rating above 9.", "question_toks": ["List", "the", "name", "and", "country", "of", "origin", "for", "all", "singers", "who", "have", "produced", "songs", "with", "rating", "above", "9", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 14, false], null]], "table_units": [["table_unit", 1], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 18, false], null], 9.0, null]]}}, {"db_id": "music_1", "query": "SELECT DISTINCT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.rating  >  9", "query_toks": ["SELECT", "DISTINCT", "T1.artist_name", ",", "T1.country", "FROM", "artist", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.artist_name", "=", "T2.artist_name", "WHERE", "T2.rating", ">", "9"], "query_toks_no_value": ["select", "distinct", "t1", ".", "artist_name", ",", "t1", ".", "country", "from", "artist", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "artist_name", "=", "t2", ".", "artist_name", "where", "t2", ".", "rating", ">", "value"], "question": "What are the different names and countries of origins for all artists whose song ratings are above 9?", "question_toks": ["What", "are", "the", "different", "names", "and", "countries", "of", "origins", "for", "all", "artists", "whose", "song", "ratings", "are", "above", "9", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 14, false], null]], "table_units": [["table_unit", 1], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 18, false], null], 9.0, null]]}}, {"db_id": "music_1", "query": "SELECT DISTINCT T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.resolution  <  800", "query_toks": ["SELECT", "DISTINCT", "T1.file_size", ",", "T1.formats", "FROM", "files", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.f_id", "=", "T2.f_id", "WHERE", "T2.resolution", "<", "800"], "query_toks_no_value": ["select", "distinct", "t1", ".", "file_size", ",", "t1", ".", "formats", "from", "files", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "f_id", "=", "t2", ".", "f_id", "where", "t2", ".", "resolution", "<", "value"], "question": "List the file size and format for all songs that have resolution lower than 800.", "question_toks": ["List", "the", "file", "size", "and", "format", "for", "all", "songs", "that", "have", "resolution", "lower", "than", "800", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 16, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 21, false], null], 800.0, null]]}}, {"db_id": "music_1", "query": "SELECT DISTINCT T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.resolution  <  800", "query_toks": ["SELECT", "DISTINCT", "T1.file_size", ",", "T1.formats", "FROM", "files", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.f_id", "=", "T2.f_id", "WHERE", "T2.resolution", "<", "800"], "query_toks_no_value": ["select", "distinct", "t1", ".", "file_size", ",", "t1", ".", "formats", "from", "files", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "f_id", "=", "t2", ".", "f_id", "where", "t2", ".", "resolution", "<", "value"], "question": "What are the file sizes and formats for all songs with a resolution lower than 800?", "question_toks": ["What", "are", "the", "file", "sizes", "and", "formats", "for", "all", "songs", "with", "a", "resolution", "lower", "than", "800", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 16, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 21, false], null], 800.0, null]]}}, {"db_id": "music_1", "query": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.rating DESC LIMIT 3", "query_toks": ["SELECT", "T1.artist_name", ",", "T1.country", "FROM", "artist", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.artist_name", "=", "T2.artist_name", "ORDER", "BY", "T2.rating", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "t1", ".", "artist_name", ",", "t1", ".", "country", "from", "artist", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "artist_name", "=", "t2", ".", "artist_name", "order", "by", "t2", ".", "rating", "desc", "limit", "value"], "question": "What are the names and countries of origin for the artists who produced the top three highly rated songs.", "question_toks": ["What", "are", "the", "names", "and", "countries", "of", "origin", "for", "the", "artists", "who", "produced", "the", "top", "three", "highly", "rated", "songs", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 14, false], null]], "table_units": [["table_unit", 1], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": 3, "orderBy": ["desc", [[0, [0, 18, false], null]]], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "music_1", "query": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.rating DESC LIMIT 3", "query_toks": ["SELECT", "T1.artist_name", ",", "T1.country", "FROM", "artist", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.artist_name", "=", "T2.artist_name", "ORDER", "BY", "T2.rating", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "t1", ".", "artist_name", ",", "t1", ".", "country", "from", "artist", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "artist_name", "=", "t2", ".", "artist_name", "order", "by", "t2", ".", "rating", "desc", "limit", "value"], "question": "What are the names of the singers who sang the top 3 most highly rated songs and what countries do they hail from?", "question_toks": ["What", "are", "the", "names", "of", "the", "singers", "who", "sang", "the", "top", "3", "most", "highly", "rated", "songs", "and", "what", "countries", "do", "they", "hail", "from", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 14, false], null]], "table_units": [["table_unit", 1], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": 3, "orderBy": ["desc", [[0, [0, 18, false], null]]], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "music_1", "query": "SELECT count(*) ,  gender FROM artist GROUP BY gender", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "gender", "FROM", "artist", "GROUP", "BY", "gender"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "gender", "from", "artist", "group", "by", "gender"], "question": "What is the number of artists for each gender?", "question_toks": ["What", "is", "the", "number", "of", "artists", "for", "each", "gender", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "music_1", "query": "SELECT count(*) ,  gender FROM artist GROUP BY gender", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "gender", "FROM", "artist", "GROUP", "BY", "gender"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "gender", "from", "artist", "group", "by", "gender"], "question": "How many artists are male and how many are female?", "question_toks": ["How", "many", "artists", "are", "male", "and", "how", "many", "are", "female", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "music_1", "query": "SELECT avg(rating) ,  languages FROM song GROUP BY languages", "query_toks": ["SELECT", "avg", "(", "rating", ")", ",", "languages", "FROM", "song", "GROUP", "BY", "languages"], "query_toks_no_value": ["select", "avg", "(", "rating", ")", ",", "languages", "from", "song", "group", "by", "languages"], "question": "What is the average rating of songs for each language?", "question_toks": ["What", "is", "the", "average", "rating", "of", "songs", "for", "each", "language", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 18, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": []}}, {"db_id": "music_1", "query": "SELECT avg(rating) ,  languages FROM song GROUP BY languages", "query_toks": ["SELECT", "avg", "(", "rating", ")", ",", "languages", "FROM", "song", "GROUP", "BY", "languages"], "query_toks_no_value": ["select", "avg", "(", "rating", ")", ",", "languages", "from", "song", "group", "by", "languages"], "question": "What is the average song rating for each language?", "question_toks": ["What", "is", "the", "average", "song", "rating", "for", "each", "language", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 18, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": []}}, {"db_id": "music_1", "query": "SELECT T1.gender ,  T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.resolution LIMIT 1", "query_toks": ["SELECT", "T1.gender", ",", "T1.artist_name", "FROM", "artist", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.artist_name", "=", "T2.artist_name", "ORDER", "BY", "T2.resolution", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "gender", ",", "t1", ".", "artist_name", "from", "artist", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "artist_name", "=", "t2", ".", "artist_name", "order", "by", "t2", ".", "resolution", "limit", "value"], "question": "Return the gender and name of artist who produced the song with the lowest resolution.", "question_toks": ["Return", "the", "gender", "and", "name", "of", "artist", "who", "produced", "the", "song", "with", "the", "lowest", "resolution", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 14, false], null]], "table_units": [["table_unit", 1], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 21, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "music_1", "query": "SELECT T1.gender ,  T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.resolution LIMIT 1", "query_toks": ["SELECT", "T1.gender", ",", "T1.artist_name", "FROM", "artist", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.artist_name", "=", "T2.artist_name", "ORDER", "BY", "T2.resolution", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "gender", ",", "t1", ".", "artist_name", "from", "artist", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "artist_name", "=", "t2", ".", "artist_name", "order", "by", "t2", ".", "resolution", "limit", "value"], "question": "What is the gender and name of the artist who sang the song with the smallest resolution?", "question_toks": ["What", "is", "the", "gender", "and", "name", "of", "the", "artist", "who", "sang", "the", "song", "with", "the", "smallest", "resolution", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 14, false], null]], "table_units": [["table_unit", 1], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 21, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "music_1", "query": "SELECT count(*) ,  formats FROM files GROUP BY formats", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "formats", "FROM", "files", "GROUP", "BY", "formats"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "formats", "from", "files", "group", "by", "formats"], "question": "For each file format, return the number of artists who released songs in that format.", "question_toks": ["For", "each", "file", "format", ",", "return", "the", "number", "of", "artists", "who", "released", "songs", "in", "that", "format", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "music_1", "query": "SELECT count(*) ,  formats FROM files GROUP BY formats", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "formats", "FROM", "files", "GROUP", "BY", "formats"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "formats", "from", "files", "group", "by", "formats"], "question": "How many songs were released for each format?", "question_toks": ["How", "many", "songs", "were", "released", "for", "each", "format", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "music_1", "query": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.song_name LIKE \"%love%\"", "query_toks": ["SELECT", "T1.artist_name", ",", "T1.country", "FROM", "artist", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.artist_name", "=", "T2.artist_name", "WHERE", "T2.song_name", "LIKE", "``", "%", "love", "%", "''"], "query_toks_no_value": ["select", "t1", ".", "artist_name", ",", "t1", ".", "country", "from", "artist", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "artist_name", "=", "t2", ".", "artist_name", "where", "t2", ".", "song_name", "like", "value"], "question": "What is the name and country of origin of the artist who released a song that has \"love\" in its title?", "question_toks": ["What", "is", "the", "name", "and", "country", "of", "origin", "of", "the", "artist", "who", "released", "a", "song", "that", "has", "``", "love", "''", "in", "its", "title", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 14, false], null]], "table_units": [["table_unit", 1], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 13, false], null], "\"%love%\"", null]]}}, {"db_id": "music_1", "query": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.song_name LIKE \"%love%\"", "query_toks": ["SELECT", "T1.artist_name", ",", "T1.country", "FROM", "artist", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.artist_name", "=", "T2.artist_name", "WHERE", "T2.song_name", "LIKE", "``", "%", "love", "%", "''"], "query_toks_no_value": ["select", "t1", ".", "artist_name", ",", "t1", ".", "country", "from", "artist", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "artist_name", "=", "t2", ".", "artist_name", "where", "t2", ".", "song_name", "like", "value"], "question": "What are the names of the artists who released a song that has the word love in its title, and where are the artists from?", "question_toks": ["What", "are", "the", "names", "of", "the", "artists", "who", "released", "a", "song", "that", "has", "the", "word", "love", "in", "its", "title", ",", "and", "where", "are", "the", "artists", "from", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 14, false], null]], "table_units": [["table_unit", 1], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 13, false], null], "\"%love%\"", null]]}}, {"db_id": "music_1", "query": "SELECT T1.artist_name ,  T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.releasedate LIKE \"%Mar%\"", "query_toks": ["SELECT", "T1.artist_name", ",", "T1.gender", "FROM", "artist", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.artist_name", "=", "T2.artist_name", "WHERE", "T2.releasedate", "LIKE", "``", "%", "Mar", "%", "''"], "query_toks_no_value": ["select", "t1", ".", "artist_name", ",", "t1", ".", "gender", "from", "artist", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "artist_name", "=", "t2", ".", "artist_name", "where", "t2", ".", "releasedate", "like", "value"], "question": "List the name and gender for all artists who released songs in March.", "question_toks": ["List", "the", "name", "and", "gender", "for", "all", "artists", "who", "released", "songs", "in", "March", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 14, false], null]], "table_units": [["table_unit", 1], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 20, false], null], "\"%Mar%\"", null]]}}, {"db_id": "music_1", "query": "SELECT T1.artist_name ,  T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.releasedate LIKE \"%Mar%\"", "query_toks": ["SELECT", "T1.artist_name", ",", "T1.gender", "FROM", "artist", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.artist_name", "=", "T2.artist_name", "WHERE", "T2.releasedate", "LIKE", "``", "%", "Mar", "%", "''"], "query_toks_no_value": ["select", "t1", ".", "artist_name", ",", "t1", ".", "gender", "from", "artist", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "artist_name", "=", "t2", ".", "artist_name", "where", "t2", ".", "releasedate", "like", "value"], "question": "What are the names and genders of all artists who released songs in the month of March?", "question_toks": ["What", "are", "the", "names", "and", "genders", "of", "all", "artists", "who", "released", "songs", "in", "the", "month", "of", "March", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 14, false], null]], "table_units": [["table_unit", 1], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 20, false], null], "\"%Mar%\"", null]]}}, {"db_id": "music_1", "query": "SELECT g_name ,  rating FROM genre ORDER BY g_name", "query_toks": ["SELECT", "g_name", ",", "rating", "FROM", "genre", "ORDER", "BY", "g_name"], "query_toks_no_value": ["select", "g_name", ",", "rating", "from", "genre", "order", "by", "g_name"], "question": "List the names of all genres in alphabetical oder, together with its ratings.", "question_toks": ["List", "the", "names", "of", "all", "genres", "in", "alphabetical", "oder", ",", "together", "with", "its", "ratings", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 1, false], null]]], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "music_1", "query": "SELECT g_name ,  rating FROM genre ORDER BY g_name", "query_toks": ["SELECT", "g_name", ",", "rating", "FROM", "genre", "ORDER", "BY", "g_name"], "query_toks_no_value": ["select", "g_name", ",", "rating", "from", "genre", "order", "by", "g_name"], "question": "What are the names of all genres in alphabetical order, combined with its ratings?", "question_toks": ["What", "are", "the", "names", "of", "all", "genres", "in", "alphabetical", "order", ",", "combined", "with", "its", "ratings", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 1, false], null]]], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "music_1", "query": "SELECT avg(rating) ,  avg(resolution) FROM song WHERE languages  =  \"bangla\"", "query_toks": ["SELECT", "avg", "(", "rating", ")", ",", "avg", "(", "resolution", ")", "FROM", "song", "WHERE", "languages", "=", "``", "bangla", "''"], "query_toks_no_value": ["select", "avg", "(", "rating", ")", ",", "avg", "(", "resolution", ")", "from", "song", "where", "languages", "=", "value"], "question": "What are the average rating and resolution of songs that are in Bangla?", "question_toks": ["What", "are", "the", "average", "rating", "and", "resolution", "of", "songs", "that", "are", "in", "Bangla", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 18, false], null]], [5, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 19, false], null], "\"bangla\"", null]]}}, {"db_id": "music_1", "query": "SELECT avg(rating) ,  avg(resolution) FROM song WHERE languages  =  \"bangla\"", "query_toks": ["SELECT", "avg", "(", "rating", ")", ",", "avg", "(", "resolution", ")", "FROM", "song", "WHERE", "languages", "=", "``", "bangla", "''"], "query_toks_no_value": ["select", "avg", "(", "rating", ")", ",", "avg", "(", "resolution", ")", "from", "song", "where", "languages", "=", "value"], "question": "What is the average rating and resolution of all bangla songs?", "question_toks": ["What", "is", "the", "average", "rating", "and", "resolution", "of", "all", "bangla", "songs", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 18, false], null]], [5, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 19, false], null], "\"bangla\"", null]]}}, {"db_id": "music_1", "query": "SELECT max(T2.resolution) ,  min(T2.resolution) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE \"3:%\"", "query_toks": ["SELECT", "max", "(", "T2.resolution", ")", ",", "min", "(", "T2.resolution", ")", "FROM", "files", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.f_id", "=", "T2.f_id", "WHERE", "T1.duration", "LIKE", "``", "3", ":", "%", "''"], "query_toks_no_value": ["select", "max", "(", "t2", ".", "resolution", ")", ",", "min", "(", "t2", ".", "resolution", ")", "from", "files", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "f_id", "=", "t2", ".", "f_id", "where", "t1", ".", "duration", "like", "value"], "question": "What are the maximum and minimum resolution of songs whose duration is 3 minutes?", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "resolution", "of", "songs", "whose", "duration", "is", "3", "minutes", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 16, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 21, false], null]], [2, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 11, false], null], "\"3:%\"", null]]}}, {"db_id": "music_1", "query": "SELECT max(T2.resolution) ,  min(T2.resolution) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE \"3:%\"", "query_toks": ["SELECT", "max", "(", "T2.resolution", ")", ",", "min", "(", "T2.resolution", ")", "FROM", "files", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.f_id", "=", "T2.f_id", "WHERE", "T1.duration", "LIKE", "``", "3", ":", "%", "''"], "query_toks_no_value": ["select", "max", "(", "t2", ".", "resolution", ")", ",", "min", "(", "t2", ".", "resolution", ")", "from", "files", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "f_id", "=", "t2", ".", "f_id", "where", "t1", ".", "duration", "like", "value"], "question": "What is the maximum and minimum resolution of all songs that are approximately 3 minutes long?", "question_toks": ["What", "is", "the", "maximum", "and", "minimum", "resolution", "of", "all", "songs", "that", "are", "approximately", "3", "minutes", "long", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 16, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 21, false], null]], [2, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 11, false], null], "\"3:%\"", null]]}}, {"db_id": "music_1", "query": "SELECT max(T1.duration) ,  max(T2.resolution) ,  T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.languages ORDER BY T2.languages", "query_toks": ["SELECT", "max", "(", "T1.duration", ")", ",", "max", "(", "T2.resolution", ")", ",", "T2.languages", "FROM", "files", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.f_id", "=", "T2.f_id", "GROUP", "BY", "T2.languages", "ORDER", "BY", "T2.languages"], "query_toks_no_value": ["select", "max", "(", "t1", ".", "duration", ")", ",", "max", "(", "t2", ".", "resolution", ")", ",", "t2", ".", "languages", "from", "files", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "f_id", "=", "t2", ".", "f_id", "group", "by", "t2", ".", "languages", "order", "by", "t2", ".", "languages"], "question": "What are the maximum duration and resolution of songs grouped and ordered by languages?", "question_toks": ["What", "are", "the", "maximum", "duration", "and", "resolution", "of", "songs", "grouped", "and", "ordered", "by", "languages", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 16, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 19, false], null]]], "select": [false, [[1, [0, [0, 11, false], null]], [1, [0, [0, 21, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": []}}, {"db_id": "music_1", "query": "SELECT max(T1.duration) ,  max(T2.resolution) ,  T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.languages ORDER BY T2.languages", "query_toks": ["SELECT", "max", "(", "T1.duration", ")", ",", "max", "(", "T2.resolution", ")", ",", "T2.languages", "FROM", "files", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.f_id", "=", "T2.f_id", "GROUP", "BY", "T2.languages", "ORDER", "BY", "T2.languages"], "query_toks_no_value": ["select", "max", "(", "t1", ".", "duration", ")", ",", "max", "(", "t2", ".", "resolution", ")", ",", "t2", ".", "languages", "from", "files", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "f_id", "=", "t2", ".", "f_id", "group", "by", "t2", ".", "languages", "order", "by", "t2", ".", "languages"], "question": "What are the maximum duration and resolution of all songs, for each language, ordered alphabetically by language?", "question_toks": ["What", "are", "the", "maximum", "duration", "and", "resolution", "of", "all", "songs", ",", "for", "each", "language", ",", "ordered", "alphabetically", "by", "language", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 16, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 19, false], null]]], "select": [false, [[1, [0, [0, 11, false], null]], [1, [0, [0, 21, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": []}}, {"db_id": "music_1", "query": "SELECT min(T1.duration) ,  min(T2.rating) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is", "query_toks": ["SELECT", "min", "(", "T1.duration", ")", ",", "min", "(", "T2.rating", ")", ",", "T2.genre_is", "FROM", "files", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.f_id", "=", "T2.f_id", "GROUP", "BY", "T2.genre_is", "ORDER", "BY", "T2.genre_is"], "query_toks_no_value": ["select", "min", "(", "t1", ".", "duration", ")", ",", "min", "(", "t2", ".", "rating", ")", ",", "t2", ".", "genre_is", "from", "files", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "f_id", "=", "t2", ".", "f_id", "group", "by", "t2", ".", "genre_is", "order", "by", "t2", ".", "genre_is"], "question": "What are the shortest duration and lowest rating of songs grouped by genre and ordered by genre?", "question_toks": ["What", "are", "the", "shortest", "duration", "and", "lowest", "rating", "of", "songs", "grouped", "by", "genre", "and", "ordered", "by", "genre", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 16, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 17, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 17, false], null]]], "select": [false, [[2, [0, [0, 11, false], null]], [2, [0, [0, 18, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "music_1", "query": "SELECT min(T1.duration) ,  min(T2.rating) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is", "query_toks": ["SELECT", "min", "(", "T1.duration", ")", ",", "min", "(", "T2.rating", ")", ",", "T2.genre_is", "FROM", "files", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.f_id", "=", "T2.f_id", "GROUP", "BY", "T2.genre_is", "ORDER", "BY", "T2.genre_is"], "query_toks_no_value": ["select", "min", "(", "t1", ".", "duration", ")", ",", "min", "(", "t2", ".", "rating", ")", ",", "t2", ".", "genre_is", "from", "files", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "f_id", "=", "t2", ".", "f_id", "group", "by", "t2", ".", "genre_is", "order", "by", "t2", ".", "genre_is"], "question": "What is the shortest and most poorly rated song for each genre, ordered alphabetically by genre?", "question_toks": ["What", "is", "the", "shortest", "and", "most", "poorly", "rated", "song", "for", "each", "genre", ",", "ordered", "alphabetically", "by", "genre", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 16, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 17, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 17, false], null]]], "select": [false, [[2, [0, [0, 11, false], null]], [2, [0, [0, 18, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "music_1", "query": "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\" GROUP BY T2.artist_name HAVING count(*)  >=  1", "query_toks": ["SELECT", "T1.artist_name", ",", "count", "(", "*", ")", "FROM", "artist", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.artist_name", "=", "T2.artist_name", "WHERE", "T2.languages", "=", "``", "english", "''", "GROUP", "BY", "T2.artist_name", "HAVING", "count", "(", "*", ")", ">", "=", "1"], "query_toks_no_value": ["select", "t1", ".", "artist_name", ",", "count", "(", "*", ")", "from", "artist", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "artist_name", "=", "t2", ".", "artist_name", "where", "t2", ".", "languages", "=", "value", "group", "by", "t2", ".", "artist_name", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Find the names and number of works of all artists who have at least one English songs.", "question_toks": ["Find", "the", "names", "and", "number", "of", "works", "of", "all", "artists", "who", "have", "at", "least", "one", "English", "songs", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 14, false], null]], "table_units": [["table_unit", 1], ["table_unit", 3]]}, "groupBy": [[0, 14, false]], "having": [[false, 5, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 19, false], null], "\"english\"", null]]}}, {"db_id": "music_1", "query": "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\" GROUP BY T2.artist_name HAVING count(*)  >=  1", "query_toks": ["SELECT", "T1.artist_name", ",", "count", "(", "*", ")", "FROM", "artist", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.artist_name", "=", "T2.artist_name", "WHERE", "T2.languages", "=", "``", "english", "''", "GROUP", "BY", "T2.artist_name", "HAVING", "count", "(", "*", ")", ">", "=", "1"], "query_toks_no_value": ["select", "t1", ".", "artist_name", ",", "count", "(", "*", ")", "from", "artist", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "artist_name", "=", "t2", ".", "artist_name", "where", "t2", ".", "languages", "=", "value", "group", "by", "t2", ".", "artist_name", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the names and number of works for all artists who have sung at least one song in English?", "question_toks": ["What", "are", "the", "names", "and", "number", "of", "works", "for", "all", "artists", "who", "have", "sung", "at", "least", "one", "song", "in", "English", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 14, false], null]], "table_units": [["table_unit", 1], ["table_unit", 3]]}, "groupBy": [[0, 14, false]], "having": [[false, 5, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 19, false], null], "\"english\"", null]]}}, {"db_id": "music_1", "query": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.resolution  >  900 GROUP BY T2.artist_name HAVING count(*)  >=  1", "query_toks": ["SELECT", "T1.artist_name", ",", "T1.country", "FROM", "artist", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.artist_name", "=", "T2.artist_name", "WHERE", "T2.resolution", ">", "900", "GROUP", "BY", "T2.artist_name", "HAVING", "count", "(", "*", ")", ">", "=", "1"], "query_toks_no_value": ["select", "t1", ".", "artist_name", ",", "t1", ".", "country", "from", "artist", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "artist_name", "=", "t2", ".", "artist_name", "where", "t2", ".", "resolution", ">", "value", "group", "by", "t2", ".", "artist_name", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Find the name and country of origin for all artists who have release at least one song of resolution above 900.", "question_toks": ["Find", "the", "name", "and", "country", "of", "origin", "for", "all", "artists", "who", "have", "release", "at", "least", "one", "song", "of", "resolution", "above", "900", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 14, false], null]], "table_units": [["table_unit", 1], ["table_unit", 3]]}, "groupBy": [[0, 14, false]], "having": [[false, 5, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 21, false], null], 900.0, null]]}}, {"db_id": "music_1", "query": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.resolution  >  900 GROUP BY T2.artist_name HAVING count(*)  >=  1", "query_toks": ["SELECT", "T1.artist_name", ",", "T1.country", "FROM", "artist", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.artist_name", "=", "T2.artist_name", "WHERE", "T2.resolution", ">", "900", "GROUP", "BY", "T2.artist_name", "HAVING", "count", "(", "*", ")", ">", "=", "1"], "query_toks_no_value": ["select", "t1", ".", "artist_name", ",", "t1", ".", "country", "from", "artist", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "artist_name", "=", "t2", ".", "artist_name", "where", "t2", ".", "resolution", ">", "value", "group", "by", "t2", ".", "artist_name", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What is the name and country of origin for each artist who has released a song with a resolution higher than 900?", "question_toks": ["What", "is", "the", "name", "and", "country", "of", "origin", "for", "each", "artist", "who", "has", "released", "a", "song", "with", "a", "resolution", "higher", "than", "900", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 14, false], null]], "table_units": [["table_unit", 1], ["table_unit", 3]]}, "groupBy": [[0, 14, false]], "having": [[false, 5, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 21, false], null], 900.0, null]]}}, {"db_id": "music_1", "query": "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3", "query_toks": ["SELECT", "T1.artist_name", ",", "count", "(", "*", ")", "FROM", "artist", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.artist_name", "=", "T2.artist_name", "GROUP", "BY", "T2.artist_name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "t1", ".", "artist_name", ",", "count", "(", "*", ")", "from", "artist", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "artist_name", "=", "t2", ".", "artist_name", "group", "by", "t2", ".", "artist_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the names and number of works of the three artists who have produced the most songs.", "question_toks": ["Find", "the", "names", "and", "number", "of", "works", "of", "the", "three", "artists", "who", "have", "produced", "the", "most", "songs", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 14, false], null]], "table_units": [["table_unit", 1], ["table_unit", 3]]}, "groupBy": [[0, 14, false]], "having": [], "intersect": null, "limit": 3, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "music_1", "query": "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3", "query_toks": ["SELECT", "T1.artist_name", ",", "count", "(", "*", ")", "FROM", "artist", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.artist_name", "=", "T2.artist_name", "GROUP", "BY", "T2.artist_name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "t1", ".", "artist_name", ",", "count", "(", "*", ")", "from", "artist", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "artist_name", "=", "t2", ".", "artist_name", "group", "by", "t2", ".", "artist_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the names of the three artists who have produced the most songs, and how many works did they produce?", "question_toks": ["What", "are", "the", "names", "of", "the", "three", "artists", "who", "have", "produced", "the", "most", "songs", ",", "and", "how", "many", "works", "did", "they", "produce", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 14, false], null]], "table_units": [["table_unit", 1], ["table_unit", 3]]}, "groupBy": [[0, 14, false]], "having": [], "intersect": null, "limit": 3, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "music_1", "query": "SELECT f_id ,  genre_is ,  artist_name FROM song WHERE languages  =   \"english\" ORDER BY rating", "query_toks": ["SELECT", "f_id", ",", "genre_is", ",", "artist_name", "FROM", "song", "WHERE", "languages", "=", "``", "english", "''", "ORDER", "BY", "rating"], "query_toks_no_value": ["select", "f_id", ",", "genre_is", ",", "artist_name", "from", "song", "where", "languages", "=", "value", "order", "by", "rating"], "question": "List the id, genre and artist name of English songs ordered by rating.", "question_toks": ["List", "the", "id", ",", "genre", "and", "artist", "name", "of", "English", "songs", "ordered", "by", "rating", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 18, false], null]]], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 19, false], null], "\"english\"", null]]}}, {"db_id": "music_1", "query": "SELECT f_id ,  genre_is ,  artist_name FROM song WHERE languages  =   \"english\" ORDER BY rating", "query_toks": ["SELECT", "f_id", ",", "genre_is", ",", "artist_name", "FROM", "song", "WHERE", "languages", "=", "``", "english", "''", "ORDER", "BY", "rating"], "query_toks_no_value": ["select", "f_id", ",", "genre_is", ",", "artist_name", "from", "song", "where", "languages", "=", "value", "order", "by", "rating"], "question": "What is the id, genre, and name of the artist for every English song ordered by ascending rating?", "question_toks": ["What", "is", "the", "id", ",", "genre", ",", "and", "name", "of", "the", "artist", "for", "every", "English", "song", "ordered", "by", "ascending", "rating", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 18, false], null]]], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 19, false], null], "\"english\"", null]]}}, {"db_id": "music_1", "query": "SELECT T1.duration ,  T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.genre_is  =  \"pop\" ORDER BY T2.song_name", "query_toks": ["SELECT", "T1.duration", ",", "T1.file_size", ",", "T1.formats", "FROM", "files", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.f_id", "=", "T2.f_id", "WHERE", "T2.genre_is", "=", "``", "pop", "''", "ORDER", "BY", "T2.song_name"], "query_toks_no_value": ["select", "t1", ".", "duration", ",", "t1", ".", "file_size", ",", "t1", ".", "formats", "from", "files", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "f_id", "=", "t2", ".", "f_id", "where", "t2", ".", "genre_is", "=", "value", "order", "by", "t2", ".", "song_name"], "question": "List the duration, file size and format of songs whose genre is pop, ordered by title?", "question_toks": ["List", "the", "duration", ",", "file", "size", "and", "format", "of", "songs", "whose", "genre", "is", "pop", ",", "ordered", "by", "title", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 16, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 13, false], null]]], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 17, false], null], "\"pop\"", null]]}}, {"db_id": "music_1", "query": "SELECT T1.duration ,  T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.genre_is  =  \"pop\" ORDER BY T2.song_name", "query_toks": ["SELECT", "T1.duration", ",", "T1.file_size", ",", "T1.formats", "FROM", "files", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.f_id", "=", "T2.f_id", "WHERE", "T2.genre_is", "=", "``", "pop", "''", "ORDER", "BY", "T2.song_name"], "query_toks_no_value": ["select", "t1", ".", "duration", ",", "t1", ".", "file_size", ",", "t1", ".", "formats", "from", "files", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "f_id", "=", "t2", ".", "f_id", "where", "t2", ".", "genre_is", "=", "value", "order", "by", "t2", ".", "song_name"], "question": "What is the duration, file size, and song format for every pop song, ordered by title alphabetically?", "question_toks": ["What", "is", "the", "duration", ",", "file", "size", ",", "and", "song", "format", "for", "every", "pop", "song", ",", "ordered", "by", "title", "alphabetically", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 16, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 13, false], null]]], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 17, false], null], "\"pop\"", null]]}}, {"db_id": "baseball_1", "query": "SELECT T1.name_full ,  T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id  =  T2.college_id GROUP BY T1.college_id ORDER BY count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "T1.name_full", ",", "T1.college_id", "FROM", "college", "AS", "T1", "JOIN", "player_college", "AS", "T2", "ON", "T1.college_id", "=", "T2.college_id", "GROUP", "BY", "T1.college_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "name_full", ",", "t1", ".", "college_id", "from", "college", "as", "t1", "join", "player_college", "as", "t2", "on", "t1", ".", "college_id", "=", "t2", ".", "college_id", "group", "by", "t1", ".", "college_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "what is the full name and id of the college with the largest number of baseball players?", "question_toks": ["what", "is", "the", "full", "name", "and", "id", "of", "the", "college", "with", "the", "largest", "number", "of", "baseball", "players", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 277, false], null], [0, 101, false], null]], "table_units": [["table_unit", 21], ["table_unit", 8]]}, "groupBy": [[0, 277, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 278, false], null]], [0, [0, [0, 277, false], null]]]], "union": null, "where": []}}, {"db_id": "baseball_1", "query": "SELECT T1.name_full ,  T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id  =  T2.college_id GROUP BY T1.college_id ORDER BY count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "T1.name_full", ",", "T1.college_id", "FROM", "college", "AS", "T1", "JOIN", "player_college", "AS", "T2", "ON", "T1.college_id", "=", "T2.college_id", "GROUP", "BY", "T1.college_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "name_full", ",", "t1", ".", "college_id", "from", "college", "as", "t1", "join", "player_college", "as", "t2", "on", "t1", ".", "college_id", "=", "t2", ".", "college_id", "group", "by", "t1", ".", "college_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the full name and id of the college that has the most baseball players.", "question_toks": ["Find", "the", "full", "name", "and", "id", "of", "the", "college", "that", "has", "the", "most", "baseball", "players", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 277, false], null], [0, 101, false], null]], "table_units": [["table_unit", 21], ["table_unit", 8]]}, "groupBy": [[0, 277, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 278, false], null]], [0, [0, [0, 277, false], null]]]], "union": null, "where": []}}, {"db_id": "baseball_1", "query": "SELECT name_first ,  name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id WHERE YEAR  =  1998", "query_toks": ["SELECT", "name_first", ",", "name_last", "FROM", "player", "AS", "T1", "JOIN", "all_star", "AS", "T2", "ON", "T1.player_id", "=", "T2.player_id", "WHERE", "YEAR", "=", "1998"], "query_toks_no_value": ["select", "name_first", ",", "name_last", "from", "player", "as", "t1", "join", "all_star", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "player_id", "where", "year", "=", "value"], "question": "What are first and last names of players participating in all star game in 1998?", "question_toks": ["What", "are", "first", "and", "last", "names", "of", "players", "participating", "in", "all", "star", "game", "in", "1998", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 182, false], null], [0, 1, false], null]], "table_units": [["table_unit", 16], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 195, false], null]], [0, [0, [0, 196, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], 1998.0, null]]}}, {"db_id": "baseball_1", "query": "SELECT name_first ,  name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id WHERE YEAR  =  1998", "query_toks": ["SELECT", "name_first", ",", "name_last", "FROM", "player", "AS", "T1", "JOIN", "all_star", "AS", "T2", "ON", "T1.player_id", "=", "T2.player_id", "WHERE", "YEAR", "=", "1998"], "query_toks_no_value": ["select", "name_first", ",", "name_last", "from", "player", "as", "t1", "join", "all_star", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "player_id", "where", "year", "=", "value"], "question": "List the first and last name for players who participated in all star game in 1998.", "question_toks": ["List", "the", "first", "and", "last", "name", "for", "players", "who", "participated", "in", "all", "star", "game", "in", "1998", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 182, false], null], [0, 1, false], null]], "table_units": [["table_unit", 16], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 195, false], null]], [0, [0, [0, 196, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], 1998.0, null]]}}, {"db_id": "baseball_1", "query": "SELECT T1.name_first , T1.name_last ,  T1.player_id ,   count(*) FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "T1.name_first", ",", "T1.name_last", ",", "T1.player_id", ",", "count", "(", "*", ")", "FROM", "player", "AS", "T1", "JOIN", "all_star", "AS", "T2", "ON", "T1.player_id", "=", "T2.player_id", "GROUP", "BY", "T1.player_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "name_first", ",", "t1", ".", "name_last", ",", "t1", ".", "player_id", ",", "count", "(", "*", ")", "from", "player", "as", "t1", "join", "all_star", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "player_id", "group", "by", "t1", ".", "player_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the first name, last name and id of the player with the most all star game experiences? Also list the count.", "question_toks": ["What", "are", "the", "first", "name", ",", "last", "name", "and", "id", "of", "the", "player", "with", "the", "most", "all", "star", "game", "experiences", "?", "Also", "list", "the", "count", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 182, false], null], [0, 1, false], null]], "table_units": [["table_unit", 16], ["table_unit", 0]]}, "groupBy": [[0, 182, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 195, false], null]], [0, [0, [0, 196, false], null]], [0, [0, [0, 182, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "baseball_1", "query": "SELECT T1.name_first , T1.name_last ,  T1.player_id ,   count(*) FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "T1.name_first", ",", "T1.name_last", ",", "T1.player_id", ",", "count", "(", "*", ")", "FROM", "player", "AS", "T1", "JOIN", "all_star", "AS", "T2", "ON", "T1.player_id", "=", "T2.player_id", "GROUP", "BY", "T1.player_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "name_first", ",", "t1", ".", "name_last", ",", "t1", ".", "player_id", ",", "count", "(", "*", ")", "from", "player", "as", "t1", "join", "all_star", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "player_id", "group", "by", "t1", ".", "player_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which player has the most all star game experiences? Give me the first name, last name and id of the player, as well as the number of times the player participated in all star game.", "question_toks": ["Which", "player", "has", "the", "most", "all", "star", "game", "experiences", "?", "Give", "me", "the", "first", "name", ",", "last", "name", "and", "id", "of", "the", "player", ",", "as", "well", "as", "the", "number", "of", "times", "the", "player", "participated", "in", "all", "star", "game", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 182, false], null], [0, 1, false], null]], "table_units": [["table_unit", 16], ["table_unit", 0]]}, "groupBy": [[0, 182, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 195, false], null]], [0, [0, [0, 196, false], null]], [0, [0, [0, 182, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "baseball_1", "query": "SELECT yearid ,  count(*) FROM hall_of_fame GROUP BY yearid;", "query_toks": ["SELECT", "yearid", ",", "count", "(", "*", ")", "FROM", "hall_of_fame", "GROUP", "BY", "yearid", ";"], "query_toks_no_value": ["select", "yearid", ",", "count", "(", "*", ")", "from", "hall_of_fame", "group", "by", "yearid"], "question": "How many players enter hall of fame each year?", "question_toks": ["How", "many", "players", "enter", "hall", "of", "fame", "each", "year", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 12]]}, "groupBy": [[0, 145, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 145, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "baseball_1", "query": "SELECT yearid ,  count(*) FROM hall_of_fame GROUP BY yearid;", "query_toks": ["SELECT", "yearid", ",", "count", "(", "*", ")", "FROM", "hall_of_fame", "GROUP", "BY", "yearid", ";"], "query_toks_no_value": ["select", "yearid", ",", "count", "(", "*", ")", "from", "hall_of_fame", "group", "by", "yearid"], "question": "Count the number of players who enter hall of fame for each year.", "question_toks": ["Count", "the", "number", "of", "players", "who", "enter", "hall", "of", "fame", "for", "each", "year", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 12]]}, "groupBy": [[0, 145, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 145, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "baseball_1", "query": "SELECT YEAR ,  avg(attendance) FROM home_game GROUP BY YEAR;", "query_toks": ["SELECT", "YEAR", ",", "avg", "(", "attendance", ")", "FROM", "home_game", "GROUP", "BY", "YEAR", ";"], "query_toks_no_value": ["select", "year", ",", "avg", "(", "attendance", ")", "from", "home_game", "group", "by", "year"], "question": "What is the average number of attendance at home games for each year?", "question_toks": ["What", "is", "the", "average", "number", "of", "attendance", "at", "home", "games", "for", "each", "year", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 13]]}, "groupBy": [[0, 153, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 153, false], null]], [5, [0, [0, 161, false], null]]]], "union": null, "where": []}}, {"db_id": "baseball_1", "query": "SELECT YEAR ,  avg(attendance) FROM home_game GROUP BY YEAR;", "query_toks": ["SELECT", "YEAR", ",", "avg", "(", "attendance", ")", "FROM", "home_game", "GROUP", "BY", "YEAR", ";"], "query_toks_no_value": ["select", "year", ",", "avg", "(", "attendance", ")", "from", "home_game", "group", "by", "year"], "question": "For each year, return the year and the average number of attendance at home games.", "question_toks": ["For", "each", "year", ",", "return", "the", "year", "and", "the", "average", "number", "of", "attendance", "at", "home", "games", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 13]]}, "groupBy": [[0, 153, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 153, false], null]], [5, [0, [0, 161, false], null]]]], "union": null, "where": []}}, {"db_id": "baseball_1", "query": "SELECT T2.team_id ,  T2.rank FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id WHERE T1.year  =  2014 GROUP BY T1.team_id ORDER BY avg(T1.attendance) DESC LIMIT 1;", "query_toks": ["SELECT", "T2.team_id", ",", "T2.rank", "FROM", "home_game", "AS", "T1", "JOIN", "team", "AS", "T2", "ON", "T1.team_id", "=", "T2.team_id", "WHERE", "T1.year", "=", "2014", "GROUP", "BY", "T1.team_id", "ORDER", "BY", "avg", "(", "T1.attendance", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t2", ".", "team_id", ",", "t2", ".", "rank", "from", "home_game", "as", "t1", "join", "team", "as", "t2", "on", "t1", ".", "team_id", "=", "t2", ".", "team_id", "where", "t1", ".", "year", "=", "value", "group", "by", "t1", ".", "team_id", "order", "by", "avg", "(", "t1", ".", "attendance", ")", "desc", "limit", "value"], "question": "In 2014, what are the id and rank of the team that has the largest average number of attendance?", "question_toks": ["In", "2014", ",", "what", "are", "the", "id", "and", "rank", "of", "the", "team", "that", "has", "the", "largest", "average", "number", "of", "attendance", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 155, false], null], [0, 293, false], null]], "table_units": [["table_unit", 13], ["table_unit", 23]]}, "groupBy": [[0, 155, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [5, 161, false], null]]], "select": [false, [[0, [0, [0, 293, false], null]], [0, [0, [0, 296, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 153, false], null], 2014.0, null]]}}, {"db_id": "baseball_1", "query": "SELECT T2.team_id ,  T2.rank FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id WHERE T1.year  =  2014 GROUP BY T1.team_id ORDER BY avg(T1.attendance) DESC LIMIT 1;", "query_toks": ["SELECT", "T2.team_id", ",", "T2.rank", "FROM", "home_game", "AS", "T1", "JOIN", "team", "AS", "T2", "ON", "T1.team_id", "=", "T2.team_id", "WHERE", "T1.year", "=", "2014", "GROUP", "BY", "T1.team_id", "ORDER", "BY", "avg", "(", "T1.attendance", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t2", ".", "team_id", ",", "t2", ".", "rank", "from", "home_game", "as", "t1", "join", "team", "as", "t2", "on", "t1", ".", "team_id", "=", "t2", ".", "team_id", "where", "t1", ".", "year", "=", "value", "group", "by", "t1", ".", "team_id", "order", "by", "avg", "(", "t1", ".", "attendance", ")", "desc", "limit", "value"], "question": "Find the id and rank of the team that has the highest average attendance rate in 2014.", "question_toks": ["Find", "the", "id", "and", "rank", "of", "the", "team", "that", "has", "the", "highest", "average", "attendance", "rate", "in", "2014", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 155, false], null], [0, 293, false], null]], "table_units": [["table_unit", 13], ["table_unit", 23]]}, "groupBy": [[0, 155, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [5, 161, false], null]]], "select": [false, [[0, [0, [0, 293, false], null]], [0, [0, [0, 296, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 153, false], null], 2014.0, null]]}}, {"db_id": "baseball_1", "query": "SELECT T1.name_first ,  T1.name_last ,  T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T2.player_id ORDER BY count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "T1.name_first", ",", "T1.name_last", ",", "T2.player_id", "FROM", "player", "AS", "T1", "JOIN", "manager_award", "AS", "T2", "ON", "T1.player_id", "=", "T2.player_id", "GROUP", "BY", "T2.player_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "name_first", ",", "t1", ".", "name_last", ",", "t2", ".", "player_id", "from", "player", "as", "t1", "join", "manager_award", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "player_id", "group", "by", "t2", ".", "player_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the manager's first name, last name and id who won the most manager award?", "question_toks": ["What", "are", "the", "manager", "'s", "first", "name", ",", "last", "name", "and", "id", "who", "won", "the", "most", "manager", "award", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 182, false], null], [0, 30, false], null]], "table_units": [["table_unit", 16], ["table_unit", 2]]}, "groupBy": [[0, 30, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 195, false], null]], [0, [0, [0, 196, false], null]], [0, [0, [0, 30, false], null]]]], "union": null, "where": []}}, {"db_id": "baseball_1", "query": "SELECT T1.name_first ,  T1.name_last ,  T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T2.player_id ORDER BY count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "T1.name_first", ",", "T1.name_last", ",", "T2.player_id", "FROM", "player", "AS", "T1", "JOIN", "manager_award", "AS", "T2", "ON", "T1.player_id", "=", "T2.player_id", "GROUP", "BY", "T2.player_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "name_first", ",", "t1", ".", "name_last", ",", "t2", ".", "player_id", "from", "player", "as", "t1", "join", "manager_award", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "player_id", "group", "by", "t2", ".", "player_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which manager won the most manager award? Give me the manager's first name, last name and id.", "question_toks": ["Which", "manager", "won", "the", "most", "manager", "award", "?", "Give", "me", "the", "manager", "'s", "first", "name", ",", "last", "name", "and", "id", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 182, false], null], [0, 30, false], null]], "table_units": [["table_unit", 16], ["table_unit", 2]]}, "groupBy": [[0, 30, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 195, false], null]], [0, [0, [0, 196, false], null]], [0, [0, [0, 30, false], null]]]], "union": null, "where": []}}, {"db_id": "baseball_1", "query": "SELECT T1.name_first ,  T1.name_last ,  T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 3;", "query_toks": ["SELECT", "T1.name_first", ",", "T1.name_last", ",", "T1.player_id", "FROM", "player", "AS", "T1", "JOIN", "player_award", "AS", "T2", "ON", "T1.player_id", "=", "T2.player_id", "GROUP", "BY", "T1.player_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "3", ";"], "query_toks_no_value": ["select", "t1", ".", "name_first", ",", "t1", ".", "name_last", ",", "t1", ".", "player_id", "from", "player", "as", "t1", "join", "player_award", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "player_id", "group", "by", "t1", ".", "player_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which 3 players won the most player awards? List their full name and id.", "question_toks": ["Which", "3", "players", "won", "the", "most", "player", "awards", "?", "List", "their", "full", "name", "and", "id", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 182, false], null], [0, 36, false], null]], "table_units": [["table_unit", 16], ["table_unit", 3]]}, "groupBy": [[0, 182, false]], "having": [], "intersect": null, "limit": 3, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 195, false], null]], [0, [0, [0, 196, false], null]], [0, [0, [0, 182, false], null]]]], "union": null, "where": []}}, {"db_id": "baseball_1", "query": "SELECT T1.name_first ,  T1.name_last ,  T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 3;", "query_toks": ["SELECT", "T1.name_first", ",", "T1.name_last", ",", "T1.player_id", "FROM", "player", "AS", "T1", "JOIN", "player_award", "AS", "T2", "ON", "T1.player_id", "=", "T2.player_id", "GROUP", "BY", "T1.player_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "3", ";"], "query_toks_no_value": ["select", "t1", ".", "name_first", ",", "t1", ".", "name_last", ",", "t1", ".", "player_id", "from", "player", "as", "t1", "join", "player_award", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "player_id", "group", "by", "t1", ".", "player_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the first name, last name and id for the top three players won the most player awards.", "question_toks": ["Find", "the", "first", "name", ",", "last", "name", "and", "id", "for", "the", "top", "three", "players", "won", "the", "most", "player", "awards", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 182, false], null], [0, 36, false], null]], "table_units": [["table_unit", 16], ["table_unit", 3]]}, "groupBy": [[0, 182, false]], "having": [], "intersect": null, "limit": 3, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 195, false], null]], [0, [0, [0, 196, false], null]], [0, [0, [0, 182, false], null]]]], "union": null, "where": []}}, {"db_id": "baseball_1", "query": "SELECT name_first ,  name_last FROM player WHERE death_year = '';", "query_toks": ["SELECT", "name_first", ",", "name_last", "FROM", "player", "WHERE", "death_year", "=", "''", ";"], "query_toks_no_value": ["select", "name_first", ",", "name_last", "from", "player", "where", "death_year", "=", "value"], "question": "Find all the players' first name and last name who have empty death record.", "question_toks": ["Find", "all", "the", "players", "'", "first", "name", "and", "last", "name", "who", "have", "empty", "death", "record", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 16]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 195, false], null]], [0, [0, [0, 196, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 189, false], null], "\"\"", null]]}}, {"db_id": "baseball_1", "query": "SELECT name_first ,  name_last FROM player WHERE death_year = '';", "query_toks": ["SELECT", "name_first", ",", "name_last", "FROM", "player", "WHERE", "death_year", "=", "''", ";"], "query_toks_no_value": ["select", "name_first", ",", "name_last", "from", "player", "where", "death_year", "=", "value"], "question": "What are the first name and last name of the players whose death record is empty?", "question_toks": ["What", "are", "the", "first", "name", "and", "last", "name", "of", "the", "players", "whose", "death", "record", "is", "empty", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 16]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 195, false], null]], [0, [0, [0, 196, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 189, false], null], "\"\"", null]]}}, {"db_id": "baseball_1", "query": "SELECT T1.name ,  T1.team_id ,  max(T2.salary) FROM team AS T1 JOIN salary AS T2 ON T1.team_id  =  T2.team_id GROUP BY T1.team_id;", "query_toks": ["SELECT", "T1.name", ",", "T1.team_id", ",", "max", "(", "T2.salary", ")", "FROM", "team", "AS", "T1", "JOIN", "salary", "AS", "T2", "ON", "T1.team_id", "=", "T2.team_id", "GROUP", "BY", "T1.team_id", ";"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "team_id", ",", "max", "(", "t2", ".", "salary", ")", "from", "team", "as", "t1", "join", "salary", "as", "t2", "on", "t1", ".", "team_id", "=", "t2", ".", "team_id", "group", "by", "t1", ".", "team_id"], "question": "What is the highest salary among each team? List the team name, id and maximum salary.", "question_toks": ["What", "is", "the", "highest", "salary", "among", "each", "team", "?", "List", "the", "team", "name", ",", "id", "and", "maximum", "salary", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 293, false], null], [0, 273, false], null]], "table_units": [["table_unit", 23], ["table_unit", 20]]}, "groupBy": [[0, 293, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 331, false], null]], [0, [0, [0, 293, false], null]], [1, [0, [0, 276, false], null]]]], "union": null, "where": []}}, {"db_id": "baseball_1", "query": "SELECT T1.name ,  T1.team_id ,  max(T2.salary) FROM team AS T1 JOIN salary AS T2 ON T1.team_id  =  T2.team_id GROUP BY T1.team_id;", "query_toks": ["SELECT", "T1.name", ",", "T1.team_id", ",", "max", "(", "T2.salary", ")", "FROM", "team", "AS", "T1", "JOIN", "salary", "AS", "T2", "ON", "T1.team_id", "=", "T2.team_id", "GROUP", "BY", "T1.team_id", ";"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "team_id", ",", "max", "(", "t2", ".", "salary", ")", "from", "team", "as", "t1", "join", "salary", "as", "t2", "on", "t1", ".", "team_id", "=", "t2", ".", "team_id", "group", "by", "t1", ".", "team_id"], "question": "For each team, return the team name, id and the maximum salary among the team.", "question_toks": ["For", "each", "team", ",", "return", "the", "team", "name", ",", "id", "and", "the", "maximum", "salary", "among", "the", "team", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 293, false], null], [0, 273, false], null]], "table_units": [["table_unit", 23], ["table_unit", 20]]}, "groupBy": [[0, 293, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 331, false], null]], [0, [0, [0, 293, false], null]], [1, [0, [0, 276, false], null]]]], "union": null, "where": []}}, {"db_id": "baseball_1", "query": "SELECT T1.name ,  T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg(T2.salary) ASC LIMIT 1;", "query_toks": ["SELECT", "T1.name", ",", "T1.team_id", "FROM", "team", "AS", "T1", "JOIN", "salary", "AS", "T2", "ON", "T1.team_id", "=", "T2.team_id", "GROUP", "BY", "T1.team_id", "ORDER", "BY", "avg", "(", "T2.salary", ")", "ASC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "team_id", "from", "team", "as", "t1", "join", "salary", "as", "t2", "on", "t1", ".", "team_id", "=", "t2", ".", "team_id", "group", "by", "t1", ".", "team_id", "order", "by", "avg", "(", "t2", ".", "salary", ")", "asc", "limit", "value"], "question": "What are the name and id of the team offering the lowest average salary?", "question_toks": ["What", "are", "the", "name", "and", "id", "of", "the", "team", "offering", "the", "lowest", "average", "salary", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 293, false], null], [0, 273, false], null]], "table_units": [["table_unit", 23], ["table_unit", 20]]}, "groupBy": [[0, 293, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [5, 276, false], null]]], "select": [false, [[0, [0, [0, 331, false], null]], [0, [0, [0, 293, false], null]]]], "union": null, "where": []}}, {"db_id": "baseball_1", "query": "SELECT T1.name ,  T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg(T2.salary) ASC LIMIT 1;", "query_toks": ["SELECT", "T1.name", ",", "T1.team_id", "FROM", "team", "AS", "T1", "JOIN", "salary", "AS", "T2", "ON", "T1.team_id", "=", "T2.team_id", "GROUP", "BY", "T1.team_id", "ORDER", "BY", "avg", "(", "T2.salary", ")", "ASC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "team_id", "from", "team", "as", "t1", "join", "salary", "as", "t2", "on", "t1", ".", "team_id", "=", "t2", ".", "team_id", "group", "by", "t1", ".", "team_id", "order", "by", "avg", "(", "t2", ".", "salary", ")", "asc", "limit", "value"], "question": "Which team offers the lowest average salary? Give me the name and id of the team.", "question_toks": ["Which", "team", "offers", "the", "lowest", "average", "salary", "?", "Give", "me", "the", "name", "and", "id", "of", "the", "team", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 293, false], null], [0, 273, false], null]], "table_units": [["table_unit", 23], ["table_unit", 20]]}, "groupBy": [[0, 293, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [5, 276, false], null]]], "select": [false, [[0, [0, [0, 331, false], null]], [0, [0, [0, 293, false], null]]]], "union": null, "where": []}}, {"db_id": "baseball_1", "query": "SELECT T1.name_first , T1.name_last FROM player AS T1 JOIN player_award AS T2 WHERE T2.year  =  1960 INTERSECT SELECT T1.name_first , T1.name_last FROM player AS T1 JOIN player_award AS T2 WHERE T2.year  =  1961", "query_toks": ["SELECT", "T1.name_first", ",", "T1.name_last", "FROM", "player", "AS", "T1", "JOIN", "player_award", "AS", "T2", "WHERE", "T2.year", "=", "1960", "INTERSECT", "SELECT", "T1.name_first", ",", "T1.name_last", "FROM", "player", "AS", "T1", "JOIN", "player_award", "AS", "T2", "WHERE", "T2.year", "=", "1961"], "query_toks_no_value": ["select", "t1", ".", "name_first", ",", "t1", ".", "name_last", "from", "player", "as", "t1", "join", "player_award", "as", "t2", "where", "t2", ".", "year", "=", "value", "intersect", "select", "t1", ".", "name_first", ",", "t1", ".", "name_last", "from", "player", "as", "t1", "join", "player_award", "as", "t2", "where", "t2", ".", "year", "=", "value"], "question": "Find the players' first name and last name who won award both in 1960 and in 1961.", "question_toks": ["Find", "the", "players", "'", "first", "name", "and", "last", "name", "who", "won", "award", "both", "in", "1960", "and", "in", "1961", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 16], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 16], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 195, false], null]], [0, [0, [0, 196, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 38, false], null], 1961.0, null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 195, false], null]], [0, [0, [0, 196, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 38, false], null], 1960.0, null]]}}, {"db_id": "baseball_1", "query": "SELECT T1.name_first , T1.name_last FROM player AS T1 JOIN player_award AS T2 WHERE T2.year  =  1960 INTERSECT SELECT T1.name_first , T1.name_last FROM player AS T1 JOIN player_award AS T2 WHERE T2.year  =  1961", "query_toks": ["SELECT", "T1.name_first", ",", "T1.name_last", "FROM", "player", "AS", "T1", "JOIN", "player_award", "AS", "T2", "WHERE", "T2.year", "=", "1960", "INTERSECT", "SELECT", "T1.name_first", ",", "T1.name_last", "FROM", "player", "AS", "T1", "JOIN", "player_award", "AS", "T2", "WHERE", "T2.year", "=", "1961"], "query_toks_no_value": ["select", "t1", ".", "name_first", ",", "t1", ".", "name_last", "from", "player", "as", "t1", "join", "player_award", "as", "t2", "where", "t2", ".", "year", "=", "value", "intersect", "select", "t1", ".", "name_first", ",", "t1", ".", "name_last", "from", "player", "as", "t1", "join", "player_award", "as", "t2", "where", "t2", ".", "year", "=", "value"], "question": "Which players won awards in both 1960 and 1961? Return their first names and last names.", "question_toks": ["Which", "players", "won", "awards", "in", "both", "1960", "and", "1961", "?", "Return", "their", "first", "names", "and", "last", "names", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 16], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 16], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 195, false], null]], [0, [0, [0, 196, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 38, false], null], 1961.0, null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 195, false], null]], [0, [0, [0, 196, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 38, false], null], 1960.0, null]]}}, {"db_id": "baseball_1", "query": "SELECT name_first ,  name_last FROM player WHERE weight  >  220 OR height  <  75", "query_toks": ["SELECT", "name_first", ",", "name_last", "FROM", "player", "WHERE", "weight", ">", "220", "OR", "height", "<", "75"], "query_toks_no_value": ["select", "name_first", ",", "name_last", "from", "player", "where", "weight", ">", "value", "or", "height", "<", "value"], "question": "List players' first name and last name who have weight greater than 220 or height shorter than 75.", "question_toks": ["List", "players", "'", "first", "name", "and", "last", "name", "who", "have", "weight", "greater", "than", "220", "or", "height", "shorter", "than", "75", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 16]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 195, false], null]], [0, [0, [0, 196, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 198, false], null], 220.0, null], "or", [false, 4, [0, [0, 199, false], null], 75.0, null]]}}, {"db_id": "baseball_1", "query": "SELECT name_first ,  name_last FROM player WHERE weight  >  220 OR height  <  75", "query_toks": ["SELECT", "name_first", ",", "name_last", "FROM", "player", "WHERE", "weight", ">", "220", "OR", "height", "<", "75"], "query_toks_no_value": ["select", "name_first", ",", "name_last", "from", "player", "where", "weight", ">", "value", "or", "height", "<", "value"], "question": "What are the first name and last name of the players who have weight above 220 or height below 75?", "question_toks": ["What", "are", "the", "first", "name", "and", "last", "name", "of", "the", "players", "who", "have", "weight", "above", "220", "or", "height", "below", "75", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 16]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 195, false], null]], [0, [0, [0, 196, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 198, false], null], 220.0, null], "or", [false, 4, [0, [0, 199, false], null], 75.0, null]]}}, {"db_id": "baseball_1", "query": "SELECT T2.name ,  T1.team_id_winner FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T1.year  =  2008 GROUP BY T1.team_id_winner ORDER BY count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "T2.name", ",", "T1.team_id_winner", "FROM", "postseason", "AS", "T1", "JOIN", "team", "AS", "T2", "ON", "T1.team_id_winner", "=", "T2.team_id_br", "WHERE", "T1.year", "=", "2008", "GROUP", "BY", "T1.team_id_winner", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t1", ".", "team_id_winner", "from", "postseason", "as", "t1", "join", "team", "as", "t2", "on", "t1", ".", "team_id_winner", "=", "t2", ".", "team_id_br", "where", "t1", ".", "year", "=", "value", "group", "by", "t1", ".", "team_id_winner", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the name and id of the team with the most victories in 2008 postseason?", "question_toks": ["What", "are", "the", "name", "and", "id", "of", "the", "team", "with", "the", "most", "victories", "in", "2008", "postseason", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 284, false], null], [0, 336, false], null]], "table_units": [["table_unit", 22], ["table_unit", 23]]}, "groupBy": [[0, 284, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 331, false], null]], [0, [0, [0, 284, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 282, false], null], 2008.0, null]]}}, {"db_id": "baseball_1", "query": "SELECT T2.name ,  T1.team_id_winner FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T1.year  =  2008 GROUP BY T1.team_id_winner ORDER BY count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "T2.name", ",", "T1.team_id_winner", "FROM", "postseason", "AS", "T1", "JOIN", "team", "AS", "T2", "ON", "T1.team_id_winner", "=", "T2.team_id_br", "WHERE", "T1.year", "=", "2008", "GROUP", "BY", "T1.team_id_winner", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t1", ".", "team_id_winner", "from", "postseason", "as", "t1", "join", "team", "as", "t2", "on", "t1", ".", "team_id_winner", "=", "t2", ".", "team_id_br", "where", "t1", ".", "year", "=", "value", "group", "by", "t1", ".", "team_id_winner", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the name and id of the team that won the most times in 2008 postseason.", "question_toks": ["Find", "the", "name", "and", "id", "of", "the", "team", "that", "won", "the", "most", "times", "in", "2008", "postseason", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 284, false], null], [0, 336, false], null]], "table_units": [["table_unit", 22], ["table_unit", 23]]}, "groupBy": [[0, 284, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 331, false], null]], [0, [0, [0, 284, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 282, false], null], 2008.0, null]]}}, {"db_id": "baseball_1", "query": "SELECT count(*) ,  T1.year FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' GROUP BY T1.year", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.year", "FROM", "postseason", "AS", "T1", "JOIN", "team", "AS", "T2", "ON", "T1.team_id_winner", "=", "T2.team_id_br", "WHERE", "T2.name", "=", "'Boston", "Red", "Stockings", "'", "GROUP", "BY", "T1.year"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "year", "from", "postseason", "as", "t1", "join", "team", "as", "t2", "on", "t1", ".", "team_id_winner", "=", "t2", ".", "team_id_br", "where", "t2", ".", "name", "=", "value", "group", "by", "t1", ".", "year"], "question": "What is the number of wins the team Boston Red Stockings got in the postseasons each year in history?", "question_toks": ["What", "is", "the", "number", "of", "wins", "the", "team", "Boston", "Red", "Stockings", "got", "in", "the", "postseasons", "each", "year", "in", "history", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 284, false], null], [0, 336, false], null]], "table_units": [["table_unit", 22], ["table_unit", 23]]}, "groupBy": [[0, 282, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 282, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 331, false], null], "\"Boston Red Stockings\"", null]]}}, {"db_id": "baseball_1", "query": "SELECT count(*) ,  T1.year FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' GROUP BY T1.year", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.year", "FROM", "postseason", "AS", "T1", "JOIN", "team", "AS", "T2", "ON", "T1.team_id_winner", "=", "T2.team_id_br", "WHERE", "T2.name", "=", "'Boston", "Red", "Stockings", "'", "GROUP", "BY", "T1.year"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "year", "from", "postseason", "as", "t1", "join", "team", "as", "t2", "on", "t1", ".", "team_id_winner", "=", "t2", ".", "team_id_br", "where", "t2", ".", "name", "=", "value", "group", "by", "t1", ".", "year"], "question": "For each year, return the year and the number of times the team Boston Red Stockings won in the postseasons.", "question_toks": ["For", "each", "year", ",", "return", "the", "year", "and", "the", "number", "of", "times", "the", "team", "Boston", "Red", "Stockings", "won", "in", "the", "postseasons", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 284, false], null], [0, 336, false], null]], "table_units": [["table_unit", 22], ["table_unit", 23]]}, "groupBy": [[0, 282, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 282, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 331, false], null], "\"Boston Red Stockings\"", null]]}}, {"db_id": "baseball_1", "query": "SELECT T2.name_first ,  T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2005 AND T3.name = 'Washington Nationals' INTERSECT SELECT T2.name_first , T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2007 AND T3.name = 'Washington Nationals'", "query_toks": ["SELECT", "T2.name_first", ",", "T2.name_last", "FROM", "salary", "AS", "T1", "JOIN", "player", "AS", "T2", "ON", "T1.player_id", "=", "T2.player_id", "JOIN", "team", "AS", "T3", "ON", "T3.team_id_br", "=", "T1.team_id", "WHERE", "T1.year", "=", "2005", "AND", "T3.name", "=", "'Washington", "Nationals", "'", "INTERSECT", "SELECT", "T2.name_first", ",", "T2.name_last", "FROM", "salary", "AS", "T1", "JOIN", "player", "AS", "T2", "ON", "T1.player_id", "=", "T2.player_id", "JOIN", "team", "AS", "T3", "ON", "T3.team_id_br", "=", "T1.team_id", "WHERE", "T1.year", "=", "2007", "AND", "T3.name", "=", "'Washington", "Nationals", "'"], "query_toks_no_value": ["select", "t2", ".", "name_first", ",", "t2", ".", "name_last", "from", "salary", "as", "t1", "join", "player", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "player_id", "join", "team", "as", "t3", "on", "t3", ".", "team_id_br", "=", "t1", ".", "team_id", "where", "t1", ".", "year", "=", "value", "and", "t3", ".", "name", "=", "value", "intersect", "select", "t2", ".", "name_first", ",", "t2", ".", "name_last", "from", "salary", "as", "t1", "join", "player", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "player_id", "join", "team", "as", "t3", "on", "t3", ".", "team_id_br", "=", "t1", ".", "team_id", "where", "t1", ".", "year", "=", "value", "and", "t3", ".", "name", "=", "value"], "question": "List players' first name and last name who received salary from team Washington Nationals in both 2005 and 2007.", "question_toks": ["List", "players", "'", "first", "name", "and", "last", "name", "who", "received", "salary", "from", "team", "Washington", "Nationals", "in", "both", "2005", "and", "2007", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 275, false], null], [0, 182, false], null]], "table_units": [["table_unit", 20], ["table_unit", 16]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 275, false], null], [0, 182, false], null]], "table_units": [["table_unit", 20], ["table_unit", 16]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 195, false], null]], [0, [0, [0, 196, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 272, false], null], 2007.0, null], "and", [false, 2, [0, [0, 331, false], null], "\"Washington Nationals\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 195, false], null]], [0, [0, [0, 196, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 272, false], null], 2005.0, null], "and", [false, 2, [0, [0, 331, false], null], "\"Washington Nationals\"", null]]}}, {"db_id": "baseball_1", "query": "SELECT T2.name_first ,  T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2005 AND T3.name = 'Washington Nationals' INTERSECT SELECT T2.name_first , T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2007 AND T3.name = 'Washington Nationals'", "query_toks": ["SELECT", "T2.name_first", ",", "T2.name_last", "FROM", "salary", "AS", "T1", "JOIN", "player", "AS", "T2", "ON", "T1.player_id", "=", "T2.player_id", "JOIN", "team", "AS", "T3", "ON", "T3.team_id_br", "=", "T1.team_id", "WHERE", "T1.year", "=", "2005", "AND", "T3.name", "=", "'Washington", "Nationals", "'", "INTERSECT", "SELECT", "T2.name_first", ",", "T2.name_last", "FROM", "salary", "AS", "T1", "JOIN", "player", "AS", "T2", "ON", "T1.player_id", "=", "T2.player_id", "JOIN", "team", "AS", "T3", "ON", "T3.team_id_br", "=", "T1.team_id", "WHERE", "T1.year", "=", "2007", "AND", "T3.name", "=", "'Washington", "Nationals", "'"], "query_toks_no_value": ["select", "t2", ".", "name_first", ",", "t2", ".", "name_last", "from", "salary", "as", "t1", "join", "player", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "player_id", "join", "team", "as", "t3", "on", "t3", ".", "team_id_br", "=", "t1", ".", "team_id", "where", "t1", ".", "year", "=", "value", "and", "t3", ".", "name", "=", "value", "intersect", "select", "t2", ".", "name_first", ",", "t2", ".", "name_last", "from", "salary", "as", "t1", "join", "player", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "player_id", "join", "team", "as", "t3", "on", "t3", ".", "team_id_br", "=", "t1", ".", "team_id", "where", "t1", ".", "year", "=", "value", "and", "t3", ".", "name", "=", "value"], "question": "What are the first name and last name of the players who were paid salary by team Washington Nationals in both 2005 and 2007?", "question_toks": ["What", "are", "the", "first", "name", "and", "last", "name", "of", "the", "players", "who", "were", "paid", "salary", "by", "team", "Washington", "Nationals", "in", "both", "2005", "and", "2007", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 275, false], null], [0, 182, false], null]], "table_units": [["table_unit", 20], ["table_unit", 16]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 275, false], null], [0, 182, false], null]], "table_units": [["table_unit", 20], ["table_unit", 16]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 195, false], null]], [0, [0, [0, 196, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 272, false], null], 2007.0, null], "and", [false, 2, [0, [0, 331, false], null], "\"Washington Nationals\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 195, false], null]], [0, [0, [0, 196, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 272, false], null], 2005.0, null], "and", [false, 2, [0, [0, 331, false], null], "\"Washington Nationals\"", null]]}}, {"db_id": "mountain_photos", "query": "SELECT brand ,  name FROM camera_lens ORDER BY max_aperture DESC", "query_toks": ["SELECT", "brand", ",", "name", "FROM", "camera_lens", "ORDER", "BY", "max_aperture", "DESC"], "query_toks_no_value": ["select", "brand", ",", "name", "from", "camera_lens", "order", "by", "max_aperture", "desc"], "question": "Find the brand and name for each camera lens, and sort in descending order of maximum aperture.", "question_toks": ["Find", "the", "brand", "and", "name", "for", "each", "camera", "lens", ",", "and", "sort", "in", "descending", "order", "of", "maximum", "aperture", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 11, false], null]]], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "mountain_photos", "query": "SELECT id ,  color ,  name FROM photos", "query_toks": ["SELECT", "id", ",", "color", ",", "name", "FROM", "photos"], "query_toks_no_value": ["select", "id", ",", "color", ",", "name", "from", "photos"], "question": "List the id, color scheme, and name for all the photos.", "question_toks": ["List", "the", "id", ",", "color", "scheme", ",", "and", "name", "for", "all", "the", "photos", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": []}}, {"db_id": "mountain_photos", "query": "SELECT max(height) ,  avg(height) FROM mountain", "query_toks": ["SELECT", "max", "(", "height", ")", ",", "avg", "(", "height", ")", "FROM", "mountain"], "query_toks_no_value": ["select", "max", "(", "height", ")", ",", "avg", "(", "height", ")", "from", "mountain"], "question": "What are the maximum and average height of the mountains?", "question_toks": ["What", "are", "the", "maximum", "and", "average", "height", "of", "the", "mountains", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 3, false], null]], [5, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "mountain_photos", "query": "SELECT name ,  height ,  prominence FROM mountain WHERE range != 'Aberdare Range'", "query_toks": ["SELECT", "name", ",", "height", ",", "prominence", "FROM", "mountain", "WHERE", "range", "!", "=", "'Aberdare", "Range", "'"], "query_toks_no_value": ["select", "name", ",", "height", ",", "prominence", "from", "mountain", "where", "range", "!", "=", "value"], "question": "What are the name, height and prominence of mountains which do not belong to the range 'Aberdare Range'?", "question_toks": ["What", "are", "the", "name", ",", "height", "and", "prominence", "of", "mountains", "which", "do", "not", "belong", "to", "the", "range", "'Aberdare", "Range", "'", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 5, false], null], "\"Aberdare Range\"", null]]}}, {"db_id": "mountain_photos", "query": "SELECT T1.id ,  T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id WHERE T1.height  >  4000", "query_toks": ["SELECT", "T1.id", ",", "T1.name", "FROM", "mountain", "AS", "T1", "JOIN", "photos", "AS", "T2", "ON", "T1.id", "=", "T2.mountain_id", "WHERE", "T1.height", ">", "4000"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "name", "from", "mountain", "as", "t1", "join", "photos", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "mountain_id", "where", "t1", ".", "height", ">", "value"], "question": "What are the id and name of the photos for mountains?", "question_toks": ["What", "are", "the", "id", "and", "name", "of", "the", "photos", "for", "mountains", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 14, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 3, false], null], 4000.0, null]]}}, {"db_id": "mountain_photos", "query": "SELECT T1.id ,  T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id GROUP BY T1.id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.id", ",", "T1.name", "FROM", "mountain", "AS", "T1", "JOIN", "photos", "AS", "T2", "ON", "T1.id", "=", "T2.mountain_id", "GROUP", "BY", "T1.id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "name", "from", "mountain", "as", "t1", "join", "photos", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "mountain_id", "group", "by", "t1", ".", "id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the id and name of the mountains that have at least 2 photos?", "question_toks": ["What", "are", "the", "id", "and", "name", "of", "the", "mountains", "that", "have", "at", "least", "2", "photos", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 14, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 1, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "mountain_photos", "query": "SELECT name ,  prominence FROM mountain EXCEPT SELECT T1.name ,  T1.prominence FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id  =  T3.id WHERE T3.brand  =  'Sigma'", "query_toks": ["SELECT", "name", ",", "prominence", "FROM", "mountain", "EXCEPT", "SELECT", "T1.name", ",", "T1.prominence", "FROM", "mountain", "AS", "T1", "JOIN", "photos", "AS", "T2", "ON", "T1.id", "=", "T2.mountain_id", "JOIN", "camera_lens", "AS", "T3", "ON", "T2.camera_lens_id", "=", "T3.id", "WHERE", "T3.brand", "=", "'Sigma", "'"], "query_toks_no_value": ["select", "name", ",", "prominence", "from", "mountain", "except", "select", "t1", ".", "name", ",", "t1", ".", "prominence", "from", "mountain", "as", "t1", "join", "photos", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "mountain_id", "join", "camera_lens", "as", "t3", "on", "t2", ".", "camera_lens_id", "=", "t3", ".", "id", "where", "t3", ".", "brand", "=", "value"], "question": "Show the name and prominence of the mountains whose picture is not taken by a lens of brand 'Sigma'.", "question_toks": ["Show", "the", "name", "and", "prominence", "of", "the", "mountains", "whose", "picture", "is", "not", "taken", "by", "a", "lens", "of", "brand", "'Sigma", "'", "."], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 14, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 8, false], null], "\"Sigma\"", null]]}, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "mountain_photos", "query": "SELECT T1.name ,  count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id  =  T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)", "query_toks": ["SELECT", "T1.name", ",", "count", "(", "*", ")", "FROM", "camera_lens", "AS", "T1", "JOIN", "photos", "AS", "T2", "ON", "T1.id", "=", "T2.camera_lens_id", "GROUP", "BY", "T1.id", "ORDER", "BY", "count", "(", "*", ")"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "count", "(", "*", ")", "from", "camera_lens", "as", "t1", "join", "photos", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "camera_lens_id", "group", "by", "t1", ".", "id", "order", "by", "count", "(", "*", ")"], "question": "What is the name of each camera lens and the number of photos taken by it? Order the result by the count of photos.", "question_toks": ["What", "is", "the", "name", "of", "each", "camera", "lens", "and", "the", "number", "of", "photos", "taken", "by", "it", "?", "Order", "the", "result", "by", "the", "count", "of", "photos", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 13, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "program_share", "query": "SELECT name ,  origin ,  OWNER FROM program", "query_toks": ["SELECT", "name", ",", "origin", ",", "OWNER", "FROM", "program"], "query_toks_no_value": ["select", "name", ",", "origin", ",", "owner", "from", "program"], "question": "List the name, origin and owner of each program.", "question_toks": ["List", "the", "name", ",", "origin", "and", "owner", "of", "each", "program", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "program_share", "query": "SELECT name ,  origin ,  OWNER FROM program", "query_toks": ["SELECT", "name", ",", "origin", ",", "OWNER", "FROM", "program"], "query_toks_no_value": ["select", "name", ",", "origin", ",", "owner", "from", "program"], "question": "What are the name, origin and owner of each program?", "question_toks": ["What", "are", "the", "name", ",", "origin", "and", "owner", "of", "each", "program", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "program_share", "query": "SELECT count(*) ,  time_of_day FROM broadcast GROUP BY time_of_day", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "time_of_day", "FROM", "broadcast", "GROUP", "BY", "time_of_day"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "time_of_day", "from", "broadcast", "group", "by", "time_of_day"], "question": "how many programs are broadcast in each time section of the day?", "question_toks": ["how", "many", "programs", "are", "broadcast", "in", "each", "time", "section", "of", "the", "day", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "program_share", "query": "SELECT count(*) ,  time_of_day FROM broadcast GROUP BY time_of_day", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "time_of_day", "FROM", "broadcast", "GROUP", "BY", "time_of_day"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "time_of_day", "from", "broadcast", "group", "by", "time_of_day"], "question": "Count the number of programs broadcast for each time section of a day.", "question_toks": ["Count", "the", "number", "of", "programs", "broadcast", "for", "each", "time", "section", "of", "a", "day", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "program_share", "query": "SELECT sum(Rating_in_percent) ,  OWNER FROM channel GROUP BY OWNER", "query_toks": ["SELECT", "sum", "(", "Rating_in_percent", ")", ",", "OWNER", "FROM", "channel", "GROUP", "BY", "OWNER"], "query_toks_no_value": ["select", "sum", "(", "rating_in_percent", ")", ",", "owner", "from", "channel", "group", "by", "owner"], "question": "Find the total rating ratio for each channel owner.", "question_toks": ["Find", "the", "total", "rating", "ratio", "for", "each", "channel", "owner", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 10, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "program_share", "query": "SELECT sum(Rating_in_percent) ,  OWNER FROM channel GROUP BY OWNER", "query_toks": ["SELECT", "sum", "(", "Rating_in_percent", ")", ",", "OWNER", "FROM", "channel", "GROUP", "BY", "OWNER"], "query_toks_no_value": ["select", "sum", "(", "rating_in_percent", ")", ",", "owner", "from", "channel", "group", "by", "owner"], "question": "What is the total rating of channel for each channel owner?", "question_toks": ["What", "is", "the", "total", "rating", "of", "channel", "for", "each", "channel", "owner", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 10, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "e_learning", "query": "SELECT login_name ,  family_name FROM Course_Authors_and_Tutors", "query_toks": ["SELECT", "login_name", ",", "family_name", "FROM", "Course_Authors_and_Tutors"], "query_toks_no_value": ["select", "login_name", ",", "family_name", "from", "course_authors_and_tutors"], "question": "List all the login names and family names of course author and tutors.", "question_toks": ["List", "all", "the", "login", "names", "and", "family", "names", "of", "course", "author", "and", "tutors", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "e_learning", "query": "SELECT login_name ,  family_name FROM Course_Authors_and_Tutors", "query_toks": ["SELECT", "login_name", ",", "family_name", "FROM", "Course_Authors_and_Tutors"], "query_toks_no_value": ["select", "login_name", ",", "family_name", "from", "course_authors_and_tutors"], "question": "What are the login names and family names of course author and tutors?", "question_toks": ["What", "are", "the", "login", "names", "and", "family", "names", "of", "course", "author", "and", "tutors", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "e_learning", "query": "SELECT date_of_enrolment ,  date_of_completion FROM Student_Course_Enrolment", "query_toks": ["SELECT", "date_of_enrolment", ",", "date_of_completion", "FROM", "Student_Course_Enrolment"], "query_toks_no_value": ["select", "date_of_enrolment", ",", "date_of_completion", "from", "student_course_enrolment"], "question": "List all the dates of enrollment and completion of students.", "question_toks": ["List", "all", "the", "dates", "of", "enrollment", "and", "completion", "of", "students", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 28, false], null]], [0, [0, [0, 29, false], null]]]], "union": null, "where": []}}, {"db_id": "e_learning", "query": "SELECT date_of_enrolment ,  date_of_completion FROM Student_Course_Enrolment", "query_toks": ["SELECT", "date_of_enrolment", ",", "date_of_completion", "FROM", "Student_Course_Enrolment"], "query_toks_no_value": ["select", "date_of_enrolment", ",", "date_of_completion", "from", "student_course_enrolment"], "question": "What are all the dates of enrollment and completion in record?", "question_toks": ["What", "are", "all", "the", "dates", "of", "enrollment", "and", "completion", "in", "record", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 28, false], null]], [0, [0, [0, 29, false], null]]]], "union": null, "where": []}}, {"db_id": "e_learning", "query": "SELECT personal_name ,  family_name FROM Students ORDER BY family_name", "query_toks": ["SELECT", "personal_name", ",", "family_name", "FROM", "Students", "ORDER", "BY", "family_name"], "query_toks_no_value": ["select", "personal_name", ",", "family_name", "from", "students", "order", "by", "family_name"], "question": "List the personal names and family names of all the students in alphabetical order of family name.", "question_toks": ["List", "the", "personal", "names", "and", "family", "names", "of", "all", "the", "students", "in", "alphabetical", "order", "of", "family", "name", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 17, false], null]]], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "e_learning", "query": "SELECT personal_name ,  family_name FROM Students ORDER BY family_name", "query_toks": ["SELECT", "personal_name", ",", "family_name", "FROM", "Students", "ORDER", "BY", "family_name"], "query_toks_no_value": ["select", "personal_name", ",", "family_name", "from", "students", "order", "by", "family_name"], "question": "What are the personal names and family names of the students? Sort the result in alphabetical order of the family name.", "question_toks": ["What", "are", "the", "personal", "names", "and", "family", "names", "of", "the", "students", "?", "Sort", "the", "result", "in", "alphabetical", "order", "of", "the", "family", "name", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 17, false], null]]], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "e_learning", "query": "SELECT test_result ,  COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC", "query_toks": ["SELECT", "test_result", ",", "COUNT", "(", "*", ")", "FROM", "Student_Tests_Taken", "GROUP", "BY", "test_result", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "test_result", ",", "count", "(", "*", ")", "from", "student_tests_taken", "group", "by", "test_result", "order", "by", "count", "(", "*", ")", "desc"], "question": "List each test result and its count in descending order of count.", "question_toks": ["List", "each", "test", "result", "and", "its", "count", "in", "descending", "order", "of", "count", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 32, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 32, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "e_learning", "query": "SELECT test_result ,  COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC", "query_toks": ["SELECT", "test_result", ",", "COUNT", "(", "*", ")", "FROM", "Student_Tests_Taken", "GROUP", "BY", "test_result", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "test_result", ",", "count", "(", "*", ")", "from", "student_tests_taken", "group", "by", "test_result", "order", "by", "count", "(", "*", ")", "desc"], "question": "For each distinct test result, find the number of students who got the result.", "question_toks": ["For", "each", "distinct", "test", "result", ",", "find", "the", "number", "of", "students", "who", "got", "the", "result", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 32, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 32, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "e_learning", "query": "SELECT T1.personal_name ,  T1.family_name ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.personal_name", ",", "T1.family_name", ",", "T2.author_id", "FROM", "Course_Authors_and_Tutors", "AS", "T1", "JOIN", "Courses", "AS", "T2", "ON", "T1.author_id", "=", "T2.author_id", "GROUP", "BY", "T2.author_id", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "personal_name", ",", "t1", ".", "family_name", ",", "t2", ".", "author_id", "from", "course_authors_and_tutors", "as", "t1", "join", "courses", "as", "t2", "on", "t1", ".", "author_id", "=", "t2", ".", "author_id", "group", "by", "t2", ".", "author_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the personal name, family name, and author ID of the course author that teaches the most courses.", "question_toks": ["Find", "the", "personal", "name", ",", "family", "name", ",", "and", "author", "ID", "of", "the", "course", "author", "that", "teaches", "the", "most", "courses", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 21, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [[0, 21, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": []}}, {"db_id": "e_learning", "query": "SELECT T1.personal_name ,  T1.family_name ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.personal_name", ",", "T1.family_name", ",", "T2.author_id", "FROM", "Course_Authors_and_Tutors", "AS", "T1", "JOIN", "Courses", "AS", "T2", "ON", "T1.author_id", "=", "T2.author_id", "GROUP", "BY", "T2.author_id", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "personal_name", ",", "t1", ".", "family_name", ",", "t2", ".", "author_id", "from", "course_authors_and_tutors", "as", "t1", "join", "courses", "as", "t2", "on", "t1", ".", "author_id", "=", "t2", ".", "author_id", "group", "by", "t2", ".", "author_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the personal name, family name, and author ID of the course author who teaches the most courses?", "question_toks": ["What", "are", "the", "personal", "name", ",", "family", "name", ",", "and", "author", "ID", "of", "the", "course", "author", "who", "teaches", "the", "most", "courses", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 21, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [[0, 21, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": []}}, {"db_id": "e_learning", "query": "SELECT T1.address_line_1 ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id HAVING Count(*)  >=  2", "query_toks": ["SELECT", "T1.address_line_1", ",", "T2.author_id", "FROM", "Course_Authors_and_Tutors", "AS", "T1", "JOIN", "Courses", "AS", "T2", "ON", "T1.author_id", "=", "T2.author_id", "GROUP", "BY", "T2.author_id", "HAVING", "Count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "address_line_1", ",", "t2", ".", "author_id", "from", "course_authors_and_tutors", "as", "t1", "join", "courses", "as", "t2", "on", "t1", ".", "author_id", "=", "t2", ".", "author_id", "group", "by", "t2", ".", "author_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Find the addresses and author IDs of the course authors that teach at least two courses.", "question_toks": ["Find", "the", "addresses", "and", "author", "IDs", "of", "the", "course", "authors", "that", "teach", "at", "least", "two", "courses", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 21, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [[0, 21, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": []}}, {"db_id": "e_learning", "query": "SELECT T1.address_line_1 ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id HAVING Count(*)  >=  2", "query_toks": ["SELECT", "T1.address_line_1", ",", "T2.author_id", "FROM", "Course_Authors_and_Tutors", "AS", "T1", "JOIN", "Courses", "AS", "T2", "ON", "T1.author_id", "=", "T2.author_id", "GROUP", "BY", "T2.author_id", "HAVING", "Count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "address_line_1", ",", "t2", ".", "author_id", "from", "course_authors_and_tutors", "as", "t1", "join", "courses", "as", "t2", "on", "t1", ".", "author_id", "=", "t2", ".", "author_id", "group", "by", "t2", ".", "author_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Which course authors teach two or more courses? Give me their addresses and author IDs.", "question_toks": ["Which", "course", "authors", "teach", "two", "or", "more", "courses", "?", "Give", "me", "their", "addresses", "and", "author", "IDs", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 21, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [[0, 21, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": []}}, {"db_id": "e_learning", "query": "SELECT T1.course_name ,  T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id WHERE T2.subject_name  =  \"Computer Science\"", "query_toks": ["SELECT", "T1.course_name", ",", "T1.course_description", "FROM", "Courses", "AS", "T1", "JOIN", "Subjects", "AS", "T2", "ON", "T1.subject_id", "=", "T2.subject_id", "WHERE", "T2.subject_name", "=", "``", "Computer", "Science", "''"], "query_toks_no_value": ["select", "t1", ".", "course_name", ",", "t1", ".", "course_description", "from", "courses", "as", "t1", "join", "subjects", "as", "t2", "on", "t1", ".", "subject_id", "=", "t2", ".", "subject_id", "where", "t2", ".", "subject_name", "=", "value"], "question": "Find the names and descriptions of courses that belong to the subject named \"Computer Science\".", "question_toks": ["Find", "the", "names", "and", "descriptions", "of", "courses", "that", "belong", "to", "the", "subject", "named", "``", "Computer", "Science", "''", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 22, false], null], [0, 18, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 19, false], null], "\"Computer Science\"", null]]}}, {"db_id": "e_learning", "query": "SELECT T1.course_name ,  T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id WHERE T2.subject_name  =  \"Computer Science\"", "query_toks": ["SELECT", "T1.course_name", ",", "T1.course_description", "FROM", "Courses", "AS", "T1", "JOIN", "Subjects", "AS", "T2", "ON", "T1.subject_id", "=", "T2.subject_id", "WHERE", "T2.subject_name", "=", "``", "Computer", "Science", "''"], "query_toks_no_value": ["select", "t1", ".", "course_name", ",", "t1", ".", "course_description", "from", "courses", "as", "t1", "join", "subjects", "as", "t2", "on", "t1", ".", "subject_id", "=", "t2", ".", "subject_id", "where", "t2", ".", "subject_name", "=", "value"], "question": "What are the names and descriptions of the all courses under the \"Computer Science\" subject?", "question_toks": ["What", "are", "the", "names", "and", "descriptions", "of", "the", "all", "courses", "under", "the", "``", "Computer", "Science", "''", "subject", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 22, false], null], [0, 18, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 19, false], null], "\"Computer Science\"", null]]}}, {"db_id": "e_learning", "query": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id", "query_toks": ["SELECT", "T1.subject_id", ",", "T2.subject_name", ",", "COUNT", "(", "*", ")", "FROM", "Courses", "AS", "T1", "JOIN", "Subjects", "AS", "T2", "ON", "T1.subject_id", "=", "T2.subject_id", "GROUP", "BY", "T1.subject_id"], "query_toks_no_value": ["select", "t1", ".", "subject_id", ",", "t2", ".", "subject_name", ",", "count", "(", "*", ")", "from", "courses", "as", "t1", "join", "subjects", "as", "t2", "on", "t1", ".", "subject_id", "=", "t2", ".", "subject_id", "group", "by", "t1", ".", "subject_id"], "question": "Find the subject ID, subject name, and the corresponding number of available courses for each subject.", "question_toks": ["Find", "the", "subject", "ID", ",", "subject", "name", ",", "and", "the", "corresponding", "number", "of", "available", "courses", "for", "each", "subject", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 22, false], null], [0, 18, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [[0, 22, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 19, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "e_learning", "query": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id", "query_toks": ["SELECT", "T1.subject_id", ",", "T2.subject_name", ",", "COUNT", "(", "*", ")", "FROM", "Courses", "AS", "T1", "JOIN", "Subjects", "AS", "T2", "ON", "T1.subject_id", "=", "T2.subject_id", "GROUP", "BY", "T1.subject_id"], "query_toks_no_value": ["select", "t1", ".", "subject_id", ",", "t2", ".", "subject_name", ",", "count", "(", "*", ")", "from", "courses", "as", "t1", "join", "subjects", "as", "t2", "on", "t1", ".", "subject_id", "=", "t2", ".", "subject_id", "group", "by", "t1", ".", "subject_id"], "question": "What are the subject ID, subject name, and the number of available courses for each subject?", "question_toks": ["What", "are", "the", "subject", "ID", ",", "subject", "name", ",", "and", "the", "number", "of", "available", "courses", "for", "each", "subject", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 22, false], null], [0, 18, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [[0, 22, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 19, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "e_learning", "query": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) ASC", "query_toks": ["SELECT", "T1.subject_id", ",", "T2.subject_name", ",", "COUNT", "(", "*", ")", "FROM", "Courses", "AS", "T1", "JOIN", "Subjects", "AS", "T2", "ON", "T1.subject_id", "=", "T2.subject_id", "GROUP", "BY", "T1.subject_id", "ORDER", "BY", "COUNT", "(", "*", ")", "ASC"], "query_toks_no_value": ["select", "t1", ".", "subject_id", ",", "t2", ".", "subject_name", ",", "count", "(", "*", ")", "from", "courses", "as", "t1", "join", "subjects", "as", "t2", "on", "t1", ".", "subject_id", "=", "t2", ".", "subject_id", "group", "by", "t1", ".", "subject_id", "order", "by", "count", "(", "*", ")", "asc"], "question": "Find the subject ID, name of subject and the corresponding number of courses for each subject, and sort by the course count in ascending order.", "question_toks": ["Find", "the", "subject", "ID", ",", "name", "of", "subject", "and", "the", "corresponding", "number", "of", "courses", "for", "each", "subject", ",", "and", "sort", "by", "the", "course", "count", "in", "ascending", "order", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 22, false], null], [0, 18, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [[0, 22, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 19, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "e_learning", "query": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) ASC", "query_toks": ["SELECT", "T1.subject_id", ",", "T2.subject_name", ",", "COUNT", "(", "*", ")", "FROM", "Courses", "AS", "T1", "JOIN", "Subjects", "AS", "T2", "ON", "T1.subject_id", "=", "T2.subject_id", "GROUP", "BY", "T1.subject_id", "ORDER", "BY", "COUNT", "(", "*", ")", "ASC"], "query_toks_no_value": ["select", "t1", ".", "subject_id", ",", "t2", ".", "subject_name", ",", "count", "(", "*", ")", "from", "courses", "as", "t1", "join", "subjects", "as", "t2", "on", "t1", ".", "subject_id", "=", "t2", ".", "subject_id", "group", "by", "t1", ".", "subject_id", "order", "by", "count", "(", "*", ")", "asc"], "question": "List the subject ID, name of subject and the number of courses available for each subject in ascending order of the course counts.", "question_toks": ["List", "the", "subject", "ID", ",", "name", "of", "subject", "and", "the", "number", "of", "courses", "available", "for", "each", "subject", "in", "ascending", "order", "of", "the", "course", "counts", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 22, false], null], [0, 18, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [[0, 22, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 19, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "e_learning", "query": "SELECT T1.course_description ,  T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  >  2", "query_toks": ["SELECT", "T1.course_description", ",", "T1.course_name", "FROM", "Courses", "AS", "T1", "JOIN", "Student_Course_Enrolment", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id", "GROUP", "BY", "T1.course_name", "HAVING", "COUNT", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "t1", ".", "course_description", ",", "t1", ".", "course_name", "from", "courses", "as", "t1", "join", "student_course_enrolment", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "group", "by", "t1", ".", "course_name", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the descriptions and names of the courses that have student enrollment bigger than 2?", "question_toks": ["What", "are", "the", "descriptions", "and", "names", "of", "the", "courses", "that", "have", "student", "enrollment", "bigger", "than", "2", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 20, false], null], [0, 27, false], null]], "table_units": [["table_unit", 3], ["table_unit", 4]]}, "groupBy": [[0, 23, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 24, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": []}}, {"db_id": "e_learning", "query": "SELECT T1.course_description ,  T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  >  2", "query_toks": ["SELECT", "T1.course_description", ",", "T1.course_name", "FROM", "Courses", "AS", "T1", "JOIN", "Student_Course_Enrolment", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id", "GROUP", "BY", "T1.course_name", "HAVING", "COUNT", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "t1", ".", "course_description", ",", "t1", ".", "course_name", "from", "courses", "as", "t1", "join", "student_course_enrolment", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "group", "by", "t1", ".", "course_name", "having", "count", "(", "*", ")", ">", "value"], "question": "Return the descriptions and names of the courses that have more than two students enrolled in.", "question_toks": ["Return", "the", "descriptions", "and", "names", "of", "the", "courses", "that", "have", "more", "than", "two", "students", "enrolled", "in", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 20, false], null], [0, 27, false], null]], "table_units": [["table_unit", 3], ["table_unit", 4]]}, "groupBy": [[0, 23, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 24, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": []}}, {"db_id": "e_learning", "query": "SELECT T1.course_name ,  COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name", "query_toks": ["SELECT", "T1.course_name", ",", "COUNT", "(", "*", ")", "FROM", "Courses", "AS", "T1", "JOIN", "Student_Course_Enrolment", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id", "GROUP", "BY", "T1.course_name"], "query_toks_no_value": ["select", "t1", ".", "course_name", ",", "count", "(", "*", ")", "from", "courses", "as", "t1", "join", "student_course_enrolment", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "group", "by", "t1", ".", "course_name"], "question": "What is the name of each course and the corresponding number of student enrollment?", "question_toks": ["What", "is", "the", "name", "of", "each", "course", "and", "the", "corresponding", "number", "of", "student", "enrollment", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 20, false], null], [0, 27, false], null]], "table_units": [["table_unit", 3], ["table_unit", 4]]}, "groupBy": [[0, 23, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "e_learning", "query": "SELECT T1.course_name ,  COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name", "query_toks": ["SELECT", "T1.course_name", ",", "COUNT", "(", "*", ")", "FROM", "Courses", "AS", "T1", "JOIN", "Student_Course_Enrolment", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id", "GROUP", "BY", "T1.course_name"], "query_toks_no_value": ["select", "t1", ".", "course_name", ",", "count", "(", "*", ")", "from", "courses", "as", "t1", "join", "student_course_enrolment", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "group", "by", "t1", ".", "course_name"], "question": "List the name and the number of enrolled student for each course.", "question_toks": ["List", "the", "name", "and", "the", "number", "of", "enrolled", "student", "for", "each", "course", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 20, false], null], [0, 27, false], null]], "table_units": [["table_unit", 3], ["table_unit", 4]]}, "groupBy": [[0, 23, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "e_learning", "query": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.personal_name  =  \"Karson\"", "query_toks": ["SELECT", "T1.date_of_enrolment", ",", "T1.date_of_completion", "FROM", "Student_Course_Enrolment", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "WHERE", "T2.personal_name", "=", "``", "Karson", "''"], "query_toks_no_value": ["select", "t1", ".", "date_of_enrolment", ",", "t1", ".", "date_of_completion", "from", "student_course_enrolment", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "where", "t2", ".", "personal_name", "=", "value"], "question": "List the dates of enrollment and completion of the student with personal name \"Karson\".", "question_toks": ["List", "the", "dates", "of", "enrollment", "and", "completion", "of", "the", "student", "with", "personal", "name", "``", "Karson", "''", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 26, false], null], [0, 10, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 28, false], null]], [0, [0, [0, 29, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 15, false], null], "\"Karson\"", null]]}}, {"db_id": "e_learning", "query": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.personal_name  =  \"Karson\"", "query_toks": ["SELECT", "T1.date_of_enrolment", ",", "T1.date_of_completion", "FROM", "Student_Course_Enrolment", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "WHERE", "T2.personal_name", "=", "``", "Karson", "''"], "query_toks_no_value": ["select", "t1", ".", "date_of_enrolment", ",", "t1", ".", "date_of_completion", "from", "student_course_enrolment", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "where", "t2", ".", "personal_name", "=", "value"], "question": "On what dates did the student whose personal name is \"Karson\" enroll in and complete the courses?", "question_toks": ["On", "what", "dates", "did", "the", "student", "whose", "personal", "name", "is", "``", "Karson", "''", "enroll", "in", "and", "complete", "the", "courses", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 26, false], null], [0, 10, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 28, false], null]], [0, [0, [0, 29, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 15, false], null], "\"Karson\"", null]]}}, {"db_id": "e_learning", "query": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.family_name  =  \"Zieme\" AND T2.personal_name  =  \"Bernie\"", "query_toks": ["SELECT", "T1.date_of_enrolment", ",", "T1.date_of_completion", "FROM", "Student_Course_Enrolment", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "WHERE", "T2.family_name", "=", "``", "Zieme", "''", "AND", "T2.personal_name", "=", "``", "Bernie", "''"], "query_toks_no_value": ["select", "t1", ".", "date_of_enrolment", ",", "t1", ".", "date_of_completion", "from", "student_course_enrolment", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "where", "t2", ".", "family_name", "=", "value", "and", "t2", ".", "personal_name", "=", "value"], "question": "List the dates of enrollment and completion of the student with family name \"Zieme\" and personal name \"Bernie\".", "question_toks": ["List", "the", "dates", "of", "enrollment", "and", "completion", "of", "the", "student", "with", "family", "name", "``", "Zieme", "''", "and", "personal", "name", "``", "Bernie", "''", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 26, false], null], [0, 10, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 28, false], null]], [0, [0, [0, 29, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 17, false], null], "\"Zieme\"", null], "and", [false, 2, [0, [0, 15, false], null], "\"Bernie\"", null]]}}, {"db_id": "e_learning", "query": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.family_name  =  \"Zieme\" AND T2.personal_name  =  \"Bernie\"", "query_toks": ["SELECT", "T1.date_of_enrolment", ",", "T1.date_of_completion", "FROM", "Student_Course_Enrolment", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "WHERE", "T2.family_name", "=", "``", "Zieme", "''", "AND", "T2.personal_name", "=", "``", "Bernie", "''"], "query_toks_no_value": ["select", "t1", ".", "date_of_enrolment", ",", "t1", ".", "date_of_completion", "from", "student_course_enrolment", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "where", "t2", ".", "family_name", "=", "value", "and", "t2", ".", "personal_name", "=", "value"], "question": "On what dates did the student with family name \"Zieme\" and personal name \"Bernie\" enroll in and complete the courses?", "question_toks": ["On", "what", "dates", "did", "the", "student", "with", "family", "name", "``", "Zieme", "''", "and", "personal", "name", "``", "Bernie", "''", "enroll", "in", "and", "complete", "the", "courses", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 26, false], null], [0, 10, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 28, false], null]], [0, [0, [0, 29, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 17, false], null], "\"Zieme\"", null], "and", [false, 2, [0, [0, 15, false], null], "\"Bernie\"", null]]}}, {"db_id": "e_learning", "query": "SELECT T1.student_id ,  T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.student_id", ",", "T2.login_name", "FROM", "Student_Course_Enrolment", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "GROUP", "BY", "T1.student_id", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "student_id", ",", "t2", ".", "login_name", "from", "student_course_enrolment", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "group", "by", "t1", ".", "student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the student ID and login name of the student with the most course enrollments", "question_toks": ["Find", "the", "student", "ID", "and", "login", "name", "of", "the", "student", "with", "the", "most", "course", "enrollments"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 26, false], null], [0, 10, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [[0, 26, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "e_learning", "query": "SELECT T1.student_id ,  T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.student_id", ",", "T2.login_name", "FROM", "Student_Course_Enrolment", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "GROUP", "BY", "T1.student_id", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "student_id", ",", "t2", ".", "login_name", "from", "student_course_enrolment", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "group", "by", "t1", ".", "student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the student ID and login name of the student who are enrolled in the most courses?", "question_toks": ["What", "are", "the", "student", "ID", "and", "login", "name", "of", "the", "student", "who", "are", "enrolled", "in", "the", "most", "courses", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 26, false], null], [0, 10, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [[0, 26, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "e_learning", "query": "SELECT T1.student_id ,  T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  >=  2", "query_toks": ["SELECT", "T1.student_id", ",", "T2.personal_name", "FROM", "Student_Course_Enrolment", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "GROUP", "BY", "T1.student_id", "HAVING", "COUNT", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "student_id", ",", "t2", ".", "personal_name", "from", "student_course_enrolment", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "group", "by", "t1", ".", "student_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Find the student ID and personal name of the student with at least two enrollments.", "question_toks": ["Find", "the", "student", "ID", "and", "personal", "name", "of", "the", "student", "with", "at", "least", "two", "enrollments", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 26, false], null], [0, 10, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [[0, 26, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": []}}, {"db_id": "e_learning", "query": "SELECT T1.student_id ,  T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  >=  2", "query_toks": ["SELECT", "T1.student_id", ",", "T2.personal_name", "FROM", "Student_Course_Enrolment", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "GROUP", "BY", "T1.student_id", "HAVING", "COUNT", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "student_id", ",", "t2", ".", "personal_name", "from", "student_course_enrolment", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "group", "by", "t1", ".", "student_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Which student are enrolled in at least two courses? Give me the student ID and personal name.", "question_toks": ["Which", "student", "are", "enrolled", "in", "at", "least", "two", "courses", "?", "Give", "me", "the", "student", "ID", "and", "personal", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 26, false], null], [0, 10, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [[0, 26, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": []}}, {"db_id": "e_learning", "query": "SELECT T1.student_id ,  T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  <=  2", "query_toks": ["SELECT", "T1.student_id", ",", "T2.middle_name", "FROM", "Student_Course_Enrolment", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "GROUP", "BY", "T1.student_id", "HAVING", "COUNT", "(", "*", ")", "<", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "student_id", ",", "t2", ".", "middle_name", "from", "student_course_enrolment", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "group", "by", "t1", ".", "student_id", "having", "count", "(", "*", ")", "<", "=", "value"], "question": "Find the student ID and middle name for all the students with at most two enrollments.", "question_toks": ["Find", "the", "student", "ID", "and", "middle", "name", "for", "all", "the", "students", "with", "at", "most", "two", "enrollments", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 26, false], null], [0, 10, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [[0, 26, false]], "having": [[false, 6, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": []}}, {"db_id": "e_learning", "query": "SELECT T1.student_id ,  T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  <=  2", "query_toks": ["SELECT", "T1.student_id", ",", "T2.middle_name", "FROM", "Student_Course_Enrolment", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "GROUP", "BY", "T1.student_id", "HAVING", "COUNT", "(", "*", ")", "<", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "student_id", ",", "t2", ".", "middle_name", "from", "student_course_enrolment", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "group", "by", "t1", ".", "student_id", "having", "count", "(", "*", ")", "<", "=", "value"], "question": "What are the student IDs and middle names of the students enrolled in at most two courses?", "question_toks": ["What", "are", "the", "student", "IDs", "and", "middle", "names", "of", "the", "students", "enrolled", "in", "at", "most", "two", "courses", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 26, false], null], [0, 10, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [[0, 26, false]], "having": [[false, 6, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": []}}, {"db_id": "insurance_policies", "query": "SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.Claim_id HAVING count(*)  >  2 UNION SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id WHERE T1.Amount_Claimed  =  ( SELECT max(Amount_Claimed) FROM Claims )", "query_toks": ["SELECT", "T1.Date_Claim_Made", ",", "T1.Claim_id", "FROM", "Claims", "AS", "T1", "JOIN", "Settlements", "AS", "T2", "ON", "T1.Claim_id", "=", "T2.Claim_id", "GROUP", "BY", "T1.Claim_id", "HAVING", "count", "(", "*", ")", ">", "2", "UNION", "SELECT", "T1.Date_Claim_Made", ",", "T1.Claim_id", "FROM", "Claims", "AS", "T1", "JOIN", "Settlements", "AS", "T2", "ON", "T1.Claim_id", "=", "T2.Claim_id", "WHERE", "T1.Amount_Claimed", "=", "(", "SELECT", "max", "(", "Amount_Claimed", ")", "FROM", "Claims", ")"], "query_toks_no_value": ["select", "t1", ".", "date_claim_made", ",", "t1", ".", "claim_id", "from", "claims", "as", "t1", "join", "settlements", "as", "t2", "on", "t1", ".", "claim_id", "=", "t2", ".", "claim_id", "group", "by", "t1", ".", "claim_id", "having", "count", "(", "*", ")", ">", "value", "union", "select", "t1", ".", "date_claim_made", ",", "t1", ".", "claim_id", "from", "claims", "as", "t1", "join", "settlements", "as", "t2", "on", "t1", ".", "claim_id", "=", "t2", ".", "claim_id", "where", "t1", ".", "amount_claimed", "=", "(", "select", "max", "(", "amount_claimed", ")", "from", "claims", ")"], "question": "Which claims caused more than 2 settlements or have the maximum claim value? List the date the claim was made and the claim id.", "question_toks": ["Which", "claims", "caused", "more", "than", "2", "settlements", "or", "have", "the", "maximum", "claim", "value", "?", "List", "the", "date", "the", "claim", "was", "made", "and", "the", "claim", "id", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 15, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 8, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 8, false], null]]]], "union": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 15, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 12, false], null]]]], "union": null, "where": []}, null]]}, "where": []}}, {"db_id": "insurance_policies", "query": "SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.Claim_id HAVING count(*)  >  2 UNION SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id WHERE T1.Amount_Claimed  =  ( SELECT max(Amount_Claimed) FROM Claims )", "query_toks": ["SELECT", "T1.Date_Claim_Made", ",", "T1.Claim_id", "FROM", "Claims", "AS", "T1", "JOIN", "Settlements", "AS", "T2", "ON", "T1.Claim_id", "=", "T2.Claim_id", "GROUP", "BY", "T1.Claim_id", "HAVING", "count", "(", "*", ")", ">", "2", "UNION", "SELECT", "T1.Date_Claim_Made", ",", "T1.Claim_id", "FROM", "Claims", "AS", "T1", "JOIN", "Settlements", "AS", "T2", "ON", "T1.Claim_id", "=", "T2.Claim_id", "WHERE", "T1.Amount_Claimed", "=", "(", "SELECT", "max", "(", "Amount_Claimed", ")", "FROM", "Claims", ")"], "query_toks_no_value": ["select", "t1", ".", "date_claim_made", ",", "t1", ".", "claim_id", "from", "claims", "as", "t1", "join", "settlements", "as", "t2", "on", "t1", ".", "claim_id", "=", "t2", ".", "claim_id", "group", "by", "t1", ".", "claim_id", "having", "count", "(", "*", ")", ">", "value", "union", "select", "t1", ".", "date_claim_made", ",", "t1", ".", "claim_id", "from", "claims", "as", "t1", "join", "settlements", "as", "t2", "on", "t1", ".", "claim_id", "=", "t2", ".", "claim_id", "where", "t1", ".", "amount_claimed", "=", "(", "select", "max", "(", "amount_claimed", ")", "from", "claims", ")"], "question": "Find the claims that led to more than two settlements or have the maximum claim value. For each of them, return the date the claim was made and the id of the claim.", "question_toks": ["Find", "the", "claims", "that", "led", "to", "more", "than", "two", "settlements", "or", "have", "the", "maximum", "claim", "value", ".", "For", "each", "of", "them", ",", "return", "the", "date", "the", "claim", "was", "made", "and", "the", "id", "of", "the", "claim", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 15, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 8, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 8, false], null]]]], "union": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 15, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 12, false], null]]]], "union": null, "where": []}, null]]}, "where": []}}, {"db_id": "insurance_policies", "query": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 EXCEPT SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id JOIN Claims AS T3 ON T2.policy_id  =  T3.policy_id", "query_toks": ["SELECT", "T1.customer_details", ",", "T1.customer_id", "FROM", "Customers", "AS", "T1", "JOIN", "Customer_Policies", "AS", "T2", "ON", "T1.Customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id", "HAVING", "count", "(", "*", ")", ">", "=", "2", "EXCEPT", "SELECT", "T1.customer_details", ",", "T1.customer_id", "FROM", "Customers", "AS", "T1", "JOIN", "Customer_Policies", "AS", "T2", "ON", "T1.Customer_id", "=", "T2.customer_id", "JOIN", "Claims", "AS", "T3", "ON", "T2.policy_id", "=", "T3.policy_id"], "query_toks_no_value": ["select", "t1", ".", "customer_details", ",", "t1", ".", "customer_id", "from", "customers", "as", "t1", "join", "customer_policies", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id", "having", "count", "(", "*", ")", ">", "=", "value", "except", "select", "t1", ".", "customer_details", ",", "t1", ".", "customer_id", "from", "customers", "as", "t1", "join", "customer_policies", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "claims", "as", "t3", "on", "t2", ".", "policy_id", "=", "t3", ".", "policy_id"], "question": "Which customer had at least 2 policies but did not file any claims? List the customer details and id.", "question_toks": ["Which", "customer", "had", "at", "least", "2", "policies", "but", "did", "not", "file", "any", "claims", "?", "List", "the", "customer", "details", "and", "id", "."], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 4, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": []}, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 4, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 1, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": []}}, {"db_id": "insurance_policies", "query": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 EXCEPT SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id JOIN Claims AS T3 ON T2.policy_id  =  T3.policy_id", "query_toks": ["SELECT", "T1.customer_details", ",", "T1.customer_id", "FROM", "Customers", "AS", "T1", "JOIN", "Customer_Policies", "AS", "T2", "ON", "T1.Customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id", "HAVING", "count", "(", "*", ")", ">", "=", "2", "EXCEPT", "SELECT", "T1.customer_details", ",", "T1.customer_id", "FROM", "Customers", "AS", "T1", "JOIN", "Customer_Policies", "AS", "T2", "ON", "T1.Customer_id", "=", "T2.customer_id", "JOIN", "Claims", "AS", "T3", "ON", "T2.policy_id", "=", "T3.policy_id"], "query_toks_no_value": ["select", "t1", ".", "customer_details", ",", "t1", ".", "customer_id", "from", "customers", "as", "t1", "join", "customer_policies", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id", "having", "count", "(", "*", ")", ">", "=", "value", "except", "select", "t1", ".", "customer_details", ",", "t1", ".", "customer_id", "from", "customers", "as", "t1", "join", "customer_policies", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "claims", "as", "t3", "on", "t2", ".", "policy_id", "=", "t3", ".", "policy_id"], "question": "Give me the the customer details and id for the customers who had two or more policies but did not file any claims.", "question_toks": ["Give", "me", "the", "the", "customer", "details", "and", "id", "for", "the", "customers", "who", "had", "two", "or", "more", "policies", "but", "did", "not", "file", "any", "claims", "."], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 4, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": []}, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 4, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 1, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": []}}, {"db_id": "insurance_policies", "query": "SELECT Payment_Method_Code ,  Date_Payment_Made ,  Amount_Payment FROM Payments ORDER BY Date_Payment_Made ASC", "query_toks": ["SELECT", "Payment_Method_Code", ",", "Date_Payment_Made", ",", "Amount_Payment", "FROM", "Payments", "ORDER", "BY", "Date_Payment_Made", "ASC"], "query_toks_no_value": ["select", "payment_method_code", ",", "date_payment_made", ",", "amount_payment", "from", "payments", "order", "by", "date_payment_made", "asc"], "question": "List the method, date and amount of all the payments, in ascending order of date.", "question_toks": ["List", "the", "method", ",", "date", "and", "amount", "of", "all", "the", "payments", ",", "in", "ascending", "order", "of", "date", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 24, false], null]]], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]], [0, [0, [0, 25, false], null]]]], "union": null, "where": []}}, {"db_id": "insurance_policies", "query": "SELECT Payment_Method_Code ,  Date_Payment_Made ,  Amount_Payment FROM Payments ORDER BY Date_Payment_Made ASC", "query_toks": ["SELECT", "Payment_Method_Code", ",", "Date_Payment_Made", ",", "Amount_Payment", "FROM", "Payments", "ORDER", "BY", "Date_Payment_Made", "ASC"], "query_toks_no_value": ["select", "payment_method_code", ",", "date_payment_made", ",", "amount_payment", "from", "payments", "order", "by", "date_payment_made", "asc"], "question": "What are the method, date and amount of each payment? Sort the list in ascending order of date.", "question_toks": ["What", "are", "the", "method", ",", "date", "and", "amount", "of", "each", "payment", "?", "Sort", "the", "list", "in", "ascending", "order", "of", "date", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 24, false], null]]], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]], [0, [0, [0, 25, false], null]]]], "union": null, "where": []}}, {"db_id": "insurance_policies", "query": "SELECT Amount_Settled ,  Amount_Claimed FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1", "query_toks": ["SELECT", "Amount_Settled", ",", "Amount_Claimed", "FROM", "Claims", "ORDER", "BY", "Amount_Claimed", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "amount_settled", ",", "amount_claimed", "from", "claims", "order", "by", "amount_claimed", "desc", "limit", "value"], "question": "Among all the claims, what is the settlement amount of the claim with the largest claim amount? List both the settlement amount and claim amount.", "question_toks": ["Among", "all", "the", "claims", ",", "what", "is", "the", "settlement", "amount", "of", "the", "claim", "with", "the", "largest", "claim", "amount", "?", "List", "both", "the", "settlement", "amount", "and", "claim", "amount", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 12, false], null]]], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "insurance_policies", "query": "SELECT Amount_Settled ,  Amount_Claimed FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1", "query_toks": ["SELECT", "Amount_Settled", ",", "Amount_Claimed", "FROM", "Claims", "ORDER", "BY", "Amount_Claimed", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "amount_settled", ",", "amount_claimed", "from", "claims", "order", "by", "amount_claimed", "desc", "limit", "value"], "question": "Find the settlement amount of the claim with the largest claim amount. Show both the settlement amount and claim amount.", "question_toks": ["Find", "the", "settlement", "amount", "of", "the", "claim", "with", "the", "largest", "claim", "amount", ".", "Show", "both", "the", "settlement", "amount", "and", "claim", "amount", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 12, false], null]]], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "insurance_policies", "query": "SELECT Amount_Settled ,  Amount_Claimed FROM Claims ORDER BY Amount_Settled ASC LIMIT 1", "query_toks": ["SELECT", "Amount_Settled", ",", "Amount_Claimed", "FROM", "Claims", "ORDER", "BY", "Amount_Settled", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "amount_settled", ",", "amount_claimed", "from", "claims", "order", "by", "amount_settled", "asc", "limit", "value"], "question": "Among all the claims, what is the amount claimed in the claim with the least amount settled? List both the settlement amount and claim amount.", "question_toks": ["Among", "all", "the", "claims", ",", "what", "is", "the", "amount", "claimed", "in", "the", "claim", "with", "the", "least", "amount", "settled", "?", "List", "both", "the", "settlement", "amount", "and", "claim", "amount", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 13, false], null]]], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "insurance_policies", "query": "SELECT Amount_Settled ,  Amount_Claimed FROM Claims ORDER BY Amount_Settled ASC LIMIT 1", "query_toks": ["SELECT", "Amount_Settled", ",", "Amount_Claimed", "FROM", "Claims", "ORDER", "BY", "Amount_Settled", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "amount_settled", ",", "amount_claimed", "from", "claims", "order", "by", "amount_settled", "asc", "limit", "value"], "question": "Find the claimed amount in the claim with the least amount settled. Show both the settlement amount and claim amount.", "question_toks": ["Find", "the", "claimed", "amount", "in", "the", "claim", "with", "the", "least", "amount", "settled", ".", "Show", "both", "the", "settlement", "amount", "and", "claim", "amount", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 13, false], null]]], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "insurance_policies", "query": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Claims WHERE Amount_Claimed  >  ( SELECT avg(Amount_Claimed) FROM Claims )", "query_toks": ["SELECT", "Date_Claim_Made", ",", "Date_Claim_Settled", "FROM", "Claims", "WHERE", "Amount_Claimed", ">", "(", "SELECT", "avg", "(", "Amount_Claimed", ")", "FROM", "Claims", ")"], "query_toks_no_value": ["select", "date_claim_made", ",", "date_claim_settled", "from", "claims", "where", "amount_claimed", ">", "(", "select", "avg", "(", "amount_claimed", ")", "from", "claims", ")"], "question": "Among all the claims, which claims have a claimed amount larger than the average? List the date the claim was made and the date it was settled.", "question_toks": ["Among", "all", "the", "claims", ",", "which", "claims", "have", "a", "claimed", "amount", "larger", "than", "the", "average", "?", "List", "the", "date", "the", "claim", "was", "made", "and", "the", "date", "it", "was", "settled", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 12, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 12, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "insurance_policies", "query": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Claims WHERE Amount_Claimed  >  ( SELECT avg(Amount_Claimed) FROM Claims )", "query_toks": ["SELECT", "Date_Claim_Made", ",", "Date_Claim_Settled", "FROM", "Claims", "WHERE", "Amount_Claimed", ">", "(", "SELECT", "avg", "(", "Amount_Claimed", ")", "FROM", "Claims", ")"], "query_toks_no_value": ["select", "date_claim_made", ",", "date_claim_settled", "from", "claims", "where", "amount_claimed", ">", "(", "select", "avg", "(", "amount_claimed", ")", "from", "claims", ")"], "question": "Give me the claim date, settlement date for all the claims whose claimed amount is larger than the average.", "question_toks": ["Give", "me", "the", "claim", "date", ",", "settlement", "date", "for", "all", "the", "claims", "whose", "claimed", "amount", "is", "larger", "than", "the", "average", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 12, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 12, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "insurance_policies", "query": "SELECT T1.Claim_id ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id", "query_toks": ["SELECT", "T1.Claim_id", ",", "count", "(", "*", ")", "FROM", "Claims", "AS", "T1", "JOIN", "Settlements", "AS", "T2", "ON", "T1.claim_id", "=", "T2.claim_id", "GROUP", "BY", "T1.claim_id"], "query_toks_no_value": ["select", "t1", ".", "claim_id", ",", "count", "(", "*", ")", "from", "claims", "as", "t1", "join", "settlements", "as", "t2", "on", "t1", ".", "claim_id", "=", "t2", ".", "claim_id", "group", "by", "t1", ".", "claim_id"], "question": "How many settlements does each claim correspond to? List the claim id and the number of settlements.", "question_toks": ["How", "many", "settlements", "does", "each", "claim", "correspond", "to", "?", "List", "the", "claim", "id", "and", "the", "number", "of", "settlements", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 15, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "insurance_policies", "query": "SELECT T1.Claim_id ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id", "query_toks": ["SELECT", "T1.Claim_id", ",", "count", "(", "*", ")", "FROM", "Claims", "AS", "T1", "JOIN", "Settlements", "AS", "T2", "ON", "T1.claim_id", "=", "T2.claim_id", "GROUP", "BY", "T1.claim_id"], "query_toks_no_value": ["select", "t1", ".", "claim_id", ",", "count", "(", "*", ")", "from", "claims", "as", "t1", "join", "settlements", "as", "t2", "on", "t1", ".", "claim_id", "=", "t2", ".", "claim_id", "group", "by", "t1", ".", "claim_id"], "question": "Find the number of settlements each claim corresponds to. Show the number together with the claim id.", "question_toks": ["Find", "the", "number", "of", "settlements", "each", "claim", "corresponds", "to", ".", "Show", "the", "number", "together", "with", "the", "claim", "id", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 15, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "insurance_policies", "query": "SELECT T1.claim_id ,  T1.date_claim_made ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.claim_id", ",", "T1.date_claim_made", ",", "count", "(", "*", ")", "FROM", "Claims", "AS", "T1", "JOIN", "Settlements", "AS", "T2", "ON", "T1.claim_id", "=", "T2.claim_id", "GROUP", "BY", "T1.claim_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "claim_id", ",", "t1", ".", "date_claim_made", ",", "count", "(", "*", ")", "from", "claims", "as", "t1", "join", "settlements", "as", "t2", "on", "t1", ".", "claim_id", "=", "t2", ".", "claim_id", "group", "by", "t1", ".", "claim_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which claim incurred the most number of settlements? List the claim id, the date the claim was made, and the number.", "question_toks": ["Which", "claim", "incurred", "the", "most", "number", "of", "settlements", "?", "List", "the", "claim", "id", ",", "the", "date", "the", "claim", "was", "made", ",", "and", "the", "number", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 15, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "insurance_policies", "query": "SELECT T1.claim_id ,  T1.date_claim_made ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.claim_id", ",", "T1.date_claim_made", ",", "count", "(", "*", ")", "FROM", "Claims", "AS", "T1", "JOIN", "Settlements", "AS", "T2", "ON", "T1.claim_id", "=", "T2.claim_id", "GROUP", "BY", "T1.claim_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "claim_id", ",", "t1", ".", "date_claim_made", ",", "count", "(", "*", ")", "from", "claims", "as", "t1", "join", "settlements", "as", "t2", "on", "t1", ".", "claim_id", "=", "t2", ".", "claim_id", "group", "by", "t1", ".", "claim_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the claim id and claim date of the claim that incurred the most settlement count. Also tell me the count.", "question_toks": ["Find", "the", "claim", "id", "and", "claim", "date", "of", "the", "claim", "that", "incurred", "the", "most", "settlement", "count", ".", "Also", "tell", "me", "the", "count", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 15, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "insurance_policies", "query": "SELECT count(*) ,  T1.claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY T1.Date_Claim_Settled DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.claim_id", "FROM", "Claims", "AS", "T1", "JOIN", "Settlements", "AS", "T2", "ON", "T1.claim_id", "=", "T2.claim_id", "GROUP", "BY", "T1.claim_id", "ORDER", "BY", "T1.Date_Claim_Settled", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "claim_id", "from", "claims", "as", "t1", "join", "settlements", "as", "t2", "on", "t1", ".", "claim_id", "=", "t2", ".", "claim_id", "group", "by", "t1", ".", "claim_id", "order", "by", "t1", ".", "date_claim_settled", "desc", "limit", "value"], "question": "How many settlements were made on the claim with the most recent claim settlement date? List the number and the claim id.", "question_toks": ["How", "many", "settlements", "were", "made", "on", "the", "claim", "with", "the", "most", "recent", "claim", "settlement", "date", "?", "List", "the", "number", "and", "the", "claim", "id", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 15, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 11, false], null]]], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "insurance_policies", "query": "SELECT count(*) ,  T1.claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY T1.Date_Claim_Settled DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.claim_id", "FROM", "Claims", "AS", "T1", "JOIN", "Settlements", "AS", "T2", "ON", "T1.claim_id", "=", "T2.claim_id", "GROUP", "BY", "T1.claim_id", "ORDER", "BY", "T1.Date_Claim_Settled", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "claim_id", "from", "claims", "as", "t1", "join", "settlements", "as", "t2", "on", "t1", ".", "claim_id", "=", "t2", ".", "claim_id", "group", "by", "t1", ".", "claim_id", "order", "by", "t1", ".", "date_claim_settled", "desc", "limit", "value"], "question": "Find the claim id and the number of settlements made for the claim with the most recent settlement date.", "question_toks": ["Find", "the", "claim", "id", "and", "the", "number", "of", "settlements", "made", "for", "the", "claim", "with", "the", "most", "recent", "settlement", "date", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 15, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 11, false], null]]], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "insurance_policies", "query": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.Customer_id GROUP BY T1.customer_id HAVING count(*)  >  1", "query_toks": ["SELECT", "T1.customer_details", ",", "T1.customer_id", "FROM", "Customers", "AS", "T1", "JOIN", "Customer_Policies", "AS", "T2", "ON", "T1.Customer_id", "=", "T2.Customer_id", "GROUP", "BY", "T1.customer_id", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "customer_details", ",", "t1", ".", "customer_id", "from", "customers", "as", "t1", "join", "customer_policies", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id", "having", "count", "(", "*", ")", ">", "value"], "question": "Who are the customers that had more than 1 policy? List the customer details and id.", "question_toks": ["Who", "are", "the", "customers", "that", "had", "more", "than", "1", "policy", "?", "List", "the", "customer", "details", "and", "id", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 4, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 1, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": []}}, {"db_id": "insurance_policies", "query": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.Customer_id GROUP BY T1.customer_id HAVING count(*)  >  1", "query_toks": ["SELECT", "T1.customer_details", ",", "T1.customer_id", "FROM", "Customers", "AS", "T1", "JOIN", "Customer_Policies", "AS", "T2", "ON", "T1.Customer_id", "=", "T2.Customer_id", "GROUP", "BY", "T1.customer_id", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "customer_details", ",", "t1", ".", "customer_id", "from", "customers", "as", "t1", "join", "customer_policies", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id", "having", "count", "(", "*", ")", ">", "value"], "question": "Find the the customer details and id for the customers who had more than one policy.", "question_toks": ["Find", "the", "the", "customer", "details", "and", "id", "for", "the", "customers", "who", "had", "more", "than", "one", "policy", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 4, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 1, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": []}}, {"db_id": "insurance_policies", "query": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Settlements", "query_toks": ["SELECT", "Date_Claim_Made", ",", "Date_Claim_Settled", "FROM", "Settlements"], "query_toks_no_value": ["select", "date_claim_made", ",", "date_claim_settled", "from", "settlements"], "question": "What are the claim dates and settlement dates of all the settlements?", "question_toks": ["What", "are", "the", "claim", "dates", "and", "settlement", "dates", "of", "all", "the", "settlements", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "insurance_policies", "query": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Settlements", "query_toks": ["SELECT", "Date_Claim_Made", ",", "Date_Claim_Settled", "FROM", "Settlements"], "query_toks_no_value": ["select", "date_claim_made", ",", "date_claim_settled", "from", "settlements"], "question": "Tell me the the claim date and settlement date for each settlement case.", "question_toks": ["Tell", "me", "the", "the", "claim", "date", "and", "settlement", "date", "for", "each", "settlement", "case", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "insurance_policies", "query": "SELECT Payment_ID ,  Date_Payment_Made ,  Amount_Payment FROM Payments WHERE Payment_Method_Code  =  'Visa'", "query_toks": ["SELECT", "Payment_ID", ",", "Date_Payment_Made", ",", "Amount_Payment", "FROM", "Payments", "WHERE", "Payment_Method_Code", "=", "'Visa", "'"], "query_toks_no_value": ["select", "payment_id", ",", "date_payment_made", ",", "amount_payment", "from", "payments", "where", "payment_method_code", "=", "value"], "question": "Which Payments were processed with Visa? List the payment Id, the date and the amount.", "question_toks": ["Which", "Payments", "were", "processed", "with", "Visa", "?", "List", "the", "payment", "Id", ",", "the", "date", "and", "the", "amount", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 24, false], null]], [0, [0, [0, 25, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 23, false], null], "\"Visa\"", null]]}}, {"db_id": "insurance_policies", "query": "SELECT Payment_ID ,  Date_Payment_Made ,  Amount_Payment FROM Payments WHERE Payment_Method_Code  =  'Visa'", "query_toks": ["SELECT", "Payment_ID", ",", "Date_Payment_Made", ",", "Amount_Payment", "FROM", "Payments", "WHERE", "Payment_Method_Code", "=", "'Visa", "'"], "query_toks_no_value": ["select", "payment_id", ",", "date_payment_made", ",", "amount_payment", "from", "payments", "where", "payment_method_code", "=", "value"], "question": "Give me the payment Id, the date and the amount for all the payments processed with Visa.", "question_toks": ["Give", "me", "the", "payment", "Id", ",", "the", "date", "and", "the", "amount", "for", "all", "the", "payments", "processed", "with", "Visa", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 24, false], null]], [0, [0, [0, 25, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 23, false], null], "\"Visa\"", null]]}}, {"db_id": "insurance_policies", "query": "SELECT T1.claim_id ,  T1.date_claim_made ,  T1.Date_Claim_Settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.claim_id HAVING count(*)  =  1", "query_toks": ["SELECT", "T1.claim_id", ",", "T1.date_claim_made", ",", "T1.Date_Claim_Settled", "FROM", "Claims", "AS", "T1", "JOIN", "Settlements", "AS", "T2", "ON", "T1.Claim_id", "=", "T2.Claim_id", "GROUP", "BY", "T1.claim_id", "HAVING", "count", "(", "*", ")", "=", "1"], "query_toks_no_value": ["select", "t1", ".", "claim_id", ",", "t1", ".", "date_claim_made", ",", "t1", ".", "date_claim_settled", "from", "claims", "as", "t1", "join", "settlements", "as", "t2", "on", "t1", ".", "claim_id", "=", "t2", ".", "claim_id", "group", "by", "t1", ".", "claim_id", "having", "count", "(", "*", ")", "=", "value"], "question": "List the date the claim was made, the date it was settled and the amount settled for all the claims which had exactly one settlement.", "question_toks": ["List", "the", "date", "the", "claim", "was", "made", ",", "the", "date", "it", "was", "settled", "and", "the", "amount", "settled", "for", "all", "the", "claims", "which", "had", "exactly", "one", "settlement", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 15, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 8, false]], "having": [[false, 2, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "insurance_policies", "query": "SELECT T1.claim_id ,  T1.date_claim_made ,  T1.Date_Claim_Settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.claim_id HAVING count(*)  =  1", "query_toks": ["SELECT", "T1.claim_id", ",", "T1.date_claim_made", ",", "T1.Date_Claim_Settled", "FROM", "Claims", "AS", "T1", "JOIN", "Settlements", "AS", "T2", "ON", "T1.Claim_id", "=", "T2.Claim_id", "GROUP", "BY", "T1.claim_id", "HAVING", "count", "(", "*", ")", "=", "1"], "query_toks_no_value": ["select", "t1", ".", "claim_id", ",", "t1", ".", "date_claim_made", ",", "t1", ".", "date_claim_settled", "from", "claims", "as", "t1", "join", "settlements", "as", "t2", "on", "t1", ".", "claim_id", "=", "t2", ".", "claim_id", "group", "by", "t1", ".", "claim_id", "having", "count", "(", "*", ")", "=", "value"], "question": "Which claims had exactly one settlement? For each, tell me the the date the claim was made, the date it was settled and the amount settled.", "question_toks": ["Which", "claims", "had", "exactly", "one", "settlement", "?", "For", "each", ",", "tell", "me", "the", "the", "date", "the", "claim", "was", "made", ",", "the", "date", "it", "was", "settled", "and", "the", "amount", "settled", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 15, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 8, false]], "having": [[false, 2, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "hospital_1", "query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;", "query_toks": ["SELECT", "T2.name", ",", "T2.position", "FROM", "department", "AS", "T1", "JOIN", "physician", "AS", "T2", "ON", "T1.head", "=", "T2.EmployeeID", "GROUP", "BY", "departmentID", "ORDER", "BY", "count", "(", "departmentID", ")", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "position", "from", "department", "as", "t1", "join", "physician", "as", "t2", "on", "t1", ".", "head", "=", "t2", ".", "employeeid", "group", "by", "departmentid", "order", "by", "count", "(", "departmentid", ")", "limit", "value"], "question": "what is the name and position of the head whose department has least number of employees?", "question_toks": ["what", "is", "the", "name", "and", "position", "of", "the", "head", "whose", "department", "has", "least", "number", "of", "employees", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 5, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "hospital_1", "query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;", "query_toks": ["SELECT", "T2.name", ",", "T2.position", "FROM", "department", "AS", "T1", "JOIN", "physician", "AS", "T2", "ON", "T1.head", "=", "T2.EmployeeID", "GROUP", "BY", "departmentID", "ORDER", "BY", "count", "(", "departmentID", ")", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "position", "from", "department", "as", "t1", "join", "physician", "as", "t2", "on", "t1", ".", "head", "=", "t2", ".", "employeeid", "group", "by", "departmentid", "order", "by", "count", "(", "departmentid", ")", "limit", "value"], "question": "Find the name and position of the head of the department with the least employees.", "question_toks": ["Find", "the", "name", "and", "position", "of", "the", "head", "of", "the", "department", "with", "the", "least", "employees", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 5, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "hospital_1", "query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1", "query_toks": ["SELECT", "name", ",", "phone", "FROM", "appointment", "AS", "T1", "JOIN", "patient", "AS", "T2", "ON", "T1.patient", "=", "T2.ssn", "GROUP", "BY", "T1.patient", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "name", ",", "phone", "from", "appointment", "as", "t1", "join", "patient", "as", "t2", "on", "t1", ".", "patient", "=", "t2", ".", "ssn", "group", "by", "t1", ".", "patient", "having", "count", "(", "*", ")", ">", "value"], "question": "what are name and phone number of patients who had more than one appointment?", "question_toks": ["what", "are", "name", "and", "phone", "number", "of", "patients", "who", "had", "more", "than", "one", "appointment", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 30, false], null], [0, 18, false], null]], "table_units": [["table_unit", 7], ["table_unit", 5]]}, "groupBy": [[0, 30, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": []}}, {"db_id": "hospital_1", "query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1", "query_toks": ["SELECT", "name", ",", "phone", "FROM", "appointment", "AS", "T1", "JOIN", "patient", "AS", "T2", "ON", "T1.patient", "=", "T2.ssn", "GROUP", "BY", "T1.patient", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "name", ",", "phone", "from", "appointment", "as", "t1", "join", "patient", "as", "t2", "on", "t1", ".", "patient", "=", "t2", ".", "ssn", "group", "by", "t1", ".", "patient", "having", "count", "(", "*", ")", ">", "value"], "question": "Which patients made more than one appointment? Tell me the name and phone number of these patients.", "question_toks": ["Which", "patients", "made", "more", "than", "one", "appointment", "?", "Tell", "me", "the", "name", "and", "phone", "number", "of", "these", "patients", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 30, false], null], [0, 18, false], null]], "table_units": [["table_unit", 7], ["table_unit", 5]]}, "groupBy": [[0, 30, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": []}}, {"db_id": "hospital_1", "query": "SELECT T1.name ,  T3.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T2.PrimaryAffiliation  =  1", "query_toks": ["SELECT", "T1.name", ",", "T3.name", "FROM", "physician", "AS", "T1", "JOIN", "affiliated_with", "AS", "T2", "ON", "T1.EmployeeID", "=", "T2.physician", "JOIN", "department", "AS", "T3", "ON", "T2.department", "=", "T3.DepartmentID", "WHERE", "T2.PrimaryAffiliation", "=", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t3", ".", "name", "from", "physician", "as", "t1", "join", "affiliated_with", "as", "t2", "on", "t1", ".", "employeeid", "=", "t2", ".", "physician", "join", "department", "as", "t3", "on", "t2", ".", "department", "=", "t3", ".", "departmentid", "where", "t2", ".", "primaryaffiliation", "=", "value"], "question": "Find the names of all physicians and their primary affiliated departments' names.", "question_toks": ["Find", "the", "names", "of", "all", "physicians", "and", "their", "primary", "affiliated", "departments", "'", "names", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], 1.0, null]]}}, {"db_id": "hospital_1", "query": "SELECT T1.name ,  T3.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T2.PrimaryAffiliation  =  1", "query_toks": ["SELECT", "T1.name", ",", "T3.name", "FROM", "physician", "AS", "T1", "JOIN", "affiliated_with", "AS", "T2", "ON", "T1.EmployeeID", "=", "T2.physician", "JOIN", "department", "AS", "T3", "ON", "T2.department", "=", "T3.DepartmentID", "WHERE", "T2.PrimaryAffiliation", "=", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t3", ".", "name", "from", "physician", "as", "t1", "join", "affiliated_with", "as", "t2", "on", "t1", ".", "employeeid", "=", "t2", ".", "physician", "join", "department", "as", "t3", "on", "t2", ".", "department", "=", "t3", ".", "departmentid", "where", "t2", ".", "primaryaffiliation", "=", "value"], "question": "What are the name and primarily affiliated department name of each physician?", "question_toks": ["What", "are", "the", "name", "and", "primarily", "affiliated", "department", "name", "of", "each", "physician", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], 1.0, null]]}}, {"db_id": "hospital_1", "query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid", "query_toks": ["SELECT", "T1.name", ",", "count", "(", "*", ")", "FROM", "physician", "AS", "T1", "JOIN", "patient", "AS", "T2", "ON", "T1.employeeid", "=", "T2.PCP", "GROUP", "BY", "T1.employeeid"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "count", "(", "*", ")", "from", "physician", "as", "t1", "join", "patient", "as", "t2", "on", "t1", ".", "employeeid", "=", "t2", ".", "pcp", "group", "by", "t1", ".", "employeeid"], "question": "How many patients do each physician take care of? List their names and number of patients they take care of.", "question_toks": ["How", "many", "patients", "do", "each", "physician", "take", "care", "of", "?", "List", "their", "names", "and", "number", "of", "patients", "they", "take", "care", "of", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 23, false], null]], "table_units": [["table_unit", 0], ["table_unit", 5]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "hospital_1", "query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid", "query_toks": ["SELECT", "T1.name", ",", "count", "(", "*", ")", "FROM", "physician", "AS", "T1", "JOIN", "patient", "AS", "T2", "ON", "T1.employeeid", "=", "T2.PCP", "GROUP", "BY", "T1.employeeid"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "count", "(", "*", ")", "from", "physician", "as", "t1", "join", "patient", "as", "t2", "on", "t1", ".", "employeeid", "=", "t2", ".", "pcp", "group", "by", "t1", ".", "employeeid"], "question": "Return the name of each physician and the number of patients he or she treats.", "question_toks": ["Return", "the", "name", "of", "each", "physician", "and", "the", "number", "of", "patients", "he", "or", "she", "treats", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 23, false], null]], "table_units": [["table_unit", 0], ["table_unit", 5]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "hospital_1", "query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.blockfloor", "FROM", "BLOCK", "AS", "T1", "JOIN", "room", "AS", "T2", "ON", "T1.blockfloor", "=", "T2.blockfloor", "AND", "T1.blockcode", "=", "T2.blockcode", "GROUP", "BY", "T1.blockfloor"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "blockfloor", "from", "block", "as", "t1", "join", "room", "as", "t2", "on", "t1", ".", "blockfloor", "=", "t2", ".", "blockfloor", "and", "t1", ".", "blockcode", "=", "t2", ".", "blockcode", "group", "by", "t1", ".", "blockfloor"], "question": "Find the number of rooms located on each block floor.", "question_toks": ["Find", "the", "number", "of", "rooms", "located", "on", "each", "block", "floor", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 46, false], null], [0, 50, false], null], "and", [false, 2, [0, [0, 47, false], null], [0, 51, false], null]], "table_units": [["table_unit", 10], ["table_unit", 11]]}, "groupBy": [[0, 46, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 46, false], null]]]], "union": null, "where": []}}, {"db_id": "hospital_1", "query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.blockfloor", "FROM", "BLOCK", "AS", "T1", "JOIN", "room", "AS", "T2", "ON", "T1.blockfloor", "=", "T2.blockfloor", "AND", "T1.blockcode", "=", "T2.blockcode", "GROUP", "BY", "T1.blockfloor"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "blockfloor", "from", "block", "as", "t1", "join", "room", "as", "t2", "on", "t1", ".", "blockfloor", "=", "t2", ".", "blockfloor", "and", "t1", ".", "blockcode", "=", "t2", ".", "blockcode", "group", "by", "t1", ".", "blockfloor"], "question": "How many rooms does each block floor have?", "question_toks": ["How", "many", "rooms", "does", "each", "block", "floor", "have", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 46, false], null], [0, 50, false], null], "and", [false, 2, [0, [0, 47, false], null], [0, 51, false], null]], "table_units": [["table_unit", 10], ["table_unit", 11]]}, "groupBy": [[0, 46, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 46, false], null]]]], "union": null, "where": []}}, {"db_id": "hospital_1", "query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.blockcode", "FROM", "BLOCK", "AS", "T1", "JOIN", "room", "AS", "T2", "ON", "T1.blockfloor", "=", "T2.blockfloor", "AND", "T1.blockcode", "=", "T2.blockcode", "GROUP", "BY", "T1.blockcode"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "blockcode", "from", "block", "as", "t1", "join", "room", "as", "t2", "on", "t1", ".", "blockfloor", "=", "t2", ".", "blockfloor", "and", "t1", ".", "blockcode", "=", "t2", ".", "blockcode", "group", "by", "t1", ".", "blockcode"], "question": "Find the number of rooms for different block code?", "question_toks": ["Find", "the", "number", "of", "rooms", "for", "different", "block", "code", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 46, false], null], [0, 50, false], null], "and", [false, 2, [0, [0, 47, false], null], [0, 51, false], null]], "table_units": [["table_unit", 10], ["table_unit", 11]]}, "groupBy": [[0, 47, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 47, false], null]]]], "union": null, "where": []}}, {"db_id": "hospital_1", "query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.blockcode", "FROM", "BLOCK", "AS", "T1", "JOIN", "room", "AS", "T2", "ON", "T1.blockfloor", "=", "T2.blockfloor", "AND", "T1.blockcode", "=", "T2.blockcode", "GROUP", "BY", "T1.blockcode"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "blockcode", "from", "block", "as", "t1", "join", "room", "as", "t2", "on", "t1", ".", "blockfloor", "=", "t2", ".", "blockfloor", "and", "t1", ".", "blockcode", "=", "t2", ".", "blockcode", "group", "by", "t1", ".", "blockcode"], "question": "How many rooms are located for each block code?", "question_toks": ["How", "many", "rooms", "are", "located", "for", "each", "block", "code", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 46, false], null], [0, 50, false], null], "and", [false, 2, [0, [0, 47, false], null], [0, 51, false], null]], "table_units": [["table_unit", 10], ["table_unit", 11]]}, "groupBy": [[0, 47, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 47, false], null]]]], "union": null, "where": []}}, {"db_id": "hospital_1", "query": "SELECT DISTINCT T1.name ,  T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand  =  \"X\"", "query_toks": ["SELECT", "DISTINCT", "T1.name", ",", "T1.position", "FROM", "physician", "AS", "T1", "JOIN", "prescribes", "AS", "T2", "ON", "T1.employeeid", "=", "T2.physician", "JOIN", "medication", "AS", "T3", "ON", "T3.code", "=", "T2.medication", "WHERE", "T3.Brand", "=", "``", "X", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", ",", "t1", ".", "position", "from", "physician", "as", "t1", "join", "prescribes", "as", "t2", "on", "t1", ".", "employeeid", "=", "t2", ".", "physician", "join", "medication", "as", "t3", "on", "t3", ".", "code", "=", "t2", ".", "medication", "where", "t3", ".", "brand", "=", "value"], "question": "Find the name and position of physicians who prescribe some medication whose brand is X?", "question_toks": ["Find", "the", "name", "and", "position", "of", "physicians", "who", "prescribe", "some", "medication", "whose", "brand", "is", "X", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 40, false], null]], "table_units": [["table_unit", 0], ["table_unit", 9]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 38, false], null], "\"X\"", null]]}}, {"db_id": "hospital_1", "query": "SELECT DISTINCT T1.name ,  T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand  =  \"X\"", "query_toks": ["SELECT", "DISTINCT", "T1.name", ",", "T1.position", "FROM", "physician", "AS", "T1", "JOIN", "prescribes", "AS", "T2", "ON", "T1.employeeid", "=", "T2.physician", "JOIN", "medication", "AS", "T3", "ON", "T3.code", "=", "T2.medication", "WHERE", "T3.Brand", "=", "``", "X", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", ",", "t1", ".", "position", "from", "physician", "as", "t1", "join", "prescribes", "as", "t2", "on", "t1", ".", "employeeid", "=", "t2", ".", "physician", "join", "medication", "as", "t3", "on", "t3", ".", "code", "=", "t2", ".", "medication", "where", "t3", ".", "brand", "=", "value"], "question": "Which physicians prescribe a medication of brand X? Tell me the name and position of those physicians.", "question_toks": ["Which", "physicians", "prescribe", "a", "medication", "of", "brand", "X", "?", "Tell", "me", "the", "name", "and", "position", "of", "those", "physicians", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 40, false], null]], "table_units": [["table_unit", 0], ["table_unit", 9]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 38, false], null], "\"X\"", null]]}}, {"db_id": "hospital_1", "query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.name", "FROM", "medication", "AS", "T1", "JOIN", "prescribes", "AS", "T2", "ON", "T1.code", "=", "T2.medication", "GROUP", "BY", "T1.brand"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "name", "from", "medication", "as", "t1", "join", "prescribes", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "medication", "group", "by", "t1", ".", "brand"], "question": "Find the number of medications prescribed for each brand.", "question_toks": ["Find", "the", "number", "of", "medications", "prescribed", "for", "each", "brand", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 36, false], null], [0, 42, false], null]], "table_units": [["table_unit", 8], ["table_unit", 9]]}, "groupBy": [[0, 38, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 37, false], null]]]], "union": null, "where": []}}, {"db_id": "hospital_1", "query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.name", "FROM", "medication", "AS", "T1", "JOIN", "prescribes", "AS", "T2", "ON", "T1.code", "=", "T2.medication", "GROUP", "BY", "T1.brand"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "name", "from", "medication", "as", "t1", "join", "prescribes", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "medication", "group", "by", "t1", ".", "brand"], "question": "How many medications are prescribed for each brand?", "question_toks": ["How", "many", "medications", "are", "prescribed", "for", "each", "brand", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 36, false], null], [0, 42, false], null]], "table_units": [["table_unit", 8], ["table_unit", 9]]}, "groupBy": [[0, 38, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 37, false], null]]]], "union": null, "where": []}}, {"db_id": "hospital_1", "query": "SELECT physician ,  department FROM affiliated_with WHERE primaryaffiliation  =  1", "query_toks": ["SELECT", "physician", ",", "department", "FROM", "affiliated_with", "WHERE", "primaryaffiliation", "=", "1"], "query_toks_no_value": ["select", "physician", ",", "department", "from", "affiliated_with", "where", "primaryaffiliation", "=", "value"], "question": "List the physicians' employee ids together with their primary affiliation departments' ids.", "question_toks": ["List", "the", "physicians", "'", "employee", "ids", "together", "with", "their", "primary", "affiliation", "departments", "'", "ids", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], 1.0, null]]}}, {"db_id": "hospital_1", "query": "SELECT physician ,  department FROM affiliated_with WHERE primaryaffiliation  =  1", "query_toks": ["SELECT", "physician", ",", "department", "FROM", "affiliated_with", "WHERE", "primaryaffiliation", "=", "1"], "query_toks_no_value": ["select", "physician", ",", "department", "from", "affiliated_with", "where", "primaryaffiliation", "=", "value"], "question": "What are each physician's employee id and department id primarily affiliated.", "question_toks": ["What", "are", "each", "physician", "'s", "employee", "id", "and", "department", "id", "primarily", "affiliated", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], 1.0, null]]}}, {"db_id": "hospital_1", "query": "SELECT MAX(cost) ,  MIN(cost) ,  AVG(cost) FROM procedures", "query_toks": ["SELECT", "MAX", "(", "cost", ")", ",", "MIN", "(", "cost", ")", ",", "AVG", "(", "cost", ")", "FROM", "procedures"], "query_toks_no_value": ["select", "max", "(", "cost", ")", ",", "min", "(", "cost", ")", ",", "avg", "(", "cost", ")", "from", "procedures"], "question": "What are the highest cost, lowest cost and average cost of procedures?", "question_toks": ["What", "are", "the", "highest", "cost", ",", "lowest", "cost", "and", "average", "cost", "of", "procedures", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 13, false], null]], [2, [0, [0, 13, false], null]], [5, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "hospital_1", "query": "SELECT MAX(cost) ,  MIN(cost) ,  AVG(cost) FROM procedures", "query_toks": ["SELECT", "MAX", "(", "cost", ")", ",", "MIN", "(", "cost", ")", ",", "AVG", "(", "cost", ")", "FROM", "procedures"], "query_toks_no_value": ["select", "max", "(", "cost", ")", ",", "min", "(", "cost", ")", ",", "avg", "(", "cost", ")", "from", "procedures"], "question": "Tell me the highest, lowest, and average cost of procedures.", "question_toks": ["Tell", "me", "the", "highest", ",", "lowest", ",", "and", "average", "cost", "of", "procedures", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 13, false], null]], [2, [0, [0, 13, false], null]], [5, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "hospital_1", "query": "SELECT name ,  cost FROM procedures ORDER BY cost DESC", "query_toks": ["SELECT", "name", ",", "cost", "FROM", "procedures", "ORDER", "BY", "cost", "DESC"], "query_toks_no_value": ["select", "name", ",", "cost", "from", "procedures", "order", "by", "cost", "desc"], "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.", "question_toks": ["List", "the", "name", "and", "cost", "of", "all", "procedures", "sorted", "by", "the", "cost", "from", "the", "highest", "to", "the", "lowest", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 13, false], null]]], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "hospital_1", "query": "SELECT name ,  cost FROM procedures ORDER BY cost DESC", "query_toks": ["SELECT", "name", ",", "cost", "FROM", "procedures", "ORDER", "BY", "cost", "DESC"], "query_toks_no_value": ["select", "name", ",", "cost", "from", "procedures", "order", "by", "cost", "desc"], "question": "Sort the list of names and costs of all procedures in the descending order of cost.", "question_toks": ["Sort", "the", "list", "of", "names", "and", "costs", "of", "all", "procedures", "in", "the", "descending", "order", "of", "cost", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 13, false], null]]], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "ship_mission", "query": "SELECT TYPE ,  Nationality FROM ship", "query_toks": ["SELECT", "TYPE", ",", "Nationality", "FROM", "ship"], "query_toks_no_value": ["select", "type", ",", "nationality", "from", "ship"], "question": "What are the type and nationality of ships?", "question_toks": ["What", "are", "the", "type", "and", "nationality", "of", "ships", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "ship_mission", "query": "SELECT TYPE ,  Nationality FROM ship", "query_toks": ["SELECT", "TYPE", ",", "Nationality", "FROM", "ship"], "query_toks_no_value": ["select", "type", ",", "nationality", "from", "ship"], "question": "What are the types and nationalities of every ship?", "question_toks": ["What", "are", "the", "types", "and", "nationalities", "of", "every", "ship", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "ship_mission", "query": "SELECT TYPE ,  COUNT(*) FROM ship GROUP BY TYPE", "query_toks": ["SELECT", "TYPE", ",", "COUNT", "(", "*", ")", "FROM", "ship", "GROUP", "BY", "TYPE"], "query_toks_no_value": ["select", "type", ",", "count", "(", "*", ")", "from", "ship", "group", "by", "type"], "question": "Show different types of ships and the number of ships of each type.", "question_toks": ["Show", "different", "types", "of", "ships", "and", "the", "number", "of", "ships", "of", "each", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "ship_mission", "query": "SELECT TYPE ,  COUNT(*) FROM ship GROUP BY TYPE", "query_toks": ["SELECT", "TYPE", ",", "COUNT", "(", "*", ")", "FROM", "ship", "GROUP", "BY", "TYPE"], "query_toks_no_value": ["select", "type", ",", "count", "(", "*", ")", "from", "ship", "group", "by", "type"], "question": "For each type, how many ships are there?", "question_toks": ["For", "each", "type", ",", "how", "many", "ships", "are", "there", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "ship_mission", "query": "SELECT TYPE ,  avg(Tonnage) FROM ship GROUP BY TYPE", "query_toks": ["SELECT", "TYPE", ",", "avg", "(", "Tonnage", ")", "FROM", "ship", "GROUP", "BY", "TYPE"], "query_toks_no_value": ["select", "type", ",", "avg", "(", "tonnage", ")", "from", "ship", "group", "by", "type"], "question": "Show different types of ships and the average tonnage of ships of each type.", "question_toks": ["Show", "different", "types", "of", "ships", "and", "the", "average", "tonnage", "of", "ships", "of", "each", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [5, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "ship_mission", "query": "SELECT TYPE ,  avg(Tonnage) FROM ship GROUP BY TYPE", "query_toks": ["SELECT", "TYPE", ",", "avg", "(", "Tonnage", ")", "FROM", "ship", "GROUP", "BY", "TYPE"], "query_toks_no_value": ["select", "type", ",", "avg", "(", "tonnage", ")", "from", "ship", "group", "by", "type"], "question": "For each type, what is the average tonnage?", "question_toks": ["For", "each", "type", ",", "what", "is", "the", "average", "tonnage", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [5, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "ship_mission", "query": "SELECT T1.Code ,  T1.Fate ,  T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID", "query_toks": ["SELECT", "T1.Code", ",", "T1.Fate", ",", "T2.Name", "FROM", "mission", "AS", "T1", "JOIN", "ship", "AS", "T2", "ON", "T1.Ship_ID", "=", "T2.Ship_ID"], "query_toks_no_value": ["select", "t1", ".", "code", ",", "t1", ".", "fate", ",", "t2", ".", "name", "from", "mission", "as", "t1", "join", "ship", "as", "t2", "on", "t1", ".", "ship_id", "=", "t2", ".", "ship_id"], "question": "Show codes and fates of missions, and names of ships involved.", "question_toks": ["Show", "codes", "and", "fates", "of", "missions", ",", "and", "names", "of", "ships", "involved", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 2, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "ship_mission", "query": "SELECT T1.Code ,  T1.Fate ,  T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID", "query_toks": ["SELECT", "T1.Code", ",", "T1.Fate", ",", "T2.Name", "FROM", "mission", "AS", "T1", "JOIN", "ship", "AS", "T2", "ON", "T1.Ship_ID", "=", "T2.Ship_ID"], "query_toks_no_value": ["select", "t1", ".", "code", ",", "t1", ".", "fate", ",", "t2", ".", "name", "from", "mission", "as", "t1", "join", "ship", "as", "t2", "on", "t1", ".", "ship_id", "=", "t2", ".", "ship_id"], "question": "What are the mission codes, fates, and names of the ships involved?", "question_toks": ["What", "are", "the", "mission", "codes", ",", "fates", ",", "and", "names", "of", "the", "ships", "involved", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 2, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "student_1", "query": "SELECT DISTINCT classroom ,  grade FROM list", "query_toks": ["SELECT", "DISTINCT", "classroom", ",", "grade", "FROM", "list"], "query_toks_no_value": ["select", "distinct", "classroom", ",", "grade", "from", "list"], "question": "For each classroom report the grade that is taught in it. Report just the classroom number and the grade number.", "question_toks": ["For", "each", "classroom", "report", "the", "grade", "that", "is", "taught", "in", "it", ".", "Report", "just", "the", "classroom", "number", "and", "the", "grade", "number", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 4, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "student_1", "query": "SELECT DISTINCT classroom ,  grade FROM list", "query_toks": ["SELECT", "DISTINCT", "classroom", ",", "grade", "FROM", "list"], "query_toks_no_value": ["select", "distinct", "classroom", ",", "grade", "from", "list"], "question": "What are the grade number and classroom number of each class in the list?", "question_toks": ["What", "are", "the", "grade", "number", "and", "classroom", "number", "of", "each", "class", "in", "the", "list", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 4, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "student_1", "query": "SELECT DISTINCT firstname ,  lastname FROM teachers", "query_toks": ["SELECT", "DISTINCT", "firstname", ",", "lastname", "FROM", "teachers"], "query_toks_no_value": ["select", "distinct", "firstname", ",", "lastname", "from", "teachers"], "question": "Report the first name and last name of all the teachers.", "question_toks": ["Report", "the", "first", "name", "and", "last", "name", "of", "all", "the", "teachers", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "student_1", "query": "SELECT DISTINCT firstname ,  lastname FROM teachers", "query_toks": ["SELECT", "DISTINCT", "firstname", ",", "lastname", "FROM", "teachers"], "query_toks_no_value": ["select", "distinct", "firstname", ",", "lastname", "from", "teachers"], "question": "What are the first name and last name of all the teachers?", "question_toks": ["What", "are", "the", "first", "name", "and", "last", "name", "of", "all", "the", "teachers", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "student_1", "query": "SELECT DISTINCT firstname ,  lastname FROM list", "query_toks": ["SELECT", "DISTINCT", "firstname", ",", "lastname", "FROM", "list"], "query_toks_no_value": ["select", "distinct", "firstname", ",", "lastname", "from", "list"], "question": "Report the first name and last name of all the students.", "question_toks": ["Report", "the", "first", "name", "and", "last", "name", "of", "all", "the", "students", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": []}}, {"db_id": "student_1", "query": "SELECT DISTINCT firstname ,  lastname FROM list", "query_toks": ["SELECT", "DISTINCT", "firstname", ",", "lastname", "FROM", "list"], "query_toks_no_value": ["select", "distinct", "firstname", ",", "lastname", "from", "list"], "question": "Show each student's first name and last name.", "question_toks": ["Show", "each", "student", "'s", "first", "name", "and", "last", "name", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": []}}, {"db_id": "student_1", "query": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"OTHA\" AND T2.lastname  =  \"MOYER\"", "query_toks": ["SELECT", "T1.firstname", ",", "T1.lastname", "FROM", "list", "AS", "T1", "JOIN", "teachers", "AS", "T2", "ON", "T1.classroom", "=", "T2.classroom", "WHERE", "T2.firstname", "=", "``", "OTHA", "''", "AND", "T2.lastname", "=", "``", "MOYER", "''"], "query_toks_no_value": ["select", "t1", ".", "firstname", ",", "t1", ".", "lastname", "from", "list", "as", "t1", "join", "teachers", "as", "t2", "on", "t1", ".", "classroom", "=", "t2", ".", "classroom", "where", "t2", ".", "firstname", "=", "value", "and", "t2", ".", "lastname", "=", "value"], "question": "Find all students taught by OTHA MOYER. Output the first and last names of the students.", "question_toks": ["Find", "all", "students", "taught", "by", "OTHA", "MOYER", ".", "Output", "the", "first", "and", "last", "names", "of", "the", "students", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 7, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"OTHA\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"MOYER\"", null]]}}, {"db_id": "student_1", "query": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"OTHA\" AND T2.lastname  =  \"MOYER\"", "query_toks": ["SELECT", "T1.firstname", ",", "T1.lastname", "FROM", "list", "AS", "T1", "JOIN", "teachers", "AS", "T2", "ON", "T1.classroom", "=", "T2.classroom", "WHERE", "T2.firstname", "=", "``", "OTHA", "''", "AND", "T2.lastname", "=", "``", "MOYER", "''"], "query_toks_no_value": ["select", "t1", ".", "firstname", ",", "t1", ".", "lastname", "from", "list", "as", "t1", "join", "teachers", "as", "t2", "on", "t1", ".", "classroom", "=", "t2", ".", "classroom", "where", "t2", ".", "firstname", "=", "value", "and", "t2", ".", "lastname", "=", "value"], "question": "Which students study under the teacher named OTHA MOYER? Give me the first and last names of the students.", "question_toks": ["Which", "students", "study", "under", "the", "teacher", "named", "OTHA", "MOYER", "?", "Give", "me", "the", "first", "and", "last", "names", "of", "the", "students", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 7, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"OTHA\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"MOYER\"", null]]}}, {"db_id": "student_1", "query": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"MARROTTE\" AND T2.lastname  =  \"KIRK\"", "query_toks": ["SELECT", "T1.firstname", ",", "T1.lastname", "FROM", "list", "AS", "T1", "JOIN", "teachers", "AS", "T2", "ON", "T1.classroom", "=", "T2.classroom", "WHERE", "T2.firstname", "=", "``", "MARROTTE", "''", "AND", "T2.lastname", "=", "``", "KIRK", "''"], "query_toks_no_value": ["select", "t1", ".", "firstname", ",", "t1", ".", "lastname", "from", "list", "as", "t1", "join", "teachers", "as", "t2", "on", "t1", ".", "classroom", "=", "t2", ".", "classroom", "where", "t2", ".", "firstname", "=", "value", "and", "t2", ".", "lastname", "=", "value"], "question": "Find all students taught by MARROTTE KIRK. Output first and last names of students.", "question_toks": ["Find", "all", "students", "taught", "by", "MARROTTE", "KIRK", ".", "Output", "first", "and", "last", "names", "of", "students", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 7, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"MARROTTE\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"KIRK\"", null]]}}, {"db_id": "student_1", "query": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"MARROTTE\" AND T2.lastname  =  \"KIRK\"", "query_toks": ["SELECT", "T1.firstname", ",", "T1.lastname", "FROM", "list", "AS", "T1", "JOIN", "teachers", "AS", "T2", "ON", "T1.classroom", "=", "T2.classroom", "WHERE", "T2.firstname", "=", "``", "MARROTTE", "''", "AND", "T2.lastname", "=", "``", "KIRK", "''"], "query_toks_no_value": ["select", "t1", ".", "firstname", ",", "t1", ".", "lastname", "from", "list", "as", "t1", "join", "teachers", "as", "t2", "on", "t1", ".", "classroom", "=", "t2", ".", "classroom", "where", "t2", ".", "firstname", "=", "value", "and", "t2", ".", "lastname", "=", "value"], "question": "Which are the first and last names of the students taught by MARROTTE KIRK?", "question_toks": ["Which", "are", "the", "first", "and", "last", "names", "of", "the", "students", "taught", "by", "MARROTTE", "KIRK", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 7, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"MARROTTE\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"KIRK\"", null]]}}, {"db_id": "student_1", "query": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"EVELINA\" AND T1.lastname  =  \"BROMLEY\"", "query_toks": ["SELECT", "T2.firstname", ",", "T2.lastname", "FROM", "list", "AS", "T1", "JOIN", "teachers", "AS", "T2", "ON", "T1.classroom", "=", "T2.classroom", "WHERE", "T1.firstname", "=", "``", "EVELINA", "''", "AND", "T1.lastname", "=", "``", "BROMLEY", "''"], "query_toks_no_value": ["select", "t2", ".", "firstname", ",", "t2", ".", "lastname", "from", "list", "as", "t1", "join", "teachers", "as", "t2", "on", "t1", ".", "classroom", "=", "t2", ".", "classroom", "where", "t1", ".", "firstname", "=", "value", "and", "t1", ".", "lastname", "=", "value"], "question": "Find the first and last name of all the teachers that teach EVELINA BROMLEY.", "question_toks": ["Find", "the", "first", "and", "last", "name", "of", "all", "the", "teachers", "that", "teach", "EVELINA", "BROMLEY", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 7, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"EVELINA\"", null], "and", [false, 2, [0, [0, 1, false], null], "\"BROMLEY\"", null]]}}, {"db_id": "student_1", "query": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"EVELINA\" AND T1.lastname  =  \"BROMLEY\"", "query_toks": ["SELECT", "T2.firstname", ",", "T2.lastname", "FROM", "list", "AS", "T1", "JOIN", "teachers", "AS", "T2", "ON", "T1.classroom", "=", "T2.classroom", "WHERE", "T1.firstname", "=", "``", "EVELINA", "''", "AND", "T1.lastname", "=", "``", "BROMLEY", "''"], "query_toks_no_value": ["select", "t2", ".", "firstname", ",", "t2", ".", "lastname", "from", "list", "as", "t1", "join", "teachers", "as", "t2", "on", "t1", ".", "classroom", "=", "t2", ".", "classroom", "where", "t1", ".", "firstname", "=", "value", "and", "t1", ".", "lastname", "=", "value"], "question": "Which teachers teach the student named EVELINA BROMLEY? Give me the first and last name  of the teachers.", "question_toks": ["Which", "teachers", "teach", "the", "student", "named", "EVELINA", "BROMLEY", "?", "Give", "me", "the", "first", "and", "last", "name", "of", "the", "teachers", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 7, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"EVELINA\"", null], "and", [false, 2, [0, [0, 1, false], null], "\"BROMLEY\"", null]]}}, {"db_id": "student_1", "query": "SELECT DISTINCT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  1 EXCEPT SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"OTHA\" AND T2.lastname  =  \"MOYER\"", "query_toks": ["SELECT", "DISTINCT", "T1.firstname", ",", "T1.lastname", "FROM", "list", "AS", "T1", "JOIN", "teachers", "AS", "T2", "ON", "T1.classroom", "=", "T2.classroom", "WHERE", "T1.grade", "=", "1", "EXCEPT", "SELECT", "T1.firstname", ",", "T1.lastname", "FROM", "list", "AS", "T1", "JOIN", "teachers", "AS", "T2", "ON", "T1.classroom", "=", "T2.classroom", "WHERE", "T2.firstname", "=", "``", "OTHA", "''", "AND", "T2.lastname", "=", "``", "MOYER", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "firstname", ",", "t1", ".", "lastname", "from", "list", "as", "t1", "join", "teachers", "as", "t2", "on", "t1", ".", "classroom", "=", "t2", ".", "classroom", "where", "t1", ".", "grade", "=", "value", "except", "select", "t1", ".", "firstname", ",", "t1", ".", "lastname", "from", "list", "as", "t1", "join", "teachers", "as", "t2", "on", "t1", ".", "classroom", "=", "t2", ".", "classroom", "where", "t2", ".", "firstname", "=", "value", "and", "t2", ".", "lastname", "=", "value"], "question": "Find all first-grade students who are NOT taught by OTHA MOYER. Report their first and last names.", "question_toks": ["Find", "all", "first-grade", "students", "who", "are", "NOT", "taught", "by", "OTHA", "MOYER", ".", "Report", "their", "first", "and", "last", "names", "."], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 7, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"OTHA\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"MOYER\"", null]]}, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 7, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], 1.0, null]]}}, {"db_id": "student_1", "query": "SELECT DISTINCT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  1 EXCEPT SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"OTHA\" AND T2.lastname  =  \"MOYER\"", "query_toks": ["SELECT", "DISTINCT", "T1.firstname", ",", "T1.lastname", "FROM", "list", "AS", "T1", "JOIN", "teachers", "AS", "T2", "ON", "T1.classroom", "=", "T2.classroom", "WHERE", "T1.grade", "=", "1", "EXCEPT", "SELECT", "T1.firstname", ",", "T1.lastname", "FROM", "list", "AS", "T1", "JOIN", "teachers", "AS", "T2", "ON", "T1.classroom", "=", "T2.classroom", "WHERE", "T2.firstname", "=", "``", "OTHA", "''", "AND", "T2.lastname", "=", "``", "MOYER", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "firstname", ",", "t1", ".", "lastname", "from", "list", "as", "t1", "join", "teachers", "as", "t2", "on", "t1", ".", "classroom", "=", "t2", ".", "classroom", "where", "t1", ".", "grade", "=", "value", "except", "select", "t1", ".", "firstname", ",", "t1", ".", "lastname", "from", "list", "as", "t1", "join", "teachers", "as", "t2", "on", "t1", ".", "classroom", "=", "t2", ".", "classroom", "where", "t2", ".", "firstname", "=", "value", "and", "t2", ".", "lastname", "=", "value"], "question": "What are the first and last names of the first-grade students who are NOT taught by teacher OTHA MOYER?", "question_toks": ["What", "are", "the", "first", "and", "last", "names", "of", "the", "first-grade", "students", "who", "are", "NOT", "taught", "by", "teacher", "OTHA", "MOYER", "?"], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 7, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"OTHA\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"MOYER\"", null]]}, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 7, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], 1.0, null]]}}, {"db_id": "student_1", "query": "SELECT grade ,  count(DISTINCT classroom) ,  count(*) FROM list GROUP BY grade", "query_toks": ["SELECT", "grade", ",", "count", "(", "DISTINCT", "classroom", ")", ",", "count", "(", "*", ")", "FROM", "list", "GROUP", "BY", "grade"], "query_toks_no_value": ["select", "grade", ",", "count", "(", "distinct", "classroom", ")", ",", "count", "(", "*", ")", "from", "list", "group", "by", "grade"], "question": "For each grade, report the grade, the number of classrooms in which it is taught and the total number of students in the grade.", "question_toks": ["For", "each", "grade", ",", "report", "the", "grade", ",", "the", "number", "of", "classrooms", "in", "which", "it", "is", "taught", "and", "the", "total", "number", "of", "students", "in", "the", "grade", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 4, true], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "student_1", "query": "SELECT grade ,  count(DISTINCT classroom) ,  count(*) FROM list GROUP BY grade", "query_toks": ["SELECT", "grade", ",", "count", "(", "DISTINCT", "classroom", ")", ",", "count", "(", "*", ")", "FROM", "list", "GROUP", "BY", "grade"], "query_toks_no_value": ["select", "grade", ",", "count", "(", "distinct", "classroom", ")", ",", "count", "(", "*", ")", "from", "list", "group", "by", "grade"], "question": "For each grade, return the grade number, the number of classrooms used for the grade, and the total number of students enrolled in the grade.", "question_toks": ["For", "each", "grade", ",", "return", "the", "grade", "number", ",", "the", "number", "of", "classrooms", "used", "for", "the", "grade", ",", "and", "the", "total", "number", "of", "students", "enrolled", "in", "the", "grade", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 4, true], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "student_1", "query": "SELECT classroom ,  count(DISTINCT grade) FROM list GROUP BY classroom", "query_toks": ["SELECT", "classroom", ",", "count", "(", "DISTINCT", "grade", ")", "FROM", "list", "GROUP", "BY", "classroom"], "query_toks_no_value": ["select", "classroom", ",", "count", "(", "distinct", "grade", ")", "from", "list", "group", "by", "classroom"], "question": "For each classroom, report the classroom number and the number of grades using it.", "question_toks": ["For", "each", "classroom", ",", "report", "the", "classroom", "number", "and", "the", "number", "of", "grades", "using", "it", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 3, true], null]]]], "union": null, "where": []}}, {"db_id": "student_1", "query": "SELECT classroom ,  count(DISTINCT grade) FROM list GROUP BY classroom", "query_toks": ["SELECT", "classroom", ",", "count", "(", "DISTINCT", "grade", ")", "FROM", "list", "GROUP", "BY", "classroom"], "query_toks_no_value": ["select", "classroom", ",", "count", "(", "distinct", "grade", ")", "from", "list", "group", "by", "classroom"], "question": "For each classroom, show the classroom number and count the number of distinct grades that use the room.", "question_toks": ["For", "each", "classroom", ",", "show", "the", "classroom", "number", "and", "count", "the", "number", "of", "distinct", "grades", "that", "use", "the", "room", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 3, true], null]]]], "union": null, "where": []}}, {"db_id": "student_1", "query": "SELECT classroom ,  count(*) FROM list GROUP BY classroom", "query_toks": ["SELECT", "classroom", ",", "count", "(", "*", ")", "FROM", "list", "GROUP", "BY", "classroom"], "query_toks_no_value": ["select", "classroom", ",", "count", "(", "*", ")", "from", "list", "group", "by", "classroom"], "question": "Report the number of students in each classroom.", "question_toks": ["Report", "the", "number", "of", "students", "in", "each", "classroom", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "student_1", "query": "SELECT classroom ,  count(*) FROM list GROUP BY classroom", "query_toks": ["SELECT", "classroom", ",", "count", "(", "*", ")", "FROM", "list", "GROUP", "BY", "classroom"], "query_toks_no_value": ["select", "classroom", ",", "count", "(", "*", ")", "from", "list", "group", "by", "classroom"], "question": "For each classroom, show the classroom number and find how many students are using it.", "question_toks": ["For", "each", "classroom", ",", "show", "the", "classroom", "number", "and", "find", "how", "many", "students", "are", "using", "it", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "student_1", "query": "SELECT classroom ,  count(*) FROM list WHERE grade  =  \"0\" GROUP BY classroom", "query_toks": ["SELECT", "classroom", ",", "count", "(", "*", ")", "FROM", "list", "WHERE", "grade", "=", "``", "0", "''", "GROUP", "BY", "classroom"], "query_toks_no_value": ["select", "classroom", ",", "count", "(", "*", ")", "from", "list", "where", "grade", "=", "value", "group", "by", "classroom"], "question": "For each grade 0 classroom, report the total number of students.", "question_toks": ["For", "each", "grade", "0", "classroom", ",", "report", "the", "total", "number", "of", "students", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], "\"0\"", null]]}}, {"db_id": "student_1", "query": "SELECT classroom ,  count(*) FROM list WHERE grade  =  \"0\" GROUP BY classroom", "query_toks": ["SELECT", "classroom", ",", "count", "(", "*", ")", "FROM", "list", "WHERE", "grade", "=", "``", "0", "''", "GROUP", "BY", "classroom"], "query_toks_no_value": ["select", "classroom", ",", "count", "(", "*", ")", "from", "list", "where", "grade", "=", "value", "group", "by", "classroom"], "question": "For each grade 0 classroom, return the classroom number and the count of students.", "question_toks": ["For", "each", "grade", "0", "classroom", ",", "return", "the", "classroom", "number", "and", "the", "count", "of", "students", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], "\"0\"", null]]}}, {"db_id": "student_1", "query": "SELECT classroom ,  count(*) FROM list WHERE grade  =  \"4\" GROUP BY classroom", "query_toks": ["SELECT", "classroom", ",", "count", "(", "*", ")", "FROM", "list", "WHERE", "grade", "=", "``", "4", "''", "GROUP", "BY", "classroom"], "query_toks_no_value": ["select", "classroom", ",", "count", "(", "*", ")", "from", "list", "where", "grade", "=", "value", "group", "by", "classroom"], "question": "Report the total number of students for each fourth-grade classroom.", "question_toks": ["Report", "the", "total", "number", "of", "students", "for", "each", "fourth-grade", "classroom", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], "\"4\"", null]]}}, {"db_id": "student_1", "query": "SELECT classroom ,  count(*) FROM list WHERE grade  =  \"4\" GROUP BY classroom", "query_toks": ["SELECT", "classroom", ",", "count", "(", "*", ")", "FROM", "list", "WHERE", "grade", "=", "``", "4", "''", "GROUP", "BY", "classroom"], "query_toks_no_value": ["select", "classroom", ",", "count", "(", "*", ")", "from", "list", "where", "grade", "=", "value", "group", "by", "classroom"], "question": "For each fourth-grade classroom, show the classroom number and the total number of students using it.", "question_toks": ["For", "each", "fourth-grade", "classroom", ",", "show", "the", "classroom", "number", "and", "the", "total", "number", "of", "students", "using", "it", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], "\"4\"", null]]}}, {"db_id": "student_1", "query": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom GROUP BY T2.firstname ,  T2.lastname ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.firstname", ",", "T2.lastname", "FROM", "list", "AS", "T1", "JOIN", "teachers", "AS", "T2", "ON", "T1.classroom", "=", "T2.classroom", "GROUP", "BY", "T2.firstname", ",", "T2.lastname", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "firstname", ",", "t2", ".", "lastname", "from", "list", "as", "t1", "join", "teachers", "as", "t2", "on", "t1", ".", "classroom", "=", "t2", ".", "classroom", "group", "by", "t2", ".", "firstname", ",", "t2", ".", "lastname", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the name of the teacher who teaches the largest number of students.", "question_toks": ["Find", "the", "name", "of", "the", "teacher", "who", "teaches", "the", "largest", "number", "of", "students", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 7, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 6, false], [0, 5, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "student_1", "query": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom GROUP BY T2.firstname ,  T2.lastname ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.firstname", ",", "T2.lastname", "FROM", "list", "AS", "T1", "JOIN", "teachers", "AS", "T2", "ON", "T1.classroom", "=", "T2.classroom", "GROUP", "BY", "T2.firstname", ",", "T2.lastname", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "firstname", ",", "t2", ".", "lastname", "from", "list", "as", "t1", "join", "teachers", "as", "t2", "on", "t1", ".", "classroom", "=", "t2", ".", "classroom", "group", "by", "t2", ".", "firstname", ",", "t2", ".", "lastname", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which teacher teaches the most students? Give me the first name and last name of the teacher.", "question_toks": ["Which", "teacher", "teaches", "the", "most", "students", "?", "Give", "me", "the", "first", "name", "and", "last", "name", "of", "the", "teacher", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 7, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 6, false], [0, 5, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "student_1", "query": "SELECT count(*) ,  classroom FROM list GROUP BY classroom", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "classroom", "FROM", "list", "GROUP", "BY", "classroom"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "classroom", "from", "list", "group", "by", "classroom"], "question": "Find the number of students in one classroom.", "question_toks": ["Find", "the", "number", "of", "students", "in", "one", "classroom", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "student_1", "query": "SELECT count(*) ,  classroom FROM list GROUP BY classroom", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "classroom", "FROM", "list", "GROUP", "BY", "classroom"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "classroom", "from", "list", "group", "by", "classroom"], "question": "How many students does one classroom have?", "question_toks": ["How", "many", "students", "does", "one", "classroom", "have", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "company_employee", "query": "SELECT Headquarters ,  Industry FROM company", "query_toks": ["SELECT", "Headquarters", ",", "Industry", "FROM", "company"], "query_toks_no_value": ["select", "headquarters", ",", "industry", "from", "company"], "question": "What are the headquarters and industries of all companies?", "question_toks": ["What", "are", "the", "headquarters", "and", "industries", "of", "all", "companies", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "company_employee", "query": "SELECT max(Market_Value_in_Billion) ,  min(Market_Value_in_Billion) FROM company", "query_toks": ["SELECT", "max", "(", "Market_Value_in_Billion", ")", ",", "min", "(", "Market_Value_in_Billion", ")", "FROM", "company"], "query_toks_no_value": ["select", "max", "(", "market_value_in_billion", ")", ",", "min", "(", "market_value_in_billion", ")", "from", "company"], "question": "What is the maximum and minimum market value of companies?", "question_toks": ["What", "is", "the", "maximum", "and", "minimum", "market", "value", "of", "companies", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 13, false], null]], [2, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "company_employee", "query": "SELECT Headquarters ,  COUNT(*) FROM company GROUP BY Headquarters", "query_toks": ["SELECT", "Headquarters", ",", "COUNT", "(", "*", ")", "FROM", "company", "GROUP", "BY", "Headquarters"], "query_toks_no_value": ["select", "headquarters", ",", "count", "(", "*", ")", "from", "company", "group", "by", "headquarters"], "question": "Show the different headquarters and number of companies at each headquarter.", "question_toks": ["Show", "the", "different", "headquarters", "and", "number", "of", "companies", "at", "each", "headquarter", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "company_employee", "query": "SELECT T3.Name ,  T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID", "query_toks": ["SELECT", "T3.Name", ",", "T2.Name", "FROM", "employment", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "JOIN", "company", "AS", "T3", "ON", "T1.Company_ID", "=", "T3.Company_ID"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "name", "from", "employment", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "join", "company", "as", "t3", "on", "t1", ".", "company_id", "=", "t3", ".", "company_id"], "question": "Show the names of companies and of employees.", "question_toks": ["Show", "the", "names", "of", "companies", "and", "of", "employees", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "company_employee", "query": "SELECT T3.Name ,  T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID ORDER BY T1.Year_working", "query_toks": ["SELECT", "T3.Name", ",", "T2.Name", "FROM", "employment", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "JOIN", "company", "AS", "T3", "ON", "T1.Company_ID", "=", "T3.Company_ID", "ORDER", "BY", "T1.Year_working"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "name", "from", "employment", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "join", "company", "as", "t3", "on", "t1", ".", "company_id", "=", "t3", ".", "company_id", "order", "by", "t1", ".", "year_working"], "question": "Show names of companies and that of employees in descending order of number of years working for that employee.", "question_toks": ["Show", "names", "of", "companies", "and", "that", "of", "employees", "in", "descending", "order", "of", "number", "of", "years", "working", "for", "that", "employee", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 16, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "company_employee", "query": "SELECT T3.Name ,  COUNT(*) FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID GROUP BY T3.Name", "query_toks": ["SELECT", "T3.Name", ",", "COUNT", "(", "*", ")", "FROM", "employment", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "JOIN", "company", "AS", "T3", "ON", "T1.Company_ID", "=", "T3.Company_ID", "GROUP", "BY", "T3.Name"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "count", "(", "*", ")", "from", "employment", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "join", "company", "as", "t3", "on", "t1", ".", "company_id", "=", "t3", ".", "company_id", "group", "by", "t3", ".", "name"], "question": "Show the names of companies and the number of employees they have", "question_toks": ["Show", "the", "names", "of", "companies", "and", "the", "number", "of", "employees", "they", "have"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "film_rank", "query": "SELECT Low_Estimate ,  High_Estimate FROM film_market_estimation", "query_toks": ["SELECT", "Low_Estimate", ",", "High_Estimate", "FROM", "film_market_estimation"], "query_toks_no_value": ["select", "low_estimate", ",", "high_estimate", "from", "film_market_estimation"], "question": "What are the low and high estimates of film markets?", "question_toks": ["What", "are", "the", "low", "and", "high", "estimates", "of", "film", "markets", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "film_rank", "query": "SELECT Low_Estimate ,  High_Estimate FROM film_market_estimation", "query_toks": ["SELECT", "Low_Estimate", ",", "High_Estimate", "FROM", "film_market_estimation"], "query_toks_no_value": ["select", "low_estimate", ",", "high_estimate", "from", "film_market_estimation"], "question": "Return the low and high estimates for all film markets.", "question_toks": ["Return", "the", "low", "and", "high", "estimates", "for", "all", "film", "markets", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "film_rank", "query": "SELECT max(Number_cities) ,  min(Number_cities) FROM market", "query_toks": ["SELECT", "max", "(", "Number_cities", ")", ",", "min", "(", "Number_cities", ")", "FROM", "market"], "query_toks_no_value": ["select", "max", "(", "number_cities", ")", ",", "min", "(", "number_cities", ")", "from", "market"], "question": "What are the maximum and minimum number of cities in all markets.", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "number", "of", "cities", "in", "all", "markets", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 8, false], null]], [2, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "film_rank", "query": "SELECT max(Number_cities) ,  min(Number_cities) FROM market", "query_toks": ["SELECT", "max", "(", "Number_cities", ")", ",", "min", "(", "Number_cities", ")", "FROM", "market"], "query_toks_no_value": ["select", "max", "(", "number_cities", ")", ",", "min", "(", "number_cities", ")", "from", "market"], "question": "Return the maximum and minimum number of cities across all markets.", "question_toks": ["Return", "the", "maximum", "and", "minimum", "number", "of", "cities", "across", "all", "markets", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 8, false], null]], [2, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "film_rank", "query": "SELECT T1.Title ,  T2.Type FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID", "query_toks": ["SELECT", "T1.Title", ",", "T2.Type", "FROM", "film", "AS", "T1", "JOIN", "film_market_estimation", "AS", "T2", "ON", "T1.Film_ID", "=", "T2.Film_ID"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t2", ".", "type", "from", "film", "as", "t1", "join", "film_market_estimation", "as", "t2", "on", "t1", ".", "film_id", "=", "t2", ".", "film_id"], "question": "Please show the titles of films and the types of market estimations.", "question_toks": ["Please", "show", "the", "titles", "of", "films", "and", "the", "types", "of", "market", "estimations", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 12, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "film_rank", "query": "SELECT T1.Title ,  T2.Type FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID", "query_toks": ["SELECT", "T1.Title", ",", "T2.Type", "FROM", "film", "AS", "T1", "JOIN", "film_market_estimation", "AS", "T2", "ON", "T1.Film_ID", "=", "T2.Film_ID"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t2", ".", "type", "from", "film", "as", "t1", "join", "film_market_estimation", "as", "t2", "on", "t1", ".", "film_id", "=", "t2", ".", "film_id"], "question": "What are the titles of films and corresponding types of market estimations?", "question_toks": ["What", "are", "the", "titles", "of", "films", "and", "corresponding", "types", "of", "market", "estimations", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 12, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "film_rank", "query": "SELECT T2.Country ,  T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID", "query_toks": ["SELECT", "T2.Country", ",", "T1.Year", "FROM", "film_market_estimation", "AS", "T1", "JOIN", "market", "AS", "T2", "ON", "T1.Market_ID", "=", "T2.Market_ID"], "query_toks_no_value": ["select", "t2", ".", "country", ",", "t1", ".", "year", "from", "film_market_estimation", "as", "t1", "join", "market", "as", "t2", "on", "t1", ".", "market_id", "=", "t2", ".", "market_id"], "question": "Please list the countries and years of film market estimations.", "question_toks": ["Please", "list", "the", "countries", "and", "years", "of", "film", "market", "estimations", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 14, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": []}}, {"db_id": "film_rank", "query": "SELECT T2.Country ,  T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID", "query_toks": ["SELECT", "T2.Country", ",", "T1.Year", "FROM", "film_market_estimation", "AS", "T1", "JOIN", "market", "AS", "T2", "ON", "T1.Market_ID", "=", "T2.Market_ID"], "query_toks_no_value": ["select", "t2", ".", "country", ",", "t1", ".", "year", "from", "film_market_estimation", "as", "t1", "join", "market", "as", "t2", "on", "t1", ".", "market_id", "=", "t2", ".", "market_id"], "question": "What are the countries of markets and their corresponding years of market estimation?", "question_toks": ["What", "are", "the", "countries", "of", "markets", "and", "their", "corresponding", "years", "of", "market", "estimation", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 14, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": []}}, {"db_id": "film_rank", "query": "SELECT Studio ,  COUNT(*) FROM film GROUP BY Studio", "query_toks": ["SELECT", "Studio", ",", "COUNT", "(", "*", ")", "FROM", "film", "GROUP", "BY", "Studio"], "query_toks_no_value": ["select", "studio", ",", "count", "(", "*", ")", "from", "film", "group", "by", "studio"], "question": "List the studios of each film and the number of films produced by that studio.", "question_toks": ["List", "the", "studios", "of", "each", "film", "and", "the", "number", "of", "films", "produced", "by", "that", "studio", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "film_rank", "query": "SELECT Studio ,  COUNT(*) FROM film GROUP BY Studio", "query_toks": ["SELECT", "Studio", ",", "COUNT", "(", "*", ")", "FROM", "film", "GROUP", "BY", "Studio"], "query_toks_no_value": ["select", "studio", ",", "count", "(", "*", ")", "from", "film", "group", "by", "studio"], "question": "How films are produced by each studio?", "question_toks": ["How", "films", "are", "produced", "by", "each", "studio", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "film_rank", "query": "SELECT title ,  Studio FROM film WHERE Studio LIKE \"%Universal%\"", "query_toks": ["SELECT", "title", ",", "Studio", "FROM", "film", "WHERE", "Studio", "LIKE", "``", "%", "Universal", "%", "''"], "query_toks_no_value": ["select", "title", ",", "studio", "from", "film", "where", "studio", "like", "value"], "question": "Find the titles and studios of the films that are produced by some film studios that contained the word \"Universal\".", "question_toks": ["Find", "the", "titles", "and", "studios", "of", "the", "films", "that", "are", "produced", "by", "some", "film", "studios", "that", "contained", "the", "word", "``", "Universal", "''", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 3, false], null], "\"%Universal%\"", null]]}}, {"db_id": "film_rank", "query": "SELECT title ,  Studio FROM film WHERE Studio LIKE \"%Universal%\"", "query_toks": ["SELECT", "title", ",", "Studio", "FROM", "film", "WHERE", "Studio", "LIKE", "``", "%", "Universal", "%", "''"], "query_toks_no_value": ["select", "title", ",", "studio", "from", "film", "where", "studio", "like", "value"], "question": "What are the titles and studios of films that have been produced by a studio whose name contains \"Universal\"?", "question_toks": ["What", "are", "the", "titles", "and", "studios", "of", "films", "that", "have", "been", "produced", "by", "a", "studio", "whose", "name", "contains", "``", "Universal", "''", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 3, false], null], "\"%Universal%\"", null]]}}, {"db_id": "film_rank", "query": "SELECT title ,  director FROM film WHERE film_id NOT IN (SELECT film_id FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.market_id  =  T2.Market_ID WHERE country  =  'China')", "query_toks": ["SELECT", "title", ",", "director", "FROM", "film", "WHERE", "film_id", "NOT", "IN", "(", "SELECT", "film_id", "FROM", "film_market_estimation", "AS", "T1", "JOIN", "market", "AS", "T2", "ON", "T1.market_id", "=", "T2.Market_ID", "WHERE", "country", "=", "'China", "'", ")"], "query_toks_no_value": ["select", "title", ",", "director", "from", "film", "where", "film_id", "not", "in", "(", "select", "film_id", "from", "film_market_estimation", "as", "t1", "join", "market", "as", "t2", "on", "t1", ".", "market_id", "=", "t2", ".", "market_id", "where", "country", "=", "value", ")"], "question": "What are the titles and directors of the films were never presented in China?", "question_toks": ["What", "are", "the", "titles", "and", "directors", "of", "the", "films", "were", "never", "presented", "in", "China", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [[false, 2, [0, [0, 14, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"China\"", null]]}, null]]}}, {"db_id": "film_rank", "query": "SELECT title ,  director FROM film WHERE film_id NOT IN (SELECT film_id FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.market_id  =  T2.Market_ID WHERE country  =  'China')", "query_toks": ["SELECT", "title", ",", "director", "FROM", "film", "WHERE", "film_id", "NOT", "IN", "(", "SELECT", "film_id", "FROM", "film_market_estimation", "AS", "T1", "JOIN", "market", "AS", "T2", "ON", "T1.market_id", "=", "T2.Market_ID", "WHERE", "country", "=", "'China", "'", ")"], "query_toks_no_value": ["select", "title", ",", "director", "from", "film", "where", "film_id", "not", "in", "(", "select", "film_id", "from", "film_market_estimation", "as", "t1", "join", "market", "as", "t2", "on", "t1", ".", "market_id", "=", "t2", ".", "market_id", "where", "country", "=", "value", ")"], "question": "Return the titles and directors of films that were never in the market of China.", "question_toks": ["Return", "the", "titles", "and", "directors", "of", "films", "that", "were", "never", "in", "the", "market", "of", "China", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [[false, 2, [0, [0, 14, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"China\"", null]]}, null]]}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT calendar_date ,  day_Number FROM Ref_calendar", "query_toks": ["SELECT", "calendar_date", ",", "day_Number", "FROM", "Ref_calendar"], "query_toks_no_value": ["select", "calendar_date", ",", "day_number", "from", "ref_calendar"], "question": "Show all calendar dates and day Numbers.", "question_toks": ["Show", "all", "calendar", "dates", "and", "day", "Numbers", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT calendar_date ,  day_Number FROM Ref_calendar", "query_toks": ["SELECT", "calendar_date", ",", "day_Number", "FROM", "Ref_calendar"], "query_toks_no_value": ["select", "calendar_date", ",", "day_number", "from", "ref_calendar"], "question": "What are all the calendar dates and day Numbers?", "question_toks": ["What", "are", "all", "the", "calendar", "dates", "and", "day", "Numbers", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT document_type_code ,  document_type_name FROM Ref_document_types", "query_toks": ["SELECT", "document_type_code", ",", "document_type_name", "FROM", "Ref_document_types"], "query_toks_no_value": ["select", "document_type_code", ",", "document_type_name", "from", "ref_document_types"], "question": "List all document type codes and document type names.", "question_toks": ["List", "all", "document", "type", "codes", "and", "document", "type", "names", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT document_type_code ,  document_type_name FROM Ref_document_types", "query_toks": ["SELECT", "document_type_code", ",", "document_type_name", "FROM", "Ref_document_types"], "query_toks_no_value": ["select", "document_type_code", ",", "document_type_name", "from", "ref_document_types"], "question": "What are all the document type codes and document type names?", "question_toks": ["What", "are", "all", "the", "document", "type", "codes", "and", "document", "type", "names", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT document_type_name ,  document_type_description FROM Ref_document_types WHERE document_type_code  =  \"RV\"", "query_toks": ["SELECT", "document_type_name", ",", "document_type_description", "FROM", "Ref_document_types", "WHERE", "document_type_code", "=", "``", "RV", "''"], "query_toks_no_value": ["select", "document_type_name", ",", "document_type_description", "from", "ref_document_types", "where", "document_type_code", "=", "value"], "question": "What is the name and description for document type code RV?", "question_toks": ["What", "is", "the", "name", "and", "description", "for", "document", "type", "code", "RV", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 1, false], null], "\"RV\"", null]]}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT document_type_name ,  document_type_description FROM Ref_document_types WHERE document_type_code  =  \"RV\"", "query_toks": ["SELECT", "document_type_name", ",", "document_type_description", "FROM", "Ref_document_types", "WHERE", "document_type_code", "=", "``", "RV", "''"], "query_toks_no_value": ["select", "document_type_name", ",", "document_type_description", "from", "ref_document_types", "where", "document_type_code", "=", "value"], "question": "Give me the name and description of the document type code RV.", "question_toks": ["Give", "me", "the", "name", "and", "description", "of", "the", "document", "type", "code", "RV", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 1, false], null], "\"RV\"", null]]}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT T2.day_Number ,  T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored  =  T2.calendar_date", "query_toks": ["SELECT", "T2.day_Number", ",", "T1.Date_Stored", "FROM", "All_documents", "AS", "T1", "JOIN", "Ref_calendar", "AS", "T2", "ON", "T1.date_stored", "=", "T2.calendar_date"], "query_toks_no_value": ["select", "t2", ".", "day_number", ",", "t1", ".", "date_stored", "from", "all_documents", "as", "t1", "join", "ref_calendar", "as", "t2", "on", "t1", ".", "date_stored", "=", "t2", ".", "calendar_date"], "question": "What is the day Number and date of all the documents?", "question_toks": ["What", "is", "the", "day", "Number", "and", "date", "of", "all", "the", "documents", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 4, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT T2.day_Number ,  T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored  =  T2.calendar_date", "query_toks": ["SELECT", "T2.day_Number", ",", "T1.Date_Stored", "FROM", "All_documents", "AS", "T1", "JOIN", "Ref_calendar", "AS", "T2", "ON", "T1.date_stored", "=", "T2.calendar_date"], "query_toks_no_value": ["select", "t2", ".", "day_number", ",", "t1", ".", "date_stored", "from", "all_documents", "as", "t1", "join", "ref_calendar", "as", "t2", "on", "t1", ".", "date_stored", "=", "t2", ".", "calendar_date"], "question": "Return the day Number and stored date for all the documents.", "question_toks": ["Return", "the", "day", "Number", "and", "stored", "date", "for", "all", "the", "documents", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 4, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT location_code ,  location_name FROM Ref_locations", "query_toks": ["SELECT", "location_code", ",", "location_name", "FROM", "Ref_locations"], "query_toks_no_value": ["select", "location_code", ",", "location_name", "from", "ref_locations"], "question": "List all location codes and location names.", "question_toks": ["List", "all", "location", "codes", "and", "location", "names", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT location_code ,  location_name FROM Ref_locations", "query_toks": ["SELECT", "location_code", ",", "location_name", "FROM", "Ref_locations"], "query_toks_no_value": ["select", "location_code", ",", "location_name", "from", "ref_locations"], "question": "What are all the location codes and location names?", "question_toks": ["What", "are", "all", "the", "location", "codes", "and", "location", "names", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT location_name ,  location_description FROM Ref_locations WHERE location_code  =  \"x\"", "query_toks": ["SELECT", "location_name", ",", "location_description", "FROM", "Ref_locations", "WHERE", "location_code", "=", "``", "x", "''"], "query_toks_no_value": ["select", "location_name", ",", "location_description", "from", "ref_locations", "where", "location_code", "=", "value"], "question": "What are the name and description for location code x?", "question_toks": ["What", "are", "the", "name", "and", "description", "for", "location", "code", "x", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"x\"", null]]}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT location_name ,  location_description FROM Ref_locations WHERE location_code  =  \"x\"", "query_toks": ["SELECT", "location_name", ",", "location_description", "FROM", "Ref_locations", "WHERE", "location_code", "=", "``", "x", "''"], "query_toks_no_value": ["select", "location_name", ",", "location_description", "from", "ref_locations", "where", "location_code", "=", "value"], "question": "Give me the name and description of the location with code x.", "question_toks": ["Give", "me", "the", "name", "and", "description", "of", "the", "location", "with", "code", "x", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"x\"", null]]}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT role_code ,  role_name ,  role_description FROM ROLES", "query_toks": ["SELECT", "role_code", ",", "role_name", ",", "role_description", "FROM", "ROLES"], "query_toks_no_value": ["select", "role_code", ",", "role_name", ",", "role_description", "from", "roles"], "question": "List all role codes, role names, and role descriptions.", "question_toks": ["List", "all", "role", "codes", ",", "role", "names", ",", "and", "role", "descriptions", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT role_code ,  role_name ,  role_description FROM ROLES", "query_toks": ["SELECT", "role_code", ",", "role_name", ",", "role_description", "FROM", "ROLES"], "query_toks_no_value": ["select", "role_code", ",", "role_name", ",", "role_description", "from", "roles"], "question": "What are all the role codes, role names, and role descriptions?", "question_toks": ["What", "are", "all", "the", "role", "codes", ",", "role", "names", ",", "and", "role", "descriptions", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT role_name ,  role_description FROM ROLES WHERE role_code  =  \"MG\"", "query_toks": ["SELECT", "role_name", ",", "role_description", "FROM", "ROLES", "WHERE", "role_code", "=", "``", "MG", "''"], "query_toks_no_value": ["select", "role_name", ",", "role_description", "from", "roles", "where", "role_code", "=", "value"], "question": "What are the name and description for role code \"MG\"?", "question_toks": ["What", "are", "the", "name", "and", "description", "for", "role", "code", "``", "MG", "''", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], "\"MG\"", null]]}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT role_name ,  role_description FROM ROLES WHERE role_code  =  \"MG\"", "query_toks": ["SELECT", "role_name", ",", "role_description", "FROM", "ROLES", "WHERE", "role_code", "=", "``", "MG", "''"], "query_toks_no_value": ["select", "role_name", ",", "role_description", "from", "roles", "where", "role_code", "=", "value"], "question": "Find the name and description of the role with code \"MG\".", "question_toks": ["Find", "the", "name", "and", "description", "of", "the", "role", "with", "code", "``", "MG", "''", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], "\"MG\"", null]]}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT employee_name ,  role_code ,  date_of_birth FROM Employees WHERE employee_Name  =  'Armani'", "query_toks": ["SELECT", "employee_name", ",", "role_code", ",", "date_of_birth", "FROM", "Employees", "WHERE", "employee_Name", "=", "'Armani", "'"], "query_toks_no_value": ["select", "employee_name", ",", "role_code", ",", "date_of_birth", "from", "employees", "where", "employee_name", "=", "value"], "question": "Show the name, role code, and date of birth for the employee with name 'Armani'.", "question_toks": ["Show", "the", "name", ",", "role", "code", ",", "and", "date", "of", "birth", "for", "the", "employee", "with", "name", "'Armani", "'", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 19, false], null]], [0, [0, [0, 22, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 20, false], null], "\"Armani\"", null]]}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT employee_name ,  role_code ,  date_of_birth FROM Employees WHERE employee_Name  =  'Armani'", "query_toks": ["SELECT", "employee_name", ",", "role_code", ",", "date_of_birth", "FROM", "Employees", "WHERE", "employee_Name", "=", "'Armani", "'"], "query_toks_no_value": ["select", "employee_name", ",", "role_code", ",", "date_of_birth", "from", "employees", "where", "employee_name", "=", "value"], "question": "What are the name, role code, and date of birth of the employee named 'Armani'?", "question_toks": ["What", "are", "the", "name", ",", "role", "code", ",", "and", "date", "of", "birth", "of", "the", "employee", "named", "'Armani", "'", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 19, false], null]], [0, [0, [0, 22, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 20, false], null], "\"Armani\"", null]]}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT role_code ,  count(*) FROM Employees GROUP BY role_code", "query_toks": ["SELECT", "role_code", ",", "count", "(", "*", ")", "FROM", "Employees", "GROUP", "BY", "role_code"], "query_toks_no_value": ["select", "role_code", ",", "count", "(", "*", ")", "from", "employees", "group", "by", "role_code"], "question": "Show all role codes and the number of employees in each role.", "question_toks": ["Show", "all", "role", "codes", "and", "the", "number", "of", "employees", "in", "each", "role", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT role_code ,  count(*) FROM Employees GROUP BY role_code", "query_toks": ["SELECT", "role_code", ",", "count", "(", "*", ")", "FROM", "Employees", "GROUP", "BY", "role_code"], "query_toks_no_value": ["select", "role_code", ",", "count", "(", "*", ")", "from", "employees", "group", "by", "role_code"], "question": "What is the code of each role and the number of employees in each role?", "question_toks": ["What", "is", "the", "code", "of", "each", "role", "and", "the", "number", "of", "employees", "in", "each", "role", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT T2.role_name ,  T2.role_description FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T1.employee_name  =  \"Ebba\"", "query_toks": ["SELECT", "T2.role_name", ",", "T2.role_description", "FROM", "Employees", "AS", "T1", "JOIN", "ROLES", "AS", "T2", "ON", "T1.role_code", "=", "T2.role_code", "WHERE", "T1.employee_name", "=", "``", "Ebba", "''"], "query_toks_no_value": ["select", "t2", ".", "role_name", ",", "t2", ".", "role_description", "from", "employees", "as", "t1", "join", "roles", "as", "t2", "on", "t1", ".", "role_code", "=", "t2", ".", "role_code", "where", "t1", ".", "employee_name", "=", "value"], "question": "What is the role name and role description for employee called Ebba?", "question_toks": ["What", "is", "the", "role", "name", "and", "role", "description", "for", "employee", "called", "Ebba", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 19, false], null], [0, 9, false], null]], "table_units": [["table_unit", 5], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 20, false], null], "\"Ebba\"", null]]}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT T2.role_name ,  T2.role_description FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T1.employee_name  =  \"Ebba\"", "query_toks": ["SELECT", "T2.role_name", ",", "T2.role_description", "FROM", "Employees", "AS", "T1", "JOIN", "ROLES", "AS", "T2", "ON", "T1.role_code", "=", "T2.role_code", "WHERE", "T1.employee_name", "=", "``", "Ebba", "''"], "query_toks_no_value": ["select", "t2", ".", "role_name", ",", "t2", ".", "role_description", "from", "employees", "as", "t1", "join", "roles", "as", "t2", "on", "t1", ".", "role_code", "=", "t2", ".", "role_code", "where", "t1", ".", "employee_name", "=", "value"], "question": "Show the name and description of the role played by the employee named Ebba.", "question_toks": ["Show", "the", "name", "and", "description", "of", "the", "role", "played", "by", "the", "employee", "named", "Ebba", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 19, false], null], [0, 9, false], null]], "table_units": [["table_unit", 5], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 20, false], null], "\"Ebba\"", null]]}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT location_code ,  date_in_location_from ,  date_in_locaton_to FROM Document_locations", "query_toks": ["SELECT", "location_code", ",", "date_in_location_from", ",", "date_in_locaton_to", "FROM", "Document_locations"], "query_toks_no_value": ["select", "location_code", ",", "date_in_location_from", ",", "date_in_locaton_to", "from", "document_locations"], "question": "Show the location code, the starting date and ending data in that location for all the documents.", "question_toks": ["Show", "the", "location", "code", ",", "the", "starting", "date", "and", "ending", "data", "in", "that", "location", "for", "all", "the", "documents", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 26, false], null]], [0, [0, [0, 27, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT location_code ,  date_in_location_from ,  date_in_locaton_to FROM Document_locations", "query_toks": ["SELECT", "location_code", ",", "date_in_location_from", ",", "date_in_locaton_to", "FROM", "Document_locations"], "query_toks_no_value": ["select", "location_code", ",", "date_in_location_from", ",", "date_in_locaton_to", "from", "document_locations"], "question": "What are each document's location code, and starting date and ending data in that location?", "question_toks": ["What", "are", "each", "document", "'s", "location", "code", ",", "and", "starting", "date", "and", "ending", "data", "in", "that", "location", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 26, false], null]], [0, [0, [0, 27, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT T1.date_in_location_from ,  T1.date_in_locaton_to FROM Document_locations AS T1 JOIN All_documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Robin CV\"", "query_toks": ["SELECT", "T1.date_in_location_from", ",", "T1.date_in_locaton_to", "FROM", "Document_locations", "AS", "T1", "JOIN", "All_documents", "AS", "T2", "ON", "T1.document_id", "=", "T2.document_id", "WHERE", "T2.document_name", "=", "``", "Robin", "CV", "''"], "query_toks_no_value": ["select", "t1", ".", "date_in_location_from", ",", "t1", ".", "date_in_locaton_to", "from", "document_locations", "as", "t1", "join", "all_documents", "as", "t2", "on", "t1", ".", "document_id", "=", "t2", ".", "document_id", "where", "t2", ".", "document_name", "=", "value"], "question": "What is \"the date in location from\" and \"the date in location to\" for the document with name \"Robin CV\"?", "question_toks": ["What", "is", "``", "the", "date", "in", "location", "from", "''", "and", "``", "the", "date", "in", "location", "to", "''", "for", "the", "document", "with", "name", "``", "Robin", "CV", "''", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 24, false], null], [0, 12, false], null]], "table_units": [["table_unit", 6], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 27, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 15, false], null], "\"Robin CV\"", null]]}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT T1.date_in_location_from ,  T1.date_in_locaton_to FROM Document_locations AS T1 JOIN All_documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Robin CV\"", "query_toks": ["SELECT", "T1.date_in_location_from", ",", "T1.date_in_locaton_to", "FROM", "Document_locations", "AS", "T1", "JOIN", "All_documents", "AS", "T2", "ON", "T1.document_id", "=", "T2.document_id", "WHERE", "T2.document_name", "=", "``", "Robin", "CV", "''"], "query_toks_no_value": ["select", "t1", ".", "date_in_location_from", ",", "t1", ".", "date_in_locaton_to", "from", "document_locations", "as", "t1", "join", "all_documents", "as", "t2", "on", "t1", ".", "document_id", "=", "t2", ".", "document_id", "where", "t2", ".", "document_name", "=", "value"], "question": "Find the starting date and ending data in location for the document named \"Robin CV\".", "question_toks": ["Find", "the", "starting", "date", "and", "ending", "data", "in", "location", "for", "the", "document", "named", "``", "Robin", "CV", "''", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 24, false], null], [0, 12, false], null]], "table_units": [["table_unit", 6], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 27, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 15, false], null], "\"Robin CV\"", null]]}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT location_code ,  count(*) FROM Document_locations GROUP BY location_code", "query_toks": ["SELECT", "location_code", ",", "count", "(", "*", ")", "FROM", "Document_locations", "GROUP", "BY", "location_code"], "query_toks_no_value": ["select", "location_code", ",", "count", "(", "*", ")", "from", "document_locations", "group", "by", "location_code"], "question": "Show the location codes and the number of documents in each location.", "question_toks": ["Show", "the", "location", "codes", "and", "the", "number", "of", "documents", "in", "each", "location", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 25, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 25, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT location_code ,  count(*) FROM Document_locations GROUP BY location_code", "query_toks": ["SELECT", "location_code", ",", "count", "(", "*", ")", "FROM", "Document_locations", "GROUP", "BY", "location_code"], "query_toks_no_value": ["select", "location_code", ",", "count", "(", "*", ")", "from", "document_locations", "group", "by", "location_code"], "question": "What is the code of each location and the number of documents in that location?", "question_toks": ["What", "is", "the", "code", "of", "each", "location", "and", "the", "number", "of", "documents", "in", "that", "location", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 25, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 25, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT T2.location_name ,  T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code  =  T2.location_code GROUP BY T1.location_code ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "T2.location_name", ",", "T1.location_code", "FROM", "Document_locations", "AS", "T1", "JOIN", "Ref_locations", "AS", "T2", "ON", "T1.location_code", "=", "T2.location_code", "GROUP", "BY", "T1.location_code", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "location_name", ",", "t1", ".", "location_code", "from", "document_locations", "as", "t1", "join", "ref_locations", "as", "t2", "on", "t1", ".", "location_code", "=", "t2", ".", "location_code", "group", "by", "t1", ".", "location_code", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "Show the location name and code with the least documents.", "question_toks": ["Show", "the", "location", "name", "and", "code", "with", "the", "least", "documents", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 25, false], null], [0, 6, false], null]], "table_units": [["table_unit", 6], ["table_unit", 2]]}, "groupBy": [[0, 25, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 25, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT T2.location_name ,  T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code  =  T2.location_code GROUP BY T1.location_code ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "T2.location_name", ",", "T1.location_code", "FROM", "Document_locations", "AS", "T1", "JOIN", "Ref_locations", "AS", "T2", "ON", "T1.location_code", "=", "T2.location_code", "GROUP", "BY", "T1.location_code", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "location_name", ",", "t1", ".", "location_code", "from", "document_locations", "as", "t1", "join", "ref_locations", "as", "t2", "on", "t1", ".", "location_code", "=", "t2", ".", "location_code", "group", "by", "t1", ".", "location_code", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "What are the name and code of the location with the smallest number of documents?", "question_toks": ["What", "are", "the", "name", "and", "code", "of", "the", "location", "with", "the", "smallest", "number", "of", "documents", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 25, false], null], [0, 6, false], null]], "table_units": [["table_unit", 6], ["table_unit", 2]]}, "groupBy": [[0, 25, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 25, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT T2.employee_name ,  T3.employee_name FROM Documents_to_be_destroyed AS T1 JOIN Employees AS T2 ON T1.Destruction_Authorised_by_Employee_ID = T2.employee_id JOIN Employees AS T3 ON T1.Destroyed_by_Employee_ID = T3.employee_id;", "query_toks": ["SELECT", "T2.employee_name", ",", "T3.employee_name", "FROM", "Documents_to_be_destroyed", "AS", "T1", "JOIN", "Employees", "AS", "T2", "ON", "T1.Destruction_Authorised_by_Employee_ID", "=", "T2.employee_id", "JOIN", "Employees", "AS", "T3", "ON", "T1.Destroyed_by_Employee_ID", "=", "T3.employee_id", ";"], "query_toks_no_value": ["select", "t2", ".", "employee_name", ",", "t3", ".", "employee_name", "from", "documents_to_be_destroyed", "as", "t1", "join", "employees", "as", "t2", "on", "t1", ".", "destruction_authorised_by_employee_id", "=", "t2", ".", "employee_id", "join", "employees", "as", "t3", "on", "t1", ".", "destroyed_by_employee_id", "=", "t3", ".", "employee_id"], "question": "What are the names of the employees who authorised the destruction and the employees who destroyed the corresponding documents?", "question_toks": ["What", "are", "the", "names", "of", "the", "employees", "who", "authorised", "the", "destruction", "and", "the", "employees", "who", "destroyed", "the", "corresponding", "documents", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 29, false], null], [0, 18, false], null]], "table_units": [["table_unit", 7], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 20, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT T2.employee_name ,  T3.employee_name FROM Documents_to_be_destroyed AS T1 JOIN Employees AS T2 ON T1.Destruction_Authorised_by_Employee_ID = T2.employee_id JOIN Employees AS T3 ON T1.Destroyed_by_Employee_ID = T3.employee_id;", "query_toks": ["SELECT", "T2.employee_name", ",", "T3.employee_name", "FROM", "Documents_to_be_destroyed", "AS", "T1", "JOIN", "Employees", "AS", "T2", "ON", "T1.Destruction_Authorised_by_Employee_ID", "=", "T2.employee_id", "JOIN", "Employees", "AS", "T3", "ON", "T1.Destroyed_by_Employee_ID", "=", "T3.employee_id", ";"], "query_toks_no_value": ["select", "t2", ".", "employee_name", ",", "t3", ".", "employee_name", "from", "documents_to_be_destroyed", "as", "t1", "join", "employees", "as", "t2", "on", "t1", ".", "destruction_authorised_by_employee_id", "=", "t2", ".", "employee_id", "join", "employees", "as", "t3", "on", "t1", ".", "destroyed_by_employee_id", "=", "t3", ".", "employee_id"], "question": "List the names of the employees who authorized the destruction of documents and the employees who destroyed the corresponding documents.", "question_toks": ["List", "the", "names", "of", "the", "employees", "who", "authorized", "the", "destruction", "of", "documents", "and", "the", "employees", "who", "destroyed", "the", "corresponding", "documents", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 29, false], null], [0, 18, false], null]], "table_units": [["table_unit", 7], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 20, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT Destruction_Authorised_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID", "query_toks": ["SELECT", "Destruction_Authorised_by_Employee_ID", ",", "count", "(", "*", ")", "FROM", "Documents_to_be_destroyed", "GROUP", "BY", "Destruction_Authorised_by_Employee_ID"], "query_toks_no_value": ["select", "destruction_authorised_by_employee_id", ",", "count", "(", "*", ")", "from", "documents_to_be_destroyed", "group", "by", "destruction_authorised_by_employee_id"], "question": "Show the id of each employee and the number of document destruction authorised by that employee.", "question_toks": ["Show", "the", "id", "of", "each", "employee", "and", "the", "number", "of", "document", "destruction", "authorised", "by", "that", "employee", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [[0, 29, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 29, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT Destruction_Authorised_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID", "query_toks": ["SELECT", "Destruction_Authorised_by_Employee_ID", ",", "count", "(", "*", ")", "FROM", "Documents_to_be_destroyed", "GROUP", "BY", "Destruction_Authorised_by_Employee_ID"], "query_toks_no_value": ["select", "destruction_authorised_by_employee_id", ",", "count", "(", "*", ")", "from", "documents_to_be_destroyed", "group", "by", "destruction_authorised_by_employee_id"], "question": "What are the id of each employee and the number of document destruction authorised by that employee?", "question_toks": ["What", "are", "the", "id", "of", "each", "employee", "and", "the", "number", "of", "document", "destruction", "authorised", "by", "that", "employee", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [[0, 29, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 29, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT Destroyed_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID", "query_toks": ["SELECT", "Destroyed_by_Employee_ID", ",", "count", "(", "*", ")", "FROM", "Documents_to_be_destroyed", "GROUP", "BY", "Destroyed_by_Employee_ID"], "query_toks_no_value": ["select", "destroyed_by_employee_id", ",", "count", "(", "*", ")", "from", "documents_to_be_destroyed", "group", "by", "destroyed_by_employee_id"], "question": "Show the employee ids and the number of documents destroyed by each employee.", "question_toks": ["Show", "the", "employee", "ids", "and", "the", "number", "of", "documents", "destroyed", "by", "each", "employee", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [[0, 30, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 30, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT Destroyed_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID", "query_toks": ["SELECT", "Destroyed_by_Employee_ID", ",", "count", "(", "*", ")", "FROM", "Documents_to_be_destroyed", "GROUP", "BY", "Destroyed_by_Employee_ID"], "query_toks_no_value": ["select", "destroyed_by_employee_id", ",", "count", "(", "*", ")", "from", "documents_to_be_destroyed", "group", "by", "destroyed_by_employee_id"], "question": "What are the id of each employee and the number of document destroyed by that employee?", "question_toks": ["What", "are", "the", "id", "of", "each", "employee", "and", "the", "number", "of", "document", "destroyed", "by", "that", "employee", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [[0, 30, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 30, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "club_1", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.sex  =  \"F\"", "query_toks": ["SELECT", "t3.fname", ",", "t3.lname", "FROM", "club", "AS", "t1", "JOIN", "member_of_club", "AS", "t2", "ON", "t1.clubid", "=", "t2.clubid", "JOIN", "student", "AS", "t3", "ON", "t2.stuid", "=", "t3.stuid", "WHERE", "t1.clubname", "=", "``", "Bootup", "Baltimore", "''", "AND", "t3.sex", "=", "``", "F", "''"], "query_toks_no_value": ["select", "t3", ".", "fname", ",", "t3", ".", "lname", "from", "club", "as", "t1", "join", "member_of_club", "as", "t2", "on", "t1", ".", "clubid", "=", "t2", ".", "clubid", "join", "student", "as", "t3", "on", "t2", ".", "stuid", "=", "t3", ".", "stuid", "where", "t1", ".", "clubname", "=", "value", "and", "t3", ".", "sex", "=", "value"], "question": "Find all the female members of club \"Bootup Baltimore\". Show the first name and last name.", "question_toks": ["Find", "all", "the", "female", "members", "of", "club", "``", "Bootup", "Baltimore", "''", ".", "Show", "the", "first", "name", "and", "last", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 14, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Bootup Baltimore\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"F\"", null]]}}, {"db_id": "club_1", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.sex  =  \"F\"", "query_toks": ["SELECT", "t3.fname", ",", "t3.lname", "FROM", "club", "AS", "t1", "JOIN", "member_of_club", "AS", "t2", "ON", "t1.clubid", "=", "t2.clubid", "JOIN", "student", "AS", "t3", "ON", "t2.stuid", "=", "t3.stuid", "WHERE", "t1.clubname", "=", "``", "Bootup", "Baltimore", "''", "AND", "t3.sex", "=", "``", "F", "''"], "query_toks_no_value": ["select", "t3", ".", "fname", ",", "t3", ".", "lname", "from", "club", "as", "t1", "join", "member_of_club", "as", "t2", "on", "t1", ".", "clubid", "=", "t2", ".", "clubid", "join", "student", "as", "t3", "on", "t2", ".", "stuid", "=", "t3", ".", "stuid", "where", "t1", ".", "clubname", "=", "value", "and", "t3", ".", "sex", "=", "value"], "question": "Give me the first name and last name for all the female members of the club \"Bootup Baltimore\".", "question_toks": ["Give", "me", "the", "first", "name", "and", "last", "name", "for", "all", "the", "female", "members", "of", "the", "club", "``", "Bootup", "Baltimore", "''", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 14, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Bootup Baltimore\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"F\"", null]]}}, {"db_id": "club_1", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\" AND t3.sex  =  \"M\"", "query_toks": ["SELECT", "t3.fname", ",", "t3.lname", "FROM", "club", "AS", "t1", "JOIN", "member_of_club", "AS", "t2", "ON", "t1.clubid", "=", "t2.clubid", "JOIN", "student", "AS", "t3", "ON", "t2.stuid", "=", "t3.stuid", "WHERE", "t1.clubname", "=", "``", "Hopkins", "Student", "Enterprises", "''", "AND", "t3.sex", "=", "``", "M", "''"], "query_toks_no_value": ["select", "t3", ".", "fname", ",", "t3", ".", "lname", "from", "club", "as", "t1", "join", "member_of_club", "as", "t2", "on", "t1", ".", "clubid", "=", "t2", ".", "clubid", "join", "student", "as", "t3", "on", "t2", ".", "stuid", "=", "t3", ".", "stuid", "where", "t1", ".", "clubname", "=", "value", "and", "t3", ".", "sex", "=", "value"], "question": "Find all the male members of club \"Hopkins Student Enterprises\". Show the first name and last name.", "question_toks": ["Find", "all", "the", "male", "members", "of", "club", "``", "Hopkins", "Student", "Enterprises", "''", ".", "Show", "the", "first", "name", "and", "last", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 14, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Hopkins Student Enterprises\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"M\"", null]]}}, {"db_id": "club_1", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\" AND t3.sex  =  \"M\"", "query_toks": ["SELECT", "t3.fname", ",", "t3.lname", "FROM", "club", "AS", "t1", "JOIN", "member_of_club", "AS", "t2", "ON", "t1.clubid", "=", "t2.clubid", "JOIN", "student", "AS", "t3", "ON", "t2.stuid", "=", "t3.stuid", "WHERE", "t1.clubname", "=", "``", "Hopkins", "Student", "Enterprises", "''", "AND", "t3.sex", "=", "``", "M", "''"], "query_toks_no_value": ["select", "t3", ".", "fname", ",", "t3", ".", "lname", "from", "club", "as", "t1", "join", "member_of_club", "as", "t2", "on", "t1", ".", "clubid", "=", "t2", ".", "clubid", "join", "student", "as", "t3", "on", "t2", ".", "stuid", "=", "t3", ".", "stuid", "where", "t1", ".", "clubname", "=", "value", "and", "t3", ".", "sex", "=", "value"], "question": "What are the first name and last name of each male member in club \"Hopkins Student Enterprises\"?", "question_toks": ["What", "are", "the", "first", "name", "and", "last", "name", "of", "each", "male", "member", "in", "club", "``", "Hopkins", "Student", "Enterprises", "''", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 14, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Hopkins Student Enterprises\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"M\"", null]]}}, {"db_id": "club_1", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.major  =  \"600\"", "query_toks": ["SELECT", "t3.fname", ",", "t3.lname", "FROM", "club", "AS", "t1", "JOIN", "member_of_club", "AS", "t2", "ON", "t1.clubid", "=", "t2.clubid", "JOIN", "student", "AS", "t3", "ON", "t2.stuid", "=", "t3.stuid", "WHERE", "t1.clubname", "=", "``", "Bootup", "Baltimore", "''", "AND", "t3.major", "=", "``", "600", "''"], "query_toks_no_value": ["select", "t3", ".", "fname", ",", "t3", ".", "lname", "from", "club", "as", "t1", "join", "member_of_club", "as", "t2", "on", "t1", ".", "clubid", "=", "t2", ".", "clubid", "join", "student", "as", "t3", "on", "t2", ".", "stuid", "=", "t3", ".", "stuid", "where", "t1", ".", "clubname", "=", "value", "and", "t3", ".", "major", "=", "value"], "question": "Find all members of \"Bootup Baltimore\" whose major is \"600\". Show the first name and last name.", "question_toks": ["Find", "all", "members", "of", "``", "Bootup", "Baltimore", "''", "whose", "major", "is", "``", "600", "''", ".", "Show", "the", "first", "name", "and", "last", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 14, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Bootup Baltimore\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"600\"", null]]}}, {"db_id": "club_1", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.major  =  \"600\"", "query_toks": ["SELECT", "t3.fname", ",", "t3.lname", "FROM", "club", "AS", "t1", "JOIN", "member_of_club", "AS", "t2", "ON", "t1.clubid", "=", "t2.clubid", "JOIN", "student", "AS", "t3", "ON", "t2.stuid", "=", "t3.stuid", "WHERE", "t1.clubname", "=", "``", "Bootup", "Baltimore", "''", "AND", "t3.major", "=", "``", "600", "''"], "query_toks_no_value": ["select", "t3", ".", "fname", ",", "t3", ".", "lname", "from", "club", "as", "t1", "join", "member_of_club", "as", "t2", "on", "t1", ".", "clubid", "=", "t2", ".", "clubid", "join", "student", "as", "t3", "on", "t2", ".", "stuid", "=", "t3", ".", "stuid", "where", "t1", ".", "clubname", "=", "value", "and", "t3", ".", "major", "=", "value"], "question": "Which members of \"Bootup Baltimore\" major in \"600\"? Give me their first names and last names.", "question_toks": ["Which", "members", "of", "``", "Bootup", "Baltimore", "''", "major", "in", "``", "600", "''", "?", "Give", "me", "their", "first", "names", "and", "last", "names", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 14, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Bootup Baltimore\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"600\"", null]]}}, {"db_id": "club_1", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t2.position  =  \"President\"", "query_toks": ["SELECT", "t3.fname", ",", "t3.lname", "FROM", "club", "AS", "t1", "JOIN", "member_of_club", "AS", "t2", "ON", "t1.clubid", "=", "t2.clubid", "JOIN", "student", "AS", "t3", "ON", "t2.stuid", "=", "t3.stuid", "WHERE", "t1.clubname", "=", "``", "Bootup", "Baltimore", "''", "AND", "t2.position", "=", "``", "President", "''"], "query_toks_no_value": ["select", "t3", ".", "fname", ",", "t3", ".", "lname", "from", "club", "as", "t1", "join", "member_of_club", "as", "t2", "on", "t1", ".", "clubid", "=", "t2", ".", "clubid", "join", "student", "as", "t3", "on", "t2", ".", "stuid", "=", "t3", ".", "stuid", "where", "t1", ".", "clubname", "=", "value", "and", "t2", ".", "position", "=", "value"], "question": "What are the first and last name of the president of the club \"Bootup Baltimore\"?", "question_toks": ["What", "are", "the", "first", "and", "last", "name", "of", "the", "president", "of", "the", "club", "``", "Bootup", "Baltimore", "''", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 14, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Bootup Baltimore\"", null], "and", [false, 2, [0, [0, 15, false], null], "\"President\"", null]]}}, {"db_id": "club_1", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t2.position  =  \"President\"", "query_toks": ["SELECT", "t3.fname", ",", "t3.lname", "FROM", "club", "AS", "t1", "JOIN", "member_of_club", "AS", "t2", "ON", "t1.clubid", "=", "t2.clubid", "JOIN", "student", "AS", "t3", "ON", "t2.stuid", "=", "t3.stuid", "WHERE", "t1.clubname", "=", "``", "Bootup", "Baltimore", "''", "AND", "t2.position", "=", "``", "President", "''"], "query_toks_no_value": ["select", "t3", ".", "fname", ",", "t3", ".", "lname", "from", "club", "as", "t1", "join", "member_of_club", "as", "t2", "on", "t1", ".", "clubid", "=", "t2", ".", "clubid", "join", "student", "as", "t3", "on", "t2", ".", "stuid", "=", "t3", ".", "stuid", "where", "t1", ".", "clubname", "=", "value", "and", "t2", ".", "position", "=", "value"], "question": "Who is the president of the club \"Bootup Baltimore\"? Give me the first and last name.", "question_toks": ["Who", "is", "the", "president", "of", "the", "club", "``", "Bootup", "Baltimore", "''", "?", "Give", "me", "the", "first", "and", "last", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 14, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Bootup Baltimore\"", null], "and", [false, 2, [0, [0, 15, false], null], "\"President\"", null]]}}, {"db_id": "club_1", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\" AND t2.position  =  \"CTO\"", "query_toks": ["SELECT", "t3.fname", ",", "t3.lname", "FROM", "club", "AS", "t1", "JOIN", "member_of_club", "AS", "t2", "ON", "t1.clubid", "=", "t2.clubid", "JOIN", "student", "AS", "t3", "ON", "t2.stuid", "=", "t3.stuid", "WHERE", "t1.clubname", "=", "``", "Hopkins", "Student", "Enterprises", "''", "AND", "t2.position", "=", "``", "CTO", "''"], "query_toks_no_value": ["select", "t3", ".", "fname", ",", "t3", ".", "lname", "from", "club", "as", "t1", "join", "member_of_club", "as", "t2", "on", "t1", ".", "clubid", "=", "t2", ".", "clubid", "join", "student", "as", "t3", "on", "t2", ".", "stuid", "=", "t3", ".", "stuid", "where", "t1", ".", "clubname", "=", "value", "and", "t2", ".", "position", "=", "value"], "question": "Who is the \"CTO\" of club \"Hopkins Student Enterprises\"? Show the first name and last name.", "question_toks": ["Who", "is", "the", "``", "CTO", "''", "of", "club", "``", "Hopkins", "Student", "Enterprises", "''", "?", "Show", "the", "first", "name", "and", "last", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 14, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Hopkins Student Enterprises\"", null], "and", [false, 2, [0, [0, 15, false], null], "\"CTO\"", null]]}}, {"db_id": "club_1", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\" AND t2.position  =  \"CTO\"", "query_toks": ["SELECT", "t3.fname", ",", "t3.lname", "FROM", "club", "AS", "t1", "JOIN", "member_of_club", "AS", "t2", "ON", "t1.clubid", "=", "t2.clubid", "JOIN", "student", "AS", "t3", "ON", "t2.stuid", "=", "t3.stuid", "WHERE", "t1.clubname", "=", "``", "Hopkins", "Student", "Enterprises", "''", "AND", "t2.position", "=", "``", "CTO", "''"], "query_toks_no_value": ["select", "t3", ".", "fname", ",", "t3", ".", "lname", "from", "club", "as", "t1", "join", "member_of_club", "as", "t2", "on", "t1", ".", "clubid", "=", "t2", ".", "clubid", "join", "student", "as", "t3", "on", "t2", ".", "stuid", "=", "t3", ".", "stuid", "where", "t1", ".", "clubname", "=", "value", "and", "t2", ".", "position", "=", "value"], "question": "Find the first name and last name for the \"CTO\" of the club \"Hopkins Student Enterprises\"?", "question_toks": ["Find", "the", "first", "name", "and", "last", "name", "for", "the", "``", "CTO", "''", "of", "the", "club", "``", "Hopkins", "Student", "Enterprises", "''", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 14, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Hopkins Student Enterprises\"", null], "and", [false, 2, [0, [0, 15, false], null], "\"CTO\"", null]]}}, {"db_id": "tracking_grants_for_research", "query": "SELECT date_from ,  date_to FROM Project_Staff WHERE project_id IN( SELECT project_id FROM Project_Staff GROUP BY project_id ORDER BY count(*) DESC LIMIT 1 ) UNION SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'leader'", "query_toks": ["SELECT", "date_from", ",", "date_to", "FROM", "Project_Staff", "WHERE", "project_id", "IN", "(", "SELECT", "project_id", "FROM", "Project_Staff", "GROUP", "BY", "project_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")", "UNION", "SELECT", "date_from", ",", "date_to", "FROM", "Project_Staff", "WHERE", "role_code", "=", "'leader", "'"], "query_toks_no_value": ["select", "date_from", ",", "date_to", "from", "project_staff", "where", "project_id", "in", "(", "select", "project_id", "from", "project_staff", "group", "by", "project_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")", "union", "select", "date_from", ",", "date_to", "from", "project_staff", "where", "role_code", "=", "value"], "question": "List from which date and to which date these staff work: project staff of the project which hires the most staffs", "question_toks": ["List", "from", "which", "date", "and", "to", "which", "date", "these", "staff", "work", ":", "project", "staff", "of", "the", "project", "which", "hires", "the", "most", "staffs"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 27, false], null]]]], "union": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 27, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 25, false], null], "\"leader\"", null]]}, "where": [[false, 8, [0, [0, 24, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 24, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 24, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "tracking_grants_for_research", "query": "SELECT date_from ,  date_to FROM Project_Staff WHERE project_id IN( SELECT project_id FROM Project_Staff GROUP BY project_id ORDER BY count(*) DESC LIMIT 1 ) UNION SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'leader'", "query_toks": ["SELECT", "date_from", ",", "date_to", "FROM", "Project_Staff", "WHERE", "project_id", "IN", "(", "SELECT", "project_id", "FROM", "Project_Staff", "GROUP", "BY", "project_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")", "UNION", "SELECT", "date_from", ",", "date_to", "FROM", "Project_Staff", "WHERE", "role_code", "=", "'leader", "'"], "query_toks_no_value": ["select", "date_from", ",", "date_to", "from", "project_staff", "where", "project_id", "in", "(", "select", "project_id", "from", "project_staff", "group", "by", "project_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")", "union", "select", "date_from", ",", "date_to", "from", "project_staff", "where", "role_code", "=", "value"], "question": "From what date and to what date do the staff work on a project that has the most staff and has staff in a leader role?", "question_toks": ["From", "what", "date", "and", "to", "what", "date", "do", "the", "staff", "work", "on", "a", "project", "that", "has", "the", "most", "staff", "and", "has", "staff", "in", "a", "leader", "role", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 27, false], null]]]], "union": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 27, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 25, false], null], "\"leader\"", null]]}, "where": [[false, 8, [0, [0, 24, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 24, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 24, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "tracking_grants_for_research", "query": "SELECT T2.organisation_id ,  T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id GROUP BY T2.organisation_id HAVING sum(T1.grant_amount)  >  6000", "query_toks": ["SELECT", "T2.organisation_id", ",", "T2.organisation_details", "FROM", "Grants", "AS", "T1", "JOIN", "Organisations", "AS", "T2", "ON", "T1.organisation_id", "=", "T2.organisation_id", "GROUP", "BY", "T2.organisation_id", "HAVING", "sum", "(", "T1.grant_amount", ")", ">", "6000"], "query_toks_no_value": ["select", "t2", ".", "organisation_id", ",", "t2", ".", "organisation_details", "from", "grants", "as", "t1", "join", "organisations", "as", "t2", "on", "t1", ".", "organisation_id", "=", "t2", ".", "organisation_id", "group", "by", "t2", ".", "organisation_id", "having", "sum", "(", "t1", ".", "grant_amount", ")", ">", "value"], "question": "Find the organisation ids and details of the organisations which are involved in", "question_toks": ["Find", "the", "organisation", "ids", "and", "details", "of", "the", "organisations", "which", "are", "involved", "in"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 17, false], null]], "table_units": [["table_unit", 2], ["table_unit", 4]]}, "groupBy": [[0, 17, false]], "having": [[false, 3, [0, [4, 11, false], null], 6000.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_grants_for_research", "query": "SELECT T2.organisation_id ,  T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id GROUP BY T2.organisation_id HAVING sum(T1.grant_amount)  >  6000", "query_toks": ["SELECT", "T2.organisation_id", ",", "T2.organisation_details", "FROM", "Grants", "AS", "T1", "JOIN", "Organisations", "AS", "T2", "ON", "T1.organisation_id", "=", "T2.organisation_id", "GROUP", "BY", "T2.organisation_id", "HAVING", "sum", "(", "T1.grant_amount", ")", ">", "6000"], "query_toks_no_value": ["select", "t2", ".", "organisation_id", ",", "t2", ".", "organisation_details", "from", "grants", "as", "t1", "join", "organisations", "as", "t2", "on", "t1", ".", "organisation_id", "=", "t2", ".", "organisation_id", "group", "by", "t2", ".", "organisation_id", "having", "sum", "(", "t1", ".", "grant_amount", ")", ">", "value"], "question": "What are the ids and details for all organizations that have grants of more than 6000 dollars?", "question_toks": ["What", "are", "the", "ids", "and", "details", "for", "all", "organizations", "that", "have", "grants", "of", "more", "than", "6000", "dollars", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 17, false], null]], "table_units": [["table_unit", 2], ["table_unit", 4]]}, "groupBy": [[0, 17, false]], "having": [[false, 3, [0, [4, 11, false], null], 6000.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_grants_for_research", "query": "SELECT T1.organisation_type ,  T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.organisation_type", ",", "T1.organisation_id", "FROM", "Organisations", "AS", "T1", "JOIN", "Research_Staff", "AS", "T2", "ON", "T1.organisation_id", "=", "T2.employer_organisation_id", "GROUP", "BY", "T1.organisation_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "organisation_type", ",", "t1", ".", "organisation_id", "from", "organisations", "as", "t1", "join", "research_staff", "as", "t2", "on", "t1", ".", "organisation_id", "=", "t2", ".", "employer_organisation_id", "group", "by", "t1", ".", "organisation_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the organisation type and id of the organisation which has the most number of research staff?", "question_toks": ["What", "is", "the", "organisation", "type", "and", "id", "of", "the", "organisation", "which", "has", "the", "most", "number", "of", "research", "staff", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 17, false], null], [0, 35, false], null]], "table_units": [["table_unit", 4], ["table_unit", 9]]}, "groupBy": [[0, 17, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_grants_for_research", "query": "SELECT T1.organisation_type ,  T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.organisation_type", ",", "T1.organisation_id", "FROM", "Organisations", "AS", "T1", "JOIN", "Research_Staff", "AS", "T2", "ON", "T1.organisation_id", "=", "T2.employer_organisation_id", "GROUP", "BY", "T1.organisation_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "organisation_type", ",", "t1", ".", "organisation_id", "from", "organisations", "as", "t1", "join", "research_staff", "as", "t2", "on", "t1", ".", "organisation_id", "=", "t2", ".", "employer_organisation_id", "group", "by", "t1", ".", "organisation_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the type and id of the organization that has the most research staff?", "question_toks": ["What", "is", "the", "type", "and", "id", "of", "the", "organization", "that", "has", "the", "most", "research", "staff", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 17, false], null], [0, 35, false], null]], "table_units": [["table_unit", 4], ["table_unit", 9]]}, "groupBy": [[0, 17, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_grants_for_research", "query": "SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'omnis' UNION SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.project_id HAVING count(*)  >  2", "query_toks": ["SELECT", "T1.task_details", ",", "T1.task_id", ",", "T2.project_id", "FROM", "Tasks", "AS", "T1", "JOIN", "Projects", "AS", "T2", "ON", "T1.project_id", "=", "T2.project_id", "WHERE", "T2.project_details", "=", "'omnis", "'", "UNION", "SELECT", "T1.task_details", ",", "T1.task_id", ",", "T2.project_id", "FROM", "Tasks", "AS", "T1", "JOIN", "Projects", "AS", "T2", "ON", "T1.project_id", "=", "T2.project_id", "JOIN", "Project_outcomes", "AS", "T3", "ON", "T2.project_id", "=", "T3.project_id", "GROUP", "BY", "T2.project_id", "HAVING", "count", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "t1", ".", "task_details", ",", "t1", ".", "task_id", ",", "t2", ".", "project_id", "from", "tasks", "as", "t1", "join", "projects", "as", "t2", "on", "t1", ".", "project_id", "=", "t2", ".", "project_id", "where", "t2", ".", "project_details", "=", "value", "union", "select", "t1", ".", "task_details", ",", "t1", ".", "task_id", ",", "t2", ".", "project_id", "from", "tasks", "as", "t1", "join", "projects", "as", "t2", "on", "t1", ".", "project_id", "=", "t2", ".", "project_id", "join", "project_outcomes", "as", "t3", "on", "t2", ".", "project_id", "=", "t3", ".", "project_id", "group", "by", "t2", ".", "project_id", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the task details, task id and project id for the projects which are detailed as 'omnis' or  have more than 2 outcomes?", "question_toks": ["What", "are", "the", "task", "details", ",", "task", "id", "and", "project", "id", "for", "the", "projects", "which", "are", "detailed", "as", "'omnis", "'", "or", "have", "more", "than", "2", "outcomes", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 40, false], null], [0, 29, false], null]], "table_units": [["table_unit", 11], ["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 41, false], null]], [0, [0, [0, 39, false], null]], [0, [0, [0, 29, false], null]]]], "union": {"except": null, "from": {"conds": [[false, 2, [0, [0, 40, false], null], [0, 29, false], null]], "table_units": [["table_unit", 11], ["table_unit", 7]]}, "groupBy": [[0, 29, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 41, false], null]], [0, [0, [0, 39, false], null]], [0, [0, [0, 29, false], null]]]], "union": null, "where": []}, "where": [[false, 2, [0, [0, 31, false], null], "\"omnis\"", null]]}}, {"db_id": "tracking_grants_for_research", "query": "SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'omnis' UNION SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.project_id HAVING count(*)  >  2", "query_toks": ["SELECT", "T1.task_details", ",", "T1.task_id", ",", "T2.project_id", "FROM", "Tasks", "AS", "T1", "JOIN", "Projects", "AS", "T2", "ON", "T1.project_id", "=", "T2.project_id", "WHERE", "T2.project_details", "=", "'omnis", "'", "UNION", "SELECT", "T1.task_details", ",", "T1.task_id", ",", "T2.project_id", "FROM", "Tasks", "AS", "T1", "JOIN", "Projects", "AS", "T2", "ON", "T1.project_id", "=", "T2.project_id", "JOIN", "Project_outcomes", "AS", "T3", "ON", "T2.project_id", "=", "T3.project_id", "GROUP", "BY", "T2.project_id", "HAVING", "count", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "t1", ".", "task_details", ",", "t1", ".", "task_id", ",", "t2", ".", "project_id", "from", "tasks", "as", "t1", "join", "projects", "as", "t2", "on", "t1", ".", "project_id", "=", "t2", ".", "project_id", "where", "t2", ".", "project_details", "=", "value", "union", "select", "t1", ".", "task_details", ",", "t1", ".", "task_id", ",", "t2", ".", "project_id", "from", "tasks", "as", "t1", "join", "projects", "as", "t2", "on", "t1", ".", "project_id", "=", "t2", ".", "project_id", "join", "project_outcomes", "as", "t3", "on", "t2", ".", "project_id", "=", "t3", ".", "project_id", "group", "by", "t2", ".", "project_id", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the task details, task ids, and project ids for the progrects that are detailed as 'omnis' or have at least 3 outcomes?", "question_toks": ["What", "are", "the", "task", "details", ",", "task", "ids", ",", "and", "project", "ids", "for", "the", "progrects", "that", "are", "detailed", "as", "'omnis", "'", "or", "have", "at", "least", "3", "outcomes", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 40, false], null], [0, 29, false], null]], "table_units": [["table_unit", 11], ["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 41, false], null]], [0, [0, [0, 39, false], null]], [0, [0, [0, 29, false], null]]]], "union": {"except": null, "from": {"conds": [[false, 2, [0, [0, 40, false], null], [0, 29, false], null]], "table_units": [["table_unit", 11], ["table_unit", 7]]}, "groupBy": [[0, 29, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 41, false], null]], [0, [0, [0, 39, false], null]], [0, [0, [0, 29, false], null]]]], "union": null, "where": []}, "where": [[false, 2, [0, [0, 31, false], null], "\"omnis\"", null]]}}, {"db_id": "tracking_grants_for_research", "query": "SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'researcher'", "query_toks": ["SELECT", "date_from", ",", "date_to", "FROM", "Project_Staff", "WHERE", "role_code", "=", "'researcher", "'"], "query_toks_no_value": ["select", "date_from", ",", "date_to", "from", "project_staff", "where", "role_code", "=", "value"], "question": "When do all the researcher role staff start to work, and when do they stop working?", "question_toks": ["When", "do", "all", "the", "researcher", "role", "staff", "start", "to", "work", ",", "and", "when", "do", "they", "stop", "working", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 27, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 25, false], null], "\"researcher\"", null]]}}, {"db_id": "tracking_grants_for_research", "query": "SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'researcher'", "query_toks": ["SELECT", "date_from", ",", "date_to", "FROM", "Project_Staff", "WHERE", "role_code", "=", "'researcher", "'"], "query_toks_no_value": ["select", "date_from", ",", "date_to", "from", "project_staff", "where", "role_code", "=", "value"], "question": "When did researchers start and stop working?", "question_toks": ["When", "did", "researchers", "start", "and", "stop", "working", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 27, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 25, false], null], "\"researcher\"", null]]}}, {"db_id": "tracking_grants_for_research", "query": "SELECT sum(grant_amount) ,  organisation_id FROM Grants GROUP BY organisation_id", "query_toks": ["SELECT", "sum", "(", "grant_amount", ")", ",", "organisation_id", "FROM", "Grants", "GROUP", "BY", "organisation_id"], "query_toks_no_value": ["select", "sum", "(", "grant_amount", ")", ",", "organisation_id", "from", "grants", "group", "by", "organisation_id"], "question": "What is the total amount of grants given by each organisations? Also list the organisation id.", "question_toks": ["What", "is", "the", "total", "amount", "of", "grants", "given", "by", "each", "organisations", "?", "Also", "list", "the", "organisation", "id", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_grants_for_research", "query": "SELECT sum(grant_amount) ,  organisation_id FROM Grants GROUP BY organisation_id", "query_toks": ["SELECT", "sum", "(", "grant_amount", ")", ",", "organisation_id", "FROM", "Grants", "GROUP", "BY", "organisation_id"], "query_toks_no_value": ["select", "sum", "(", "grant_amount", ")", ",", "organisation_id", "from", "grants", "group", "by", "organisation_id"], "question": "What is the total amount of grant money given to each organization and what is its id?", "question_toks": ["What", "is", "the", "total", "amount", "of", "grant", "money", "given", "to", "each", "organization", "and", "what", "is", "its", "id", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_grants_for_research", "query": "SELECT T1.project_id ,  count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC", "query_toks": ["SELECT", "T1.project_id", ",", "count", "(", "*", ")", "FROM", "Project_Staff", "AS", "T1", "JOIN", "Projects", "AS", "T2", "ON", "T1.project_id", "=", "T2.project_id", "GROUP", "BY", "T1.project_id", "ORDER", "BY", "count", "(", "*", ")", "ASC"], "query_toks_no_value": ["select", "t1", ".", "project_id", ",", "count", "(", "*", ")", "from", "project_staff", "as", "t1", "join", "projects", "as", "t2", "on", "t1", ".", "project_id", "=", "t2", ".", "project_id", "group", "by", "t1", ".", "project_id", "order", "by", "count", "(", "*", ")", "asc"], "question": "How many staff does each project has? List the project id and the number in an ascending order.", "question_toks": ["How", "many", "staff", "does", "each", "project", "has", "?", "List", "the", "project", "id", "and", "the", "number", "in", "an", "ascending", "order", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 24, false], null], [0, 29, false], null]], "table_units": [["table_unit", 6], ["table_unit", 7]]}, "groupBy": [[0, 24, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 24, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_grants_for_research", "query": "SELECT T1.project_id ,  count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC", "query_toks": ["SELECT", "T1.project_id", ",", "count", "(", "*", ")", "FROM", "Project_Staff", "AS", "T1", "JOIN", "Projects", "AS", "T2", "ON", "T1.project_id", "=", "T2.project_id", "GROUP", "BY", "T1.project_id", "ORDER", "BY", "count", "(", "*", ")", "ASC"], "query_toks_no_value": ["select", "t1", ".", "project_id", ",", "count", "(", "*", ")", "from", "project_staff", "as", "t1", "join", "projects", "as", "t2", "on", "t1", ".", "project_id", "=", "t2", ".", "project_id", "group", "by", "t1", ".", "project_id", "order", "by", "count", "(", "*", ")", "asc"], "question": "For each project id, how many staff does it have? List them in increasing order.", "question_toks": ["For", "each", "project", "id", ",", "how", "many", "staff", "does", "it", "have", "?", "List", "them", "in", "increasing", "order", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 24, false], null], [0, 29, false], null]], "table_units": [["table_unit", 6], ["table_unit", 7]]}, "groupBy": [[0, 24, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 24, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_grants_for_research", "query": "SELECT T1.project_details ,  T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.project_details", ",", "T1.project_id", "FROM", "Projects", "AS", "T1", "JOIN", "Project_outcomes", "AS", "T2", "ON", "T1.project_id", "=", "T2.project_id", "GROUP", "BY", "T1.project_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "project_details", ",", "t1", ".", "project_id", "from", "projects", "as", "t1", "join", "project_outcomes", "as", "t2", "on", "t1", ".", "project_id", "=", "t2", ".", "project_id", "group", "by", "t1", ".", "project_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which project made the most number of outcomes? List the project details and the project id.", "question_toks": ["Which", "project", "made", "the", "most", "number", "of", "outcomes", "?", "List", "the", "project", "details", "and", "the", "project", "id", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 29, false], null], [0, 20, false], null]], "table_units": [["table_unit", 7], ["table_unit", 5]]}, "groupBy": [[0, 29, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 31, false], null]], [0, [0, [0, 29, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_grants_for_research", "query": "SELECT T1.project_details ,  T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.project_details", ",", "T1.project_id", "FROM", "Projects", "AS", "T1", "JOIN", "Project_outcomes", "AS", "T2", "ON", "T1.project_id", "=", "T2.project_id", "GROUP", "BY", "T1.project_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "project_details", ",", "t1", ".", "project_id", "from", "projects", "as", "t1", "join", "project_outcomes", "as", "t2", "on", "t1", ".", "project_id", "=", "t2", ".", "project_id", "group", "by", "t1", ".", "project_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the details and id of the project with the most outcomes?", "question_toks": ["What", "are", "the", "details", "and", "id", "of", "the", "project", "with", "the", "most", "outcomes", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 29, false], null], [0, 20, false], null]], "table_units": [["table_unit", 7], ["table_unit", 5]]}, "groupBy": [[0, 29, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 31, false], null]], [0, [0, [0, 29, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_grants_for_research", "query": "SELECT T1.organisation_id ,  T1.organisation_type ,  T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.organisation_id", ",", "T1.organisation_type", ",", "T1.organisation_details", "FROM", "Organisations", "AS", "T1", "JOIN", "Research_Staff", "AS", "T2", "ON", "T1.organisation_id", "=", "T2.employer_organisation_id", "GROUP", "BY", "T1.organisation_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "organisation_id", ",", "t1", ".", "organisation_type", ",", "t1", ".", "organisation_details", "from", "organisations", "as", "t1", "join", "research_staff", "as", "t2", "on", "t1", ".", "organisation_id", "=", "t2", ".", "employer_organisation_id", "group", "by", "t1", ".", "organisation_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which organisation hired the most number of research staff? List the organisation id, type and detail.", "question_toks": ["Which", "organisation", "hired", "the", "most", "number", "of", "research", "staff", "?", "List", "the", "organisation", "id", ",", "type", "and", "detail", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 17, false], null], [0, 35, false], null]], "table_units": [["table_unit", 4], ["table_unit", 9]]}, "groupBy": [[0, 17, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 18, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_grants_for_research", "query": "SELECT T1.organisation_id ,  T1.organisation_type ,  T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.organisation_id", ",", "T1.organisation_type", ",", "T1.organisation_details", "FROM", "Organisations", "AS", "T1", "JOIN", "Research_Staff", "AS", "T2", "ON", "T1.organisation_id", "=", "T2.employer_organisation_id", "GROUP", "BY", "T1.organisation_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "organisation_id", ",", "t1", ".", "organisation_type", ",", "t1", ".", "organisation_details", "from", "organisations", "as", "t1", "join", "research_staff", "as", "t2", "on", "t1", ".", "organisation_id", "=", "t2", ".", "employer_organisation_id", "group", "by", "t1", ".", "organisation_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the ids, types, and details of the organization with the most research staff?", "question_toks": ["What", "are", "the", "ids", ",", "types", ",", "and", "details", "of", "the", "organization", "with", "the", "most", "research", "staff", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 17, false], null], [0, 35, false], null]], "table_units": [["table_unit", 4], ["table_unit", 9]]}, "groupBy": [[0, 17, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 18, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_grants_for_research", "query": "SELECT T1.role_description ,  T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code  =  T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.role_description", ",", "T2.staff_id", "FROM", "Staff_Roles", "AS", "T1", "JOIN", "Project_Staff", "AS", "T2", "ON", "T1.role_code", "=", "T2.role_code", "JOIN", "Project_outcomes", "AS", "T3", "ON", "T2.project_id", "=", "T3.project_id", "GROUP", "BY", "T2.staff_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "role_description", ",", "t2", ".", "staff_id", "from", "staff_roles", "as", "t1", "join", "project_staff", "as", "t2", "on", "t1", ".", "role_code", "=", "t2", ".", "role_code", "join", "project_outcomes", "as", "t3", "on", "t2", ".", "project_id", "=", "t3", ".", "project_id", "group", "by", "t2", ".", "staff_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Show the role description and the id of the project staff involved in most number of project outcomes?", "question_toks": ["Show", "the", "role", "description", "and", "the", "id", "of", "the", "project", "staff", "involved", "in", "most", "number", "of", "project", "outcomes", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 37, false], null], [0, 25, false], null]], "table_units": [["table_unit", 10], ["table_unit", 6]]}, "groupBy": [[0, 23, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 38, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_grants_for_research", "query": "SELECT T1.role_description ,  T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code  =  T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.role_description", ",", "T2.staff_id", "FROM", "Staff_Roles", "AS", "T1", "JOIN", "Project_Staff", "AS", "T2", "ON", "T1.role_code", "=", "T2.role_code", "JOIN", "Project_outcomes", "AS", "T3", "ON", "T2.project_id", "=", "T3.project_id", "GROUP", "BY", "T2.staff_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "role_description", ",", "t2", ".", "staff_id", "from", "staff_roles", "as", "t1", "join", "project_staff", "as", "t2", "on", "t1", ".", "role_code", "=", "t2", ".", "role_code", "join", "project_outcomes", "as", "t3", "on", "t2", ".", "project_id", "=", "t3", ".", "project_id", "group", "by", "t2", ".", "staff_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "For each staff id, what is the description of the role that is involved with the most number of projects?", "question_toks": ["For", "each", "staff", "id", ",", "what", "is", "the", "description", "of", "the", "role", "that", "is", "involved", "with", "the", "most", "number", "of", "projects", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 37, false], null], [0, 25, false], null]], "table_units": [["table_unit", 10], ["table_unit", 6]]}, "groupBy": [[0, 23, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 38, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_grants_for_research", "query": "SELECT grant_id ,  count(*) FROM Documents GROUP BY grant_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "grant_id", ",", "count", "(", "*", ")", "FROM", "Documents", "GROUP", "BY", "grant_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "grant_id", ",", "count", "(", "*", ")", "from", "documents", "group", "by", "grant_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "How many documents can one grant have at most? List the grant id and number.", "question_toks": ["How", "many", "documents", "can", "one", "grant", "have", "at", "most", "?", "List", "the", "grant", "id", "and", "number", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_grants_for_research", "query": "SELECT grant_id ,  count(*) FROM Documents GROUP BY grant_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "grant_id", ",", "count", "(", "*", ")", "FROM", "Documents", "GROUP", "BY", "grant_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "grant_id", ",", "count", "(", "*", ")", "from", "documents", "group", "by", "grant_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "For each grant id, how many documents does it have, and which one has the most?", "question_toks": ["For", "each", "grant", "id", ",", "how", "many", "documents", "does", "it", "have", ",", "and", "which", "one", "has", "the", "most", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_grants_for_research", "query": "SELECT T1.organisation_id ,  count(*) FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.organisation_id", ",", "count", "(", "*", ")", "FROM", "Projects", "AS", "T1", "JOIN", "Project_outcomes", "AS", "T2", "ON", "T1.project_id", "=", "T2.project_id", "GROUP", "BY", "T1.organisation_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "organisation_id", ",", "count", "(", "*", ")", "from", "projects", "as", "t1", "join", "project_outcomes", "as", "t2", "on", "t1", ".", "project_id", "=", "t2", ".", "project_id", "group", "by", "t1", ".", "organisation_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "List the organisation id with the maximum outcome count, and the count.", "question_toks": ["List", "the", "organisation", "id", "with", "the", "maximum", "outcome", "count", ",", "and", "the", "count", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 29, false], null], [0, 20, false], null]], "table_units": [["table_unit", 7], ["table_unit", 5]]}, "groupBy": [[0, 30, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 30, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_grants_for_research", "query": "SELECT T1.organisation_id ,  count(*) FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.organisation_id", ",", "count", "(", "*", ")", "FROM", "Projects", "AS", "T1", "JOIN", "Project_outcomes", "AS", "T2", "ON", "T1.project_id", "=", "T2.project_id", "GROUP", "BY", "T1.organisation_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "organisation_id", ",", "count", "(", "*", ")", "from", "projects", "as", "t1", "join", "project_outcomes", "as", "t2", "on", "t1", ".", "project_id", "=", "t2", ".", "project_id", "group", "by", "t1", ".", "organisation_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the id of the organization with the maximum number of outcomes and how many outcomes are there?", "question_toks": ["What", "is", "the", "id", "of", "the", "organization", "with", "the", "maximum", "number", "of", "outcomes", "and", "how", "many", "outcomes", "are", "there", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 29, false], null], [0, 20, false], null]], "table_units": [["table_unit", 7], ["table_unit", 5]]}, "groupBy": [[0, 30, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 30, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_grants_for_research", "query": "SELECT count(*) ,  T1.project_details FROM Projects AS T1 JOIN Tasks AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.project_details", "FROM", "Projects", "AS", "T1", "JOIN", "Tasks", "AS", "T2", "ON", "T1.project_id", "=", "T2.project_id", "GROUP", "BY", "T1.project_id"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "project_details", "from", "projects", "as", "t1", "join", "tasks", "as", "t2", "on", "t1", ".", "project_id", "=", "t2", ".", "project_id", "group", "by", "t1", ".", "project_id"], "question": "How many tasks does each project have? List the task count and the project detail.", "question_toks": ["How", "many", "tasks", "does", "each", "project", "have", "?", "List", "the", "task", "count", "and", "the", "project", "detail", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 29, false], null], [0, 40, false], null]], "table_units": [["table_unit", 7], ["table_unit", 11]]}, "groupBy": [[0, 29, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 31, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_grants_for_research", "query": "SELECT count(*) ,  T1.project_details FROM Projects AS T1 JOIN Tasks AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.project_details", "FROM", "Projects", "AS", "T1", "JOIN", "Tasks", "AS", "T2", "ON", "T1.project_id", "=", "T2.project_id", "GROUP", "BY", "T1.project_id"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "project_details", "from", "projects", "as", "t1", "join", "tasks", "as", "t2", "on", "t1", ".", "project_id", "=", "t2", ".", "project_id", "group", "by", "t1", ".", "project_id"], "question": "For each project id, how many tasks are there?", "question_toks": ["For", "each", "project", "id", ",", "how", "many", "tasks", "are", "there", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 29, false], null], [0, 40, false], null]], "table_units": [["table_unit", 7], ["table_unit", 11]]}, "groupBy": [[0, 29, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 31, false], null]]]], "union": null, "where": []}}, {"db_id": "network_2", "query": "SELECT avg(age) ,  gender FROM Person GROUP BY gender", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "gender", "FROM", "Person", "GROUP", "BY", "gender"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "gender", "from", "person", "group", "by", "gender"], "question": "What is the average age for each gender?", "question_toks": ["What", "is", "the", "average", "age", "for", "each", "gender", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "network_2", "query": "SELECT avg(age) ,  gender FROM Person GROUP BY gender", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "gender", "FROM", "Person", "GROUP", "BY", "gender"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "gender", "from", "person", "group", "by", "gender"], "question": "How old is each gender, on average?", "question_toks": ["How", "old", "is", "each", "gender", ",", "on", "average", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "network_2", "query": "SELECT avg(age) ,  job FROM Person GROUP BY job", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "job", "FROM", "Person", "GROUP", "BY", "job"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "job", "from", "person", "group", "by", "job"], "question": "What is average age for different job title?", "question_toks": ["What", "is", "average", "age", "for", "different", "job", "title", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "network_2", "query": "SELECT avg(age) ,  job FROM Person GROUP BY job", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "job", "FROM", "Person", "GROUP", "BY", "job"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "job", "from", "person", "group", "by", "job"], "question": "How old is the average person for each job?", "question_toks": ["How", "old", "is", "the", "average", "person", "for", "each", "job", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "network_2", "query": "SELECT avg(age) ,  job FROM Person WHERE gender  =  'male' GROUP BY job", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "job", "FROM", "Person", "WHERE", "gender", "=", "'male", "'", "GROUP", "BY", "job"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "job", "from", "person", "where", "gender", "=", "value", "group", "by", "job"], "question": "What is average age of male for different job title?", "question_toks": ["What", "is", "average", "age", "of", "male", "for", "different", "job", "title", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"male\"", null]]}}, {"db_id": "network_2", "query": "SELECT avg(age) ,  job FROM Person WHERE gender  =  'male' GROUP BY job", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "job", "FROM", "Person", "WHERE", "gender", "=", "'male", "'", "GROUP", "BY", "job"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "job", "from", "person", "where", "gender", "=", "value", "group", "by", "job"], "question": "What is the average age for a male in each job?", "question_toks": ["What", "is", "the", "average", "age", "for", "a", "male", "in", "each", "job", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"male\"", null]]}}, {"db_id": "network_2", "query": "SELECT min(age) ,  job FROM Person GROUP BY job", "query_toks": ["SELECT", "min", "(", "age", ")", ",", "job", "FROM", "Person", "GROUP", "BY", "job"], "query_toks_no_value": ["select", "min", "(", "age", ")", ",", "job", "from", "person", "group", "by", "job"], "question": "What is minimum age for different job title?", "question_toks": ["What", "is", "minimum", "age", "for", "different", "job", "title", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "network_2", "query": "SELECT min(age) ,  job FROM Person GROUP BY job", "query_toks": ["SELECT", "min", "(", "age", ")", ",", "job", "FROM", "Person", "GROUP", "BY", "job"], "query_toks_no_value": ["select", "min", "(", "age", ")", ",", "job", "from", "person", "group", "by", "job"], "question": "How old is the youngest person for each job?", "question_toks": ["How", "old", "is", "the", "youngest", "person", "for", "each", "job", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "network_2", "query": "SELECT count(*) ,  gender FROM Person WHERE age  <  40 GROUP BY gender", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "gender", "FROM", "Person", "WHERE", "age", "<", "40", "GROUP", "BY", "gender"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "gender", "from", "person", "where", "age", "<", "value", "group", "by", "gender"], "question": "Find the number of people who is under 40 for each gender.", "question_toks": ["Find", "the", "number", "of", "people", "who", "is", "under", "40", "for", "each", "gender", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 2, false], null], 40.0, null]]}}, {"db_id": "network_2", "query": "SELECT count(*) ,  gender FROM Person WHERE age  <  40 GROUP BY gender", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "gender", "FROM", "Person", "WHERE", "age", "<", "40", "GROUP", "BY", "gender"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "gender", "from", "person", "where", "age", "<", "value", "group", "by", "gender"], "question": "How many people are under 40 for each gender?", "question_toks": ["How", "many", "people", "are", "under", "40", "for", "each", "gender", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 2, false], null], 40.0, null]]}}, {"db_id": "network_2", "query": "SELECT name ,  job FROM Person ORDER BY name", "query_toks": ["SELECT", "name", ",", "job", "FROM", "Person", "ORDER", "BY", "name"], "query_toks_no_value": ["select", "name", ",", "job", "from", "person", "order", "by", "name"], "question": "list the name, job title of all people ordered by their names.", "question_toks": ["list", "the", "name", ",", "job", "title", "of", "all", "people", "ordered", "by", "their", "names", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 1, false], null]]], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "network_2", "query": "SELECT name ,  job FROM Person ORDER BY name", "query_toks": ["SELECT", "name", ",", "job", "FROM", "Person", "ORDER", "BY", "name"], "query_toks_no_value": ["select", "name", ",", "job", "from", "person", "order", "by", "name"], "question": "What are the names and job titles of every person ordered alphabetically by name?", "question_toks": ["What", "are", "the", "names", "and", "job", "titles", "of", "every", "person", "ordered", "alphabetically", "by", "name", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 1, false], null]]], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "network_2", "query": "SELECT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' INTERSECT SELECT T1.name ,   T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Alice'", "query_toks": ["SELECT", "T1.name", ",", "T1.age", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.name", "WHERE", "T2.friend", "=", "'Dan", "'", "INTERSECT", "SELECT", "T1.name", ",", "T1.age", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.name", "WHERE", "T2.friend", "=", "'Alice", "'"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "age", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "name", "where", "t2", ".", "friend", "=", "value", "intersect", "select", "t1", ".", "name", ",", "t1", ".", "age", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "name", "where", "t2", ".", "friend", "=", "value"], "question": "Find the name and age of the person who is a friend of both Dan and Alice.", "question_toks": ["Find", "the", "name", "and", "age", "of", "the", "person", "who", "is", "a", "friend", "of", "both", "Dan", "and", "Alice", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"Alice\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"Dan\"", null]]}}, {"db_id": "network_2", "query": "SELECT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' INTERSECT SELECT T1.name ,   T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Alice'", "query_toks": ["SELECT", "T1.name", ",", "T1.age", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.name", "WHERE", "T2.friend", "=", "'Dan", "'", "INTERSECT", "SELECT", "T1.name", ",", "T1.age", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.name", "WHERE", "T2.friend", "=", "'Alice", "'"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "age", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "name", "where", "t2", ".", "friend", "=", "value", "intersect", "select", "t1", ".", "name", ",", "t1", ".", "age", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "name", "where", "t2", ".", "friend", "=", "value"], "question": "What are the names and ages of every person who is a friend of both Dan and Alice?", "question_toks": ["What", "are", "the", "names", "and", "ages", "of", "every", "person", "who", "is", "a", "friend", "of", "both", "Dan", "and", "Alice", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"Alice\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"Dan\"", null]]}}, {"db_id": "network_2", "query": "SELECT DISTINCT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' OR T2.friend  =  'Alice'", "query_toks": ["SELECT", "DISTINCT", "T1.name", ",", "T1.age", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.name", "WHERE", "T2.friend", "=", "'Dan", "'", "OR", "T2.friend", "=", "'Alice", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", ",", "t1", ".", "age", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "name", "where", "t2", ".", "friend", "=", "value", "or", "t2", ".", "friend", "=", "value"], "question": "Find the name and age of the person who is a friend of Dan or Alice.", "question_toks": ["Find", "the", "name", "and", "age", "of", "the", "person", "who", "is", "a", "friend", "of", "Dan", "or", "Alice", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"Dan\"", null], "or", [false, 2, [0, [0, 7, false], null], "\"Alice\"", null]]}}, {"db_id": "network_2", "query": "SELECT DISTINCT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' OR T2.friend  =  'Alice'", "query_toks": ["SELECT", "DISTINCT", "T1.name", ",", "T1.age", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.name", "WHERE", "T2.friend", "=", "'Dan", "'", "OR", "T2.friend", "=", "'Alice", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", ",", "t1", ".", "age", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "name", "where", "t2", ".", "friend", "=", "value", "or", "t2", ".", "friend", "=", "value"], "question": "What are the different names and ages of every friend of either Dan or alice?", "question_toks": ["What", "are", "the", "different", "names", "and", "ages", "of", "every", "friend", "of", "either", "Dan", "or", "alice", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"Dan\"", null], "or", [false, 2, [0, [0, 7, false], null], "\"Alice\"", null]]}}, {"db_id": "network_2", "query": "SELECT DISTINCT T2.name ,  T2.friend ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  >  (SELECT avg(age) FROM person)", "query_toks": ["SELECT", "DISTINCT", "T2.name", ",", "T2.friend", ",", "T1.age", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.friend", "WHERE", "T1.age", ">", "(", "SELECT", "avg", "(", "age", ")", "FROM", "person", ")"], "query_toks_no_value": ["select", "distinct", "t2", ".", "name", ",", "t2", ".", "friend", ",", "t1", ".", "age", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "friend", "where", "t1", ".", "age", ">", "(", "select", "avg", "(", "age", ")", "from", "person", ")"], "question": "Who has friends that are older than the average age? Print their friends and their ages as well", "question_toks": ["Who", "has", "friends", "that", "are", "older", "than", "the", "average", "age", "?", "Print", "their", "friends", "and", "their", "ages", "as", "well"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 2, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 2, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "network_2", "query": "SELECT DISTINCT T2.name ,  T2.friend ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  >  (SELECT avg(age) FROM person)", "query_toks": ["SELECT", "DISTINCT", "T2.name", ",", "T2.friend", ",", "T1.age", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.friend", "WHERE", "T1.age", ">", "(", "SELECT", "avg", "(", "age", ")", "FROM", "person", ")"], "query_toks_no_value": ["select", "distinct", "t2", ".", "name", ",", "t2", ".", "friend", ",", "t1", ".", "age", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "friend", "where", "t1", ".", "age", ">", "(", "select", "avg", "(", "age", ")", "from", "person", ")"], "question": "Whare the names, friends, and ages of all people who are older than the average age of a person?", "question_toks": ["Whare", "the", "names", ",", "friends", ",", "and", "ages", "of", "all", "people", "who", "are", "older", "than", "the", "average", "age", "of", "a", "person", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 2, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 2, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "network_2", "query": "SELECT T1.name ,  T1.age ,  T1.job FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend =  'Alice' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE friend =  'Alice')", "query_toks": ["SELECT", "T1.name", ",", "T1.age", ",", "T1.job", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.name", "WHERE", "T2.friend", "=", "'Alice", "'", "AND", "T2.year", "=", "(", "SELECT", "max", "(", "YEAR", ")", "FROM", "PersonFriend", "WHERE", "friend", "=", "'Alice", "'", ")"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "age", ",", "t1", ".", "job", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "name", "where", "t2", ".", "friend", "=", "value", "and", "t2", ".", "year", "=", "(", "select", "max", "(", "year", ")", "from", "personfriend", "where", "friend", "=", "value", ")"], "question": "Find the name, age, and job title of persons who are friends with Alice for the longest years.", "question_toks": ["Find", "the", "name", ",", "age", ",", "and", "job", "title", "of", "persons", "who", "are", "friends", "with", "Alice", "for", "the", "longest", "years", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"Alice\"", null], "and", [false, 2, [0, [0, 8, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"Alice\"", null]]}, null]]}}, {"db_id": "network_2", "query": "SELECT T1.name ,  T1.age ,  T1.job FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend =  'Alice' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE friend =  'Alice')", "query_toks": ["SELECT", "T1.name", ",", "T1.age", ",", "T1.job", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.name", "WHERE", "T2.friend", "=", "'Alice", "'", "AND", "T2.year", "=", "(", "SELECT", "max", "(", "YEAR", ")", "FROM", "PersonFriend", "WHERE", "friend", "=", "'Alice", "'", ")"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "age", ",", "t1", ".", "job", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "name", "where", "t2", ".", "friend", "=", "value", "and", "t2", ".", "year", "=", "(", "select", "max", "(", "year", ")", "from", "personfriend", "where", "friend", "=", "value", ")"], "question": "What are the names, ages, and jobs of all people who are friends with Alice for the longest amount of time?", "question_toks": ["What", "are", "the", "names", ",", "ages", ",", "and", "jobs", "of", "all", "people", "who", "are", "friends", "with", "Alice", "for", "the", "longest", "amount", "of", "time", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"Alice\"", null], "and", [false, 2, [0, [0, 8, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"Alice\"", null]]}, null]]}}, {"db_id": "network_2", "query": "SELECT T2.name ,  avg(T1.age) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend GROUP BY T2.name ORDER BY avg(T1.age) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", ",", "avg", "(", "T1.age", ")", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.friend", "GROUP", "BY", "T2.name", "ORDER", "BY", "avg", "(", "T1.age", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "avg", "(", "t1", ".", "age", ")", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "friend", "group", "by", "t2", ".", "name", "order", "by", "avg", "(", "t1", ".", "age", ")", "desc", "limit", "value"], "question": "Which person whose friends have the oldest average age?", "question_toks": ["Which", "person", "whose", "friends", "have", "the", "oldest", "average", "age", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [5, 2, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]], [5, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "network_2", "query": "SELECT T2.name ,  avg(T1.age) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend GROUP BY T2.name ORDER BY avg(T1.age) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", ",", "avg", "(", "T1.age", ")", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.friend", "GROUP", "BY", "T2.name", "ORDER", "BY", "avg", "(", "T1.age", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "avg", "(", "t1", ".", "age", ")", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "friend", "group", "by", "t2", ".", "name", "order", "by", "avg", "(", "t1", ".", "age", ")", "desc", "limit", "value"], "question": "What is the name of the person who has the oldest average age for their friends, and what is that average age?", "question_toks": ["What", "is", "the", "name", "of", "the", "person", "who", "has", "the", "oldest", "average", "age", "for", "their", "friends", ",", "and", "what", "is", "that", "average", "age", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [5, 2, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]], [5, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "decoration_competition", "query": "SELECT Name ,  Country FROM member", "query_toks": ["SELECT", "Name", ",", "Country", "FROM", "member"], "query_toks_no_value": ["select", "name", ",", "country", "from", "member"], "question": "What are the names and countries of members?", "question_toks": ["What", "are", "the", "names", "and", "countries", "of", "members", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "decoration_competition", "query": "SELECT Country ,  COUNT(*) FROM member GROUP BY Country", "query_toks": ["SELECT", "Country", ",", "COUNT", "(", "*", ")", "FROM", "member", "GROUP", "BY", "Country"], "query_toks_no_value": ["select", "country", ",", "count", "(", "*", ")", "from", "member", "group", "by", "country"], "question": "Show the different countries and the number of members from each.", "question_toks": ["Show", "the", "different", "countries", "and", "the", "number", "of", "members", "from", "each", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "decoration_competition", "query": "SELECT Leader_Name ,  College_Location FROM college", "query_toks": ["SELECT", "Leader_Name", ",", "College_Location", "FROM", "college"], "query_toks_no_value": ["select", "leader_name", ",", "college_location", "from", "college"], "question": "Show the leader names and locations of colleges.", "question_toks": ["Show", "the", "leader", "names", "and", "locations", "of", "colleges", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "decoration_competition", "query": "SELECT T2.Name ,  T1.Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID", "query_toks": ["SELECT", "T2.Name", ",", "T1.Name", "FROM", "college", "AS", "T1", "JOIN", "member", "AS", "T2", "ON", "T1.College_ID", "=", "T2.College_ID"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t1", ".", "name", "from", "college", "as", "t1", "join", "member", "as", "t2", "on", "t1", ".", "college_id", "=", "t2", ".", "college_id"], "question": "Show the names of members and names of colleges they go to.", "question_toks": ["Show", "the", "names", "of", "members", "and", "names", "of", "colleges", "they", "go", "to", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "decoration_competition", "query": "SELECT T2.Name ,  T1.College_Location FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID ORDER BY T2.Name ASC", "query_toks": ["SELECT", "T2.Name", ",", "T1.College_Location", "FROM", "college", "AS", "T1", "JOIN", "member", "AS", "T2", "ON", "T1.College_ID", "=", "T2.College_ID", "ORDER", "BY", "T2.Name", "ASC"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t1", ".", "college_location", "from", "college", "as", "t1", "join", "member", "as", "t2", "on", "t1", ".", "college_id", "=", "t2", ".", "college_id", "order", "by", "t2", ".", "name", "asc"], "question": "Show the names of members and the locations of colleges they go to in ascending alphabetical order of member names.", "question_toks": ["Show", "the", "names", "of", "members", "and", "the", "locations", "of", "colleges", "they", "go", "to", "in", "ascending", "alphabetical", "order", "of", "member", "names", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "decoration_competition", "query": "SELECT T1.Name ,  T2.Decoration_Theme FROM member AS T1 JOIN round AS T2 ON T1.Member_ID  =  T2.Member_ID", "query_toks": ["SELECT", "T1.Name", ",", "T2.Decoration_Theme", "FROM", "member", "AS", "T1", "JOIN", "round", "AS", "T2", "ON", "T1.Member_ID", "=", "T2.Member_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "decoration_theme", "from", "member", "as", "t1", "join", "round", "as", "t2", "on", "t1", ".", "member_id", "=", "t2", ".", "member_id"], "question": "Show the names of members and the decoration themes they have.", "question_toks": ["Show", "the", "names", "of", "members", "and", "the", "decoration", "themes", "they", "have", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 5, false], null], [0, 10, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "document_management", "query": "SELECT document_name ,  access_count FROM documents ORDER BY document_name", "query_toks": ["SELECT", "document_name", ",", "access_count", "FROM", "documents", "ORDER", "BY", "document_name"], "query_toks_no_value": ["select", "document_name", ",", "access_count", "from", "documents", "order", "by", "document_name"], "question": "Find the name and access counts of all documents, in alphabetic order of the document name.", "question_toks": ["Find", "the", "name", "and", "access", "counts", "of", "all", "documents", ",", "in", "alphabetic", "order", "of", "the", "document", "name", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 22, false], null]]], "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": []}}, {"db_id": "document_management", "query": "SELECT document_name ,  access_count FROM documents ORDER BY document_name", "query_toks": ["SELECT", "document_name", ",", "access_count", "FROM", "documents", "ORDER", "BY", "document_name"], "query_toks_no_value": ["select", "document_name", ",", "access_count", "from", "documents", "order", "by", "document_name"], "question": "What are the names of all the documents, as well as the access counts of each, ordered alphabetically?", "question_toks": ["What", "are", "the", "names", "of", "all", "the", "documents", ",", "as", "well", "as", "the", "access", "counts", "of", "each", ",", "ordered", "alphabetically", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 22, false], null]]], "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": []}}, {"db_id": "document_management", "query": "SELECT document_name ,  access_count FROM documents ORDER BY access_count DESC LIMIT 1", "query_toks": ["SELECT", "document_name", ",", "access_count", "FROM", "documents", "ORDER", "BY", "access_count", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "document_name", ",", "access_count", "from", "documents", "order", "by", "access_count", "desc", "limit", "value"], "question": "Find the name of the document that has been accessed the greatest number of times, as well as the count of how many times it has been accessed?", "question_toks": ["Find", "the", "name", "of", "the", "document", "that", "has", "been", "accessed", "the", "greatest", "number", "of", "times", ",", "as", "well", "as", "the", "count", "of", "how", "many", "times", "it", "has", "been", "accessed", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 21, false], null]]], "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": []}}, {"db_id": "document_management", "query": "SELECT document_name ,  access_count FROM documents ORDER BY access_count DESC LIMIT 1", "query_toks": ["SELECT", "document_name", ",", "access_count", "FROM", "documents", "ORDER", "BY", "access_count", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "document_name", ",", "access_count", "from", "documents", "order", "by", "access_count", "desc", "limit", "value"], "question": "What is the name of the document which has been accessed the most times, as well as the number of times it has been accessed?", "question_toks": ["What", "is", "the", "name", "of", "the", "document", "which", "has", "been", "accessed", "the", "most", "times", ",", "as", "well", "as", "the", "number", "of", "times", "it", "has", "been", "accessed", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 21, false], null]]], "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": []}}, {"db_id": "document_management", "query": "SELECT user_name ,  password FROM users GROUP BY role_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "user_name", ",", "password", "FROM", "users", "GROUP", "BY", "role_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "user_name", ",", "password", "from", "users", "group", "by", "role_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "List all the username and passwords of users with the most popular role.", "question_toks": ["List", "all", "the", "username", "and", "passwords", "of", "users", "with", "the", "most", "popular", "role", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "document_management", "query": "SELECT user_name ,  password FROM users GROUP BY role_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "user_name", ",", "password", "FROM", "users", "GROUP", "BY", "role_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "user_name", ",", "password", "from", "users", "group", "by", "role_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the usernames and passwords of users that have the most common role?", "question_toks": ["What", "are", "the", "usernames", "and", "passwords", "of", "users", "that", "have", "the", "most", "common", "role", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "document_management", "query": "SELECT image_name ,  image_url FROM images ORDER BY image_name", "query_toks": ["SELECT", "image_name", ",", "image_url", "FROM", "images", "ORDER", "BY", "image_name"], "query_toks_no_value": ["select", "image_name", ",", "image_url", "from", "images", "order", "by", "image_name"], "question": "List all the image name and URLs in the order of their names.", "question_toks": ["List", "all", "the", "image", "name", "and", "URLs", "in", "the", "order", "of", "their", "names", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 16, false], null]]], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "document_management", "query": "SELECT image_name ,  image_url FROM images ORDER BY image_name", "query_toks": ["SELECT", "image_name", ",", "image_url", "FROM", "images", "ORDER", "BY", "image_name"], "query_toks_no_value": ["select", "image_name", ",", "image_url", "from", "images", "order", "by", "image_name"], "question": "What are the names and urls of images, sorted alphabetically?", "question_toks": ["What", "are", "the", "names", "and", "urls", "of", "images", ",", "sorted", "alphabetically", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 16, false], null]]], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "document_management", "query": "SELECT count(*) ,  role_code FROM users GROUP BY role_code", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "role_code", "FROM", "users", "GROUP", "BY", "role_code"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "role_code", "from", "users", "group", "by", "role_code"], "question": "Find the number of users in each role.", "question_toks": ["Find", "the", "number", "of", "users", "in", "each", "role", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "document_management", "query": "SELECT count(*) ,  role_code FROM users GROUP BY role_code", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "role_code", "FROM", "users", "GROUP", "BY", "role_code"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "role_code", "from", "users", "group", "by", "role_code"], "question": "What are the different role codes for users, and how many users have each?", "question_toks": ["What", "are", "the", "different", "role", "codes", "for", "users", ",", "and", "how", "many", "users", "have", "each", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "company_office", "query": "SELECT name ,  Assets_billion FROM Companies ORDER BY name ASC", "query_toks": ["SELECT", "name", ",", "Assets_billion", "FROM", "Companies", "ORDER", "BY", "name", "ASC"], "query_toks_no_value": ["select", "name", ",", "assets_billion", "from", "companies", "order", "by", "name", "asc"], "question": "What are the name and assets of each company, sorted in ascending order of company name?", "question_toks": ["What", "are", "the", "name", "and", "assets", "of", "each", "company", ",", "sorted", "in", "ascending", "order", "of", "company", "name", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 8, false], null]]], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "company_office", "query": "SELECT name ,  Assets_billion FROM Companies ORDER BY name ASC", "query_toks": ["SELECT", "name", ",", "Assets_billion", "FROM", "Companies", "ORDER", "BY", "name", "ASC"], "query_toks_no_value": ["select", "name", ",", "assets_billion", "from", "companies", "order", "by", "name", "asc"], "question": "List the name and assets of each company in ascending order of company name.", "question_toks": ["List", "the", "name", "and", "assets", "of", "each", "company", "in", "ascending", "order", "of", "company", "name", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 8, false], null]]], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "company_office", "query": "SELECT max(Sales_billion) ,  min(Sales_billion) FROM Companies WHERE Industry != \"Banking\"", "query_toks": ["SELECT", "max", "(", "Sales_billion", ")", ",", "min", "(", "Sales_billion", ")", "FROM", "Companies", "WHERE", "Industry", "!", "=", "``", "Banking", "''"], "query_toks_no_value": ["select", "max", "(", "sales_billion", ")", ",", "min", "(", "sales_billion", ")", "from", "companies", "where", "industry", "!", "=", "value"], "question": "What are the maximum and minimum sales of the companies whose industries are not \"Banking\".", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "sales", "of", "the", "companies", "whose", "industries", "are", "not", "``", "Banking", "''", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 11, false], null]], [2, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 10, false], null], "\"Banking\"", null]]}}, {"db_id": "company_office", "query": "SELECT max(Sales_billion) ,  min(Sales_billion) FROM Companies WHERE Industry != \"Banking\"", "query_toks": ["SELECT", "max", "(", "Sales_billion", ")", ",", "min", "(", "Sales_billion", ")", "FROM", "Companies", "WHERE", "Industry", "!", "=", "``", "Banking", "''"], "query_toks_no_value": ["select", "max", "(", "sales_billion", ")", ",", "min", "(", "sales_billion", ")", "from", "companies", "where", "industry", "!", "=", "value"], "question": "Find the maximum and minimum sales of the companies that are not in the \"Banking\" industry.", "question_toks": ["Find", "the", "maximum", "and", "minimum", "sales", "of", "the", "companies", "that", "are", "not", "in", "the", "``", "Banking", "''", "industry", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 11, false], null]], [2, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 10, false], null], "\"Banking\"", null]]}}, {"db_id": "company_office", "query": "SELECT T3.name ,  T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id", "query_toks": ["SELECT", "T3.name", ",", "T2.name", "FROM", "Office_locations", "AS", "T1", "JOIN", "buildings", "AS", "T2", "ON", "T1.building_id", "=", "T2.id", "JOIN", "Companies", "AS", "T3", "ON", "T1.company_id", "=", "T3.id"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "name", "from", "office_locations", "as", "t1", "join", "buildings", "as", "t2", "on", "t1", ".", "building_id", "=", "t2", ".", "id", "join", "companies", "as", "t3", "on", "t1", ".", "company_id", "=", "t3", ".", "id"], "question": "List the name of a building along with the name of a company whose office is in the building.", "question_toks": ["List", "the", "name", "of", "a", "building", "along", "with", "the", "name", "of", "a", "company", "whose", "office", "is", "in", "the", "building", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "company_office", "query": "SELECT T3.name ,  T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id", "query_toks": ["SELECT", "T3.name", ",", "T2.name", "FROM", "Office_locations", "AS", "T1", "JOIN", "buildings", "AS", "T2", "ON", "T1.building_id", "=", "T2.id", "JOIN", "Companies", "AS", "T3", "ON", "T1.company_id", "=", "T3.id"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "name", "from", "office_locations", "as", "t1", "join", "buildings", "as", "t2", "on", "t1", ".", "building_id", "=", "t2", ".", "id", "join", "companies", "as", "t3", "on", "t1", ".", "company_id", "=", "t3", ".", "id"], "question": "For each company, return the company name and the name of the building its office is located in.", "question_toks": ["For", "each", "company", ",", "return", "the", "company", "name", "and", "the", "name", "of", "the", "building", "its", "office", "is", "located", "in", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "company_office", "query": "SELECT Industry ,  COUNT(*) FROM Companies GROUP BY Industry", "query_toks": ["SELECT", "Industry", ",", "COUNT", "(", "*", ")", "FROM", "Companies", "GROUP", "BY", "Industry"], "query_toks_no_value": ["select", "industry", ",", "count", "(", "*", ")", "from", "companies", "group", "by", "industry"], "question": "Please show each industry and the corresponding number of companies in that industry.", "question_toks": ["Please", "show", "each", "industry", "and", "the", "corresponding", "number", "of", "companies", "in", "that", "industry", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "company_office", "query": "SELECT Industry ,  COUNT(*) FROM Companies GROUP BY Industry", "query_toks": ["SELECT", "Industry", ",", "COUNT", "(", "*", ")", "FROM", "Companies", "GROUP", "BY", "Industry"], "query_toks_no_value": ["select", "industry", ",", "count", "(", "*", ")", "from", "companies", "group", "by", "industry"], "question": "Whah are the name of each industry and the number of companies in that industry?", "question_toks": ["Whah", "are", "the", "name", "of", "each", "industry", "and", "the", "number", "of", "companies", "in", "that", "industry", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "solvency_ii", "query": "SELECT Product_Name ,  Product_Type_Code FROM Products", "query_toks": ["SELECT", "Product_Name", ",", "Product_Type_Code", "FROM", "Products"], "query_toks_no_value": ["select", "product_name", ",", "product_type_code", "from", "products"], "question": "What are the names and type codes of products?", "question_toks": ["What", "are", "the", "names", "and", "type", "codes", "of", "products", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "solvency_ii", "query": "SELECT Product_Type_Code ,  COUNT(*) FROM Products GROUP BY Product_Type_Code", "query_toks": ["SELECT", "Product_Type_Code", ",", "COUNT", "(", "*", ")", "FROM", "Products", "GROUP", "BY", "Product_Type_Code"], "query_toks_no_value": ["select", "product_type_code", ",", "count", "(", "*", ")", "from", "products", "group", "by", "product_type_code"], "question": "Show different type codes of products and the number of products with each type code.", "question_toks": ["Show", "different", "type", "codes", "of", "products", "and", "the", "number", "of", "products", "with", "each", "type", "code", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "solvency_ii", "query": "SELECT T1.Product_Name ,  COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name", "query_toks": ["SELECT", "T1.Product_Name", ",", "COUNT", "(", "*", ")", "FROM", "Products", "AS", "T1", "JOIN", "Products_in_Events", "AS", "T2", "ON", "T1.Product_ID", "=", "T2.Product_ID", "GROUP", "BY", "T1.Product_Name"], "query_toks_no_value": ["select", "t1", ".", "product_name", ",", "count", "(", "*", ")", "from", "products", "as", "t1", "join", "products_in_events", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "group", "by", "t1", ".", "product_name"], "question": "Show the names of products and the number of events they are in.", "question_toks": ["Show", "the", "names", "of", "products", "and", "the", "number", "of", "events", "they", "are", "in", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 5, false], null], [0, 25, false], null]], "table_units": [["table_unit", 2], ["table_unit", 8]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "solvency_ii", "query": "SELECT T1.Product_Name ,  COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name ORDER BY COUNT(*) DESC", "query_toks": ["SELECT", "T1.Product_Name", ",", "COUNT", "(", "*", ")", "FROM", "Products", "AS", "T1", "JOIN", "Products_in_Events", "AS", "T2", "ON", "T1.Product_ID", "=", "T2.Product_ID", "GROUP", "BY", "T1.Product_Name", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "t1", ".", "product_name", ",", "count", "(", "*", ")", "from", "products", "as", "t1", "join", "products_in_events", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "group", "by", "t1", ".", "product_name", "order", "by", "count", "(", "*", ")", "desc"], "question": "Show the names of products and the number of events they are in, sorted by the number of events in descending order.", "question_toks": ["Show", "the", "names", "of", "products", "and", "the", "number", "of", "events", "they", "are", "in", ",", "sorted", "by", "the", "number", "of", "events", "in", "descending", "order", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 5, false], null], [0, 25, false], null]], "table_units": [["table_unit", 2], ["table_unit", 8]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "entertainment_awards", "query": "SELECT Festival_Name ,  LOCATION FROM festival_detail", "query_toks": ["SELECT", "Festival_Name", ",", "LOCATION", "FROM", "festival_detail"], "query_toks_no_value": ["select", "festival_name", ",", "location", "from", "festival_detail"], "question": "What are the names and locations of festivals?", "question_toks": ["What", "are", "the", "names", "and", "locations", "of", "festivals", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "entertainment_awards", "query": "SELECT T2.Name ,  T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID", "query_toks": ["SELECT", "T2.Name", ",", "T3.Festival_Name", "FROM", "nomination", "AS", "T1", "JOIN", "artwork", "AS", "T2", "ON", "T1.Artwork_ID", "=", "T2.Artwork_ID", "JOIN", "festival_detail", "AS", "T3", "ON", "T1.Festival_ID", "=", "T3.Festival_ID"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t3", ".", "festival_name", "from", "nomination", "as", "t1", "join", "artwork", "as", "t2", "on", "t1", ".", "artwork_id", "=", "t2", ".", "artwork_id", "join", "festival_detail", "as", "t3", "on", "t1", ".", "festival_id", "=", "t3", ".", "festival_id"], "question": "For each nomination, show the name of the artwork and name of the festival where it is nominated.", "question_toks": ["For", "each", "nomination", ",", "show", "the", "name", "of", "the", "artwork", "and", "name", "of", "the", "festival", "where", "it", "is", "nominated", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 7, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "entertainment_awards", "query": "SELECT T1.Festival_ID ,  T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID GROUP BY T1.Festival_ID HAVING COUNT(*)  >=  2", "query_toks": ["SELECT", "T1.Festival_ID", ",", "T3.Festival_Name", "FROM", "nomination", "AS", "T1", "JOIN", "artwork", "AS", "T2", "ON", "T1.Artwork_ID", "=", "T2.Artwork_ID", "JOIN", "festival_detail", "AS", "T3", "ON", "T1.Festival_ID", "=", "T3.Festival_ID", "GROUP", "BY", "T1.Festival_ID", "HAVING", "COUNT", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "festival_id", ",", "t3", ".", "festival_name", "from", "nomination", "as", "t1", "join", "artwork", "as", "t2", "on", "t1", ".", "artwork_id", "=", "t2", ".", "artwork_id", "join", "festival_detail", "as", "t3", "on", "t1", ".", "festival_id", "=", "t3", ".", "festival_id", "group", "by", "t1", ".", "festival_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show the ids and names of festivals that have at least two nominations for artworks.", "question_toks": ["Show", "the", "ids", "and", "names", "of", "festivals", "that", "have", "at", "least", "two", "nominations", "for", "artworks", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 7, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 11, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "entertainment_awards", "query": "SELECT T1.Festival_ID ,  T3.Festival_Name ,  COUNT(*) FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID GROUP BY T1.Festival_ID", "query_toks": ["SELECT", "T1.Festival_ID", ",", "T3.Festival_Name", ",", "COUNT", "(", "*", ")", "FROM", "nomination", "AS", "T1", "JOIN", "artwork", "AS", "T2", "ON", "T1.Artwork_ID", "=", "T2.Artwork_ID", "JOIN", "festival_detail", "AS", "T3", "ON", "T1.Festival_ID", "=", "T3.Festival_ID", "GROUP", "BY", "T1.Festival_ID"], "query_toks_no_value": ["select", "t1", ".", "festival_id", ",", "t3", ".", "festival_name", ",", "count", "(", "*", ")", "from", "nomination", "as", "t1", "join", "artwork", "as", "t2", "on", "t1", ".", "artwork_id", "=", "t2", ".", "artwork_id", "join", "festival_detail", "as", "t3", "on", "t1", ".", "festival_id", "=", "t3", ".", "festival_id", "group", "by", "t1", ".", "festival_id"], "question": "Show the id, name of each festival and the number of artworks it has nominated.", "question_toks": ["Show", "the", "id", ",", "name", "of", "each", "festival", "and", "the", "number", "of", "artworks", "it", "has", "nominated", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 7, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 11, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "entertainment_awards", "query": "SELECT TYPE ,  COUNT(*) FROM artwork GROUP BY TYPE", "query_toks": ["SELECT", "TYPE", ",", "COUNT", "(", "*", ")", "FROM", "artwork", "GROUP", "BY", "TYPE"], "query_toks_no_value": ["select", "type", ",", "count", "(", "*", ")", "from", "artwork", "group", "by", "type"], "question": "Please show different types of artworks with the corresponding number of artworks of each type.", "question_toks": ["Please", "show", "different", "types", "of", "artworks", "with", "the", "corresponding", "number", "of", "artworks", "of", "each", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_campaigns_ecommerce", "query": "SELECT premises_type ,  premise_details FROM premises ORDER BY premises_type", "query_toks": ["SELECT", "premises_type", ",", "premise_details", "FROM", "premises", "ORDER", "BY", "premises_type"], "query_toks_no_value": ["select", "premises_type", ",", "premise_details", "from", "premises", "order", "by", "premises_type"], "question": "Find the types and details for all premises and order by the premise type.", "question_toks": ["Find", "the", "types", "and", "details", "for", "all", "premises", "and", "order", "by", "the", "premise", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 2, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_campaigns_ecommerce", "query": "SELECT premises_type ,  count(*) FROM premises GROUP BY premises_type", "query_toks": ["SELECT", "premises_type", ",", "count", "(", "*", ")", "FROM", "premises", "GROUP", "BY", "premises_type"], "query_toks_no_value": ["select", "premises_type", ",", "count", "(", "*", ")", "from", "premises", "group", "by", "premises_type"], "question": "Show each premise type and the number of premises in that type.", "question_toks": ["Show", "each", "premise", "type", "and", "the", "number", "of", "premises", "in", "that", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_campaigns_ecommerce", "query": "SELECT product_category ,  count(*) FROM mailshot_campaigns GROUP BY product_category", "query_toks": ["SELECT", "product_category", ",", "count", "(", "*", ")", "FROM", "mailshot_campaigns", "GROUP", "BY", "product_category"], "query_toks_no_value": ["select", "product_category", ",", "count", "(", "*", ")", "from", "mailshot_campaigns", "group", "by", "product_category"], "question": "Show all distinct product categories along with the number of mailshots in each category.", "question_toks": ["Show", "all", "distinct", "product", "categories", "along", "with", "the", "number", "of", "mailshots", "in", "each", "category", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 16, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_campaigns_ecommerce", "query": "SELECT customer_name ,  customer_phone FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM mailshot_customers)", "query_toks": ["SELECT", "customer_name", ",", "customer_phone", "FROM", "customers", "WHERE", "customer_id", "NOT", "IN", "(", "SELECT", "customer_id", "FROM", "mailshot_customers", ")"], "query_toks_no_value": ["select", "customer_name", ",", "customer_phone", "from", "customers", "where", "customer_id", "not", "in", "(", "select", "customer_id", "from", "mailshot_customers", ")"], "question": "Show the name and phone of the customer without any mailshot.", "question_toks": ["Show", "the", "name", "and", "phone", "of", "the", "customer", "without", "any", "mailshot", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 7, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 33, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "customers_campaigns_ecommerce", "query": "SELECT T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN mailshot_customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.outcome_code  =  'No Response'", "query_toks": ["SELECT", "T1.customer_name", ",", "T1.customer_phone", "FROM", "customers", "AS", "T1", "JOIN", "mailshot_customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T2.outcome_code", "=", "'No", "Response", "'"], "query_toks_no_value": ["select", "t1", ".", "customer_name", ",", "t1", ".", "customer_phone", "from", "customers", "as", "t1", "join", "mailshot_customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t2", ".", "outcome_code", "=", "value"], "question": "Show the name and phone for customers with a mailshot with outcome code 'No Response'.", "question_toks": ["Show", "the", "name", "and", "phone", "for", "customers", "with", "a", "mailshot", "with", "outcome", "code", "'No", "Response", "'", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 33, false], null]], "table_units": [["table_unit", 2], ["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 34, false], null], "\"No Response\"", null]]}}, {"db_id": "customers_campaigns_ecommerce", "query": "SELECT outcome_code ,  count(*) FROM mailshot_customers GROUP BY outcome_code", "query_toks": ["SELECT", "outcome_code", ",", "count", "(", "*", ")", "FROM", "mailshot_customers", "GROUP", "BY", "outcome_code"], "query_toks_no_value": ["select", "outcome_code", ",", "count", "(", "*", ")", "from", "mailshot_customers", "group", "by", "outcome_code"], "question": "Show the outcome code of mailshots along with the number of mailshots in each outcome code.", "question_toks": ["Show", "the", "outcome", "code", "of", "mailshots", "along", "with", "the", "number", "of", "mailshots", "in", "each", "outcome", "code", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 34, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 34, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_campaigns_ecommerce", "query": "SELECT T2.customer_name ,  T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.outcome_code  =  'Order' INTERSECT SELECT T2.customer_name ,  T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.outcome_code  =  'No Response'", "query_toks": ["SELECT", "T2.customer_name", ",", "T2.payment_method", "FROM", "mailshot_customers", "AS", "T1", "JOIN", "customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T1.outcome_code", "=", "'Order", "'", "INTERSECT", "SELECT", "T2.customer_name", ",", "T2.payment_method", "FROM", "mailshot_customers", "AS", "T1", "JOIN", "customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T1.outcome_code", "=", "'No", "Response", "'"], "query_toks_no_value": ["select", "t2", ".", "customer_name", ",", "t2", ".", "payment_method", "from", "mailshot_customers", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t1", ".", "outcome_code", "=", "value", "intersect", "select", "t2", ".", "customer_name", ",", "t2", ".", "payment_method", "from", "mailshot_customers", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t1", ".", "outcome_code", "=", "value"], "question": "What are the name and payment method of customers who have both mailshots in 'Order' outcome and mailshots in 'No Response' outcome.", "question_toks": ["What", "are", "the", "name", "and", "payment", "method", "of", "customers", "who", "have", "both", "mailshots", "in", "'Order", "'", "outcome", "and", "mailshots", "in", "'No", "Response", "'", "outcome", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 33, false], null], [0, 7, false], null]], "table_units": [["table_unit", 6], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 33, false], null], [0, 7, false], null]], "table_units": [["table_unit", 6], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 34, false], null], "\"No Response\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 34, false], null], "\"Order\"", null]]}}, {"db_id": "customers_campaigns_ecommerce", "query": "SELECT T2.premises_type ,  T1.address_type_code FROM customer_addresses AS T1 JOIN premises AS T2 ON T1.premise_id  =  T2.premise_id", "query_toks": ["SELECT", "T2.premises_type", ",", "T1.address_type_code", "FROM", "customer_addresses", "AS", "T1", "JOIN", "premises", "AS", "T2", "ON", "T1.premise_id", "=", "T2.premise_id"], "query_toks_no_value": ["select", "t2", ".", "premises_type", ",", "t1", ".", "address_type_code", "from", "customer_addresses", "as", "t1", "join", "premises", "as", "t2", "on", "t1", ".", "premise_id", "=", "t2", ".", "premise_id"], "question": "Show the premise type and address type code for all customer addresses.", "question_toks": ["Show", "the", "premise", "type", "and", "address", "type", "code", "for", "all", "customer", "addresses", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 21, false], null], [0, 1, false], null]], "table_units": [["table_unit", 4], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_campaigns_ecommerce", "query": "SELECT order_shipping_charges ,  customer_id FROM customer_orders WHERE order_status_code  =  'Cancelled' OR order_status_code  =  'Paid'", "query_toks": ["SELECT", "order_shipping_charges", ",", "customer_id", "FROM", "customer_orders", "WHERE", "order_status_code", "=", "'Cancelled", "'", "OR", "order_status_code", "=", "'Paid", "'"], "query_toks_no_value": ["select", "order_shipping_charges", ",", "customer_id", "from", "customer_orders", "where", "order_status_code", "=", "value", "or", "order_status_code", "=", "value"], "question": "Show the shipping charge and customer id for customer orders with order status Cancelled or Paid.", "question_toks": ["Show", "the", "shipping", "charge", "and", "customer", "id", "for", "customer", "orders", "with", "order", "status", "Cancelled", "or", "Paid", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 31, false], null]], [0, [0, [0, 26, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 27, false], null], "\"Cancelled\"", null], "or", [false, 2, [0, [0, 27, false], null], "\"Paid\"", null]]}}, {"db_id": "college_3", "query": "SELECT max(gradepoint) ,  min(gradepoint) FROM GRADECONVERSION", "query_toks": ["SELECT", "max", "(", "gradepoint", ")", ",", "min", "(", "gradepoint", ")", "FROM", "GRADECONVERSION"], "query_toks_no_value": ["select", "max", "(", "gradepoint", ")", ",", "min", "(", "gradepoint", ")", "from", "gradeconversion"], "question": "Find the max and min grade point for all letter grade.", "question_toks": ["Find", "the", "max", "and", "min", "grade", "point", "for", "all", "letter", "grade", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 39, false], null]], [2, [0, [0, 39, false], null]]]], "union": null, "where": []}}, {"db_id": "college_3", "query": "SELECT max(gradepoint) ,  min(gradepoint) FROM GRADECONVERSION", "query_toks": ["SELECT", "max", "(", "gradepoint", ")", ",", "min", "(", "gradepoint", ")", "FROM", "GRADECONVERSION"], "query_toks_no_value": ["select", "max", "(", "gradepoint", ")", ",", "min", "(", "gradepoint", ")", "from", "gradeconversion"], "question": "What are the maximum and minumum grade points?", "question_toks": ["What", "are", "the", "maximum", "and", "minumum", "grade", "points", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 39, false], null]], [2, [0, [0, 39, false], null]]]], "union": null, "where": []}}, {"db_id": "college_3", "query": "SELECT Fname ,  Lname FROM FACULTY WHERE sex  =  \"M\" AND Building  =  \"NEB\"", "query_toks": ["SELECT", "Fname", ",", "Lname", "FROM", "FACULTY", "WHERE", "sex", "=", "``", "M", "''", "AND", "Building", "=", "``", "NEB", "''"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "faculty", "where", "sex", "=", "value", "and", "building", "=", "value"], "question": "Find the first names and last names of male (sex is M) faculties who live in building NEB.", "question_toks": ["Find", "the", "first", "names", "and", "last", "names", "of", "male", "(", "sex", "is", "M", ")", "faculties", "who", "live", "in", "building", "NEB", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 13, false], null], "\"M\"", null], "and", [false, 2, [0, [0, 16, false], null], "\"NEB\"", null]]}}, {"db_id": "college_3", "query": "SELECT Fname ,  Lname FROM FACULTY WHERE sex  =  \"M\" AND Building  =  \"NEB\"", "query_toks": ["SELECT", "Fname", ",", "Lname", "FROM", "FACULTY", "WHERE", "sex", "=", "``", "M", "''", "AND", "Building", "=", "``", "NEB", "''"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "faculty", "where", "sex", "=", "value", "and", "building", "=", "value"], "question": "What are the full names of faculties with sex M and who live in building NEB?", "question_toks": ["What", "are", "the", "full", "names", "of", "faculties", "with", "sex", "M", "and", "who", "live", "in", "building", "NEB", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 13, false], null], "\"M\"", null], "and", [false, 2, [0, [0, 16, false], null], "\"NEB\"", null]]}}, {"db_id": "college_3", "query": "SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 3", "query_toks": ["SELECT", "T2.Fname", ",", "T2.Lname", "FROM", "COURSE", "AS", "T1", "JOIN", "FACULTY", "AS", "T2", "ON", "T1.Instructor", "=", "T2.FacID", "GROUP", "BY", "T1.Instructor", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "t2", ".", "fname", ",", "t2", ".", "lname", "from", "course", "as", "t1", "join", "faculty", "as", "t2", "on", "t1", ".", "instructor", "=", "t2", ".", "facid", "group", "by", "t1", ".", "instructor", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the first and last names of the instructors who teach the top 3 number of courses?", "question_toks": ["What", "are", "the", "first", "and", "last", "names", "of", "the", "instructors", "who", "teach", "the", "top", "3", "number", "of", "courses", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 29, false], null], [0, 9, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [[0, 29, false]], "having": [], "intersect": null, "limit": 3, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "college_3", "query": "SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 3", "query_toks": ["SELECT", "T2.Fname", ",", "T2.Lname", "FROM", "COURSE", "AS", "T1", "JOIN", "FACULTY", "AS", "T2", "ON", "T1.Instructor", "=", "T2.FacID", "GROUP", "BY", "T1.Instructor", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "t2", ".", "fname", ",", "t2", ".", "lname", "from", "course", "as", "t1", "join", "faculty", "as", "t2", "on", "t1", ".", "instructor", "=", "t2", ".", "facid", "group", "by", "t1", ".", "instructor", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the full names of the 3 instructors who teach the most courses?", "question_toks": ["What", "are", "the", "full", "names", "of", "the", "3", "instructors", "who", "teach", "the", "most", "courses", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 29, false], null], [0, 9, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [[0, 29, false]], "having": [], "intersect": null, "limit": 3, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "college_3", "query": "SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID WHERE T1.CName  =  \"COMPUTER LITERACY\"", "query_toks": ["SELECT", "T2.Fname", ",", "T2.Lname", "FROM", "COURSE", "AS", "T1", "JOIN", "FACULTY", "AS", "T2", "ON", "T1.Instructor", "=", "T2.FacID", "WHERE", "T1.CName", "=", "``", "COMPUTER", "LITERACY", "''"], "query_toks_no_value": ["select", "t2", ".", "fname", ",", "t2", ".", "lname", "from", "course", "as", "t1", "join", "faculty", "as", "t2", "on", "t1", ".", "instructor", "=", "t2", ".", "facid", "where", "t1", ".", "cname", "=", "value"], "question": "Find the first name and last name of the instructor of course that has course name", "question_toks": ["Find", "the", "first", "name", "and", "last", "name", "of", "the", "instructor", "of", "course", "that", "has", "course", "name"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 29, false], null], [0, 9, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 27, false], null], "\"COMPUTER LITERACY\"", null]]}}, {"db_id": "college_3", "query": "SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID WHERE T1.CName  =  \"COMPUTER LITERACY\"", "query_toks": ["SELECT", "T2.Fname", ",", "T2.Lname", "FROM", "COURSE", "AS", "T1", "JOIN", "FACULTY", "AS", "T2", "ON", "T1.Instructor", "=", "T2.FacID", "WHERE", "T1.CName", "=", "``", "COMPUTER", "LITERACY", "''"], "query_toks_no_value": ["select", "t2", ".", "fname", ",", "t2", ".", "lname", "from", "course", "as", "t1", "join", "faculty", "as", "t2", "on", "t1", ".", "instructor", "=", "t2", ".", "facid", "where", "t1", ".", "cname", "=", "value"], "question": "What is the full name of the instructor who has a course named COMPUTER LITERACY?", "question_toks": ["What", "is", "the", "full", "name", "of", "the", "instructor", "who", "has", "a", "course", "named", "COMPUTER", "LITERACY", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 29, false], null], [0, 9, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 27, false], null], "\"COMPUTER LITERACY\"", null]]}}, {"db_id": "college_3", "query": "SELECT T2.Dname ,  T2.Room FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO  =  T2.DNO WHERE T1.CName  =  \"INTRODUCTION TO COMPUTER SCIENCE\"", "query_toks": ["SELECT", "T2.Dname", ",", "T2.Room", "FROM", "COURSE", "AS", "T1", "JOIN", "DEPARTMENT", "AS", "T2", "ON", "T1.DNO", "=", "T2.DNO", "WHERE", "T1.CName", "=", "``", "INTRODUCTION", "TO", "COMPUTER", "SCIENCE", "''"], "query_toks_no_value": ["select", "t2", ".", "dname", ",", "t2", ".", "room", "from", "course", "as", "t1", "join", "department", "as", "t2", "on", "t1", ".", "dno", "=", "t2", ".", "dno", "where", "t1", ".", "cname", "=", "value"], "question": "Find the department name and room of the course INTRODUCTION TO COMPUTER SCIENCE.", "question_toks": ["Find", "the", "department", "name", "and", "room", "of", "the", "course", "INTRODUCTION", "TO", "COMPUTER", "SCIENCE", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 32, false], null], [0, 17, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 20, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 27, false], null], "\"INTRODUCTION TO COMPUTER SCIENCE\"", null]]}}, {"db_id": "college_3", "query": "SELECT T2.Dname ,  T2.Room FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO  =  T2.DNO WHERE T1.CName  =  \"INTRODUCTION TO COMPUTER SCIENCE\"", "query_toks": ["SELECT", "T2.Dname", ",", "T2.Room", "FROM", "COURSE", "AS", "T1", "JOIN", "DEPARTMENT", "AS", "T2", "ON", "T1.DNO", "=", "T2.DNO", "WHERE", "T1.CName", "=", "``", "INTRODUCTION", "TO", "COMPUTER", "SCIENCE", "''"], "query_toks_no_value": ["select", "t2", ".", "dname", ",", "t2", ".", "room", "from", "course", "as", "t1", "join", "department", "as", "t2", "on", "t1", ".", "dno", "=", "t2", ".", "dno", "where", "t1", ".", "cname", "=", "value"], "question": "What are the department name and room for the course INTRODUCTION TO COMPUTER SCIENCE?", "question_toks": ["What", "are", "the", "department", "name", "and", "room", "for", "the", "course", "INTRODUCTION", "TO", "COMPUTER", "SCIENCE", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 32, false], null], [0, 17, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 20, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 27, false], null], "\"INTRODUCTION TO COMPUTER SCIENCE\"", null]]}}, {"db_id": "college_3", "query": "SELECT T3.Fname ,  T3.LName ,  T2.gradepoint FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID", "query_toks": ["SELECT", "T3.Fname", ",", "T3.LName", ",", "T2.gradepoint", "FROM", "ENROLLED_IN", "AS", "T1", "JOIN", "GRADECONVERSION", "AS", "T2", "JOIN", "STUDENT", "AS", "T3", "ON", "T1.Grade", "=", "T2.lettergrade", "AND", "T1.StuID", "=", "T3.StuID"], "query_toks_no_value": ["select", "t3", ".", "fname", ",", "t3", ".", "lname", ",", "t2", ".", "gradepoint", "from", "enrolled_in", "as", "t1", "join", "gradeconversion", "as", "t2", "join", "student", "as", "t3", "on", "t1", ".", "grade", "=", "t2", ".", "lettergrade", "and", "t1", ".", "stuid", "=", "t3", ".", "stuid"], "question": "Find the student first and last names and grade points of all enrollments.", "question_toks": ["Find", "the", "student", "first", "and", "last", "names", "and", "grade", "points", "of", "all", "enrollments", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 37, false], null], [0, 38, false], null], "and", [false, 2, [0, [0, 35, false], null], [0, 1, false], null]], "table_units": [["table_unit", 6], ["table_unit", 7], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 39, false], null]]]], "union": null, "where": []}}, {"db_id": "college_3", "query": "SELECT T3.Fname ,  T3.LName ,  T2.gradepoint FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID", "query_toks": ["SELECT", "T3.Fname", ",", "T3.LName", ",", "T2.gradepoint", "FROM", "ENROLLED_IN", "AS", "T1", "JOIN", "GRADECONVERSION", "AS", "T2", "JOIN", "STUDENT", "AS", "T3", "ON", "T1.Grade", "=", "T2.lettergrade", "AND", "T1.StuID", "=", "T3.StuID"], "query_toks_no_value": ["select", "t3", ".", "fname", ",", "t3", ".", "lname", ",", "t2", ".", "gradepoint", "from", "enrolled_in", "as", "t1", "join", "gradeconversion", "as", "t2", "join", "student", "as", "t3", "on", "t1", ".", "grade", "=", "t2", ".", "lettergrade", "and", "t1", ".", "stuid", "=", "t3", ".", "stuid"], "question": "What are the full names and gradepoints for all enrollments?", "question_toks": ["What", "are", "the", "full", "names", "and", "gradepoints", "for", "all", "enrollments", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 37, false], null], [0, 38, false], null], "and", [false, 2, [0, [0, 35, false], null], [0, 1, false], null]], "table_units": [["table_unit", 6], ["table_unit", 7], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 39, false], null]]]], "union": null, "where": []}}, {"db_id": "college_3", "query": "SELECT T1.Fname ,  T1.Lname FROM FACULTY AS T1 JOIN MEMBER_OF AS T2 ON T1.FacID  =  T2.FacID WHERE T2.DNO  =  520", "query_toks": ["SELECT", "T1.Fname", ",", "T1.Lname", "FROM", "FACULTY", "AS", "T1", "JOIN", "MEMBER_OF", "AS", "T2", "ON", "T1.FacID", "=", "T2.FacID", "WHERE", "T2.DNO", "=", "520"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "faculty", "as", "t1", "join", "member_of", "as", "t2", "on", "t1", ".", "facid", "=", "t2", ".", "facid", "where", "t2", ".", "dno", "=", "value"], "question": "Find the full names of faculties who are members of department with department number 520.", "question_toks": ["Find", "the", "full", "names", "of", "faculties", "who", "are", "members", "of", "department", "with", "department", "number", "520", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 23, false], null]], "table_units": [["table_unit", 1], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], 520.0, null]]}}, {"db_id": "college_3", "query": "SELECT T1.Fname ,  T1.Lname FROM FACULTY AS T1 JOIN MEMBER_OF AS T2 ON T1.FacID  =  T2.FacID WHERE T2.DNO  =  520", "query_toks": ["SELECT", "T1.Fname", ",", "T1.Lname", "FROM", "FACULTY", "AS", "T1", "JOIN", "MEMBER_OF", "AS", "T2", "ON", "T1.FacID", "=", "T2.FacID", "WHERE", "T2.DNO", "=", "520"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "faculty", "as", "t1", "join", "member_of", "as", "t2", "on", "t1", ".", "facid", "=", "t2", ".", "facid", "where", "t2", ".", "dno", "=", "value"], "question": "What are the full names of faculty members who are a part of department 520?", "question_toks": ["What", "are", "the", "full", "names", "of", "faculty", "members", "who", "are", "a", "part", "of", "department", "520", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 23, false], null]], "table_units": [["table_unit", 1], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 24, false], null], 520.0, null]]}}, {"db_id": "college_3", "query": "SELECT T2.Fname ,  T2.Lname FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID  =  T2.StuID WHERE T1.DNO  =  140", "query_toks": ["SELECT", "T2.Fname", ",", "T2.Lname", "FROM", "MINOR_IN", "AS", "T1", "JOIN", "STUDENT", "AS", "T2", "ON", "T1.StuID", "=", "T2.StuID", "WHERE", "T1.DNO", "=", "140"], "query_toks_no_value": ["select", "t2", ".", "fname", ",", "t2", ".", "lname", "from", "minor_in", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t1", ".", "dno", "=", "value"], "question": "What are the first names and last names of the students that minor in the department with DNO 140.", "question_toks": ["What", "are", "the", "first", "names", "and", "last", "names", "of", "the", "students", "that", "minor", "in", "the", "department", "with", "DNO", "140", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 33, false], null], [0, 1, false], null]], "table_units": [["table_unit", 5], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 34, false], null], 140.0, null]]}}, {"db_id": "college_3", "query": "SELECT T2.Fname ,  T2.Lname FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID  =  T2.StuID WHERE T1.DNO  =  140", "query_toks": ["SELECT", "T2.Fname", ",", "T2.Lname", "FROM", "MINOR_IN", "AS", "T1", "JOIN", "STUDENT", "AS", "T2", "ON", "T1.StuID", "=", "T2.StuID", "WHERE", "T1.DNO", "=", "140"], "query_toks_no_value": ["select", "t2", ".", "fname", ",", "t2", ".", "lname", "from", "minor_in", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t1", ".", "dno", "=", "value"], "question": "What are the full names of students minoring in department 140?", "question_toks": ["What", "are", "the", "full", "names", "of", "students", "minoring", "in", "department", "140", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 33, false], null], [0, 1, false], null]], "table_units": [["table_unit", 5], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 34, false], null], 140.0, null]]}}, {"db_id": "college_3", "query": "SELECT max(T2.gradepoint) ,  min(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.city_code  =  \"NYC\"", "query_toks": ["SELECT", "max", "(", "T2.gradepoint", ")", ",", "min", "(", "T2.gradepoint", ")", "FROM", "ENROLLED_IN", "AS", "T1", "JOIN", "GRADECONVERSION", "AS", "T2", "JOIN", "STUDENT", "AS", "T3", "ON", "T1.Grade", "=", "T2.lettergrade", "AND", "T1.StuID", "=", "T3.StuID", "WHERE", "T3.city_code", "=", "``", "NYC", "''"], "query_toks_no_value": ["select", "max", "(", "t2", ".", "gradepoint", ")", ",", "min", "(", "t2", ".", "gradepoint", ")", "from", "enrolled_in", "as", "t1", "join", "gradeconversion", "as", "t2", "join", "student", "as", "t3", "on", "t1", ".", "grade", "=", "t2", ".", "lettergrade", "and", "t1", ".", "stuid", "=", "t3", ".", "stuid", "where", "t3", ".", "city_code", "=", "value"], "question": "What is the maximum and minimum grade point of students who live in NYC?", "question_toks": ["What", "is", "the", "maximum", "and", "minimum", "grade", "point", "of", "students", "who", "live", "in", "NYC", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 37, false], null], [0, 38, false], null], "and", [false, 2, [0, [0, 35, false], null], [0, 1, false], null]], "table_units": [["table_unit", 6], ["table_unit", 7], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 39, false], null]], [2, [0, [0, 39, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 8, false], null], "\"NYC\"", null]]}}, {"db_id": "college_3", "query": "SELECT max(T2.gradepoint) ,  min(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.city_code  =  \"NYC\"", "query_toks": ["SELECT", "max", "(", "T2.gradepoint", ")", ",", "min", "(", "T2.gradepoint", ")", "FROM", "ENROLLED_IN", "AS", "T1", "JOIN", "GRADECONVERSION", "AS", "T2", "JOIN", "STUDENT", "AS", "T3", "ON", "T1.Grade", "=", "T2.lettergrade", "AND", "T1.StuID", "=", "T3.StuID", "WHERE", "T3.city_code", "=", "``", "NYC", "''"], "query_toks_no_value": ["select", "max", "(", "t2", ".", "gradepoint", ")", ",", "min", "(", "t2", ".", "gradepoint", ")", "from", "enrolled_in", "as", "t1", "join", "gradeconversion", "as", "t2", "join", "student", "as", "t3", "on", "t1", ".", "grade", "=", "t2", ".", "lettergrade", "and", "t1", ".", "stuid", "=", "t3", ".", "stuid", "where", "t3", ".", "city_code", "=", "value"], "question": "Give the maximum and minimum gradepoints for students living in NYC?", "question_toks": ["Give", "the", "maximum", "and", "minimum", "gradepoints", "for", "students", "living", "in", "NYC", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 37, false], null], [0, 38, false], null], "and", [false, 2, [0, [0, 35, false], null], [0, 1, false], null]], "table_units": [["table_unit", 6], ["table_unit", 7], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 39, false], null]], [2, [0, [0, 39, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 8, false], null], "\"NYC\"", null]]}}, {"db_id": "department_store", "query": "SELECT product_id ,  product_type_code FROM products ORDER BY product_price LIMIT 1", "query_toks": ["SELECT", "product_id", ",", "product_type_code", "FROM", "products", "ORDER", "BY", "product_price", "LIMIT", "1"], "query_toks_no_value": ["select", "product_id", ",", "product_type_code", "from", "products", "order", "by", "product_price", "limit", "value"], "question": "What are the product id and product type of the cheapest product?", "question_toks": ["What", "are", "the", "product", "id", "and", "product", "type", "of", "the", "cheapest", "product", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 21, false], null]]], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": []}}, {"db_id": "department_store", "query": "SELECT product_id ,  product_type_code FROM products ORDER BY product_price LIMIT 1", "query_toks": ["SELECT", "product_id", ",", "product_type_code", "FROM", "products", "ORDER", "BY", "product_price", "LIMIT", "1"], "query_toks_no_value": ["select", "product_id", ",", "product_type_code", "from", "products", "order", "by", "product_price", "limit", "value"], "question": "Give the id and product type of the product with the lowest price.", "question_toks": ["Give", "the", "id", "and", "product", "type", "of", "the", "product", "with", "the", "lowest", "price", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 21, false], null]]], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": []}}, {"db_id": "department_store", "query": "SELECT T1.staff_id ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Department Manager\"", "query_toks": ["SELECT", "T1.staff_id", ",", "T1.staff_gender", "FROM", "staff", "AS", "T1", "JOIN", "staff_department_assignments", "AS", "T2", "ON", "T1.staff_id", "=", "T2.staff_id", "WHERE", "T2.job_title_code", "=", "``", "Department", "Manager", "''"], "query_toks_no_value": ["select", "t1", ".", "staff_id", ",", "t1", ".", "staff_gender", "from", "staff", "as", "t1", "join", "staff_department_assignments", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "staff_id", "where", "t2", ".", "job_title_code", "=", "value"], "question": "What are the staff ids and genders of all staffs whose job title is Department Manager?", "question_toks": ["What", "are", "the", "staff", "ids", "and", "genders", "of", "all", "staffs", "whose", "job", "title", "is", "Department", "Manager", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 52, false], null]], "table_units": [["table_unit", 1], ["table_unit", 13]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 55, false], null], "\"Department Manager\"", null]]}}, {"db_id": "department_store", "query": "SELECT T1.staff_id ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Department Manager\"", "query_toks": ["SELECT", "T1.staff_id", ",", "T1.staff_gender", "FROM", "staff", "AS", "T1", "JOIN", "staff_department_assignments", "AS", "T2", "ON", "T1.staff_id", "=", "T2.staff_id", "WHERE", "T2.job_title_code", "=", "``", "Department", "Manager", "''"], "query_toks_no_value": ["select", "t1", ".", "staff_id", ",", "t1", ".", "staff_gender", "from", "staff", "as", "t1", "join", "staff_department_assignments", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "staff_id", "where", "t2", ".", "job_title_code", "=", "value"], "question": "Return the staff ids and genders for any staff with the title Department Manager.", "question_toks": ["Return", "the", "staff", "ids", "and", "genders", "for", "any", "staff", "with", "the", "title", "Department", "Manager", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 52, false], null]], "table_units": [["table_unit", 1], ["table_unit", 13]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 55, false], null], "\"Department Manager\"", null]]}}, {"db_id": "department_store", "query": "SELECT payment_method_code ,  count(*) FROM customers GROUP BY payment_method_code", "query_toks": ["SELECT", "payment_method_code", ",", "count", "(", "*", ")", "FROM", "customers", "GROUP", "BY", "payment_method_code"], "query_toks_no_value": ["select", "payment_method_code", ",", "count", "(", "*", ")", "from", "customers", "group", "by", "payment_method_code"], "question": "For each payment method, return how many customers use it.", "question_toks": ["For", "each", "payment", "method", ",", "return", "how", "many", "customers", "use", "it", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "department_store", "query": "SELECT payment_method_code ,  count(*) FROM customers GROUP BY payment_method_code", "query_toks": ["SELECT", "payment_method_code", ",", "count", "(", "*", ")", "FROM", "customers", "GROUP", "BY", "payment_method_code"], "query_toks_no_value": ["select", "payment_method_code", ",", "count", "(", "*", ")", "from", "customers", "group", "by", "payment_method_code"], "question": "How many customers use each payment method?", "question_toks": ["How", "many", "customers", "use", "each", "payment", "method", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "department_store", "query": "SELECT T1.customer_name ,  T1.customer_phone ,  T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.customer_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.customer_name", ",", "T1.customer_phone", ",", "T1.customer_email", "FROM", "customers", "AS", "T1", "JOIN", "customer_orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T2.customer_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "customer_name", ",", "t1", ".", "customer_phone", ",", "t1", ".", "customer_email", "from", "customers", "as", "t1", "join", "customer_orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t2", ".", "customer_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the name, phone number and email address of the customer who made the largest number of orders?", "question_toks": ["What", "are", "the", "name", ",", "phone", "number", "and", "email", "address", "of", "the", "customer", "who", "made", "the", "largest", "number", "of", "orders", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 31, false], null]], "table_units": [["table_unit", 4], ["table_unit", 8]]}, "groupBy": [[0, 31, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "department_store", "query": "SELECT T1.customer_name ,  T1.customer_phone ,  T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.customer_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.customer_name", ",", "T1.customer_phone", ",", "T1.customer_email", "FROM", "customers", "AS", "T1", "JOIN", "customer_orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T2.customer_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "customer_name", ",", "t1", ".", "customer_phone", ",", "t1", ".", "customer_email", "from", "customers", "as", "t1", "join", "customer_orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t2", ".", "customer_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Return the name, phone number and email address for the customer with the most orders.", "question_toks": ["Return", "the", "name", ",", "phone", "number", "and", "email", "address", "for", "the", "customer", "with", "the", "most", "orders", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 31, false], null]], "table_units": [["table_unit", 4], ["table_unit", 8]]}, "groupBy": [[0, 31, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "department_store", "query": "SELECT product_type_code ,  avg(product_price) FROM products GROUP BY product_type_code", "query_toks": ["SELECT", "product_type_code", ",", "avg", "(", "product_price", ")", "FROM", "products", "GROUP", "BY", "product_type_code"], "query_toks_no_value": ["select", "product_type_code", ",", "avg", "(", "product_price", ")", "from", "products", "group", "by", "product_type_code"], "question": "What is the average price for each type of product?", "question_toks": ["What", "is", "the", "average", "price", "for", "each", "type", "of", "product", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [5, [0, [0, 21, false], null]]]], "union": null, "where": []}}, {"db_id": "department_store", "query": "SELECT product_type_code ,  avg(product_price) FROM products GROUP BY product_type_code", "query_toks": ["SELECT", "product_type_code", ",", "avg", "(", "product_price", ")", "FROM", "products", "GROUP", "BY", "product_type_code"], "query_toks_no_value": ["select", "product_type_code", ",", "avg", "(", "product_price", ")", "from", "products", "group", "by", "product_type_code"], "question": "Return the average price for each product type.", "question_toks": ["Return", "the", "average", "price", "for", "each", "product", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [5, [0, [0, 21, false], null]]]], "union": null, "where": []}}, {"db_id": "department_store", "query": "SELECT T1.staff_name ,  T2.job_title_code FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY T2.date_assigned_to DESC LIMIT 1", "query_toks": ["SELECT", "T1.staff_name", ",", "T2.job_title_code", "FROM", "staff", "AS", "T1", "JOIN", "staff_department_assignments", "AS", "T2", "ON", "T1.staff_id", "=", "T2.staff_id", "ORDER", "BY", "T2.date_assigned_to", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "staff_name", ",", "t2", ".", "job_title_code", "from", "staff", "as", "t1", "join", "staff_department_assignments", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "staff_id", "order", "by", "t2", ".", "date_assigned_to", "desc", "limit", "value"], "question": "What is the name and job title of the staff who was assigned the latest?", "question_toks": ["What", "is", "the", "name", "and", "job", "title", "of", "the", "staff", "who", "was", "assigned", "the", "latest", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 52, false], null]], "table_units": [["table_unit", 1], ["table_unit", 13]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 56, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 55, false], null]]]], "union": null, "where": []}}, {"db_id": "department_store", "query": "SELECT T1.staff_name ,  T2.job_title_code FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY T2.date_assigned_to DESC LIMIT 1", "query_toks": ["SELECT", "T1.staff_name", ",", "T2.job_title_code", "FROM", "staff", "AS", "T1", "JOIN", "staff_department_assignments", "AS", "T2", "ON", "T1.staff_id", "=", "T2.staff_id", "ORDER", "BY", "T2.date_assigned_to", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "staff_name", ",", "t2", ".", "job_title_code", "from", "staff", "as", "t1", "join", "staff_department_assignments", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "staff_id", "order", "by", "t2", ".", "date_assigned_to", "desc", "limit", "value"], "question": "Return the name and job title of the staff with the latest date assigned.", "question_toks": ["Return", "the", "name", "and", "job", "title", "of", "the", "staff", "with", "the", "latest", "date", "assigned", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 52, false], null]], "table_units": [["table_unit", 1], ["table_unit", 13]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 56, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 55, false], null]]]], "union": null, "where": []}}, {"db_id": "department_store", "query": "SELECT T2.product_type_code ,  T2.product_name ,  T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  3", "query_toks": ["SELECT", "T2.product_type_code", ",", "T2.product_name", ",", "T2.product_price", "FROM", "product_suppliers", "AS", "T1", "JOIN", "products", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "WHERE", "T1.supplier_id", "=", "3"], "query_toks_no_value": ["select", "t2", ".", "product_type_code", ",", "t2", ".", "product_name", ",", "t2", ".", "product_price", "from", "product_suppliers", "as", "t1", "join", "products", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "where", "t1", ".", "supplier_id", "=", "value"], "question": "Give me the product type, name and price for all the products supplied by supplier id 3.", "question_toks": ["Give", "me", "the", "product", "type", ",", "name", "and", "price", "for", "all", "the", "products", "supplied", "by", "supplier", "id", "3", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 46, false], null], [0, 18, false], null]], "table_units": [["table_unit", 12], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 20, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 47, false], null], 3.0, null]]}}, {"db_id": "department_store", "query": "SELECT T2.product_type_code ,  T2.product_name ,  T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  3", "query_toks": ["SELECT", "T2.product_type_code", ",", "T2.product_name", ",", "T2.product_price", "FROM", "product_suppliers", "AS", "T1", "JOIN", "products", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "WHERE", "T1.supplier_id", "=", "3"], "query_toks_no_value": ["select", "t2", ".", "product_type_code", ",", "t2", ".", "product_name", ",", "t2", ".", "product_price", "from", "product_suppliers", "as", "t1", "join", "products", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "where", "t1", ".", "supplier_id", "=", "value"], "question": "Return the product type, name, and price for products supplied by supplier 3.", "question_toks": ["Return", "the", "product", "type", ",", "name", ",", "and", "price", "for", "products", "supplied", "by", "supplier", "3", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 46, false], null], [0, 18, false], null]], "table_units": [["table_unit", 12], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 20, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 47, false], null], 3.0, null]]}}, {"db_id": "department_store", "query": "SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"New\" INTERSECT SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"Pending\"", "query_toks": ["SELECT", "T1.customer_name", ",", "T1.customer_address", "FROM", "customers", "AS", "T1", "JOIN", "customer_orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T2.order_status_code", "=", "``", "New", "''", "INTERSECT", "SELECT", "T1.customer_name", ",", "T1.customer_address", "FROM", "customers", "AS", "T1", "JOIN", "customer_orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T2.order_status_code", "=", "``", "Pending", "''"], "query_toks_no_value": ["select", "t1", ".", "customer_name", ",", "t1", ".", "customer_address", "from", "customers", "as", "t1", "join", "customer_orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t2", ".", "order_status_code", "=", "value", "intersect", "select", "t1", ".", "customer_name", ",", "t1", ".", "customer_address", "from", "customers", "as", "t1", "join", "customer_orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t2", ".", "order_status_code", "=", "value"], "question": "Find the name and address of the customers who have both New and Pending orders.", "question_toks": ["Find", "the", "name", "and", "address", "of", "the", "customers", "who", "have", "both", "New", "and", "Pending", "orders", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 31, false], null]], "table_units": [["table_unit", 4], ["table_unit", 8]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 31, false], null]], "table_units": [["table_unit", 4], ["table_unit", 8]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 32, false], null], "\"Pending\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 32, false], null], "\"New\"", null]]}}, {"db_id": "department_store", "query": "SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"New\" INTERSECT SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"Pending\"", "query_toks": ["SELECT", "T1.customer_name", ",", "T1.customer_address", "FROM", "customers", "AS", "T1", "JOIN", "customer_orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T2.order_status_code", "=", "``", "New", "''", "INTERSECT", "SELECT", "T1.customer_name", ",", "T1.customer_address", "FROM", "customers", "AS", "T1", "JOIN", "customer_orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T2.order_status_code", "=", "``", "Pending", "''"], "query_toks_no_value": ["select", "t1", ".", "customer_name", ",", "t1", ".", "customer_address", "from", "customers", "as", "t1", "join", "customer_orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t2", ".", "order_status_code", "=", "value", "intersect", "select", "t1", ".", "customer_name", ",", "t1", ".", "customer_address", "from", "customers", "as", "t1", "join", "customer_orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t2", ".", "order_status_code", "=", "value"], "question": "What are the names and addressed of customers who have both New and Pending orders?", "question_toks": ["What", "are", "the", "names", "and", "addressed", "of", "customers", "who", "have", "both", "New", "and", "Pending", "orders", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 31, false], null]], "table_units": [["table_unit", 4], ["table_unit", 8]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 31, false], null]], "table_units": [["table_unit", 4], ["table_unit", 8]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 32, false], null], "\"Pending\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 32, false], null], "\"New\"", null]]}}, {"db_id": "department_store", "query": "SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"marketing\" INTERSECT SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"managing\"", "query_toks": ["SELECT", "T2.dept_store_id", ",", "T2.store_name", "FROM", "departments", "AS", "T1", "JOIN", "department_stores", "AS", "T2", "ON", "T1.dept_store_id", "=", "T2.dept_store_id", "WHERE", "T1.department_name", "=", "``", "marketing", "''", "INTERSECT", "SELECT", "T2.dept_store_id", ",", "T2.store_name", "FROM", "departments", "AS", "T1", "JOIN", "department_stores", "AS", "T2", "ON", "T1.dept_store_id", "=", "T2.dept_store_id", "WHERE", "T1.department_name", "=", "``", "managing", "''"], "query_toks_no_value": ["select", "t2", ".", "dept_store_id", ",", "t2", ".", "store_name", "from", "departments", "as", "t1", "join", "department_stores", "as", "t2", "on", "t1", ".", "dept_store_id", "=", "t2", ".", "dept_store_id", "where", "t1", ".", "department_name", "=", "value", "intersect", "select", "t2", ".", "dept_store_id", ",", "t2", ".", "store_name", "from", "departments", "as", "t1", "join", "department_stores", "as", "t2", "on", "t1", ".", "dept_store_id", "=", "t2", ".", "dept_store_id", "where", "t1", ".", "department_name", "=", "value"], "question": "What is the id and name of the department store that has both marketing and managing department?", "question_toks": ["What", "is", "the", "id", "and", "name", "of", "the", "department", "store", "that", "has", "both", "marketing", "and", "managing", "department", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 41, false], null], [0, 34, false], null]], "table_units": [["table_unit", 10], ["table_unit", 9]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 41, false], null], [0, 34, false], null]], "table_units": [["table_unit", 10], ["table_unit", 9]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 36, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 42, false], null], "\"managing\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 36, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 42, false], null], "\"marketing\"", null]]}}, {"db_id": "department_store", "query": "SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"marketing\" INTERSECT SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"managing\"", "query_toks": ["SELECT", "T2.dept_store_id", ",", "T2.store_name", "FROM", "departments", "AS", "T1", "JOIN", "department_stores", "AS", "T2", "ON", "T1.dept_store_id", "=", "T2.dept_store_id", "WHERE", "T1.department_name", "=", "``", "marketing", "''", "INTERSECT", "SELECT", "T2.dept_store_id", ",", "T2.store_name", "FROM", "departments", "AS", "T1", "JOIN", "department_stores", "AS", "T2", "ON", "T1.dept_store_id", "=", "T2.dept_store_id", "WHERE", "T1.department_name", "=", "``", "managing", "''"], "query_toks_no_value": ["select", "t2", ".", "dept_store_id", ",", "t2", ".", "store_name", "from", "departments", "as", "t1", "join", "department_stores", "as", "t2", "on", "t1", ".", "dept_store_id", "=", "t2", ".", "dept_store_id", "where", "t1", ".", "department_name", "=", "value", "intersect", "select", "t2", ".", "dept_store_id", ",", "t2", ".", "store_name", "from", "departments", "as", "t1", "join", "department_stores", "as", "t2", "on", "t1", ".", "dept_store_id", "=", "t2", ".", "dept_store_id", "where", "t1", ".", "department_name", "=", "value"], "question": "What are the ids and names of department stores with both marketing and managing departments?", "question_toks": ["What", "are", "the", "ids", "and", "names", "of", "department", "stores", "with", "both", "marketing", "and", "managing", "departments", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 41, false], null], [0, 34, false], null]], "table_units": [["table_unit", 10], ["table_unit", 9]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 41, false], null], [0, 34, false], null]], "table_units": [["table_unit", 10], ["table_unit", 9]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 36, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 42, false], null], "\"managing\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 36, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 42, false], null], "\"marketing\"", null]]}}, {"db_id": "department_store", "query": "SELECT product_type_code ,  max(product_price) ,  min(product_price) FROM products GROUP BY product_type_code", "query_toks": ["SELECT", "product_type_code", ",", "max", "(", "product_price", ")", ",", "min", "(", "product_price", ")", "FROM", "products", "GROUP", "BY", "product_type_code"], "query_toks_no_value": ["select", "product_type_code", ",", "max", "(", "product_price", ")", ",", "min", "(", "product_price", ")", "from", "products", "group", "by", "product_type_code"], "question": "For each product type, return the maximum and minimum price.", "question_toks": ["For", "each", "product", "type", ",", "return", "the", "maximum", "and", "minimum", "price", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [1, [0, [0, 21, false], null]], [2, [0, [0, 21, false], null]]]], "union": null, "where": []}}, {"db_id": "department_store", "query": "SELECT product_type_code ,  max(product_price) ,  min(product_price) FROM products GROUP BY product_type_code", "query_toks": ["SELECT", "product_type_code", ",", "max", "(", "product_price", ")", ",", "min", "(", "product_price", ")", "FROM", "products", "GROUP", "BY", "product_type_code"], "query_toks_no_value": ["select", "product_type_code", ",", "max", "(", "product_price", ")", ",", "min", "(", "product_price", ")", "from", "products", "group", "by", "product_type_code"], "question": "What are the maximum and minimum product prices for each product type?", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "product", "prices", "for", "each", "product", "type", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [1, [0, [0, 21, false], null]], [2, [0, [0, 21, false], null]]]], "union": null, "where": []}}, {"db_id": "department_store", "query": "SELECT T1.staff_id ,  T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1", "query_toks": ["SELECT", "T1.staff_id", ",", "T1.staff_name", "FROM", "staff", "AS", "T1", "JOIN", "Staff_Department_Assignments", "AS", "T2", "ON", "T1.staff_id", "=", "T2.staff_id", "ORDER", "BY", "date_assigned_to", "-", "date_assigned_from", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "staff_id", ",", "t1", ".", "staff_name", "from", "staff", "as", "t1", "join", "staff_department_assignments", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "staff_id", "order", "by", "date_assigned_to", "-", "date_assigned_from", "limit", "value"], "question": "Find the id and name of the staff who has been assigned for the shortest period.", "question_toks": ["Find", "the", "id", "and", "name", "of", "the", "staff", "who", "has", "been", "assigned", "for", "the", "shortest", "period", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 52, false], null]], "table_units": [["table_unit", 1], ["table_unit", 13]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[1, [0, 56, false], [0, 54, false]]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "department_store", "query": "SELECT T1.staff_id ,  T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1", "query_toks": ["SELECT", "T1.staff_id", ",", "T1.staff_name", "FROM", "staff", "AS", "T1", "JOIN", "Staff_Department_Assignments", "AS", "T2", "ON", "T1.staff_id", "=", "T2.staff_id", "ORDER", "BY", "date_assigned_to", "-", "date_assigned_from", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "staff_id", ",", "t1", ".", "staff_name", "from", "staff", "as", "t1", "join", "staff_department_assignments", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "staff_id", "order", "by", "date_assigned_to", "-", "date_assigned_from", "limit", "value"], "question": "What is the id and name of the staff who has been assigned for the least amount of time?", "question_toks": ["What", "is", "the", "id", "and", "name", "of", "the", "staff", "who", "has", "been", "assigned", "for", "the", "least", "amount", "of", "time", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 52, false], null]], "table_units": [["table_unit", 1], ["table_unit", 13]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[1, [0, 56, false], [0, 54, false]]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "department_store", "query": "SELECT product_name ,  product_id FROM products WHERE product_price BETWEEN 600 AND 700", "query_toks": ["SELECT", "product_name", ",", "product_id", "FROM", "products", "WHERE", "product_price", "BETWEEN", "600", "AND", "700"], "query_toks_no_value": ["select", "product_name", ",", "product_id", "from", "products", "where", "product_price", "between", "value", "and", "value"], "question": "Return the names and ids of all products whose price is between 600 and 700.", "question_toks": ["Return", "the", "names", "and", "ids", "of", "all", "products", "whose", "price", "is", "between", "600", "and", "700", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": [[false, 1, [0, [0, 21, false], null], 600.0, 700.0]]}}, {"db_id": "department_store", "query": "SELECT product_name ,  product_id FROM products WHERE product_price BETWEEN 600 AND 700", "query_toks": ["SELECT", "product_name", ",", "product_id", "FROM", "products", "WHERE", "product_price", "BETWEEN", "600", "AND", "700"], "query_toks_no_value": ["select", "product_name", ",", "product_id", "from", "products", "where", "product_price", "between", "value", "and", "value"], "question": "What are the names and ids of products costing between 600 and 700?", "question_toks": ["What", "are", "the", "names", "and", "ids", "of", "products", "costing", "between", "600", "and", "700", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": [[false, 1, [0, [0, 21, false], null], 600.0, 700.0]]}}, {"db_id": "department_store", "query": "SELECT customer_name ,  customer_id FROM customers WHERE customer_address LIKE \"%TN%\"", "query_toks": ["SELECT", "customer_name", ",", "customer_id", "FROM", "customers", "WHERE", "customer_address", "LIKE", "``", "%", "TN", "%", "''"], "query_toks_no_value": ["select", "customer_name", ",", "customer_id", "from", "customers", "where", "customer_address", "like", "value"], "question": "What are the names and ids of customers whose address contains TN?", "question_toks": ["What", "are", "the", "names", "and", "ids", "of", "customers", "whose", "address", "contains", "TN", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 15, false], null], "\"%TN%\"", null]]}}, {"db_id": "department_store", "query": "SELECT customer_name ,  customer_id FROM customers WHERE customer_address LIKE \"%TN%\"", "query_toks": ["SELECT", "customer_name", ",", "customer_id", "FROM", "customers", "WHERE", "customer_address", "LIKE", "``", "%", "TN", "%", "''"], "query_toks_no_value": ["select", "customer_name", ",", "customer_id", "from", "customers", "where", "customer_address", "like", "value"], "question": "Return the names and ids of customers who have TN in their address.", "question_toks": ["Return", "the", "names", "and", "ids", "of", "customers", "who", "have", "TN", "in", "their", "address", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 15, false], null], "\"%TN%\"", null]]}}, {"db_id": "department_store", "query": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.date_assigned_from LIKE \"2016%\"", "query_toks": ["SELECT", "T1.staff_name", ",", "T1.staff_gender", "FROM", "staff", "AS", "T1", "JOIN", "staff_department_assignments", "AS", "T2", "ON", "T1.staff_id", "=", "T2.staff_id", "WHERE", "T2.date_assigned_from", "LIKE", "``", "2016", "%", "''"], "query_toks_no_value": ["select", "t1", ".", "staff_name", ",", "t1", ".", "staff_gender", "from", "staff", "as", "t1", "join", "staff_department_assignments", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "staff_id", "where", "t2", ".", "date_assigned_from", "like", "value"], "question": "Return the name and gender of the staff who was assigned in 2016.", "question_toks": ["Return", "the", "name", "and", "gender", "of", "the", "staff", "who", "was", "assigned", "in", "2016", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 52, false], null]], "table_units": [["table_unit", 1], ["table_unit", 13]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 54, false], null], "\"2016%\"", null]]}}, {"db_id": "department_store", "query": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.date_assigned_from LIKE \"2016%\"", "query_toks": ["SELECT", "T1.staff_name", ",", "T1.staff_gender", "FROM", "staff", "AS", "T1", "JOIN", "staff_department_assignments", "AS", "T2", "ON", "T1.staff_id", "=", "T2.staff_id", "WHERE", "T2.date_assigned_from", "LIKE", "``", "2016", "%", "''"], "query_toks_no_value": ["select", "t1", ".", "staff_name", ",", "t1", ".", "staff_gender", "from", "staff", "as", "t1", "join", "staff_department_assignments", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "staff_id", "where", "t2", ".", "date_assigned_from", "like", "value"], "question": "What are the names and genders of staff who were assigned in 2016?", "question_toks": ["What", "are", "the", "names", "and", "genders", "of", "staff", "who", "were", "assigned", "in", "2016", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 52, false], null]], "table_units": [["table_unit", 1], ["table_unit", 13]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 54, false], null], "\"2016%\"", null]]}}, {"db_id": "department_store", "query": "SELECT T1.supplier_name ,  T1.supplier_phone FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN addresses AS T3 ON T2.address_id  =  T3.address_id ORDER BY T3.address_details", "query_toks": ["SELECT", "T1.supplier_name", ",", "T1.supplier_phone", "FROM", "Suppliers", "AS", "T1", "JOIN", "supplier_addresses", "AS", "T2", "ON", "T1.supplier_id", "=", "T2.supplier_id", "JOIN", "addresses", "AS", "T3", "ON", "T2.address_id", "=", "T3.address_id", "ORDER", "BY", "T3.address_details"], "query_toks_no_value": ["select", "t1", ".", "supplier_name", ",", "t1", ".", "supplier_phone", "from", "suppliers", "as", "t1", "join", "supplier_addresses", "as", "t2", "on", "t1", ".", "supplier_id", "=", "t2", ".", "supplier_id", "join", "addresses", "as", "t3", "on", "t2", ".", "address_id", "=", "t3", ".", "address_id", "order", "by", "t3", ".", "address_details"], "question": "List the name and phone number of all suppliers in the alphabetical order of their addresses.", "question_toks": ["List", "the", "name", "and", "phone", "number", "of", "all", "suppliers", "in", "the", "alphabetical", "order", "of", "their", "addresses", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 22, false], null]], "table_units": [["table_unit", 2], ["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 2, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "department_store", "query": "SELECT T1.supplier_name ,  T1.supplier_phone FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN addresses AS T3 ON T2.address_id  =  T3.address_id ORDER BY T3.address_details", "query_toks": ["SELECT", "T1.supplier_name", ",", "T1.supplier_phone", "FROM", "Suppliers", "AS", "T1", "JOIN", "supplier_addresses", "AS", "T2", "ON", "T1.supplier_id", "=", "T2.supplier_id", "JOIN", "addresses", "AS", "T3", "ON", "T2.address_id", "=", "T3.address_id", "ORDER", "BY", "T3.address_details"], "query_toks_no_value": ["select", "t1", ".", "supplier_name", ",", "t1", ".", "supplier_phone", "from", "suppliers", "as", "t1", "join", "supplier_addresses", "as", "t2", "on", "t1", ".", "supplier_id", "=", "t2", ".", "supplier_id", "join", "addresses", "as", "t3", "on", "t2", ".", "address_id", "=", "t3", ".", "address_id", "order", "by", "t3", ".", "address_details"], "question": "What are the names and phone numbers for all suppliers, sorted in alphabetical order of their addressed?", "question_toks": ["What", "are", "the", "names", "and", "phone", "numbers", "for", "all", "suppliers", ",", "sorted", "in", "alphabetical", "order", "of", "their", "addressed", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 22, false], null]], "table_units": [["table_unit", 2], ["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 2, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "department_store", "query": "SELECT product_id ,  product_name FROM products WHERE product_price  <  600 OR product_price  >  900", "query_toks": ["SELECT", "product_id", ",", "product_name", "FROM", "products", "WHERE", "product_price", "<", "600", "OR", "product_price", ">", "900"], "query_toks_no_value": ["select", "product_id", ",", "product_name", "from", "products", "where", "product_price", "<", "value", "or", "product_price", ">", "value"], "question": "What are id and name of the products whose price is lower than 600 or higher than 900?", "question_toks": ["What", "are", "id", "and", "name", "of", "the", "products", "whose", "price", "is", "lower", "than", "600", "or", "higher", "than", "900", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 20, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 21, false], null], 600.0, null], "or", [false, 3, [0, [0, 21, false], null], 900.0, null]]}}, {"db_id": "department_store", "query": "SELECT product_id ,  product_name FROM products WHERE product_price  <  600 OR product_price  >  900", "query_toks": ["SELECT", "product_id", ",", "product_name", "FROM", "products", "WHERE", "product_price", "<", "600", "OR", "product_price", ">", "900"], "query_toks_no_value": ["select", "product_id", ",", "product_name", "from", "products", "where", "product_price", "<", "value", "or", "product_price", ">", "value"], "question": "Give the ids and names of products with price lower than 600 or higher than 900.", "question_toks": ["Give", "the", "ids", "and", "names", "of", "products", "with", "price", "lower", "than", "600", "or", "higher", "than", "900", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 20, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 21, false], null], 600.0, null], "or", [false, 3, [0, [0, 21, false], null], 900.0, null]]}}, {"db_id": "department_store", "query": "SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)", "query_toks": ["SELECT", "avg", "(", "total_amount_purchased", ")", ",", "avg", "(", "total_value_purchased", ")", "FROM", "Product_Suppliers", "WHERE", "supplier_id", "=", "(", "SELECT", "supplier_id", "FROM", "Product_Suppliers", "GROUP", "BY", "supplier_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "avg", "(", "total_amount_purchased", ")", ",", "avg", "(", "total_value_purchased", ")", "from", "product_suppliers", "where", "supplier_id", "=", "(", "select", "supplier_id", "from", "product_suppliers", "group", "by", "supplier_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")"], "question": "What are the average amount purchased and value purchased for the supplier who supplies the most products.", "question_toks": ["What", "are", "the", "average", "amount", "purchased", "and", "value", "purchased", "for", "the", "supplier", "who", "supplies", "the", "most", "products", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 12]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 50, false], null]], [5, [0, [0, 51, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 47, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 12]]}, "groupBy": [[0, 47, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 47, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "department_store", "query": "SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)", "query_toks": ["SELECT", "avg", "(", "total_amount_purchased", ")", ",", "avg", "(", "total_value_purchased", ")", "FROM", "Product_Suppliers", "WHERE", "supplier_id", "=", "(", "SELECT", "supplier_id", "FROM", "Product_Suppliers", "GROUP", "BY", "supplier_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "avg", "(", "total_amount_purchased", ")", ",", "avg", "(", "total_value_purchased", ")", "from", "product_suppliers", "where", "supplier_id", "=", "(", "select", "supplier_id", "from", "product_suppliers", "group", "by", "supplier_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")"], "question": "Return the average total amount purchased and total value purchased for the supplier who supplies the greatest number of products.", "question_toks": ["Return", "the", "average", "total", "amount", "purchased", "and", "total", "value", "purchased", "for", "the", "supplier", "who", "supplies", "the", "greatest", "number", "of", "products", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 12]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 50, false], null]], [5, [0, [0, 51, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 47, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 12]]}, "groupBy": [[0, 47, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 47, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "department_store", "query": "SELECT max(customer_code) ,  min(customer_code) FROM Customers", "query_toks": ["SELECT", "max", "(", "customer_code", ")", ",", "min", "(", "customer_code", ")", "FROM", "Customers"], "query_toks_no_value": ["select", "max", "(", "customer_code", ")", ",", "min", "(", "customer_code", ")", "from", "customers"], "question": "What is the largest and smallest customer codes?", "question_toks": ["What", "is", "the", "largest", "and", "smallest", "customer", "codes", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 13, false], null]], [2, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "department_store", "query": "SELECT max(customer_code) ,  min(customer_code) FROM Customers", "query_toks": ["SELECT", "max", "(", "customer_code", ")", ",", "min", "(", "customer_code", ")", "FROM", "Customers"], "query_toks_no_value": ["select", "max", "(", "customer_code", ")", ",", "min", "(", "customer_code", ")", "from", "customers"], "question": "Return the maximum and minimum customer codes.", "question_toks": ["Return", "the", "maximum", "and", "minimum", "customer", "codes", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 13, false], null]], [2, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "department_store", "query": "SELECT DISTINCT T1.supplier_name ,  T1.supplier_phone FROM suppliers AS T1 JOIN product_suppliers AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN products AS T3 ON T2.product_id  =  T3.product_id WHERE T3.product_name  =  \"red jeans\"", "query_toks": ["SELECT", "DISTINCT", "T1.supplier_name", ",", "T1.supplier_phone", "FROM", "suppliers", "AS", "T1", "JOIN", "product_suppliers", "AS", "T2", "ON", "T1.supplier_id", "=", "T2.supplier_id", "JOIN", "products", "AS", "T3", "ON", "T2.product_id", "=", "T3.product_id", "WHERE", "T3.product_name", "=", "``", "red", "jeans", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "supplier_name", ",", "t1", ".", "supplier_phone", "from", "suppliers", "as", "t1", "join", "product_suppliers", "as", "t2", "on", "t1", ".", "supplier_id", "=", "t2", ".", "supplier_id", "join", "products", "as", "t3", "on", "t2", ".", "product_id", "=", "t3", ".", "product_id", "where", "t3", ".", "product_name", "=", "value"], "question": "List the names and phone numbers of all the distinct suppliers who supply red jeans.", "question_toks": ["List", "the", "names", "and", "phone", "numbers", "of", "all", "the", "distinct", "suppliers", "who", "supply", "red", "jeans", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 47, false], null]], "table_units": [["table_unit", 2], ["table_unit", 12]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 20, false], null], "\"red jeans\"", null]]}}, {"db_id": "department_store", "query": "SELECT DISTINCT T1.supplier_name ,  T1.supplier_phone FROM suppliers AS T1 JOIN product_suppliers AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN products AS T3 ON T2.product_id  =  T3.product_id WHERE T3.product_name  =  \"red jeans\"", "query_toks": ["SELECT", "DISTINCT", "T1.supplier_name", ",", "T1.supplier_phone", "FROM", "suppliers", "AS", "T1", "JOIN", "product_suppliers", "AS", "T2", "ON", "T1.supplier_id", "=", "T2.supplier_id", "JOIN", "products", "AS", "T3", "ON", "T2.product_id", "=", "T3.product_id", "WHERE", "T3.product_name", "=", "``", "red", "jeans", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "supplier_name", ",", "t1", ".", "supplier_phone", "from", "suppliers", "as", "t1", "join", "product_suppliers", "as", "t2", "on", "t1", ".", "supplier_id", "=", "t2", ".", "supplier_id", "join", "products", "as", "t3", "on", "t2", ".", "product_id", "=", "t3", ".", "product_id", "where", "t3", ".", "product_name", "=", "value"], "question": "What are the distinct names and phone numbers for suppliers who have red jeans?", "question_toks": ["What", "are", "the", "distinct", "names", "and", "phone", "numbers", "for", "suppliers", "who", "have", "red", "jeans", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 47, false], null]], "table_units": [["table_unit", 2], ["table_unit", 12]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 20, false], null], "\"red jeans\"", null]]}}, {"db_id": "department_store", "query": "SELECT max(product_price) ,  min(product_price) ,  product_type_code FROM products GROUP BY product_type_code ORDER BY product_type_code", "query_toks": ["SELECT", "max", "(", "product_price", ")", ",", "min", "(", "product_price", ")", ",", "product_type_code", "FROM", "products", "GROUP", "BY", "product_type_code", "ORDER", "BY", "product_type_code"], "query_toks_no_value": ["select", "max", "(", "product_price", ")", ",", "min", "(", "product_price", ")", ",", "product_type_code", "from", "products", "group", "by", "product_type_code", "order", "by", "product_type_code"], "question": "What are the highest and lowest prices of products, grouped by and alphabetically ordered by product type?", "question_toks": ["What", "are", "the", "highest", "and", "lowest", "prices", "of", "products", ",", "grouped", "by", "and", "alphabetically", "ordered", "by", "product", "type", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 19, false], null]]], "select": [false, [[1, [0, [0, 21, false], null]], [2, [0, [0, 21, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": []}}, {"db_id": "department_store", "query": "SELECT max(product_price) ,  min(product_price) ,  product_type_code FROM products GROUP BY product_type_code ORDER BY product_type_code", "query_toks": ["SELECT", "max", "(", "product_price", ")", ",", "min", "(", "product_price", ")", ",", "product_type_code", "FROM", "products", "GROUP", "BY", "product_type_code", "ORDER", "BY", "product_type_code"], "query_toks_no_value": ["select", "max", "(", "product_price", ")", ",", "min", "(", "product_price", ")", ",", "product_type_code", "from", "products", "group", "by", "product_type_code", "order", "by", "product_type_code"], "question": "Give the maximum and minimum product prices for each product type, grouped and ordered by product type.", "question_toks": ["Give", "the", "maximum", "and", "minimum", "product", "prices", "for", "each", "product", "type", ",", "grouped", "and", "ordered", "by", "product", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 19, false], null]]], "select": [false, [[1, [0, [0, 21, false], null]], [2, [0, [0, 21, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": []}}, {"db_id": "department_store", "query": "SELECT order_id ,  customer_id FROM customer_orders WHERE order_status_code  =   \"Cancelled\" ORDER BY order_date", "query_toks": ["SELECT", "order_id", ",", "customer_id", "FROM", "customer_orders", "WHERE", "order_status_code", "=", "``", "Cancelled", "''", "ORDER", "BY", "order_date"], "query_toks_no_value": ["select", "order_id", ",", "customer_id", "from", "customer_orders", "where", "order_status_code", "=", "value", "order", "by", "order_date"], "question": "List the order id, customer id for orders in Cancelled status, ordered by their order dates.", "question_toks": ["List", "the", "order", "id", ",", "customer", "id", "for", "orders", "in", "Cancelled", "status", ",", "ordered", "by", "their", "order", "dates", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 8]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 33, false], null]]], "select": [false, [[0, [0, [0, 30, false], null]], [0, [0, [0, 31, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 32, false], null], "\"Cancelled\"", null]]}}, {"db_id": "department_store", "query": "SELECT order_id ,  customer_id FROM customer_orders WHERE order_status_code  =   \"Cancelled\" ORDER BY order_date", "query_toks": ["SELECT", "order_id", ",", "customer_id", "FROM", "customer_orders", "WHERE", "order_status_code", "=", "``", "Cancelled", "''", "ORDER", "BY", "order_date"], "query_toks_no_value": ["select", "order_id", ",", "customer_id", "from", "customer_orders", "where", "order_status_code", "=", "value", "order", "by", "order_date"], "question": "What are the order ids and customer ids for orders that have been Cancelled, sorted by their order dates?", "question_toks": ["What", "are", "the", "order", "ids", "and", "customer", "ids", "for", "orders", "that", "have", "been", "Cancelled", ",", "sorted", "by", "their", "order", "dates", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 8]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 33, false], null]]], "select": [false, [[0, [0, [0, 30, false], null]], [0, [0, [0, 31, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 32, false], null], "\"Cancelled\"", null]]}}, {"db_id": "department_store", "query": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Sales Person\" EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Clerical Staff\"", "query_toks": ["SELECT", "T1.staff_name", ",", "T1.staff_gender", "FROM", "staff", "AS", "T1", "JOIN", "Staff_Department_Assignments", "AS", "T2", "ON", "T1.staff_id", "=", "T2.staff_id", "WHERE", "T2.job_title_code", "=", "``", "Sales", "Person", "''", "EXCEPT", "SELECT", "T1.staff_name", ",", "T1.staff_gender", "FROM", "staff", "AS", "T1", "JOIN", "Staff_Department_Assignments", "AS", "T2", "ON", "T1.staff_id", "=", "T2.staff_id", "WHERE", "T2.job_title_code", "=", "``", "Clerical", "Staff", "''"], "query_toks_no_value": ["select", "t1", ".", "staff_name", ",", "t1", ".", "staff_gender", "from", "staff", "as", "t1", "join", "staff_department_assignments", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "staff_id", "where", "t2", ".", "job_title_code", "=", "value", "except", "select", "t1", ".", "staff_name", ",", "t1", ".", "staff_gender", "from", "staff", "as", "t1", "join", "staff_department_assignments", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "staff_id", "where", "t2", ".", "job_title_code", "=", "value"], "question": "Find the name and gender of the staff who has been assigned the job of Sales Person but never Clerical Staff.", "question_toks": ["Find", "the", "name", "and", "gender", "of", "the", "staff", "who", "has", "been", "assigned", "the", "job", "of", "Sales", "Person", "but", "never", "Clerical", "Staff", "."], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 52, false], null]], "table_units": [["table_unit", 1], ["table_unit", 13]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 55, false], null], "\"Clerical Staff\"", null]]}, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 52, false], null]], "table_units": [["table_unit", 1], ["table_unit", 13]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 55, false], null], "\"Sales Person\"", null]]}}, {"db_id": "department_store", "query": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Sales Person\" EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Clerical Staff\"", "query_toks": ["SELECT", "T1.staff_name", ",", "T1.staff_gender", "FROM", "staff", "AS", "T1", "JOIN", "Staff_Department_Assignments", "AS", "T2", "ON", "T1.staff_id", "=", "T2.staff_id", "WHERE", "T2.job_title_code", "=", "``", "Sales", "Person", "''", "EXCEPT", "SELECT", "T1.staff_name", ",", "T1.staff_gender", "FROM", "staff", "AS", "T1", "JOIN", "Staff_Department_Assignments", "AS", "T2", "ON", "T1.staff_id", "=", "T2.staff_id", "WHERE", "T2.job_title_code", "=", "``", "Clerical", "Staff", "''"], "query_toks_no_value": ["select", "t1", ".", "staff_name", ",", "t1", ".", "staff_gender", "from", "staff", "as", "t1", "join", "staff_department_assignments", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "staff_id", "where", "t2", ".", "job_title_code", "=", "value", "except", "select", "t1", ".", "staff_name", ",", "t1", ".", "staff_gender", "from", "staff", "as", "t1", "join", "staff_department_assignments", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "staff_id", "where", "t2", ".", "job_title_code", "=", "value"], "question": "What are the names and genders of staff who have held the title Sales Person, but never Clerical Staff?", "question_toks": ["What", "are", "the", "names", "and", "genders", "of", "staff", "who", "have", "held", "the", "title", "Sales", "Person", ",", "but", "never", "Clerical", "Staff", "?"], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 52, false], null]], "table_units": [["table_unit", 1], ["table_unit", 13]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 55, false], null], "\"Clerical Staff\"", null]]}, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 52, false], null]], "table_units": [["table_unit", 1], ["table_unit", 13]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 55, false], null], "\"Sales Person\"", null]]}}, {"db_id": "department_store", "query": "SELECT customer_id ,  customer_name FROM customers WHERE customer_address LIKE \"%WY%\" AND payment_method_code != \"Credit Card\"", "query_toks": ["SELECT", "customer_id", ",", "customer_name", "FROM", "customers", "WHERE", "customer_address", "LIKE", "``", "%", "WY", "%", "''", "AND", "payment_method_code", "!", "=", "``", "Credit", "Card", "''"], "query_toks_no_value": ["select", "customer_id", ",", "customer_name", "from", "customers", "where", "customer_address", "like", "value", "and", "payment_method_code", "!", "=", "value"], "question": "Find the id and name of customers whose address contains WY state and do not use credit card for payment.", "question_toks": ["Find", "the", "id", "and", "name", "of", "customers", "whose", "address", "contains", "WY", "state", "and", "do", "not", "use", "credit", "card", "for", "payment", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 15, false], null], "\"%WY%\"", null], "and", [false, 7, [0, [0, 12, false], null], "\"Credit Card\"", null]]}}, {"db_id": "department_store", "query": "SELECT customer_id ,  customer_name FROM customers WHERE customer_address LIKE \"%WY%\" AND payment_method_code != \"Credit Card\"", "query_toks": ["SELECT", "customer_id", ",", "customer_name", "FROM", "customers", "WHERE", "customer_address", "LIKE", "``", "%", "WY", "%", "''", "AND", "payment_method_code", "!", "=", "``", "Credit", "Card", "''"], "query_toks_no_value": ["select", "customer_id", ",", "customer_name", "from", "customers", "where", "customer_address", "like", "value", "and", "payment_method_code", "!", "=", "value"], "question": "What are the ids and names of customers with addressed that contain WY and who do not use a credit card for payment?", "question_toks": ["What", "are", "the", "ids", "and", "names", "of", "customers", "with", "addressed", "that", "contain", "WY", "and", "who", "do", "not", "use", "a", "credit", "card", "for", "payment", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 15, false], null], "\"%WY%\"", null], "and", [false, 7, [0, [0, 12, false], null], "\"Credit Card\"", null]]}}, {"db_id": "aircraft", "query": "SELECT International_Passengers ,  Domestic_Passengers FROM airport WHERE Airport_Name  =  \"London Heathrow\"", "query_toks": ["SELECT", "International_Passengers", ",", "Domestic_Passengers", "FROM", "airport", "WHERE", "Airport_Name", "=", "``", "London", "Heathrow", "''"], "query_toks_no_value": ["select", "international_passengers", ",", "domestic_passengers", "from", "airport", "where", "airport_name", "=", "value"], "question": "What are the number of international and domestic passengers of the airport named London \"Heathrow\"?", "question_toks": ["What", "are", "the", "number", "of", "international", "and", "domestic", "passengers", "of", "the", "airport", "named", "London", "``", "Heathrow", "''", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 22, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 18, false], null], "\"London Heathrow\"", null]]}}, {"db_id": "aircraft", "query": "SELECT International_Passengers ,  Domestic_Passengers FROM airport WHERE Airport_Name  =  \"London Heathrow\"", "query_toks": ["SELECT", "International_Passengers", ",", "Domestic_Passengers", "FROM", "airport", "WHERE", "Airport_Name", "=", "``", "London", "Heathrow", "''"], "query_toks_no_value": ["select", "international_passengers", ",", "domestic_passengers", "from", "airport", "where", "airport_name", "=", "value"], "question": "How many international and domestic passengers are there in the airport London Heathrow?", "question_toks": ["How", "many", "international", "and", "domestic", "passengers", "are", "there", "in", "the", "airport", "London", "Heathrow", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 22, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 18, false], null], "\"London Heathrow\"", null]]}}, {"db_id": "aircraft", "query": "SELECT max(Transit_Passengers) ,  min(Transit_Passengers) FROM airport", "query_toks": ["SELECT", "max", "(", "Transit_Passengers", ")", ",", "min", "(", "Transit_Passengers", ")", "FROM", "airport"], "query_toks_no_value": ["select", "max", "(", "transit_passengers", ")", ",", "min", "(", "transit_passengers", ")", "from", "airport"], "question": "What are the maximum and minimum number of transit passengers of all aiports.", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "number", "of", "transit", "passengers", "of", "all", "aiports", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 23, false], null]], [2, [0, [0, 23, false], null]]]], "union": null, "where": []}}, {"db_id": "aircraft", "query": "SELECT max(Transit_Passengers) ,  min(Transit_Passengers) FROM airport", "query_toks": ["SELECT", "max", "(", "Transit_Passengers", ")", ",", "min", "(", "Transit_Passengers", ")", "FROM", "airport"], "query_toks_no_value": ["select", "max", "(", "transit_passengers", ")", ",", "min", "(", "transit_passengers", ")", "from", "airport"], "question": "What is the maximum and mininum number of transit passengers for all airports?", "question_toks": ["What", "is", "the", "maximum", "and", "mininum", "number", "of", "transit", "passengers", "for", "all", "airports", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 23, false], null]], [2, [0, [0, 23, false], null]]]], "union": null, "where": []}}, {"db_id": "aircraft", "query": "SELECT T1.Aircraft ,  T1.Description FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Total_Passengers  >  10000000", "query_toks": ["SELECT", "T1.Aircraft", ",", "T1.Description", "FROM", "aircraft", "AS", "T1", "JOIN", "airport_aircraft", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Aircraft_ID", "JOIN", "airport", "AS", "T3", "ON", "T2.Airport_ID", "=", "T3.Airport_ID", "WHERE", "T3.Total_Passengers", ">", "10000000"], "query_toks_no_value": ["select", "t1", ".", "aircraft", ",", "t1", ".", "description", "from", "aircraft", "as", "t1", "join", "airport_aircraft", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "aircraft_id", "join", "airport", "as", "t3", "on", "t2", ".", "airport_id", "=", "t3", ".", "airport_id", "where", "t3", ".", "total_passengers", ">", "value"], "question": "Please show the names and descriptions of aircrafts associated with airports that have a total number of passengers bigger than 10000000.", "question_toks": ["Please", "show", "the", "names", "and", "descriptions", "of", "aircrafts", "associated", "with", "airports", "that", "have", "a", "total", "number", "of", "passengers", "bigger", "than", "10000000", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 28, false], null]], "table_units": [["table_unit", 1], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 19, false], null], 10000000.0, null]]}}, {"db_id": "aircraft", "query": "SELECT T1.Aircraft ,  T1.Description FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Total_Passengers  >  10000000", "query_toks": ["SELECT", "T1.Aircraft", ",", "T1.Description", "FROM", "aircraft", "AS", "T1", "JOIN", "airport_aircraft", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Aircraft_ID", "JOIN", "airport", "AS", "T3", "ON", "T2.Airport_ID", "=", "T3.Airport_ID", "WHERE", "T3.Total_Passengers", ">", "10000000"], "query_toks_no_value": ["select", "t1", ".", "aircraft", ",", "t1", ".", "description", "from", "aircraft", "as", "t1", "join", "airport_aircraft", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "aircraft_id", "join", "airport", "as", "t3", "on", "t2", ".", "airport_id", "=", "t3", ".", "airport_id", "where", "t3", ".", "total_passengers", ">", "value"], "question": "What are the names and descriptions of aircrafts associated with an airport that has more total passengers than 10000000?", "question_toks": ["What", "are", "the", "names", "and", "descriptions", "of", "aircrafts", "associated", "with", "an", "airport", "that", "has", "more", "total", "passengers", "than", "10000000", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 28, false], null]], "table_units": [["table_unit", 1], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 19, false], null], 10000000.0, null]]}}, {"db_id": "aircraft", "query": "SELECT T2.Location ,  T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft", "query_toks": ["SELECT", "T2.Location", ",", "T1.Aircraft", "FROM", "aircraft", "AS", "T1", "JOIN", "MATCH", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Winning_Aircraft"], "query_toks_no_value": ["select", "t2", ".", "location", ",", "t1", ".", "aircraft", "from", "aircraft", "as", "t1", "join", "match", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "winning_aircraft"], "question": "Please list the location and the winning aircraft name.", "question_toks": ["Please", "list", "the", "location", "and", "the", "winning", "aircraft", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 16, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "aircraft", "query": "SELECT T2.Location ,  T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft", "query_toks": ["SELECT", "T2.Location", ",", "T1.Aircraft", "FROM", "aircraft", "AS", "T1", "JOIN", "MATCH", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Winning_Aircraft"], "query_toks_no_value": ["select", "t2", ".", "location", ",", "t1", ".", "aircraft", "from", "aircraft", "as", "t1", "join", "match", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "winning_aircraft"], "question": "What is the location and name of the winning aircraft?", "question_toks": ["What", "is", "the", "location", "and", "name", "of", "the", "winning", "aircraft", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 16, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "aircraft", "query": "SELECT T1.Aircraft ,  COUNT(*) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft", "query_toks": ["SELECT", "T1.Aircraft", ",", "COUNT", "(", "*", ")", "FROM", "aircraft", "AS", "T1", "JOIN", "MATCH", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Winning_Aircraft", "GROUP", "BY", "T2.Winning_Aircraft"], "query_toks_no_value": ["select", "t1", ".", "aircraft", ",", "count", "(", "*", ")", "from", "aircraft", "as", "t1", "join", "match", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "winning_aircraft", "group", "by", "t2", ".", "winning_aircraft"], "question": "List the names of aircrafts and the number of times it won matches.", "question_toks": ["List", "the", "names", "of", "aircrafts", "and", "the", "number", "of", "times", "it", "won", "matches", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 16, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 16, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "aircraft", "query": "SELECT T1.Aircraft ,  COUNT(*) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft", "query_toks": ["SELECT", "T1.Aircraft", ",", "COUNT", "(", "*", ")", "FROM", "aircraft", "AS", "T1", "JOIN", "MATCH", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Winning_Aircraft", "GROUP", "BY", "T2.Winning_Aircraft"], "query_toks_no_value": ["select", "t1", ".", "aircraft", ",", "count", "(", "*", ")", "from", "aircraft", "as", "t1", "join", "match", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "winning_aircraft", "group", "by", "t2", ".", "winning_aircraft"], "question": "For each aircraft that has won an award, what is its name and how many time has it won?", "question_toks": ["For", "each", "aircraft", "that", "has", "won", "an", "award", ",", "what", "is", "its", "name", "and", "how", "many", "time", "has", "it", "won", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 16, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 16, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "aircraft", "query": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot WHERE t1.age  <  30 GROUP BY t2.winning_pilot ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "t1.name", ",", "t1.age", "FROM", "pilot", "AS", "t1", "JOIN", "MATCH", "AS", "t2", "ON", "t1.pilot_id", "=", "t2.winning_pilot", "WHERE", "t1.age", "<", "30", "GROUP", "BY", "t2.winning_pilot", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "age", "from", "pilot", "as", "t1", "join", "match", "as", "t2", "on", "t1", ".", "pilot_id", "=", "t2", ".", "winning_pilot", "where", "t1", ".", "age", "<", "value", "group", "by", "t2", ".", "winning_pilot", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "find the name and age of the pilot who has won the most number of times among the pilots who are younger than 30.", "question_toks": ["find", "the", "name", "and", "age", "of", "the", "pilot", "who", "has", "won", "the", "most", "number", "of", "times", "among", "the", "pilots", "who", "are", "younger", "than", "30", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 3, false], null], 30.0, null]]}}, {"db_id": "aircraft", "query": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot WHERE t1.age  <  30 GROUP BY t2.winning_pilot ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "t1.name", ",", "t1.age", "FROM", "pilot", "AS", "t1", "JOIN", "MATCH", "AS", "t2", "ON", "t1.pilot_id", "=", "t2.winning_pilot", "WHERE", "t1.age", "<", "30", "GROUP", "BY", "t2.winning_pilot", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "age", "from", "pilot", "as", "t1", "join", "match", "as", "t2", "on", "t1", ".", "pilot_id", "=", "t2", ".", "winning_pilot", "where", "t1", ".", "age", "<", "value", "group", "by", "t2", ".", "winning_pilot", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name and age of the pilot younger than 30 who has won the most number of times?", "question_toks": ["What", "is", "the", "name", "and", "age", "of", "the", "pilot", "younger", "than", "30", "who", "has", "won", "the", "most", "number", "of", "times", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 3, false], null], 30.0, null]]}}, {"db_id": "aircraft", "query": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot ORDER BY t1.age LIMIT 1", "query_toks": ["SELECT", "t1.name", ",", "t1.age", "FROM", "pilot", "AS", "t1", "JOIN", "MATCH", "AS", "t2", "ON", "t1.pilot_id", "=", "t2.winning_pilot", "ORDER", "BY", "t1.age", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "age", "from", "pilot", "as", "t1", "join", "match", "as", "t2", "on", "t1", ".", "pilot_id", "=", "t2", ".", "winning_pilot", "order", "by", "t1", ".", "age", "limit", "value"], "question": "what is the name and age of the youngest winning pilot?", "question_toks": ["what", "is", "the", "name", "and", "age", "of", "the", "youngest", "winning", "pilot", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 3, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "aircraft", "query": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot ORDER BY t1.age LIMIT 1", "query_toks": ["SELECT", "t1.name", ",", "t1.age", "FROM", "pilot", "AS", "t1", "JOIN", "MATCH", "AS", "t2", "ON", "t1.pilot_id", "=", "t2.winning_pilot", "ORDER", "BY", "t1.age", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "age", "from", "pilot", "as", "t1", "join", "match", "as", "t2", "on", "t1", ".", "pilot_id", "=", "t2", ".", "winning_pilot", "order", "by", "t1", ".", "age", "limit", "value"], "question": "How old is the youngest winning pilot and what is their name?", "question_toks": ["How", "old", "is", "the", "youngest", "winning", "pilot", "and", "what", "is", "their", "name", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 3, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "local_govt_and_lot", "query": "SELECT T1.property_id ,  count(*) FROM properties AS T1 JOIN residents AS T2 ON T1.property_id  =  T2.property_id GROUP BY T1.property_id", "query_toks": ["SELECT", "T1.property_id", ",", "count", "(", "*", ")", "FROM", "properties", "AS", "T1", "JOIN", "residents", "AS", "T2", "ON", "T1.property_id", "=", "T2.property_id", "GROUP", "BY", "T1.property_id"], "query_toks_no_value": ["select", "t1", ".", "property_id", ",", "count", "(", "*", ")", "from", "properties", "as", "t1", "join", "residents", "as", "t2", "on", "t1", ".", "property_id", "=", "t2", ".", "property_id", "group", "by", "t1", ".", "property_id"], "question": "How many residents does each property have? List property id and resident count.", "question_toks": ["How", "many", "residents", "does", "each", "property", "have", "?", "List", "property", "id", "and", "resident", "count", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "local_govt_and_lot", "query": "SELECT T1.resident_id ,  T1.other_details ,  count(*) FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id  =  T2.resident_id GROUP BY T1.resident_id ORDER BY count(*) DESC", "query_toks": ["SELECT", "T1.resident_id", ",", "T1.other_details", ",", "count", "(", "*", ")", "FROM", "Residents", "AS", "T1", "JOIN", "Residents_Services", "AS", "T2", "ON", "T1.resident_id", "=", "T2.resident_id", "GROUP", "BY", "T1.resident_id", "ORDER", "BY", "count", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "t1", ".", "resident_id", ",", "t1", ".", "other_details", ",", "count", "(", "*", ")", "from", "residents", "as", "t1", "join", "residents_services", "as", "t2", "on", "t1", ".", "resident_id", "=", "t2", ".", "resident_id", "group", "by", "t1", ".", "resident_id", "order", "by", "count", "(", "*", ")", "desc"], "question": "How many services has each resident requested? List the resident id, details, and the count in descending order of the count.", "question_toks": ["How", "many", "services", "has", "each", "resident", "requested", "?", "List", "the", "resident", "id", ",", "details", ",", "and", "the", "count", "in", "descending", "order", "of", "the", "count", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 19, false], null]], "table_units": [["table_unit", 2], ["table_unit", 5]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 11, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "local_govt_and_lot", "query": "SELECT T1.service_id ,  T1.service_details ,  count(*) FROM Services AS T1 JOIN Residents_Services AS T2 ON T1.service_id  =  T2.service_id GROUP BY T1.service_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.service_id", ",", "T1.service_details", ",", "count", "(", "*", ")", "FROM", "Services", "AS", "T1", "JOIN", "Residents_Services", "AS", "T2", "ON", "T1.service_id", "=", "T2.service_id", "GROUP", "BY", "T1.service_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "service_id", ",", "t1", ".", "service_details", ",", "count", "(", "*", ")", "from", "services", "as", "t1", "join", "residents_services", "as", "t2", "on", "t1", ".", "service_id", "=", "t2", ".", "service_id", "group", "by", "t1", ".", "service_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the maximum number that a certain service is provided? List the service id, details and number.", "question_toks": ["What", "is", "the", "maximum", "number", "that", "a", "certain", "service", "is", "provided", "?", "List", "the", "service", "id", ",", "details", "and", "number", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 20, false], null]], "table_units": [["table_unit", 4], ["table_unit", 5]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 18, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "local_govt_and_lot", "query": "SELECT T1.thing_id ,  T1.type_of_Thing_Code ,  T2.organization_details FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id  =  T2.organization_id", "query_toks": ["SELECT", "T1.thing_id", ",", "T1.type_of_Thing_Code", ",", "T2.organization_details", "FROM", "Things", "AS", "T1", "JOIN", "Organizations", "AS", "T2", "ON", "T1.organization_id", "=", "T2.organization_id"], "query_toks_no_value": ["select", "t1", ".", "thing_id", ",", "t1", ".", "type_of_thing_code", ",", "t2", ".", "organization_details", "from", "things", "as", "t1", "join", "organizations", "as", "t2", "on", "t1", ".", "organization_id", "=", "t2", ".", "organization_id"], "question": "List the id and type of each thing, and the details of the organization that owns it.", "question_toks": ["List", "the", "id", "and", "type", "of", "each", "thing", ",", "and", "the", "details", "of", "the", "organization", "that", "owns", "it", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 27, false], null], [0, 12, false], null]], "table_units": [["table_unit", 6], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 28, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "local_govt_and_lot", "query": "SELECT T1.customer_id ,  T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  3", "query_toks": ["SELECT", "T1.customer_id", ",", "T1.customer_details", "FROM", "Customers", "AS", "T1", "JOIN", "Customer_Events", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id", "HAVING", "count", "(", "*", ")", ">", "=", "3"], "query_toks_no_value": ["select", "t1", ".", "customer_id", ",", "t1", ".", "customer_details", "from", "customers", "as", "t1", "join", "customer_events", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the id and details of the customers who have at least 3 events?", "question_toks": ["What", "are", "the", "id", "and", "details", "of", "the", "customers", "who", "have", "at", "least", "3", "events", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 32, false], null]], "table_units": [["table_unit", 0], ["table_unit", 7]]}, "groupBy": [[0, 1, false]], "having": [[false, 5, [0, [3, 0, false], null], 3.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "local_govt_and_lot", "query": "SELECT T2.date_moved_in ,  T1.customer_id ,  T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id  =  T2.customer_id", "query_toks": ["SELECT", "T2.date_moved_in", ",", "T1.customer_id", ",", "T1.customer_details", "FROM", "Customers", "AS", "T1", "JOIN", "Customer_Events", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id"], "query_toks_no_value": ["select", "t2", ".", "date_moved_in", ",", "t1", ".", "customer_id", ",", "t1", ".", "customer_details", "from", "customers", "as", "t1", "join", "customer_events", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id"], "question": "What is each customer's move in date, and the corresponding customer id and details?", "question_toks": ["What", "is", "each", "customer", "'s", "move", "in", "date", ",", "and", "the", "corresponding", "customer", "id", "and", "details", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 32, false], null]], "table_units": [["table_unit", 0], ["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "local_govt_and_lot", "query": "SELECT T1.Customer_Event_ID  ,  T1.property_id FROM Customer_Events AS T1 JOIN Customer_Event_Notes AS T2 ON T1.Customer_Event_ID  =  T2.Customer_Event_ID GROUP BY T1.customer_event_id HAVING count(*) BETWEEN 1 AND 3", "query_toks": ["SELECT", "T1.Customer_Event_ID", ",", "T1.property_id", "FROM", "Customer_Events", "AS", "T1", "JOIN", "Customer_Event_Notes", "AS", "T2", "ON", "T1.Customer_Event_ID", "=", "T2.Customer_Event_ID", "GROUP", "BY", "T1.customer_event_id", "HAVING", "count", "(", "*", ")", "BETWEEN", "1", "AND", "3"], "query_toks_no_value": ["select", "t1", ".", "customer_event_id", ",", "t1", ".", "property_id", "from", "customer_events", "as", "t1", "join", "customer_event_notes", "as", "t2", "on", "t1", ".", "customer_event_id", "=", "t2", ".", "customer_event_id", "group", "by", "t1", ".", "customer_event_id", "having", "count", "(", "*", ")", "between", "value", "and", "value"], "question": "Which events have the number of notes between one and three? List the event id and the property id.", "question_toks": ["Which", "events", "have", "the", "number", "of", "notes", "between", "one", "and", "three", "?", "List", "the", "event", "id", "and", "the", "property", "id", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 31, false], null], [0, 38, false], null]], "table_units": [["table_unit", 7], ["table_unit", 8]]}, "groupBy": [[0, 31, false]], "having": [[false, 1, [0, [3, 0, false], null], 1.0, 3.0]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 31, false], null]], [0, [0, [0, 34, false], null]]]], "union": null, "where": []}}, {"db_id": "local_govt_and_lot", "query": "SELECT DISTINCT T2.thing_id ,  T2.Type_of_Thing_Code FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.Status_of_Thing_Code  =  'Close' OR T1.Date_and_Date  <  '2017-06-19 02:59:21'", "query_toks": ["SELECT", "DISTINCT", "T2.thing_id", ",", "T2.Type_of_Thing_Code", "FROM", "Timed_Status_of_Things", "AS", "T1", "JOIN", "Things", "AS", "T2", "ON", "T1.thing_id", "=", "T2.thing_id", "WHERE", "T1.Status_of_Thing_Code", "=", "'Close", "'", "OR", "T1.Date_and_Date", "<", "'2017-06-19", "02:59:21", "'"], "query_toks_no_value": ["select", "distinct", "t2", ".", "thing_id", ",", "t2", ".", "type_of_thing_code", "from", "timed_status_of_things", "as", "t1", "join", "things", "as", "t2", "on", "t1", ".", "thing_id", "=", "t2", ".", "thing_id", "where", "t1", ".", "status_of_thing_code", "=", "value", "or", "t1", ".", "date_and_date", "<", "value"], "question": "What are the distinct id and type of the thing that has the status 'Close' or has a status record before the date '2017-06-19 02:59:21'", "question_toks": ["What", "are", "the", "distinct", "id", "and", "type", "of", "the", "thing", "that", "has", "the", "status", "'Close", "'", "or", "has", "a", "status", "record", "before", "the", "date", "'2017-06-19", "02:59:21", "'"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 43, false], null], [0, 26, false], null]], "table_units": [["table_unit", 9], ["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 26, false], null]], [0, [0, [0, 28, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 45, false], null], "\"Close\"", null], "or", [false, 4, [0, [0, 44, false], null], "\"2017-06-19 02:59:21\"", null]]}}, {"db_id": "local_govt_and_lot", "query": "SELECT customer_event_id ,  date_moved_in ,  property_id FROM customer_events", "query_toks": ["SELECT", "customer_event_id", ",", "date_moved_in", ",", "property_id", "FROM", "customer_events"], "query_toks_no_value": ["select", "customer_event_id", ",", "date_moved_in", ",", "property_id", "from", "customer_events"], "question": "List the customer event id and the corresponding move in date and property id.", "question_toks": ["List", "the", "customer", "event", "id", "and", "the", "corresponding", "move", "in", "date", "and", "property", "id", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 7]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 31, false], null]], [0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]]]], "union": null, "where": []}}, {"db_id": "school_player", "query": "SELECT T1.Team ,  T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID", "query_toks": ["SELECT", "T1.Team", ",", "T2.Location", "FROM", "player", "AS", "T1", "JOIN", "school", "AS", "T2", "ON", "T1.School_ID", "=", "T2.School_ID"], "query_toks_no_value": ["select", "t1", ".", "team", ",", "t2", ".", "location", "from", "player", "as", "t1", "join", "school", "as", "t2", "on", "t1", ".", "school_id", "=", "t2", ".", "school_id"], "question": "For each player, show the team and the location of school they belong to.", "question_toks": ["For", "each", "player", ",", "show", "the", "team", "and", "the", "location", "of", "school", "they", "belong", "to", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 26, false], null], [0, 1, false], null]], "table_units": [["table_unit", 3], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "school_player", "query": "SELECT T1.Team ,  T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID", "query_toks": ["SELECT", "T1.Team", ",", "T2.Location", "FROM", "player", "AS", "T1", "JOIN", "school", "AS", "T2", "ON", "T1.School_ID", "=", "T2.School_ID"], "query_toks_no_value": ["select", "t1", ".", "team", ",", "t2", ".", "location", "from", "player", "as", "t1", "join", "school", "as", "t2", "on", "t1", ".", "school_id", "=", "t2", ".", "school_id"], "question": "What are the team and the location of school each player belongs to?", "question_toks": ["What", "are", "the", "team", "and", "the", "location", "of", "school", "each", "player", "belongs", "to", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 26, false], null], [0, 1, false], null]], "table_units": [["table_unit", 3], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "school_player", "query": "SELECT T1.Location ,  T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID  =  T2.School_ID", "query_toks": ["SELECT", "T1.Location", ",", "T2.Nickname", "FROM", "school", "AS", "T1", "JOIN", "school_details", "AS", "T2", "ON", "T1.School_ID", "=", "T2.School_ID"], "query_toks_no_value": ["select", "t1", ".", "location", ",", "t2", ".", "nickname", "from", "school", "as", "t1", "join", "school_details", "as", "t2", "on", "t1", ".", "school_id", "=", "t2", ".", "school_id"], "question": "Show locations and nicknames of schools.", "question_toks": ["Show", "locations", "and", "nicknames", "of", "schools", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 11, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "school_player", "query": "SELECT T1.Location ,  T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID  =  T2.School_ID", "query_toks": ["SELECT", "T1.Location", ",", "T2.Nickname", "FROM", "school", "AS", "T1", "JOIN", "school_details", "AS", "T2", "ON", "T1.School_ID", "=", "T2.School_ID"], "query_toks_no_value": ["select", "t1", ".", "location", ",", "t2", ".", "nickname", "from", "school", "as", "t1", "join", "school_details", "as", "t2", "on", "t1", ".", "school_id", "=", "t2", ".", "school_id"], "question": "What are the location and nickname of each school?", "question_toks": ["What", "are", "the", "location", "and", "nickname", "of", "each", "school", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 11, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "school_player", "query": "SELECT Denomination ,  COUNT(*) FROM school GROUP BY Denomination", "query_toks": ["SELECT", "Denomination", ",", "COUNT", "(", "*", ")", "FROM", "school", "GROUP", "BY", "Denomination"], "query_toks_no_value": ["select", "denomination", ",", "count", "(", "*", ")", "from", "school", "group", "by", "denomination"], "question": "Please show different denominations and the corresponding number of schools.", "question_toks": ["Please", "show", "different", "denominations", "and", "the", "corresponding", "number", "of", "schools", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "school_player", "query": "SELECT Denomination ,  COUNT(*) FROM school GROUP BY Denomination", "query_toks": ["SELECT", "Denomination", ",", "COUNT", "(", "*", ")", "FROM", "school", "GROUP", "BY", "Denomination"], "query_toks_no_value": ["select", "denomination", ",", "count", "(", "*", ")", "from", "school", "group", "by", "denomination"], "question": "For each denomination, return the denomination and the count of schools with that denomination.", "question_toks": ["For", "each", "denomination", ",", "return", "the", "denomination", "and", "the", "count", "of", "schools", "with", "that", "denomination", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "school_player", "query": "SELECT Denomination ,  COUNT(*) FROM school GROUP BY Denomination ORDER BY COUNT(*) DESC", "query_toks": ["SELECT", "Denomination", ",", "COUNT", "(", "*", ")", "FROM", "school", "GROUP", "BY", "Denomination", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "denomination", ",", "count", "(", "*", ")", "from", "school", "group", "by", "denomination", "order", "by", "count", "(", "*", ")", "desc"], "question": "Please show different denominations and the corresponding number of schools in descending order.", "question_toks": ["Please", "show", "different", "denominations", "and", "the", "corresponding", "number", "of", "schools", "in", "descending", "order", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "school_player", "query": "SELECT Denomination ,  COUNT(*) FROM school GROUP BY Denomination ORDER BY COUNT(*) DESC", "query_toks": ["SELECT", "Denomination", ",", "COUNT", "(", "*", ")", "FROM", "school", "GROUP", "BY", "Denomination", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "denomination", ",", "count", "(", "*", ")", "from", "school", "group", "by", "denomination", "order", "by", "count", "(", "*", ")", "desc"], "question": "Order denominations in descending order of the count of schools with the denomination. Return each denomination with the count of schools.", "question_toks": ["Order", "denominations", "in", "descending", "order", "of", "the", "count", "of", "schools", "with", "the", "denomination", ".", "Return", "each", "denomination", "with", "the", "count", "of", "schools", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "store_product", "query": "SELECT District_name ,  City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000", "query_toks": ["SELECT", "District_name", ",", "City_Population", "FROM", "district", "WHERE", "City_Population", "BETWEEN", "200000", "AND", "2000000"], "query_toks_no_value": ["select", "district_name", ",", "city_population", "from", "district", "where", "city_population", "between", "value", "and", "value"], "question": "Find the name and population of district with population between 200000 and 2000000", "question_toks": ["Find", "the", "name", "and", "population", "of", "district", "with", "population", "between", "200000", "and", "2000000"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": [[false, 1, [0, [0, 17, false], null], 200000.0, 2000000.0]]}}, {"db_id": "store_product", "query": "SELECT District_name ,  City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000", "query_toks": ["SELECT", "District_name", ",", "City_Population", "FROM", "district", "WHERE", "City_Population", "BETWEEN", "200000", "AND", "2000000"], "query_toks_no_value": ["select", "district_name", ",", "city_population", "from", "district", "where", "city_population", "between", "value", "and", "value"], "question": "What are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?", "question_toks": ["What", "are", "the", "district", "names", "and", "city", "populations", "for", "all", "districts", "that", "between", "200,000", "and", "2,000,000", "residents", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": [[false, 1, [0, [0, 17, false], null], 200000.0, 2000000.0]]}}, {"db_id": "store_product", "query": "SELECT TYPE ,  count(*) FROM store GROUP BY TYPE", "query_toks": ["SELECT", "TYPE", ",", "count", "(", "*", ")", "FROM", "store", "GROUP", "BY", "TYPE"], "query_toks_no_value": ["select", "type", ",", "count", "(", "*", ")", "from", "store", "group", "by", "type"], "question": "Find all types of store and number of them.", "question_toks": ["Find", "all", "types", "of", "store", "and", "number", "of", "them", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "store_product", "query": "SELECT TYPE ,  count(*) FROM store GROUP BY TYPE", "query_toks": ["SELECT", "TYPE", ",", "count", "(", "*", ")", "FROM", "store", "GROUP", "BY", "TYPE"], "query_toks_no_value": ["select", "type", ",", "count", "(", "*", ")", "from", "store", "group", "by", "type"], "question": "For each type of store, how many of them are there?", "question_toks": ["For", "each", "type", "of", "store", ",", "how", "many", "of", "them", "are", "there", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "store_product", "query": "SELECT t3.headquartered_city ,  count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city", "query_toks": ["SELECT", "t3.headquartered_city", ",", "count", "(", "*", ")", "FROM", "store", "AS", "t1", "JOIN", "store_district", "AS", "t2", "ON", "t1.store_id", "=", "t2.store_id", "JOIN", "district", "AS", "t3", "ON", "t2.district_id", "=", "t3.district_id", "GROUP", "BY", "t3.headquartered_city"], "query_toks_no_value": ["select", "t3", ".", "headquartered_city", ",", "count", "(", "*", ")", "from", "store", "as", "t1", "join", "store_district", "as", "t2", "on", "t1", ".", "store_id", "=", "t2", ".", "store_id", "join", "district", "as", "t3", "on", "t2", ".", "district_id", "=", "t3", ".", "district_id", "group", "by", "t3", ".", "headquartered_city"], "question": "Find the number of stores in each city.", "question_toks": ["Find", "the", "number", "of", "stores", "in", "each", "city", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 21, false], null]], "table_units": [["table_unit", 1], ["table_unit", 4]]}, "groupBy": [[0, 16, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "store_product", "query": "SELECT t3.headquartered_city ,  count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city", "query_toks": ["SELECT", "t3.headquartered_city", ",", "count", "(", "*", ")", "FROM", "store", "AS", "t1", "JOIN", "store_district", "AS", "t2", "ON", "t1.store_id", "=", "t2.store_id", "JOIN", "district", "AS", "t3", "ON", "t2.district_id", "=", "t3.district_id", "GROUP", "BY", "t3.headquartered_city"], "query_toks_no_value": ["select", "t3", ".", "headquartered_city", ",", "count", "(", "*", ")", "from", "store", "as", "t1", "join", "store_district", "as", "t2", "on", "t1", ".", "store_id", "=", "t2", ".", "store_id", "join", "district", "as", "t3", "on", "t2", ".", "district_id", "=", "t3", ".", "district_id", "group", "by", "t3", ".", "headquartered_city"], "question": "How many stores are headquarted in each city?", "question_toks": ["How", "many", "stores", "are", "headquarted", "in", "each", "city", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 21, false], null]], "table_units": [["table_unit", 1], ["table_unit", 4]]}, "groupBy": [[0, 16, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "soccer_2", "query": "SELECT pName ,  HS FROM Player WHERE HS  <  1500", "query_toks": ["SELECT", "pName", ",", "HS", "FROM", "Player", "WHERE", "HS", "<", "1500"], "query_toks_no_value": ["select", "pname", ",", "hs", "from", "player", "where", "hs", "<", "value"], "question": "Find the name and training hours of players whose hours are below 1500.", "question_toks": ["Find", "the", "name", "and", "training", "hours", "of", "players", "whose", "hours", "are", "below", "1500", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 7, false], null], 1500.0, null]]}}, {"db_id": "soccer_2", "query": "SELECT pName ,  HS FROM Player WHERE HS  <  1500", "query_toks": ["SELECT", "pName", ",", "HS", "FROM", "Player", "WHERE", "HS", "<", "1500"], "query_toks_no_value": ["select", "pname", ",", "hs", "from", "player", "where", "hs", "<", "value"], "question": "What are the names and number of hours spent training for each player who trains for less than 1500 hours?", "question_toks": ["What", "are", "the", "names", "and", "number", "of", "hours", "spent", "training", "for", "each", "player", "who", "trains", "for", "less", "than", "1500", "hours", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 7, false], null], 1500.0, null]]}}, {"db_id": "soccer_2", "query": "SELECT avg(HS) ,  max(HS) ,  min(HS) FROM Player", "query_toks": ["SELECT", "avg", "(", "HS", ")", ",", "max", "(", "HS", ")", ",", "min", "(", "HS", ")", "FROM", "Player"], "query_toks_no_value": ["select", "avg", "(", "hs", ")", ",", "max", "(", "hs", ")", ",", "min", "(", "hs", ")", "from", "player"], "question": "Find the max, average and min training hours of all players.", "question_toks": ["Find", "the", "max", ",", "average", "and", "min", "training", "hours", "of", "all", "players", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 7, false], null]], [1, [0, [0, 7, false], null]], [2, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "soccer_2", "query": "SELECT avg(HS) ,  max(HS) ,  min(HS) FROM Player", "query_toks": ["SELECT", "avg", "(", "HS", ")", ",", "max", "(", "HS", ")", ",", "min", "(", "HS", ")", "FROM", "Player"], "query_toks_no_value": ["select", "avg", "(", "hs", ")", ",", "max", "(", "hs", ")", ",", "min", "(", "hs", ")", "from", "player"], "question": "What is the average, maximum, and minimum for the number of hours spent training?", "question_toks": ["What", "is", "the", "average", ",", "maximum", ",", "and", "minimum", "for", "the", "number", "of", "hours", "spent", "training", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 7, false], null]], [1, [0, [0, 7, false], null]], [2, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "soccer_2", "query": "SELECT cName ,  enr FROM College WHERE enr  >  10000 AND state = \"LA\"", "query_toks": ["SELECT", "cName", ",", "enr", "FROM", "College", "WHERE", "enr", ">", "10000", "AND", "state", "=", "``", "LA", "''"], "query_toks_no_value": ["select", "cname", ",", "enr", "from", "college", "where", "enr", ">", "value", "and", "state", "=", "value"], "question": "Find the name, enrollment of the colleges whose size is bigger than 10000 and location is in state LA.", "question_toks": ["Find", "the", "name", ",", "enrollment", "of", "the", "colleges", "whose", "size", "is", "bigger", "than", "10000", "and", "location", "is", "in", "state", "LA", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 3, false], null], 10000.0, null], "and", [false, 2, [0, [0, 2, false], null], "\"LA\"", null]]}}, {"db_id": "soccer_2", "query": "SELECT cName ,  enr FROM College WHERE enr  >  10000 AND state = \"LA\"", "query_toks": ["SELECT", "cName", ",", "enr", "FROM", "College", "WHERE", "enr", ">", "10000", "AND", "state", "=", "``", "LA", "''"], "query_toks_no_value": ["select", "cname", ",", "enr", "from", "college", "where", "enr", ">", "value", "and", "state", "=", "value"], "question": "What are the names and enrollment numbers for colleges that have more than 10000 enrolled and are located in Louisiana?", "question_toks": ["What", "are", "the", "names", "and", "enrollment", "numbers", "for", "colleges", "that", "have", "more", "than", "10000", "enrolled", "and", "are", "located", "in", "Louisiana", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 3, false], null], 10000.0, null], "and", [false, 2, [0, [0, 2, false], null], "\"LA\"", null]]}}, {"db_id": "soccer_2", "query": "SELECT count(*) ,  cName FROM tryout GROUP BY cName ORDER BY count(*) DESC", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "cName", "FROM", "tryout", "GROUP", "BY", "cName", "ORDER", "BY", "count", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "cname", "from", "tryout", "group", "by", "cname", "order", "by", "count", "(", "*", ")", "desc"], "question": "Find the number of students who participate in the tryout for each college ordered by descending count.", "question_toks": ["Find", "the", "number", "of", "students", "who", "participate", "in", "the", "tryout", "for", "each", "college", "ordered", "by", "descending", "count", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "soccer_2", "query": "SELECT count(*) ,  cName FROM tryout GROUP BY cName ORDER BY count(*) DESC", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "cName", "FROM", "tryout", "GROUP", "BY", "cName", "ORDER", "BY", "count", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "cname", "from", "tryout", "group", "by", "cname", "order", "by", "count", "(", "*", ")", "desc"], "question": "How many students participated in tryouts for each college by descennding count?", "question_toks": ["How", "many", "students", "participated", "in", "tryouts", "for", "each", "college", "by", "descennding", "count", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "soccer_2", "query": "SELECT min(T2.HS) ,   T1.pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID GROUP BY T1.pPos", "query_toks": ["SELECT", "min", "(", "T2.HS", ")", ",", "T1.pPos", "FROM", "tryout", "AS", "T1", "JOIN", "player", "AS", "T2", "ON", "T1.pID", "=", "T2.pID", "GROUP", "BY", "T1.pPos"], "query_toks_no_value": ["select", "min", "(", "t2", ".", "hs", ")", ",", "t1", ".", "ppos", "from", "tryout", "as", "t1", "join", "player", "as", "t2", "on", "t1", ".", "pid", "=", "t2", ".", "pid", "group", "by", "t1", ".", "ppos"], "question": "What is minimum hours of the students playing in different position?", "question_toks": ["What", "is", "minimum", "hours", "of", "the", "students", "playing", "in", "different", "position", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 4, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 7, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "soccer_2", "query": "SELECT min(T2.HS) ,   T1.pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID GROUP BY T1.pPos", "query_toks": ["SELECT", "min", "(", "T2.HS", ")", ",", "T1.pPos", "FROM", "tryout", "AS", "T1", "JOIN", "player", "AS", "T2", "ON", "T1.pID", "=", "T2.pID", "GROUP", "BY", "T1.pPos"], "query_toks_no_value": ["select", "min", "(", "t2", ".", "hs", ")", ",", "t1", ".", "ppos", "from", "tryout", "as", "t1", "join", "player", "as", "t2", "on", "t1", ".", "pid", "=", "t2", ".", "pid", "group", "by", "t1", ".", "ppos"], "question": "For each position, what is the minimum time students spent practicing?", "question_toks": ["For", "each", "position", ",", "what", "is", "the", "minimum", "time", "students", "spent", "practicing", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 4, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 7, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "soccer_2", "query": "SELECT cName ,  state ,  min(enr) FROM college GROUP BY state", "query_toks": ["SELECT", "cName", ",", "state", ",", "min", "(", "enr", ")", "FROM", "college", "GROUP", "BY", "state"], "query_toks_no_value": ["select", "cname", ",", "state", ",", "min", "(", "enr", ")", "from", "college", "group", "by", "state"], "question": "What is the name of school that has the smallest enrollment in each state?", "question_toks": ["What", "is", "the", "name", "of", "school", "that", "has", "the", "smallest", "enrollment", "in", "each", "state", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [2, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "soccer_2", "query": "SELECT cName ,  state ,  min(enr) FROM college GROUP BY state", "query_toks": ["SELECT", "cName", ",", "state", ",", "min", "(", "enr", ")", "FROM", "college", "GROUP", "BY", "state"], "query_toks_no_value": ["select", "cname", ",", "state", ",", "min", "(", "enr", ")", "from", "college", "group", "by", "state"], "question": "What is the name of the school with smallest enrollment size per state?", "question_toks": ["What", "is", "the", "name", "of", "the", "school", "with", "smallest", "enrollment", "size", "per", "state", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [2, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "soccer_2", "query": "SELECT T1.pName ,  T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'", "query_toks": ["SELECT", "T1.pName", ",", "T2.cName", "FROM", "player", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.pID", "=", "T2.pID", "WHERE", "T2.decision", "=", "'yes", "'"], "query_toks_no_value": ["select", "t1", ".", "pname", ",", "t2", ".", "cname", "from", "player", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "pid", "=", "t2", ".", "pid", "where", "t2", ".", "decision", "=", "value"], "question": "Find the name and college of students whose decisions are yes in the tryout.", "question_toks": ["Find", "the", "name", "and", "college", "of", "students", "whose", "decisions", "are", "yes", "in", "the", "tryout", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 8, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"yes\"", null]]}}, {"db_id": "soccer_2", "query": "SELECT T1.pName ,  T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'", "query_toks": ["SELECT", "T1.pName", ",", "T2.cName", "FROM", "player", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.pID", "=", "T2.pID", "WHERE", "T2.decision", "=", "'yes", "'"], "query_toks_no_value": ["select", "t1", ".", "pname", ",", "t2", ".", "cname", "from", "player", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "pid", "=", "t2", ".", "pid", "where", "t2", ".", "decision", "=", "value"], "question": "What are the names of all the players who received a yes during tryouts, and also what are the names of their colleges?", "question_toks": ["What", "are", "the", "names", "of", "all", "the", "players", "who", "received", "a", "yes", "during", "tryouts", ",", "and", "also", "what", "are", "the", "names", "of", "their", "colleges", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 8, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"yes\"", null]]}}, {"db_id": "soccer_2", "query": "SELECT T1.pName ,  T1.HS FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'", "query_toks": ["SELECT", "T1.pName", ",", "T1.HS", "FROM", "player", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.pID", "=", "T2.pID", "WHERE", "T2.decision", "=", "'yes", "'"], "query_toks_no_value": ["select", "t1", ".", "pname", ",", "t1", ".", "hs", "from", "player", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "pid", "=", "t2", ".", "pid", "where", "t2", ".", "decision", "=", "value"], "question": "Find the name and hours of the students whose tryout decision is yes.", "question_toks": ["Find", "the", "name", "and", "hours", "of", "the", "students", "whose", "tryout", "decision", "is", "yes", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 8, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"yes\"", null]]}}, {"db_id": "soccer_2", "query": "SELECT T1.pName ,  T1.HS FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'", "query_toks": ["SELECT", "T1.pName", ",", "T1.HS", "FROM", "player", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.pID", "=", "T2.pID", "WHERE", "T2.decision", "=", "'yes", "'"], "query_toks_no_value": ["select", "t1", ".", "pname", ",", "t1", ".", "hs", "from", "player", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "pid", "=", "t2", ".", "pid", "where", "t2", ".", "decision", "=", "value"], "question": "What are the names and hours spent practicing of every student who received a yes at tryouts?", "question_toks": ["What", "are", "the", "names", "and", "hours", "spent", "practicing", "of", "every", "student", "who", "received", "a", "yes", "at", "tryouts", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 8, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"yes\"", null]]}}, {"db_id": "soccer_2", "query": "SELECT avg(T1.HS) ,  max(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'", "query_toks": ["SELECT", "avg", "(", "T1.HS", ")", ",", "max", "(", "T1.HS", ")", "FROM", "player", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.pID", "=", "T2.pID", "WHERE", "T2.decision", "=", "'yes", "'"], "query_toks_no_value": ["select", "avg", "(", "t1", ".", "hs", ")", ",", "max", "(", "t1", ".", "hs", ")", "from", "player", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "pid", "=", "t2", ".", "pid", "where", "t2", ".", "decision", "=", "value"], "question": "Find the average and maximum hours for the students whose tryout decision is yes.", "question_toks": ["Find", "the", "average", "and", "maximum", "hours", "for", "the", "students", "whose", "tryout", "decision", "is", "yes", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 8, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 7, false], null]], [1, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"yes\"", null]]}}, {"db_id": "soccer_2", "query": "SELECT avg(T1.HS) ,  max(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'", "query_toks": ["SELECT", "avg", "(", "T1.HS", ")", ",", "max", "(", "T1.HS", ")", "FROM", "player", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.pID", "=", "T2.pID", "WHERE", "T2.decision", "=", "'yes", "'"], "query_toks_no_value": ["select", "avg", "(", "t1", ".", "hs", ")", ",", "max", "(", "t1", ".", "hs", ")", "from", "player", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "pid", "=", "t2", ".", "pid", "where", "t2", ".", "decision", "=", "value"], "question": "What is the average and maximum number of hours students who made the team practiced?", "question_toks": ["What", "is", "the", "average", "and", "maximum", "number", "of", "hours", "students", "who", "made", "the", "team", "practiced", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 8, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 7, false], null]], [1, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"yes\"", null]]}}, {"db_id": "soccer_2", "query": "SELECT max(T1.HS) ,  pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T1.HS  >  1000 GROUP BY T2.pPos", "query_toks": ["SELECT", "max", "(", "T1.HS", ")", ",", "pPos", "FROM", "player", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.pID", "=", "T2.pID", "WHERE", "T1.HS", ">", "1000", "GROUP", "BY", "T2.pPos"], "query_toks_no_value": ["select", "max", "(", "t1", ".", "hs", ")", ",", "ppos", "from", "player", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "pid", "=", "t2", ".", "pid", "where", "t1", ".", "hs", ">", "value", "group", "by", "t2", ".", "ppos"], "question": "What is the maximum training hours for the students whose training hours is greater than 1000 in different positions?", "question_toks": ["What", "is", "the", "maximum", "training", "hours", "for", "the", "students", "whose", "training", "hours", "is", "greater", "than", "1000", "in", "different", "positions", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 8, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 7, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 7, false], null], 1000.0, null]]}}, {"db_id": "soccer_2", "query": "SELECT max(T1.HS) ,  pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T1.HS  >  1000 GROUP BY T2.pPos", "query_toks": ["SELECT", "max", "(", "T1.HS", ")", ",", "pPos", "FROM", "player", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.pID", "=", "T2.pID", "WHERE", "T1.HS", ">", "1000", "GROUP", "BY", "T2.pPos"], "query_toks_no_value": ["select", "max", "(", "t1", ".", "hs", ")", ",", "ppos", "from", "player", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "pid", "=", "t2", ".", "pid", "where", "t1", ".", "hs", ">", "value", "group", "by", "t2", ".", "ppos"], "question": "For each position, what is the maximum number of  hours for students who spent more than 1000 hours training?", "question_toks": ["For", "each", "position", ",", "what", "is", "the", "maximum", "number", "of", "hours", "for", "students", "who", "spent", "more", "than", "1000", "hours", "training", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 4, false], null], [0, 8, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 7, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 7, false], null], 1000.0, null]]}}, {"db_id": "soccer_2", "query": "SELECT DISTINCT T1.state ,  T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'", "query_toks": ["SELECT", "DISTINCT", "T1.state", ",", "T1.enr", "FROM", "college", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.cName", "=", "T2.cName", "WHERE", "T2.decision", "=", "'yes", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "state", ",", "t1", ".", "enr", "from", "college", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "cname", "=", "t2", ".", "cname", "where", "t2", ".", "decision", "=", "value"], "question": "What is the state and enrollment of the colleges where have any students who got accepted in the tryout decision.", "question_toks": ["What", "is", "the", "state", "and", "enrollment", "of", "the", "colleges", "where", "have", "any", "students", "who", "got", "accepted", "in", "the", "tryout", "decision", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"yes\"", null]]}}, {"db_id": "soccer_2", "query": "SELECT DISTINCT T1.state ,  T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'", "query_toks": ["SELECT", "DISTINCT", "T1.state", ",", "T1.enr", "FROM", "college", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.cName", "=", "T2.cName", "WHERE", "T2.decision", "=", "'yes", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "state", ",", "t1", ".", "enr", "from", "college", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "cname", "=", "t2", ".", "cname", "where", "t2", ".", "decision", "=", "value"], "question": "How many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges?", "question_toks": ["How", "many", "students", "are", "enrolled", "in", "colleges", "that", "have", "student", "accepted", "during", "tryouts", ",", "and", "in", "which", "states", "are", "those", "colleges", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"yes\"", null]]}}, {"db_id": "device", "query": "SELECT Shop_Name ,  LOCATION FROM shop ORDER BY Shop_Name ASC", "query_toks": ["SELECT", "Shop_Name", ",", "LOCATION", "FROM", "shop", "ORDER", "BY", "Shop_Name", "ASC"], "query_toks_no_value": ["select", "shop_name", ",", "location", "from", "shop", "order", "by", "shop_name", "asc"], "question": "What are the names and location of the shops in ascending alphabetical order of name.", "question_toks": ["What", "are", "the", "names", "and", "location", "of", "the", "shops", "in", "ascending", "alphabetical", "order", "of", "name", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 8, false], null]]], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "device", "query": "SELECT Shop_Name ,  LOCATION FROM shop ORDER BY Shop_Name ASC", "query_toks": ["SELECT", "Shop_Name", ",", "LOCATION", "FROM", "shop", "ORDER", "BY", "Shop_Name", "ASC"], "query_toks_no_value": ["select", "shop_name", ",", "location", "from", "shop", "order", "by", "shop_name", "asc"], "question": "Return the names and locations of shops, ordered by name in alphabetical order.", "question_toks": ["Return", "the", "names", "and", "locations", "of", "shops", ",", "ordered", "by", "name", "in", "alphabetical", "order", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 8, false], null]]], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "device", "query": "SELECT Open_Date ,  Open_Year FROM shop WHERE Shop_Name  =  \"Apple\"", "query_toks": ["SELECT", "Open_Date", ",", "Open_Year", "FROM", "shop", "WHERE", "Shop_Name", "=", "``", "Apple", "''"], "query_toks_no_value": ["select", "open_date", ",", "open_year", "from", "shop", "where", "shop_name", "=", "value"], "question": "List the open date of open year of the shop named \"Apple\".", "question_toks": ["List", "the", "open", "date", "of", "open", "year", "of", "the", "shop", "named", "``", "Apple", "''", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 8, false], null], "\"Apple\"", null]]}}, {"db_id": "device", "query": "SELECT Open_Date ,  Open_Year FROM shop WHERE Shop_Name  =  \"Apple\"", "query_toks": ["SELECT", "Open_Date", ",", "Open_Year", "FROM", "shop", "WHERE", "Shop_Name", "=", "``", "Apple", "''"], "query_toks_no_value": ["select", "open_date", ",", "open_year", "from", "shop", "where", "shop_name", "=", "value"], "question": "What are the open dates and years for the shop named Apple?", "question_toks": ["What", "are", "the", "open", "dates", "and", "years", "for", "the", "shop", "named", "Apple", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 8, false], null], "\"Apple\"", null]]}}, {"db_id": "device", "query": "SELECT T3.Shop_Name ,  T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID  =  T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID  =  T3.Shop_ID", "query_toks": ["SELECT", "T3.Shop_Name", ",", "T2.Carrier", "FROM", "stock", "AS", "T1", "JOIN", "device", "AS", "T2", "ON", "T1.Device_ID", "=", "T2.Device_ID", "JOIN", "shop", "AS", "T3", "ON", "T1.Shop_ID", "=", "T3.Shop_ID"], "query_toks_no_value": ["select", "t3", ".", "shop_name", ",", "t2", ".", "carrier", "from", "stock", "as", "t1", "join", "device", "as", "t2", "on", "t1", ".", "device_id", "=", "t2", ".", "device_id", "join", "shop", "as", "t3", "on", "t1", ".", "shop_id", "=", "t3", ".", "shop_id"], "question": "Show names of shops and the carriers of devices they have in stock.", "question_toks": ["Show", "names", "of", "shops", "and", "the", "carriers", "of", "devices", "they", "have", "in", "stock", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "device", "query": "SELECT T3.Shop_Name ,  T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID  =  T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID  =  T3.Shop_ID", "query_toks": ["SELECT", "T3.Shop_Name", ",", "T2.Carrier", "FROM", "stock", "AS", "T1", "JOIN", "device", "AS", "T2", "ON", "T1.Device_ID", "=", "T2.Device_ID", "JOIN", "shop", "AS", "T3", "ON", "T1.Shop_ID", "=", "T3.Shop_ID"], "query_toks_no_value": ["select", "t3", ".", "shop_name", ",", "t2", ".", "carrier", "from", "stock", "as", "t1", "join", "device", "as", "t2", "on", "t1", ".", "device_id", "=", "t2", ".", "device_id", "join", "shop", "as", "t3", "on", "t1", ".", "shop_id", "=", "t3", ".", "shop_id"], "question": "What are the names of device shops, and what are the carriers that they carry devices in stock for?", "question_toks": ["What", "are", "the", "names", "of", "device", "shops", ",", "and", "what", "are", "the", "carriers", "that", "they", "carry", "devices", "in", "stock", "for", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "device", "query": "SELECT Software_Platform ,  COUNT(*) FROM device GROUP BY Software_Platform", "query_toks": ["SELECT", "Software_Platform", ",", "COUNT", "(", "*", ")", "FROM", "device", "GROUP", "BY", "Software_Platform"], "query_toks_no_value": ["select", "software_platform", ",", "count", "(", "*", ")", "from", "device", "group", "by", "software_platform"], "question": "Please show different software platforms and the corresponding number of devices using each.", "question_toks": ["Please", "show", "different", "software", "platforms", "and", "the", "corresponding", "number", "of", "devices", "using", "each", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "device", "query": "SELECT Software_Platform ,  COUNT(*) FROM device GROUP BY Software_Platform", "query_toks": ["SELECT", "Software_Platform", ",", "COUNT", "(", "*", ")", "FROM", "device", "GROUP", "BY", "Software_Platform"], "query_toks_no_value": ["select", "software_platform", ",", "count", "(", "*", ")", "from", "device", "group", "by", "software_platform"], "question": "What are the different software platforms for devices, and how many devices have each?", "question_toks": ["What", "are", "the", "different", "software", "platforms", "for", "devices", ",", "and", "how", "many", "devices", "have", "each", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT Planned_Delivery_Date ,  Actual_Delivery_Date FROM BOOKINGS", "query_toks": ["SELECT", "Planned_Delivery_Date", ",", "Actual_Delivery_Date", "FROM", "BOOKINGS"], "query_toks_no_value": ["select", "planned_delivery_date", ",", "actual_delivery_date", "from", "bookings"], "question": "Show all the planned delivery dates and actual delivery dates of bookings.", "question_toks": ["Show", "all", "the", "planned", "delivery", "dates", "and", "actual", "delivery", "dates", "of", "bookings", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 10]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 60, false], null]], [0, [0, [0, 61, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT Planned_Delivery_Date ,  Actual_Delivery_Date FROM BOOKINGS", "query_toks": ["SELECT", "Planned_Delivery_Date", ",", "Actual_Delivery_Date", "FROM", "BOOKINGS"], "query_toks_no_value": ["select", "planned_delivery_date", ",", "actual_delivery_date", "from", "bookings"], "question": "What are the planned delivery date and actual delivery date for each booking?", "question_toks": ["What", "are", "the", "planned", "delivery", "date", "and", "actual", "delivery", "date", "for", "each", "booking", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 10]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 60, false], null]], [0, [0, [0, 61, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT Customer_Phone ,  Customer_Email_Address FROM CUSTOMERS WHERE Customer_Name  =  \"Harold\"", "query_toks": ["SELECT", "Customer_Phone", ",", "Customer_Email_Address", "FROM", "CUSTOMERS", "WHERE", "Customer_Name", "=", "``", "Harold", "''"], "query_toks_no_value": ["select", "customer_phone", ",", "customer_email_address", "from", "customers", "where", "customer_name", "=", "value"], "question": "What are the phone and email for customer Harold?", "question_toks": ["What", "are", "the", "phone", "and", "email", "for", "customer", "Harold", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 8]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 44, false], null]], [0, [0, [0, 45, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 43, false], null], "\"Harold\"", null]]}}, {"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT Customer_Phone ,  Customer_Email_Address FROM CUSTOMERS WHERE Customer_Name  =  \"Harold\"", "query_toks": ["SELECT", "Customer_Phone", ",", "Customer_Email_Address", "FROM", "CUSTOMERS", "WHERE", "Customer_Name", "=", "``", "Harold", "''"], "query_toks_no_value": ["select", "customer_phone", ",", "customer_email_address", "from", "customers", "where", "customer_name", "=", "value"], "question": "Find the phone number and email address of customer \"Harold\".", "question_toks": ["Find", "the", "phone", "number", "and", "email", "address", "of", "customer", "``", "Harold", "''", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 8]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 44, false], null]], [0, [0, [0, 45, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 43, false], null], "\"Harold\"", null]]}}, {"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT min(Order_Quantity) ,  avg(Order_Quantity) ,  max(Order_Quantity) FROM INVOICES", "query_toks": ["SELECT", "min", "(", "Order_Quantity", ")", ",", "avg", "(", "Order_Quantity", ")", ",", "max", "(", "Order_Quantity", ")", "FROM", "INVOICES"], "query_toks_no_value": ["select", "min", "(", "order_quantity", ")", ",", "avg", "(", "order_quantity", ")", ",", "max", "(", "order_quantity", ")", "from", "invoices"], "question": "Show the minimum, average, maximum order quantity of all invoices.", "question_toks": ["Show", "the", "minimum", ",", "average", ",", "maximum", "order", "quantity", "of", "all", "invoices", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 14]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 81, false], null]], [5, [0, [0, 81, false], null]], [1, [0, [0, 81, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT min(Order_Quantity) ,  avg(Order_Quantity) ,  max(Order_Quantity) FROM INVOICES", "query_toks": ["SELECT", "min", "(", "Order_Quantity", ")", ",", "avg", "(", "Order_Quantity", ")", ",", "max", "(", "Order_Quantity", ")", "FROM", "INVOICES"], "query_toks_no_value": ["select", "min", "(", "order_quantity", ")", ",", "avg", "(", "order_quantity", ")", ",", "max", "(", "order_quantity", ")", "from", "invoices"], "question": "What are the minimum, average, and maximum quantities ordered? Check all the invoices.", "question_toks": ["What", "are", "the", "minimum", ",", "average", ",", "and", "maximum", "quantities", "ordered", "?", "Check", "all", "the", "invoices", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 14]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 81, false], null]], [5, [0, [0, 81, false], null]], [1, [0, [0, 81, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT payment_method_code ,  count(*) FROM INVOICES GROUP BY payment_method_code", "query_toks": ["SELECT", "payment_method_code", ",", "count", "(", "*", ")", "FROM", "INVOICES", "GROUP", "BY", "payment_method_code"], "query_toks_no_value": ["select", "payment_method_code", ",", "count", "(", "*", ")", "from", "invoices", "group", "by", "payment_method_code"], "question": "Show all payment method codes and the number of orders for each code.", "question_toks": ["Show", "all", "payment", "method", "codes", "and", "the", "number", "of", "orders", "for", "each", "code", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 14]]}, "groupBy": [[0, 79, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 79, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT payment_method_code ,  count(*) FROM INVOICES GROUP BY payment_method_code", "query_toks": ["SELECT", "payment_method_code", ",", "count", "(", "*", ")", "FROM", "INVOICES", "GROUP", "BY", "payment_method_code"], "query_toks_no_value": ["select", "payment_method_code", ",", "count", "(", "*", ")", "from", "invoices", "group", "by", "payment_method_code"], "question": "List the distinct payment method codes with the number of orders made", "question_toks": ["List", "the", "distinct", "payment", "method", "codes", "with", "the", "number", "of", "orders", "made"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 14]]}, "groupBy": [[0, 79, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 79, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T1.Service_Type_Description ,  T2.Service_Type_Code ,  COUNT(*) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T2.Service_Type_Code", "query_toks": ["SELECT", "T1.Service_Type_Description", ",", "T2.Service_Type_Code", ",", "COUNT", "(", "*", ")", "FROM", "Ref_Service_Types", "AS", "T1", "JOIN", "Services", "AS", "T2", "ON", "T1.Service_Type_Code", "=", "T2.Service_Type_Code", "GROUP", "BY", "T2.Service_Type_Code"], "query_toks_no_value": ["select", "t1", ".", "service_type_description", ",", "t2", ".", "service_type_code", ",", "count", "(", "*", ")", "from", "ref_service_types", "as", "t1", "join", "services", "as", "t2", "on", "t1", ".", "service_type_code", "=", "t2", ".", "service_type_code", "group", "by", "t2", ".", "service_type_code"], "question": "What is the description, code and the corresponding count of each service type?", "question_toks": ["What", "is", "the", "description", ",", "code", "and", "the", "corresponding", "count", "of", "each", "service", "type", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 85, false], null]], "table_units": [["table_unit", 1], ["table_unit", 15]]}, "groupBy": [[0, 85, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 85, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T1.Service_Type_Description ,  T2.Service_Type_Code ,  COUNT(*) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T2.Service_Type_Code", "query_toks": ["SELECT", "T1.Service_Type_Description", ",", "T2.Service_Type_Code", ",", "COUNT", "(", "*", ")", "FROM", "Ref_Service_Types", "AS", "T1", "JOIN", "Services", "AS", "T2", "ON", "T1.Service_Type_Code", "=", "T2.Service_Type_Code", "GROUP", "BY", "T2.Service_Type_Code"], "query_toks_no_value": ["select", "t1", ".", "service_type_description", ",", "t2", ".", "service_type_code", ",", "count", "(", "*", ")", "from", "ref_service_types", "as", "t1", "join", "services", "as", "t2", "on", "t1", ".", "service_type_code", "=", "t2", ".", "service_type_code", "group", "by", "t2", ".", "service_type_code"], "question": "List the description, code and the number of services for each service type.", "question_toks": ["List", "the", "description", ",", "code", "and", "the", "number", "of", "services", "for", "each", "service", "type", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 85, false], null]], "table_units": [["table_unit", 1], ["table_unit", 15]]}, "groupBy": [[0, 85, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 85, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.Service_Type_Description", ",", "T1.Service_Type_Code", "FROM", "Ref_Service_Types", "AS", "T1", "JOIN", "Services", "AS", "T2", "ON", "T1.Service_Type_Code", "=", "T2.Service_Type_Code", "GROUP", "BY", "T1.Service_Type_Code", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "service_type_description", ",", "t1", ".", "service_type_code", "from", "ref_service_types", "as", "t1", "join", "services", "as", "t2", "on", "t1", ".", "service_type_code", "=", "t2", ".", "service_type_code", "group", "by", "t1", ".", "service_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the description and code of the type of service that is performed the most often?", "question_toks": ["What", "is", "the", "description", "and", "code", "of", "the", "type", "of", "service", "that", "is", "performed", "the", "most", "often", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 85, false], null]], "table_units": [["table_unit", 1], ["table_unit", 15]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.Service_Type_Description", ",", "T1.Service_Type_Code", "FROM", "Ref_Service_Types", "AS", "T1", "JOIN", "Services", "AS", "T2", "ON", "T1.Service_Type_Code", "=", "T2.Service_Type_Code", "GROUP", "BY", "T1.Service_Type_Code", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "service_type_description", ",", "t1", ".", "service_type_code", "from", "ref_service_types", "as", "t1", "join", "services", "as", "t2", "on", "t1", ".", "service_type_code", "=", "t2", ".", "service_type_code", "group", "by", "t1", ".", "service_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the description and code of the service type that is performed the most times.", "question_toks": ["Find", "the", "description", "and", "code", "of", "the", "service", "type", "that", "is", "performed", "the", "most", "times", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 85, false], null]], "table_units": [["table_unit", 1], ["table_unit", 15]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID", "query_toks": ["SELECT", "T1.Store_Phone", ",", "T1.Store_Email_Address", "FROM", "Drama_Workshop_Groups", "AS", "T1", "JOIN", "Services", "AS", "T2", "ON", "T1.Workshop_Group_ID", "=", "T2.Workshop_Group_ID"], "query_toks_no_value": ["select", "t1", ".", "store_phone", ",", "t1", ".", "store_email_address", "from", "drama_workshop_groups", "as", "t1", "join", "services", "as", "t2", "on", "t1", ".", "workshop_group_id", "=", "t2", ".", "workshop_group_id"], "question": "What are the phones and emails of workshop groups in which services are performed?", "question_toks": ["What", "are", "the", "phones", "and", "emails", "of", "workshop", "groups", "in", "which", "services", "are", "performed", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 27, false], null], [0, 86, false], null]], "table_units": [["table_unit", 6], ["table_unit", 15]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 32, false], null]], [0, [0, [0, 33, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID", "query_toks": ["SELECT", "T1.Store_Phone", ",", "T1.Store_Email_Address", "FROM", "Drama_Workshop_Groups", "AS", "T1", "JOIN", "Services", "AS", "T2", "ON", "T1.Workshop_Group_ID", "=", "T2.Workshop_Group_ID"], "query_toks_no_value": ["select", "t1", ".", "store_phone", ",", "t1", ".", "store_email_address", "from", "drama_workshop_groups", "as", "t1", "join", "services", "as", "t2", "on", "t1", ".", "workshop_group_id", "=", "t2", ".", "workshop_group_id"], "question": "Give me all the phone numbers and email addresses of the workshop groups where services are performed.", "question_toks": ["Give", "me", "all", "the", "phone", "numbers", "and", "email", "addresses", "of", "the", "workshop", "groups", "where", "services", "are", "performed", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 27, false], null], [0, 86, false], null]], "table_units": [["table_unit", 6], ["table_unit", 15]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 32, false], null]], [0, [0, [0, 33, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T2.Product_Name  =  \"film\"", "query_toks": ["SELECT", "T1.Store_Phone", ",", "T1.Store_Email_Address", "FROM", "Drama_Workshop_Groups", "AS", "T1", "JOIN", "Services", "AS", "T2", "ON", "T1.Workshop_Group_ID", "=", "T2.Workshop_Group_ID", "WHERE", "T2.Product_Name", "=", "``", "film", "''"], "query_toks_no_value": ["select", "t1", ".", "store_phone", ",", "t1", ".", "store_email_address", "from", "drama_workshop_groups", "as", "t1", "join", "services", "as", "t2", "on", "t1", ".", "workshop_group_id", "=", "t2", ".", "workshop_group_id", "where", "t2", ".", "product_name", "=", "value"], "question": "What are the names of workshop groups in which services with product name \"film\" are performed?", "question_toks": ["What", "are", "the", "names", "of", "workshop", "groups", "in", "which", "services", "with", "product", "name", "``", "film", "''", "are", "performed", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 27, false], null], [0, 86, false], null]], "table_units": [["table_unit", 6], ["table_unit", 15]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 32, false], null]], [0, [0, [0, 33, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 88, false], null], "\"film\"", null]]}}, {"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T2.Product_Name  =  \"film\"", "query_toks": ["SELECT", "T1.Store_Phone", ",", "T1.Store_Email_Address", "FROM", "Drama_Workshop_Groups", "AS", "T1", "JOIN", "Services", "AS", "T2", "ON", "T1.Workshop_Group_ID", "=", "T2.Workshop_Group_ID", "WHERE", "T2.Product_Name", "=", "``", "film", "''"], "query_toks_no_value": ["select", "t1", ".", "store_phone", ",", "t1", ".", "store_email_address", "from", "drama_workshop_groups", "as", "t1", "join", "services", "as", "t2", "on", "t1", ".", "workshop_group_id", "=", "t2", ".", "workshop_group_id", "where", "t2", ".", "product_name", "=", "value"], "question": "Find the names of the workshop groups where services with product name \"film\" are performed.", "question_toks": ["Find", "the", "names", "of", "the", "workshop", "groups", "where", "services", "with", "product", "name", "``", "film", "''", "are", "performed", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 27, false], null], [0, 86, false], null]], "table_units": [["table_unit", 6], ["table_unit", 15]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 32, false], null]], [0, [0, [0, 33, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 88, false], null], "\"film\"", null]]}}, {"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT Product_Name ,  avg(Product_Price) FROM PRODUCTS GROUP BY Product_Name", "query_toks": ["SELECT", "Product_Name", ",", "avg", "(", "Product_Price", ")", "FROM", "PRODUCTS", "GROUP", "BY", "Product_Name"], "query_toks_no_value": ["select", "product_name", ",", "avg", "(", "product_price", ")", "from", "products", "group", "by", "product_name"], "question": "What are the different product names? What is the average product price for each of them?", "question_toks": ["What", "are", "the", "different", "product", "names", "?", "What", "is", "the", "average", "product", "price", "for", "each", "of", "them", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [5, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT Product_Name ,  avg(Product_Price) FROM PRODUCTS GROUP BY Product_Name", "query_toks": ["SELECT", "Product_Name", ",", "avg", "(", "Product_Price", ")", "FROM", "PRODUCTS", "GROUP", "BY", "Product_Name"], "query_toks_no_value": ["select", "product_name", ",", "avg", "(", "product_price", ")", "from", "products", "group", "by", "product_name"], "question": "For each distinct product name, show its average product price.", "question_toks": ["For", "each", "distinct", "product", "name", ",", "show", "its", "average", "product", "price", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [5, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T1.City_Town ,  count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID GROUP BY T1.City_Town", "query_toks": ["SELECT", "T1.City_Town", ",", "count", "(", "*", ")", "FROM", "Addresses", "AS", "T1", "JOIN", "Drama_Workshop_Groups", "AS", "T2", "ON", "T1.Address_ID", "=", "T2.Address_ID", "GROUP", "BY", "T1.City_Town"], "query_toks_no_value": ["select", "t1", ".", "city_town", ",", "count", "(", "*", ")", "from", "addresses", "as", "t1", "join", "drama_workshop_groups", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "address_id", "group", "by", "t1", ".", "city_town"], "question": "Show all cities along with the number of drama workshop groups in each city.", "question_toks": ["Show", "all", "cities", "along", "with", "the", "number", "of", "drama", "workshop", "groups", "in", "each", "city", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 28, false], null]], "table_units": [["table_unit", 2], ["table_unit", 6]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T1.City_Town ,  count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID GROUP BY T1.City_Town", "query_toks": ["SELECT", "T1.City_Town", ",", "count", "(", "*", ")", "FROM", "Addresses", "AS", "T1", "JOIN", "Drama_Workshop_Groups", "AS", "T2", "ON", "T1.Address_ID", "=", "T2.Address_ID", "GROUP", "BY", "T1.City_Town"], "query_toks_no_value": ["select", "t1", ".", "city_town", ",", "count", "(", "*", ")", "from", "addresses", "as", "t1", "join", "drama_workshop_groups", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "address_id", "group", "by", "t1", ".", "city_town"], "question": "How many drama workshop groups are there in each city? Return both the city and the count.", "question_toks": ["How", "many", "drama", "workshop", "groups", "are", "there", "in", "each", "city", "?", "Return", "both", "the", "city", "and", "the", "count", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 28, false], null]], "table_units": [["table_unit", 2], ["table_unit", 6]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "music_2", "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Badlands\"", "query_toks": ["SELECT", "T2.firstname", ",", "T2.lastname", "FROM", "Performance", "AS", "T1", "JOIN", "Band", "AS", "T2", "ON", "T1.bandmate", "=", "T2.id", "JOIN", "Songs", "AS", "T3", "ON", "T3.SongId", "=", "T1.SongId", "WHERE", "T3.Title", "=", "``", "Badlands", "''"], "query_toks_no_value": ["select", "t2", ".", "firstname", ",", "t2", ".", "lastname", "from", "performance", "as", "t1", "join", "band", "as", "t2", "on", "t1", ".", "bandmate", "=", "t2", ".", "id", "join", "songs", "as", "t3", "on", "t3", ".", "songid", "=", "t1", ".", "songid", "where", "t3", ".", "title", "=", "value"], "question": "Who performed the song named \"Badlands\"? Show the first name and the last name.", "question_toks": ["Who", "performed", "the", "song", "named", "``", "Badlands", "''", "?", "Show", "the", "first", "name", "and", "the", "last", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Badlands\"", null]]}}, {"db_id": "music_2", "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Badlands\"", "query_toks": ["SELECT", "T2.firstname", ",", "T2.lastname", "FROM", "Performance", "AS", "T1", "JOIN", "Band", "AS", "T2", "ON", "T1.bandmate", "=", "T2.id", "JOIN", "Songs", "AS", "T3", "ON", "T3.SongId", "=", "T1.SongId", "WHERE", "T3.Title", "=", "``", "Badlands", "''"], "query_toks_no_value": ["select", "t2", ".", "firstname", ",", "t2", ".", "lastname", "from", "performance", "as", "t1", "join", "band", "as", "t2", "on", "t1", ".", "bandmate", "=", "t2", ".", "id", "join", "songs", "as", "t3", "on", "t3", ".", "songid", "=", "t1", ".", "songid", "where", "t3", ".", "title", "=", "value"], "question": "What are the first and last names of the artist who perfomed the song \"Badlands\"?", "question_toks": ["What", "are", "the", "first", "and", "last", "names", "of", "the", "artist", "who", "perfomed", "the", "song", "``", "Badlands", "''", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Badlands\"", null]]}}, {"db_id": "music_2", "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Badlands\" AND T1.StagePosition  =  \"back\"", "query_toks": ["SELECT", "T2.firstname", ",", "T2.lastname", "FROM", "Performance", "AS", "T1", "JOIN", "Band", "AS", "T2", "ON", "T1.bandmate", "=", "T2.id", "JOIN", "Songs", "AS", "T3", "ON", "T3.SongId", "=", "T1.SongId", "WHERE", "T3.Title", "=", "``", "Badlands", "''", "AND", "T1.StagePosition", "=", "``", "back", "''"], "query_toks_no_value": ["select", "t2", ".", "firstname", ",", "t2", ".", "lastname", "from", "performance", "as", "t1", "join", "band", "as", "t2", "on", "t1", ".", "bandmate", "=", "t2", ".", "id", "join", "songs", "as", "t3", "on", "t3", ".", "songid", "=", "t1", ".", "songid", "where", "t3", ".", "title", "=", "value", "and", "t1", ".", "stageposition", "=", "value"], "question": "Who is performing in the back stage position for the song \"Badlands\"? Show the first name and the last name.", "question_toks": ["Who", "is", "performing", "in", "the", "back", "stage", "position", "for", "the", "song", "``", "Badlands", "''", "?", "Show", "the", "first", "name", "and", "the", "last", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Badlands\"", null], "and", [false, 2, [0, [0, 16, false], null], "\"back\"", null]]}}, {"db_id": "music_2", "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Badlands\" AND T1.StagePosition  =  \"back\"", "query_toks": ["SELECT", "T2.firstname", ",", "T2.lastname", "FROM", "Performance", "AS", "T1", "JOIN", "Band", "AS", "T2", "ON", "T1.bandmate", "=", "T2.id", "JOIN", "Songs", "AS", "T3", "ON", "T3.SongId", "=", "T1.SongId", "WHERE", "T3.Title", "=", "``", "Badlands", "''", "AND", "T1.StagePosition", "=", "``", "back", "''"], "query_toks_no_value": ["select", "t2", ".", "firstname", ",", "t2", ".", "lastname", "from", "performance", "as", "t1", "join", "band", "as", "t2", "on", "t1", ".", "bandmate", "=", "t2", ".", "id", "join", "songs", "as", "t3", "on", "t3", ".", "songid", "=", "t1", ".", "songid", "where", "t3", ".", "title", "=", "value", "and", "t1", ".", "stageposition", "=", "value"], "question": "What are the first and last names of the performer who was in the back stage position for the song \"Badlands\"?", "question_toks": ["What", "are", "the", "first", "and", "last", "names", "of", "the", "performer", "who", "was", "in", "the", "back", "stage", "position", "for", "the", "song", "``", "Badlands", "''", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Badlands\"", null], "and", [false, 2, [0, [0, 16, false], null], "\"back\"", null]]}}, {"db_id": "music_2", "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Le Pop\"", "query_toks": ["SELECT", "T2.firstname", ",", "T2.lastname", "FROM", "Performance", "AS", "T1", "JOIN", "Band", "AS", "T2", "ON", "T1.bandmate", "=", "T2.id", "JOIN", "Songs", "AS", "T3", "ON", "T3.SongId", "=", "T1.SongId", "WHERE", "T3.Title", "=", "``", "Le", "Pop", "''"], "query_toks_no_value": ["select", "t2", ".", "firstname", ",", "t2", ".", "lastname", "from", "performance", "as", "t1", "join", "band", "as", "t2", "on", "t1", ".", "bandmate", "=", "t2", ".", "id", "join", "songs", "as", "t3", "on", "t3", ".", "songid", "=", "t1", ".", "songid", "where", "t3", ".", "title", "=", "value"], "question": "Who performed the song named \"Le Pop\"?", "question_toks": ["Who", "performed", "the", "song", "named", "``", "Le", "Pop", "''", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Le Pop\"", null]]}}, {"db_id": "music_2", "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Le Pop\"", "query_toks": ["SELECT", "T2.firstname", ",", "T2.lastname", "FROM", "Performance", "AS", "T1", "JOIN", "Band", "AS", "T2", "ON", "T1.bandmate", "=", "T2.id", "JOIN", "Songs", "AS", "T3", "ON", "T3.SongId", "=", "T1.SongId", "WHERE", "T3.Title", "=", "``", "Le", "Pop", "''"], "query_toks_no_value": ["select", "t2", ".", "firstname", ",", "t2", ".", "lastname", "from", "performance", "as", "t1", "join", "band", "as", "t2", "on", "t1", ".", "bandmate", "=", "t2", ".", "id", "join", "songs", "as", "t3", "on", "t3", ".", "songid", "=", "t1", ".", "songid", "where", "t3", ".", "title", "=", "value"], "question": "What is the first and last name of artist who performed \"Le Pop\"?", "question_toks": ["What", "is", "the", "first", "and", "last", "name", "of", "artist", "who", "performed", "``", "Le", "Pop", "''", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Le Pop\"", null]]}}, {"db_id": "music_2", "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Der Kapitan\" AND T1.StagePosition  =  \"back\"", "query_toks": ["SELECT", "T2.firstname", ",", "T2.lastname", "FROM", "Performance", "AS", "T1", "JOIN", "Band", "AS", "T2", "ON", "T1.bandmate", "=", "T2.id", "JOIN", "Songs", "AS", "T3", "ON", "T3.SongId", "=", "T1.SongId", "WHERE", "T3.Title", "=", "``", "Der", "Kapitan", "''", "AND", "T1.StagePosition", "=", "``", "back", "''"], "query_toks_no_value": ["select", "t2", ".", "firstname", ",", "t2", ".", "lastname", "from", "performance", "as", "t1", "join", "band", "as", "t2", "on", "t1", ".", "bandmate", "=", "t2", ".", "id", "join", "songs", "as", "t3", "on", "t3", ".", "songid", "=", "t1", ".", "songid", "where", "t3", ".", "title", "=", "value", "and", "t1", ".", "stageposition", "=", "value"], "question": "Who is performing in the back stage position for the song \"Der Kapitan\"? Show the first name and last name.", "question_toks": ["Who", "is", "performing", "in", "the", "back", "stage", "position", "for", "the", "song", "``", "Der", "Kapitan", "''", "?", "Show", "the", "first", "name", "and", "last", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Der Kapitan\"", null], "and", [false, 2, [0, [0, 16, false], null], "\"back\"", null]]}}, {"db_id": "music_2", "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Der Kapitan\" AND T1.StagePosition  =  \"back\"", "query_toks": ["SELECT", "T2.firstname", ",", "T2.lastname", "FROM", "Performance", "AS", "T1", "JOIN", "Band", "AS", "T2", "ON", "T1.bandmate", "=", "T2.id", "JOIN", "Songs", "AS", "T3", "ON", "T3.SongId", "=", "T1.SongId", "WHERE", "T3.Title", "=", "``", "Der", "Kapitan", "''", "AND", "T1.StagePosition", "=", "``", "back", "''"], "query_toks_no_value": ["select", "t2", ".", "firstname", ",", "t2", ".", "lastname", "from", "performance", "as", "t1", "join", "band", "as", "t2", "on", "t1", ".", "bandmate", "=", "t2", ".", "id", "join", "songs", "as", "t3", "on", "t3", ".", "songid", "=", "t1", ".", "songid", "where", "t3", ".", "title", "=", "value", "and", "t1", ".", "stageposition", "=", "value"], "question": "What is the first and last name of the artist who performed back stage for the song \"Der Kapitan\"?", "question_toks": ["What", "is", "the", "first", "and", "last", "name", "of", "the", "artist", "who", "performed", "back", "stage", "for", "the", "song", "``", "Der", "Kapitan", "''", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Der Kapitan\"", null], "and", [false, 2, [0, [0, 16, false], null], "\"back\"", null]]}}, {"db_id": "manufactory_1", "query": "SELECT name ,  headquarter FROM manufacturers ORDER BY revenue DESC", "query_toks": ["SELECT", "name", ",", "headquarter", "FROM", "manufacturers", "ORDER", "BY", "revenue", "DESC"], "query_toks_no_value": ["select", "name", ",", "headquarter", "from", "manufacturers", "order", "by", "revenue", "desc"], "question": "Find all manufacturers' names and their headquarters, sorted by the ones with highest revenue first.", "question_toks": ["Find", "all", "manufacturers", "'", "names", "and", "their", "headquarters", ",", "sorted", "by", "the", "ones", "with", "highest", "revenue", "first", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "manufactory_1", "query": "SELECT name ,  headquarter FROM manufacturers ORDER BY revenue DESC", "query_toks": ["SELECT", "name", ",", "headquarter", "FROM", "manufacturers", "ORDER", "BY", "revenue", "DESC"], "query_toks_no_value": ["select", "name", ",", "headquarter", "from", "manufacturers", "order", "by", "revenue", "desc"], "question": "What are the names and headquarters of all manufacturers, ordered by revenue descending?", "question_toks": ["What", "are", "the", "names", "and", "headquarters", "of", "all", "manufacturers", ",", "ordered", "by", "revenue", "descending", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "manufactory_1", "query": "SELECT avg(revenue) ,  max(revenue) ,  sum(revenue) FROM manufacturers", "query_toks": ["SELECT", "avg", "(", "revenue", ")", ",", "max", "(", "revenue", ")", ",", "sum", "(", "revenue", ")", "FROM", "manufacturers"], "query_toks_no_value": ["select", "avg", "(", "revenue", ")", ",", "max", "(", "revenue", ")", ",", "sum", "(", "revenue", ")", "from", "manufacturers"], "question": "What are the average, maximum and total revenues of all companies?", "question_toks": ["What", "are", "the", "average", ",", "maximum", "and", "total", "revenues", "of", "all", "companies", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 5, false], null]], [1, [0, [0, 5, false], null]], [4, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "manufactory_1", "query": "SELECT avg(revenue) ,  max(revenue) ,  sum(revenue) FROM manufacturers", "query_toks": ["SELECT", "avg", "(", "revenue", ")", ",", "max", "(", "revenue", ")", ",", "sum", "(", "revenue", ")", "FROM", "manufacturers"], "query_toks_no_value": ["select", "avg", "(", "revenue", ")", ",", "max", "(", "revenue", ")", ",", "sum", "(", "revenue", ")", "from", "manufacturers"], "question": "Return the average, maximum, and total revenues across all manufacturers.", "question_toks": ["Return", "the", "average", ",", "maximum", ",", "and", "total", "revenues", "across", "all", "manufacturers", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 5, false], null]], [1, [0, [0, 5, false], null]], [4, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "manufactory_1", "query": "SELECT name ,  headquarter ,  founder FROM manufacturers ORDER BY revenue DESC LIMIT 1", "query_toks": ["SELECT", "name", ",", "headquarter", ",", "founder", "FROM", "manufacturers", "ORDER", "BY", "revenue", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "headquarter", ",", "founder", "from", "manufacturers", "order", "by", "revenue", "desc", "limit", "value"], "question": "Find the name, headquarter and founder of the manufacturer that has the highest revenue.", "question_toks": ["Find", "the", "name", ",", "headquarter", "and", "founder", "of", "the", "manufacturer", "that", "has", "the", "highest", "revenue", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "manufactory_1", "query": "SELECT name ,  headquarter ,  founder FROM manufacturers ORDER BY revenue DESC LIMIT 1", "query_toks": ["SELECT", "name", ",", "headquarter", ",", "founder", "FROM", "manufacturers", "ORDER", "BY", "revenue", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "headquarter", ",", "founder", "from", "manufacturers", "order", "by", "revenue", "desc", "limit", "value"], "question": "What are the names, headquarters and founders of the company with the highest revenue?", "question_toks": ["What", "are", "the", "names", ",", "headquarters", "and", "founders", "of", "the", "company", "with", "the", "highest", "revenue", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "manufactory_1", "query": "SELECT name ,  headquarter ,  revenue FROM manufacturers ORDER BY revenue DESC", "query_toks": ["SELECT", "name", ",", "headquarter", ",", "revenue", "FROM", "manufacturers", "ORDER", "BY", "revenue", "DESC"], "query_toks_no_value": ["select", "name", ",", "headquarter", ",", "revenue", "from", "manufacturers", "order", "by", "revenue", "desc"], "question": "Find the name, headquarter and revenue of all manufacturers sorted by their revenue in the descending order.", "question_toks": ["Find", "the", "name", ",", "headquarter", "and", "revenue", "of", "all", "manufacturers", "sorted", "by", "their", "revenue", "in", "the", "descending", "order", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "manufactory_1", "query": "SELECT name ,  headquarter ,  revenue FROM manufacturers ORDER BY revenue DESC", "query_toks": ["SELECT", "name", ",", "headquarter", ",", "revenue", "FROM", "manufacturers", "ORDER", "BY", "revenue", "DESC"], "query_toks_no_value": ["select", "name", ",", "headquarter", ",", "revenue", "from", "manufacturers", "order", "by", "revenue", "desc"], "question": "What are the names, headquarters and revenues for manufacturers, sorted by revenue descending?", "question_toks": ["What", "are", "the", "names", ",", "headquarters", "and", "revenues", "for", "manufacturers", ",", "sorted", "by", "revenue", "descending", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "manufactory_1", "query": "SELECT sum(revenue) ,  founder FROM manufacturers GROUP BY founder", "query_toks": ["SELECT", "sum", "(", "revenue", ")", ",", "founder", "FROM", "manufacturers", "GROUP", "BY", "founder"], "query_toks_no_value": ["select", "sum", "(", "revenue", ")", ",", "founder", "from", "manufacturers", "group", "by", "founder"], "question": "Find the total revenue of companies of each founder.", "question_toks": ["Find", "the", "total", "revenue", "of", "companies", "of", "each", "founder", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 5, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "manufactory_1", "query": "SELECT sum(revenue) ,  founder FROM manufacturers GROUP BY founder", "query_toks": ["SELECT", "sum", "(", "revenue", ")", ",", "founder", "FROM", "manufacturers", "GROUP", "BY", "founder"], "query_toks_no_value": ["select", "sum", "(", "revenue", ")", ",", "founder", "from", "manufacturers", "group", "by", "founder"], "question": "What is the total revenue of companies started by founder?", "question_toks": ["What", "is", "the", "total", "revenue", "of", "companies", "started", "by", "founder", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 5, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "manufactory_1", "query": "SELECT name ,  max(revenue) ,  Headquarter FROM manufacturers GROUP BY Headquarter", "query_toks": ["SELECT", "name", ",", "max", "(", "revenue", ")", ",", "Headquarter", "FROM", "manufacturers", "GROUP", "BY", "Headquarter"], "query_toks_no_value": ["select", "name", ",", "max", "(", "revenue", ")", ",", "headquarter", "from", "manufacturers", "group", "by", "headquarter"], "question": "Find the name and revenue of the company that earns the highest revenue in each city.", "question_toks": ["Find", "the", "name", "and", "revenue", "of", "the", "company", "that", "earns", "the", "highest", "revenue", "in", "each", "city", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [1, [0, [0, 5, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "manufactory_1", "query": "SELECT name ,  max(revenue) ,  Headquarter FROM manufacturers GROUP BY Headquarter", "query_toks": ["SELECT", "name", ",", "max", "(", "revenue", ")", ",", "Headquarter", "FROM", "manufacturers", "GROUP", "BY", "Headquarter"], "query_toks_no_value": ["select", "name", ",", "max", "(", "revenue", ")", ",", "headquarter", "from", "manufacturers", "group", "by", "headquarter"], "question": "What are the names and revenues of the companies with the highest revenues in each headquarter city?", "question_toks": ["What", "are", "the", "names", "and", "revenues", "of", "the", "companies", "with", "the", "highest", "revenues", "in", "each", "headquarter", "city", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [1, [0, [0, 5, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "manufactory_1", "query": "SELECT sum(revenue) ,  name FROM manufacturers GROUP BY name", "query_toks": ["SELECT", "sum", "(", "revenue", ")", ",", "name", "FROM", "manufacturers", "GROUP", "BY", "name"], "query_toks_no_value": ["select", "sum", "(", "revenue", ")", ",", "name", "from", "manufacturers", "group", "by", "name"], "question": "Find the total revenue for each manufacturer.", "question_toks": ["Find", "the", "total", "revenue", "for", "each", "manufacturer", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 5, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "manufactory_1", "query": "SELECT sum(revenue) ,  name FROM manufacturers GROUP BY name", "query_toks": ["SELECT", "sum", "(", "revenue", ")", ",", "name", "FROM", "manufacturers", "GROUP", "BY", "name"], "query_toks_no_value": ["select", "sum", "(", "revenue", ")", ",", "name", "from", "manufacturers", "group", "by", "name"], "question": "What is the total revenue of each manufacturer?", "question_toks": ["What", "is", "the", "total", "revenue", "of", "each", "manufacturer", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 5, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "manufactory_1", "query": "SELECT avg(T1.price) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name", "query_toks": ["SELECT", "avg", "(", "T1.price", ")", ",", "T2.name", "FROM", "products", "AS", "T1", "JOIN", "manufacturers", "AS", "T2", "ON", "T1.Manufacturer", "=", "T2.code", "GROUP", "BY", "T2.name"], "query_toks_no_value": ["select", "avg", "(", "t1", ".", "price", ")", ",", "t2", ".", "name", "from", "products", "as", "t1", "join", "manufacturers", "as", "t2", "on", "t1", ".", "manufacturer", "=", "t2", ".", "code", "group", "by", "t2", ".", "name"], "question": "Find the average prices of all products from each manufacture, and list each company's name.", "question_toks": ["Find", "the", "average", "prices", "of", "all", "products", "from", "each", "manufacture", ",", "and", "list", "each", "company", "'s", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "manufactory_1", "query": "SELECT avg(T1.price) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name", "query_toks": ["SELECT", "avg", "(", "T1.price", ")", ",", "T2.name", "FROM", "products", "AS", "T1", "JOIN", "manufacturers", "AS", "T2", "ON", "T1.Manufacturer", "=", "T2.code", "GROUP", "BY", "T2.name"], "query_toks_no_value": ["select", "avg", "(", "t1", ".", "price", ")", ",", "t2", ".", "name", "from", "products", "as", "t1", "join", "manufacturers", "as", "t2", "on", "t1", ".", "manufacturer", "=", "t2", ".", "code", "group", "by", "t2", ".", "name"], "question": "What are the average prices of products for each manufacturer?", "question_toks": ["What", "are", "the", "average", "prices", "of", "products", "for", "each", "manufacturer", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "manufactory_1", "query": "SELECT count(DISTINCT T1.name) ,  T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.Headquarter", "query_toks": ["SELECT", "count", "(", "DISTINCT", "T1.name", ")", ",", "T2.Headquarter", "FROM", "products", "AS", "T1", "JOIN", "manufacturers", "AS", "T2", "ON", "T1.Manufacturer", "=", "T2.code", "GROUP", "BY", "T2.Headquarter"], "query_toks_no_value": ["select", "count", "(", "distinct", "t1", ".", "name", ")", ",", "t2", ".", "headquarter", "from", "products", "as", "t1", "join", "manufacturers", "as", "t2", "on", "t1", ".", "manufacturer", "=", "t2", ".", "code", "group", "by", "t2", ".", "headquarter"], "question": "Find the number of different products that are produced by companies at different headquarter cities.", "question_toks": ["Find", "the", "number", "of", "different", "products", "that", "are", "produced", "by", "companies", "at", "different", "headquarter", "cities", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 7, true], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "manufactory_1", "query": "SELECT count(DISTINCT T1.name) ,  T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.Headquarter", "query_toks": ["SELECT", "count", "(", "DISTINCT", "T1.name", ")", ",", "T2.Headquarter", "FROM", "products", "AS", "T1", "JOIN", "manufacturers", "AS", "T2", "ON", "T1.Manufacturer", "=", "T2.code", "GROUP", "BY", "T2.Headquarter"], "query_toks_no_value": ["select", "count", "(", "distinct", "t1", ".", "name", ")", ",", "t2", ".", "headquarter", "from", "products", "as", "t1", "join", "manufacturers", "as", "t2", "on", "t1", ".", "manufacturer", "=", "t2", ".", "code", "group", "by", "t2", ".", "headquarter"], "question": "How many different products are produced in each headquarter city?", "question_toks": ["How", "many", "different", "products", "are", "produced", "in", "each", "headquarter", "city", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 7, true], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "manufactory_1", "query": "SELECT count(*) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T2.name", "FROM", "products", "AS", "T1", "JOIN", "manufacturers", "AS", "T2", "ON", "T1.Manufacturer", "=", "T2.code", "GROUP", "BY", "T2.name"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t2", ".", "name", "from", "products", "as", "t1", "join", "manufacturers", "as", "t2", "on", "t1", ".", "manufacturer", "=", "t2", ".", "code", "group", "by", "t2", ".", "name"], "question": "Find the number of products for each manufacturer, showing the name of each company.", "question_toks": ["Find", "the", "number", "of", "products", "for", "each", "manufacturer", ",", "showing", "the", "name", "of", "each", "company", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "manufactory_1", "query": "SELECT count(*) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T2.name", "FROM", "products", "AS", "T1", "JOIN", "manufacturers", "AS", "T2", "ON", "T1.Manufacturer", "=", "T2.code", "GROUP", "BY", "T2.name"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t2", ".", "name", "from", "products", "as", "t1", "join", "manufacturers", "as", "t2", "on", "t1", ".", "manufacturer", "=", "t2", ".", "code", "group", "by", "t2", ".", "name"], "question": "How many products are there for each manufacturer?", "question_toks": ["How", "many", "products", "are", "there", "for", "each", "manufacturer", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "manufactory_1", "query": "SELECT name ,  price FROM products", "query_toks": ["SELECT", "name", ",", "price", "FROM", "products"], "query_toks_no_value": ["select", "name", ",", "price", "from", "products"], "question": "Select the names and the prices of all the products in the store.", "question_toks": ["Select", "the", "names", "and", "the", "prices", "of", "all", "the", "products", "in", "the", "store", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "manufactory_1", "query": "SELECT name ,  price FROM products", "query_toks": ["SELECT", "name", ",", "price", "FROM", "products"], "query_toks_no_value": ["select", "name", ",", "price", "from", "products"], "question": "What are the names and prices of all products in the store?", "question_toks": ["What", "are", "the", "names", "and", "prices", "of", "all", "products", "in", "the", "store", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "manufactory_1", "query": "SELECT name ,  price FROM products WHERE price  >=  180 ORDER BY price DESC ,  name ASC", "query_toks": ["SELECT", "name", ",", "price", "FROM", "products", "WHERE", "price", ">", "=", "180", "ORDER", "BY", "price", "DESC", ",", "name", "ASC"], "query_toks_no_value": ["select", "name", ",", "price", "from", "products", "where", "price", ">", "=", "value", "order", "by", "price", "desc", ",", "name", "asc"], "question": "Select the name and price of all products with a price larger than or equal to $180, and sort first by price (in descending order), and then by name  (in ascending order).", "question_toks": ["Select", "the", "name", "and", "price", "of", "all", "products", "with", "a", "price", "larger", "than", "or", "equal", "to", "$", "180", ",", "and", "sort", "first", "by", "price", "(", "in", "descending", "order", ")", ",", "and", "then", "by", "name", "(", "in", "ascending", "order", ")", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 8, false], null], [0, [0, 7, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 5, [0, [0, 8, false], null], 180.0, null]]}}, {"db_id": "manufactory_1", "query": "SELECT name ,  price FROM products WHERE price  >=  180 ORDER BY price DESC ,  name ASC", "query_toks": ["SELECT", "name", ",", "price", "FROM", "products", "WHERE", "price", ">", "=", "180", "ORDER", "BY", "price", "DESC", ",", "name", "ASC"], "query_toks_no_value": ["select", "name", ",", "price", "from", "products", "where", "price", ">", "=", "value", "order", "by", "price", "desc", ",", "name", "asc"], "question": "What are the names and prices of products that cost at least 180, sorted by price decreasing and name ascending?", "question_toks": ["What", "are", "the", "names", "and", "prices", "of", "products", "that", "cost", "at", "least", "180", ",", "sorted", "by", "price", "decreasing", "and", "name", "ascending", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 8, false], null], [0, [0, 7, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 5, [0, [0, 8, false], null], 180.0, null]]}}, {"db_id": "manufactory_1", "query": "SELECT AVG(Price) ,  Manufacturer FROM Products GROUP BY Manufacturer", "query_toks": ["SELECT", "AVG", "(", "Price", ")", ",", "Manufacturer", "FROM", "Products", "GROUP", "BY", "Manufacturer"], "query_toks_no_value": ["select", "avg", "(", "price", ")", ",", "manufacturer", "from", "products", "group", "by", "manufacturer"], "question": "Select the average price of each manufacturer's products, showing only the manufacturer's code.", "question_toks": ["Select", "the", "average", "price", "of", "each", "manufacturer", "'s", "products", ",", "showing", "only", "the", "manufacturer", "'s", "code", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "manufactory_1", "query": "SELECT AVG(Price) ,  Manufacturer FROM Products GROUP BY Manufacturer", "query_toks": ["SELECT", "AVG", "(", "Price", ")", ",", "Manufacturer", "FROM", "Products", "GROUP", "BY", "Manufacturer"], "query_toks_no_value": ["select", "avg", "(", "price", ")", ",", "manufacturer", "from", "products", "group", "by", "manufacturer"], "question": "What are the average prices of products, grouped by manufacturer code?", "question_toks": ["What", "are", "the", "average", "prices", "of", "products", ",", "grouped", "by", "manufacturer", "code", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "manufactory_1", "query": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name", "query_toks": ["SELECT", "avg", "(", "T1.Price", ")", ",", "T2.name", "FROM", "products", "AS", "T1", "JOIN", "Manufacturers", "AS", "T2", "ON", "T1.manufacturer", "=", "T2.code", "GROUP", "BY", "T2.name"], "query_toks_no_value": ["select", "avg", "(", "t1", ".", "price", ")", ",", "t2", ".", "name", "from", "products", "as", "t1", "join", "manufacturers", "as", "t2", "on", "t1", ".", "manufacturer", "=", "t2", ".", "code", "group", "by", "t2", ".", "name"], "question": "Select the average price of each manufacturer's products, showing the manufacturer's name.", "question_toks": ["Select", "the", "average", "price", "of", "each", "manufacturer", "'s", "products", ",", "showing", "the", "manufacturer", "'s", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "manufactory_1", "query": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name", "query_toks": ["SELECT", "avg", "(", "T1.Price", ")", ",", "T2.name", "FROM", "products", "AS", "T1", "JOIN", "Manufacturers", "AS", "T2", "ON", "T1.manufacturer", "=", "T2.code", "GROUP", "BY", "T2.name"], "query_toks_no_value": ["select", "avg", "(", "t1", ".", "price", ")", ",", "t2", ".", "name", "from", "products", "as", "t1", "join", "manufacturers", "as", "t2", "on", "t1", ".", "manufacturer", "=", "t2", ".", "code", "group", "by", "t2", ".", "name"], "question": "What are the average prices of products, grouped by manufacturer name?", "question_toks": ["What", "are", "the", "average", "prices", "of", "products", ",", "grouped", "by", "manufacturer", "name", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "manufactory_1", "query": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name HAVING avg(T1.price) >= 150", "query_toks": ["SELECT", "avg", "(", "T1.Price", ")", ",", "T2.name", "FROM", "products", "AS", "T1", "JOIN", "Manufacturers", "AS", "T2", "ON", "T1.manufacturer", "=", "T2.code", "GROUP", "BY", "T2.name", "HAVING", "avg", "(", "T1.price", ")", ">", "=", "150"], "query_toks_no_value": ["select", "avg", "(", "t1", ".", "price", ")", ",", "t2", ".", "name", "from", "products", "as", "t1", "join", "manufacturers", "as", "t2", "on", "t1", ".", "manufacturer", "=", "t2", ".", "code", "group", "by", "t2", ".", "name", "having", "avg", "(", "t1", ".", "price", ")", ">", "=", "value"], "question": "Select the names of manufacturer whose products have an average price higher than or equal to $150.", "question_toks": ["Select", "the", "names", "of", "manufacturer", "whose", "products", "have", "an", "average", "price", "higher", "than", "or", "equal", "to", "$", "150", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 2, false]], "having": [[false, 5, [0, [5, 8, false], null], 150.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "manufactory_1", "query": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name HAVING avg(T1.price) >= 150", "query_toks": ["SELECT", "avg", "(", "T1.Price", ")", ",", "T2.name", "FROM", "products", "AS", "T1", "JOIN", "Manufacturers", "AS", "T2", "ON", "T1.manufacturer", "=", "T2.code", "GROUP", "BY", "T2.name", "HAVING", "avg", "(", "T1.price", ")", ">", "=", "150"], "query_toks_no_value": ["select", "avg", "(", "t1", ".", "price", ")", ",", "t2", ".", "name", "from", "products", "as", "t1", "join", "manufacturers", "as", "t2", "on", "t1", ".", "manufacturer", "=", "t2", ".", "code", "group", "by", "t2", ".", "name", "having", "avg", "(", "t1", ".", "price", ")", ">", "=", "value"], "question": "What are the names and average prices of products for manufacturers whose products cost on average 150 or more?", "question_toks": ["What", "are", "the", "names", "and", "average", "prices", "of", "products", "for", "manufacturers", "whose", "products", "cost", "on", "average", "150", "or", "more", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 2, false]], "having": [[false, 5, [0, [5, 8, false], null], 150.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "manufactory_1", "query": "SELECT name ,  price FROM Products ORDER BY price ASC LIMIT 1", "query_toks": ["SELECT", "name", ",", "price", "FROM", "Products", "ORDER", "BY", "price", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "price", "from", "products", "order", "by", "price", "asc", "limit", "value"], "question": "Select the name and price of the cheapest product.", "question_toks": ["Select", "the", "name", "and", "price", "of", "the", "cheapest", "product", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 8, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "manufactory_1", "query": "SELECT name ,  price FROM Products ORDER BY price ASC LIMIT 1", "query_toks": ["SELECT", "name", ",", "price", "FROM", "Products", "ORDER", "BY", "price", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "price", "from", "products", "order", "by", "price", "asc", "limit", "value"], "question": "What is the name and price of the cheapest product?", "question_toks": ["What", "is", "the", "name", "and", "price", "of", "the", "cheapest", "product", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 8, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "manufactory_1", "query": "SELECT T1.Name ,  max(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name", "query_toks": ["SELECT", "T1.Name", ",", "max", "(", "T1.Price", ")", ",", "T2.name", "FROM", "products", "AS", "T1", "JOIN", "Manufacturers", "AS", "T2", "ON", "T1.manufacturer", "=", "T2.code", "GROUP", "BY", "T2.name"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "max", "(", "t1", ".", "price", ")", ",", "t2", ".", "name", "from", "products", "as", "t1", "join", "manufacturers", "as", "t2", "on", "t1", ".", "manufacturer", "=", "t2", ".", "code", "group", "by", "t2", ".", "name"], "question": "Select the name of each manufacturer along with the name and price of its most expensive product.", "question_toks": ["Select", "the", "name", "of", "each", "manufacturer", "along", "with", "the", "name", "and", "price", "of", "its", "most", "expensive", "product", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [1, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "manufactory_1", "query": "SELECT T1.Name ,  max(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name", "query_toks": ["SELECT", "T1.Name", ",", "max", "(", "T1.Price", ")", ",", "T2.name", "FROM", "products", "AS", "T1", "JOIN", "Manufacturers", "AS", "T2", "ON", "T1.manufacturer", "=", "T2.code", "GROUP", "BY", "T2.name"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "max", "(", "t1", ".", "price", ")", ",", "t2", ".", "name", "from", "products", "as", "t1", "join", "manufacturers", "as", "t2", "on", "t1", ".", "manufacturer", "=", "t2", ".", "code", "group", "by", "t2", ".", "name"], "question": "For each manufacturer name, what are the names and prices of their most expensive product?", "question_toks": ["For", "each", "manufacturer", "name", ",", "what", "are", "the", "names", "and", "prices", "of", "their", "most", "expensive", "product", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [1, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "manufactory_1", "query": "SELECT code ,  name ,  min(price) FROM products GROUP BY name", "query_toks": ["SELECT", "code", ",", "name", ",", "min", "(", "price", ")", "FROM", "products", "GROUP", "BY", "name"], "query_toks_no_value": ["select", "code", ",", "name", ",", "min", "(", "price", ")", "from", "products", "group", "by", "name"], "question": "Select the code of the product that is cheapest in each product category.", "question_toks": ["Select", "the", "code", "of", "the", "product", "that", "is", "cheapest", "in", "each", "product", "category", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [2, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "manufactory_1", "query": "SELECT code ,  name ,  min(price) FROM products GROUP BY name", "query_toks": ["SELECT", "code", ",", "name", ",", "min", "(", "price", ")", "FROM", "products", "GROUP", "BY", "name"], "query_toks_no_value": ["select", "code", ",", "name", ",", "min", "(", "price", ")", "from", "products", "group", "by", "name"], "question": "What are the codes and names of the cheapest products in each category?", "question_toks": ["What", "are", "the", "codes", "and", "names", "of", "the", "cheapest", "products", "in", "each", "category", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [2, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_software_problems", "query": "SELECT problem_log_id ,  problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1", "query_toks": ["SELECT", "problem_log_id", ",", "problem_id", "FROM", "problem_log", "ORDER", "BY", "log_entry_date", "LIMIT", "1"], "query_toks_no_value": ["select", "problem_log_id", ",", "problem_id", "from", "problem_log", "order", "by", "log_entry_date", "limit", "value"], "question": "What is the oldest log id and its corresponding problem id?", "question_toks": ["What", "is", "the", "oldest", "log", "id", "and", "its", "corresponding", "problem", "id", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 8, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_software_problems", "query": "SELECT problem_log_id ,  problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1", "query_toks": ["SELECT", "problem_log_id", ",", "problem_id", "FROM", "problem_log", "ORDER", "BY", "log_entry_date", "LIMIT", "1"], "query_toks_no_value": ["select", "problem_log_id", ",", "problem_id", "from", "problem_log", "order", "by", "log_entry_date", "limit", "value"], "question": "Find the oldest log id and its corresponding problem id.", "question_toks": ["Find", "the", "oldest", "log", "id", "and", "its", "corresponding", "problem", "id", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 8, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_software_problems", "query": "SELECT problem_log_id ,  log_entry_date FROM problem_log WHERE problem_id = 10", "query_toks": ["SELECT", "problem_log_id", ",", "log_entry_date", "FROM", "problem_log", "WHERE", "problem_id", "=", "10"], "query_toks_no_value": ["select", "problem_log_id", ",", "log_entry_date", "from", "problem_log", "where", "problem_id", "=", "value"], "question": "Find all the ids and dates of the logs for the problem whose id is 10.", "question_toks": ["Find", "all", "the", "ids", "and", "dates", "of", "the", "logs", "for", "the", "problem", "whose", "id", "is", "10", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], 10.0, null]]}}, {"db_id": "tracking_software_problems", "query": "SELECT problem_log_id ,  log_entry_date FROM problem_log WHERE problem_id = 10", "query_toks": ["SELECT", "problem_log_id", ",", "log_entry_date", "FROM", "problem_log", "WHERE", "problem_id", "=", "10"], "query_toks_no_value": ["select", "problem_log_id", ",", "log_entry_date", "from", "problem_log", "where", "problem_id", "=", "value"], "question": "For the problem with id 10, return the ids and dates of its problem logs.", "question_toks": ["For", "the", "problem", "with", "id", "10", ",", "return", "the", "ids", "and", "dates", "of", "its", "problem", "logs", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], 10.0, null]]}}, {"db_id": "tracking_software_problems", "query": "SELECT problem_log_id ,  log_entry_description FROM problem_log", "query_toks": ["SELECT", "problem_log_id", ",", "log_entry_description", "FROM", "problem_log"], "query_toks_no_value": ["select", "problem_log_id", ",", "log_entry_description", "from", "problem_log"], "question": "List all the log ids and their descriptions from the problem logs.", "question_toks": ["List", "all", "the", "log", "ids", "and", "their", "descriptions", "from", "the", "problem", "logs", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_software_problems", "query": "SELECT problem_log_id ,  log_entry_description FROM problem_log", "query_toks": ["SELECT", "problem_log_id", ",", "log_entry_description", "FROM", "problem_log"], "query_toks_no_value": ["select", "problem_log_id", ",", "log_entry_description", "from", "problem_log"], "question": "What are the log id and entry description of each problem?", "question_toks": ["What", "are", "the", "log", "id", "and", "entry", "description", "of", "each", "problem", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_software_problems", "query": "SELECT DISTINCT staff_first_name ,  staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T2.problem_id = 1", "query_toks": ["SELECT", "DISTINCT", "staff_first_name", ",", "staff_last_name", "FROM", "staff", "AS", "T1", "JOIN", "problem_log", "AS", "T2", "ON", "T1.staff_id", "=", "T2.assigned_to_staff_id", "WHERE", "T2.problem_id", "=", "1"], "query_toks_no_value": ["select", "distinct", "staff_first_name", ",", "staff_last_name", "from", "staff", "as", "t1", "join", "problem_log", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "assigned_to_staff_id", "where", "t2", ".", "problem_id", "=", "value"], "question": "List the first and last names of all distinct staff members who are assigned to the problem whose id is 1.", "question_toks": ["List", "the", "first", "and", "last", "names", "of", "all", "distinct", "staff", "members", "who", "are", "assigned", "to", "the", "problem", "whose", "id", "is", "1", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 17, false], null], [0, 4, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 18, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], 1.0, null]]}}, {"db_id": "tracking_software_problems", "query": "SELECT DISTINCT staff_first_name ,  staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T2.problem_id = 1", "query_toks": ["SELECT", "DISTINCT", "staff_first_name", ",", "staff_last_name", "FROM", "staff", "AS", "T1", "JOIN", "problem_log", "AS", "T2", "ON", "T1.staff_id", "=", "T2.assigned_to_staff_id", "WHERE", "T2.problem_id", "=", "1"], "query_toks_no_value": ["select", "distinct", "staff_first_name", ",", "staff_last_name", "from", "staff", "as", "t1", "join", "problem_log", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "assigned_to_staff_id", "where", "t2", ".", "problem_id", "=", "value"], "question": "Which staff members are assigned to the problem with id 1? Give me their first and last names.", "question_toks": ["Which", "staff", "members", "are", "assigned", "to", "the", "problem", "with", "id", "1", "?", "Give", "me", "their", "first", "and", "last", "names", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 17, false], null], [0, 4, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 18, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], 1.0, null]]}}, {"db_id": "tracking_software_problems", "query": "SELECT DISTINCT T2.problem_id ,  T2.problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = \"Rylan\" AND T1.staff_last_name = \"Homenick\"", "query_toks": ["SELECT", "DISTINCT", "T2.problem_id", ",", "T2.problem_log_id", "FROM", "staff", "AS", "T1", "JOIN", "problem_log", "AS", "T2", "ON", "T1.staff_id", "=", "T2.assigned_to_staff_id", "WHERE", "T1.staff_first_name", "=", "``", "Rylan", "''", "AND", "T1.staff_last_name", "=", "``", "Homenick", "''"], "query_toks_no_value": ["select", "distinct", "t2", ".", "problem_id", ",", "t2", ".", "problem_log_id", "from", "staff", "as", "t1", "join", "problem_log", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "assigned_to_staff_id", "where", "t1", ".", "staff_first_name", "=", "value", "and", "t1", ".", "staff_last_name", "=", "value"], "question": "List the problem id and log id which are assigned to the staff named Rylan Homenick.", "question_toks": ["List", "the", "problem", "id", "and", "log", "id", "which", "are", "assigned", "to", "the", "staff", "named", "Rylan", "Homenick", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 17, false], null], [0, 4, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 5, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 18, false], null], "\"Rylan\"", null], "and", [false, 2, [0, [0, 19, false], null], "\"Homenick\"", null]]}}, {"db_id": "tracking_software_problems", "query": "SELECT DISTINCT T2.problem_id ,  T2.problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = \"Rylan\" AND T1.staff_last_name = \"Homenick\"", "query_toks": ["SELECT", "DISTINCT", "T2.problem_id", ",", "T2.problem_log_id", "FROM", "staff", "AS", "T1", "JOIN", "problem_log", "AS", "T2", "ON", "T1.staff_id", "=", "T2.assigned_to_staff_id", "WHERE", "T1.staff_first_name", "=", "``", "Rylan", "''", "AND", "T1.staff_last_name", "=", "``", "Homenick", "''"], "query_toks_no_value": ["select", "distinct", "t2", ".", "problem_id", ",", "t2", ".", "problem_log_id", "from", "staff", "as", "t1", "join", "problem_log", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "assigned_to_staff_id", "where", "t1", ".", "staff_first_name", "=", "value", "and", "t1", ".", "staff_last_name", "=", "value"], "question": "Which problem id and log id are assigned to the staff named Rylan Homenick?", "question_toks": ["Which", "problem", "id", "and", "log", "id", "are", "assigned", "to", "the", "staff", "named", "Rylan", "Homenick", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 17, false], null], [0, 4, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 5, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 18, false], null], "\"Rylan\"", null], "and", [false, 2, [0, [0, 19, false], null], "\"Homenick\"", null]]}}, {"db_id": "tracking_software_problems", "query": "SELECT count(*) ,  T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.product_name", "FROM", "product", "AS", "T1", "JOIN", "problems", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "GROUP", "BY", "T1.product_name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "product_name", "from", "product", "as", "t1", "join", "problems", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "group", "by", "t1", ".", "product_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "How many problems does the product with the most problems have? List the number of the problems and product name.", "question_toks": ["How", "many", "problems", "does", "the", "product", "with", "the", "most", "problems", "have", "?", "List", "the", "number", "of", "the", "problems", "and", "product", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 14, false], null], [0, 22, false], null]], "table_units": [["table_unit", 3], ["table_unit", 5]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_software_problems", "query": "SELECT count(*) ,  T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.product_name", "FROM", "product", "AS", "T1", "JOIN", "problems", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "GROUP", "BY", "T1.product_name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "product_name", "from", "product", "as", "t1", "join", "problems", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "group", "by", "t1", ".", "product_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which product has the most problems? Give me the number of problems and the product name.", "question_toks": ["Which", "product", "has", "the", "most", "problems", "?", "Give", "me", "the", "number", "of", "problems", "and", "the", "product", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 14, false], null], [0, 22, false], null]], "table_units": [["table_unit", 3], ["table_unit", 5]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_software_problems", "query": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T2.product_id", "FROM", "problems", "AS", "T1", "JOIN", "product", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "GROUP", "BY", "T2.product_id"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t2", ".", "product_id", "from", "problems", "as", "t1", "join", "product", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "group", "by", "t2", ".", "product_id"], "question": "For each product which has problems, what are the number of problems and the product id?", "question_toks": ["For", "each", "product", "which", "has", "problems", ",", "what", "are", "the", "number", "of", "problems", "and", "the", "product", "id", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 22, false], null], [0, 14, false], null]], "table_units": [["table_unit", 5], ["table_unit", 3]]}, "groupBy": [[0, 14, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_software_problems", "query": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T2.product_id", "FROM", "problems", "AS", "T1", "JOIN", "product", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "GROUP", "BY", "T2.product_id"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t2", ".", "product_id", "from", "problems", "as", "t1", "join", "product", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "group", "by", "t2", ".", "product_id"], "question": "For each product with some problems, list the count of problems and the product id.", "question_toks": ["For", "each", "product", "with", "some", "problems", ",", "list", "the", "count", "of", "problems", "and", "the", "product", "id", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 22, false], null], [0, 14, false], null]], "table_units": [["table_unit", 5], ["table_unit", 3]]}, "groupBy": [[0, 14, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_software_problems", "query": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > \"1986-11-13\" GROUP BY T2.product_id", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T2.product_id", "FROM", "problems", "AS", "T1", "JOIN", "product", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "WHERE", "T1.date_problem_reported", ">", "``", "1986-11-13", "''", "GROUP", "BY", "T2.product_id"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t2", ".", "product_id", "from", "problems", "as", "t1", "join", "product", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "where", "t1", ".", "date_problem_reported", ">", "value", "group", "by", "t2", ".", "product_id"], "question": "For each product that has problems, find the number of problems reported after 1986-11-13 and the product id?", "question_toks": ["For", "each", "product", "that", "has", "problems", ",", "find", "the", "number", "of", "problems", "reported", "after", "1986-11-13", "and", "the", "product", "id", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 22, false], null], [0, 14, false], null]], "table_units": [["table_unit", 5], ["table_unit", 3]]}, "groupBy": [[0, 14, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 25, false], null], "\"1986-11-13\"", null]]}}, {"db_id": "tracking_software_problems", "query": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > \"1986-11-13\" GROUP BY T2.product_id", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T2.product_id", "FROM", "problems", "AS", "T1", "JOIN", "product", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "WHERE", "T1.date_problem_reported", ">", "``", "1986-11-13", "''", "GROUP", "BY", "T2.product_id"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t2", ".", "product_id", "from", "problems", "as", "t1", "join", "product", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "where", "t1", ".", "date_problem_reported", ">", "value", "group", "by", "t2", ".", "product_id"], "question": "What are the products that have problems reported after 1986-11-13? Give me the product id and the count of problems reported after 1986-11-13.", "question_toks": ["What", "are", "the", "products", "that", "have", "problems", "reported", "after", "1986-11-13", "?", "Give", "me", "the", "product", "id", "and", "the", "count", "of", "problems", "reported", "after", "1986-11-13", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 22, false], null], [0, 14, false], null]], "table_units": [["table_unit", 5], ["table_unit", 3]]}, "groupBy": [[0, 14, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 25, false], null], "\"1986-11-13\"", null]]}}, {"db_id": "tracking_software_problems", "query": "SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"rem\" EXCEPT SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"aut\"", "query_toks": ["SELECT", "T3.staff_first_name", ",", "T3.staff_last_name", "FROM", "problems", "AS", "T1", "JOIN", "product", "AS", "T2", "JOIN", "staff", "AS", "T3", "ON", "T1.product_id", "=", "T2.product_id", "AND", "T1.reported_by_staff_id", "=", "T3.staff_id", "WHERE", "T2.product_name", "=", "``", "rem", "''", "EXCEPT", "SELECT", "T3.staff_first_name", ",", "T3.staff_last_name", "FROM", "problems", "AS", "T1", "JOIN", "product", "AS", "T2", "JOIN", "staff", "AS", "T3", "ON", "T1.product_id", "=", "T2.product_id", "AND", "T1.reported_by_staff_id", "=", "T3.staff_id", "WHERE", "T2.product_name", "=", "``", "aut", "''"], "query_toks_no_value": ["select", "t3", ".", "staff_first_name", ",", "t3", ".", "staff_last_name", "from", "problems", "as", "t1", "join", "product", "as", "t2", "join", "staff", "as", "t3", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "and", "t1", ".", "reported_by_staff_id", "=", "t3", ".", "staff_id", "where", "t2", ".", "product_name", "=", "value", "except", "select", "t3", ".", "staff_first_name", ",", "t3", ".", "staff_last_name", "from", "problems", "as", "t1", "join", "product", "as", "t2", "join", "staff", "as", "t3", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "and", "t1", ".", "reported_by_staff_id", "=", "t3", ".", "staff_id", "where", "t2", ".", "product_name", "=", "value"], "question": "Find the first and last name of the staff members who reported problems from the product \"rem\" but not \"aut\"?", "question_toks": ["Find", "the", "first", "and", "last", "name", "of", "the", "staff", "members", "who", "reported", "problems", "from", "the", "product", "``", "rem", "''", "but", "not", "``", "aut", "''", "?"], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 22, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 24, false], null], [0, 17, false], null]], "table_units": [["table_unit", 5], ["table_unit", 3], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 15, false], null], "\"aut\"", null]]}, "from": {"conds": [[false, 2, [0, [0, 22, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 24, false], null], [0, 17, false], null]], "table_units": [["table_unit", 5], ["table_unit", 3], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 15, false], null], "\"rem\"", null]]}}, {"db_id": "tracking_software_problems", "query": "SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"rem\" EXCEPT SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"aut\"", "query_toks": ["SELECT", "T3.staff_first_name", ",", "T3.staff_last_name", "FROM", "problems", "AS", "T1", "JOIN", "product", "AS", "T2", "JOIN", "staff", "AS", "T3", "ON", "T1.product_id", "=", "T2.product_id", "AND", "T1.reported_by_staff_id", "=", "T3.staff_id", "WHERE", "T2.product_name", "=", "``", "rem", "''", "EXCEPT", "SELECT", "T3.staff_first_name", ",", "T3.staff_last_name", "FROM", "problems", "AS", "T1", "JOIN", "product", "AS", "T2", "JOIN", "staff", "AS", "T3", "ON", "T1.product_id", "=", "T2.product_id", "AND", "T1.reported_by_staff_id", "=", "T3.staff_id", "WHERE", "T2.product_name", "=", "``", "aut", "''"], "query_toks_no_value": ["select", "t3", ".", "staff_first_name", ",", "t3", ".", "staff_last_name", "from", "problems", "as", "t1", "join", "product", "as", "t2", "join", "staff", "as", "t3", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "and", "t1", ".", "reported_by_staff_id", "=", "t3", ".", "staff_id", "where", "t2", ".", "product_name", "=", "value", "except", "select", "t3", ".", "staff_first_name", ",", "t3", ".", "staff_last_name", "from", "problems", "as", "t1", "join", "product", "as", "t2", "join", "staff", "as", "t3", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "and", "t1", ".", "reported_by_staff_id", "=", "t3", ".", "staff_id", "where", "t2", ".", "product_name", "=", "value"], "question": "Which staff members who reported problems from the product \"rem\" but not \"aut\"? Give me their first and last names.", "question_toks": ["Which", "staff", "members", "who", "reported", "problems", "from", "the", "product", "``", "rem", "''", "but", "not", "``", "aut", "''", "?", "Give", "me", "their", "first", "and", "last", "names", "."], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 22, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 24, false], null], [0, 17, false], null]], "table_units": [["table_unit", 5], ["table_unit", 3], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 15, false], null], "\"aut\"", null]]}, "from": {"conds": [[false, 2, [0, [0, 22, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 24, false], null], [0, 17, false], null]], "table_units": [["table_unit", 5], ["table_unit", 3], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 15, false], null], "\"rem\"", null]]}}, {"db_id": "shop_membership", "query": "SELECT name ,  address_road ,  city FROM branch ORDER BY open_year", "query_toks": ["SELECT", "name", ",", "address_road", ",", "city", "FROM", "branch", "ORDER", "BY", "open_year"], "query_toks_no_value": ["select", "name", ",", "address_road", ",", "city", "from", "branch", "order", "by", "open_year"], "question": "Show name, address road, and city for all branches sorted by open year.", "question_toks": ["Show", "name", ",", "address", "road", ",", "and", "city", "for", "all", "branches", "sorted", "by", "open", "year", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 8, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "shop_membership", "query": "SELECT name ,  address_road ,  city FROM branch ORDER BY open_year", "query_toks": ["SELECT", "name", ",", "address_road", ",", "city", "FROM", "branch", "ORDER", "BY", "open_year"], "query_toks_no_value": ["select", "name", ",", "address_road", ",", "city", "from", "branch", "order", "by", "open_year"], "question": "What are the names, address roads, and cities of the branches ordered by opening year?", "question_toks": ["What", "are", "the", "names", ",", "address", "roads", ",", "and", "cities", "of", "the", "branches", "ordered", "by", "opening", "year", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 8, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "shop_membership", "query": "SELECT min(membership_amount) ,  max(membership_amount) FROM branch WHERE open_year  =  2011 OR city  =  'London'", "query_toks": ["SELECT", "min", "(", "membership_amount", ")", ",", "max", "(", "membership_amount", ")", "FROM", "branch", "WHERE", "open_year", "=", "2011", "OR", "city", "=", "'London", "'"], "query_toks_no_value": ["select", "min", "(", "membership_amount", ")", ",", "max", "(", "membership_amount", ")", "from", "branch", "where", "open_year", "=", "value", "or", "city", "=", "value"], "question": "Show minimum and maximum amount of memberships for all branches opened in 2011 or located at city London.", "question_toks": ["Show", "minimum", "and", "maximum", "amount", "of", "memberships", "for", "all", "branches", "opened", "in", "2011", "or", "located", "at", "city", "London", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 11, false], null]], [1, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 8, false], null], 2011.0, null], "or", [false, 2, [0, [0, 10, false], null], "\"London\"", null]]}}, {"db_id": "shop_membership", "query": "SELECT min(membership_amount) ,  max(membership_amount) FROM branch WHERE open_year  =  2011 OR city  =  'London'", "query_toks": ["SELECT", "min", "(", "membership_amount", ")", ",", "max", "(", "membership_amount", ")", "FROM", "branch", "WHERE", "open_year", "=", "2011", "OR", "city", "=", "'London", "'"], "query_toks_no_value": ["select", "min", "(", "membership_amount", ")", ",", "max", "(", "membership_amount", ")", "from", "branch", "where", "open_year", "=", "value", "or", "city", "=", "value"], "question": "What are the minimum and maximum membership amounts for all branches that either opened in 2011 or are located in London?", "question_toks": ["What", "are", "the", "minimum", "and", "maximum", "membership", "amounts", "for", "all", "branches", "that", "either", "opened", "in", "2011", "or", "are", "located", "in", "London", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 11, false], null]], [1, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 8, false], null], 2011.0, null], "or", [false, 2, [0, [0, 10, false], null], "\"London\"", null]]}}, {"db_id": "shop_membership", "query": "SELECT city ,  count(*) FROM branch WHERE open_year  <  2010 GROUP BY city", "query_toks": ["SELECT", "city", ",", "count", "(", "*", ")", "FROM", "branch", "WHERE", "open_year", "<", "2010", "GROUP", "BY", "city"], "query_toks_no_value": ["select", "city", ",", "count", "(", "*", ")", "from", "branch", "where", "open_year", "<", "value", "group", "by", "city"], "question": "Show the city and the number of branches opened before 2010 for each city.", "question_toks": ["Show", "the", "city", "and", "the", "number", "of", "branches", "opened", "before", "2010", "for", "each", "city", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 8, false], null], 2010.0, null]]}}, {"db_id": "shop_membership", "query": "SELECT city ,  count(*) FROM branch WHERE open_year  <  2010 GROUP BY city", "query_toks": ["SELECT", "city", ",", "count", "(", "*", ")", "FROM", "branch", "WHERE", "open_year", "<", "2010", "GROUP", "BY", "city"], "query_toks_no_value": ["select", "city", ",", "count", "(", "*", ")", "from", "branch", "where", "open_year", "<", "value", "group", "by", "city"], "question": "For each city, how many branches opened before 2010?", "question_toks": ["For", "each", "city", ",", "how", "many", "branches", "opened", "before", "2010", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 8, false], null], 2010.0, null]]}}, {"db_id": "shop_membership", "query": "SELECT card_number ,  name ,  hometown FROM member ORDER BY LEVEL DESC", "query_toks": ["SELECT", "card_number", ",", "name", ",", "hometown", "FROM", "member", "ORDER", "BY", "LEVEL", "DESC"], "query_toks_no_value": ["select", "card_number", ",", "name", ",", "hometown", "from", "member", "order", "by", "level", "desc"], "question": "Show card number, name, and hometown for all members in a descending order of level.", "question_toks": ["Show", "card", "number", ",", "name", ",", "and", "hometown", "for", "all", "members", "in", "a", "descending", "order", "of", "level", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "shop_membership", "query": "SELECT card_number ,  name ,  hometown FROM member ORDER BY LEVEL DESC", "query_toks": ["SELECT", "card_number", ",", "name", ",", "hometown", "FROM", "member", "ORDER", "BY", "LEVEL", "DESC"], "query_toks_no_value": ["select", "card_number", ",", "name", ",", "hometown", "from", "member", "order", "by", "level", "desc"], "question": "What are the card numbers, names, and hometowns of every member ordered by descending level?", "question_toks": ["What", "are", "the", "card", "numbers", ",", "names", ",", "and", "hometowns", "of", "every", "member", "ordered", "by", "descending", "level", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "shop_membership", "query": "SELECT T3.name ,  T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id ORDER BY T1.register_year", "query_toks": ["SELECT", "T3.name", ",", "T2.name", "FROM", "membership_register_branch", "AS", "T1", "JOIN", "branch", "AS", "T2", "ON", "T1.branch_id", "=", "T2.branch_id", "JOIN", "member", "AS", "T3", "ON", "T1.member_id", "=", "T3.member_id", "ORDER", "BY", "T1.register_year"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "name", "from", "membership_register_branch", "as", "t1", "join", "branch", "as", "t2", "on", "t1", ".", "branch_id", "=", "t2", ".", "branch_id", "join", "member", "as", "t3", "on", "t1", ".", "member_id", "=", "t3", ".", "member_id", "order", "by", "t1", ".", "register_year"], "question": "Show all member names and registered branch names sorted by register year.", "question_toks": ["Show", "all", "member", "names", "and", "registered", "branch", "names", "sorted", "by", "register", "year", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 14, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "shop_membership", "query": "SELECT T3.name ,  T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id ORDER BY T1.register_year", "query_toks": ["SELECT", "T3.name", ",", "T2.name", "FROM", "membership_register_branch", "AS", "T1", "JOIN", "branch", "AS", "T2", "ON", "T1.branch_id", "=", "T2.branch_id", "JOIN", "member", "AS", "T3", "ON", "T1.member_id", "=", "T3.member_id", "ORDER", "BY", "T1.register_year"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "name", "from", "membership_register_branch", "as", "t1", "join", "branch", "as", "t2", "on", "t1", ".", "branch_id", "=", "t2", ".", "branch_id", "join", "member", "as", "t3", "on", "t1", ".", "member_id", "=", "t3", ".", "member_id", "order", "by", "t1", ".", "register_year"], "question": "What are the names of the members and branches at which they are registered sorted by year of registration?", "question_toks": ["What", "are", "the", "names", "of", "the", "members", "and", "branches", "at", "which", "they", "are", "registered", "sorted", "by", "year", "of", "registration", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 14, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "shop_membership", "query": "SELECT T2.name ,  count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  >  2015 GROUP BY T2.branch_id", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "membership_register_branch", "AS", "T1", "JOIN", "branch", "AS", "T2", "ON", "T1.branch_id", "=", "T2.branch_id", "WHERE", "T1.register_year", ">", "2015", "GROUP", "BY", "T2.branch_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "membership_register_branch", "as", "t1", "join", "branch", "as", "t2", "on", "t1", ".", "branch_id", "=", "t2", ".", "branch_id", "where", "t1", ".", "register_year", ">", "value", "group", "by", "t2", ".", "branch_id"], "question": "Show all branch names with the number of members in each branch registered after 2015.", "question_toks": ["Show", "all", "branch", "names", "with", "the", "number", "of", "members", "in", "each", "branch", "registered", "after", "2015", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 14, false], null], 2015.0, null]]}}, {"db_id": "shop_membership", "query": "SELECT T2.name ,  count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  >  2015 GROUP BY T2.branch_id", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "membership_register_branch", "AS", "T1", "JOIN", "branch", "AS", "T2", "ON", "T1.branch_id", "=", "T2.branch_id", "WHERE", "T1.register_year", ">", "2015", "GROUP", "BY", "T2.branch_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "membership_register_branch", "as", "t1", "join", "branch", "as", "t2", "on", "t1", ".", "branch_id", "=", "t2", ".", "branch_id", "where", "t1", ".", "register_year", ">", "value", "group", "by", "t2", ".", "branch_id"], "question": "For each branch id, what are the names of the branches that were registered after 2015?", "question_toks": ["For", "each", "branch", "id", ",", "what", "are", "the", "names", "of", "the", "branches", "that", "were", "registered", "after", "2015", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 14, false], null], 2015.0, null]]}}, {"db_id": "shop_membership", "query": "SELECT name ,  city FROM branch WHERE branch_id NOT IN (SELECT branch_id FROM membership_register_branch)", "query_toks": ["SELECT", "name", ",", "city", "FROM", "branch", "WHERE", "branch_id", "NOT", "IN", "(", "SELECT", "branch_id", "FROM", "membership_register_branch", ")"], "query_toks_no_value": ["select", "name", ",", "city", "from", "branch", "where", "branch_id", "not", "in", "(", "select", "branch_id", "from", "membership_register_branch", ")"], "question": "List the branch name and city without any registered members.", "question_toks": ["List", "the", "branch", "name", "and", "city", "without", "any", "registered", "members", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 6, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "shop_membership", "query": "SELECT name ,  city FROM branch WHERE branch_id NOT IN (SELECT branch_id FROM membership_register_branch)", "query_toks": ["SELECT", "name", ",", "city", "FROM", "branch", "WHERE", "branch_id", "NOT", "IN", "(", "SELECT", "branch_id", "FROM", "membership_register_branch", ")"], "query_toks_no_value": ["select", "name", ",", "city", "from", "branch", "where", "branch_id", "not", "in", "(", "select", "branch_id", "from", "membership_register_branch", ")"], "question": "What are the names and cities of the branches that do not have any registered members?", "question_toks": ["What", "are", "the", "names", "and", "cities", "of", "the", "branches", "that", "do", "not", "have", "any", "registered", "members", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 6, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "shop_membership", "query": "SELECT T2.name ,  T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  =  2016 GROUP BY T2.branch_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", ",", "T2.open_year", "FROM", "membership_register_branch", "AS", "T1", "JOIN", "branch", "AS", "T2", "ON", "T1.branch_id", "=", "T2.branch_id", "WHERE", "T1.register_year", "=", "2016", "GROUP", "BY", "T2.branch_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "open_year", "from", "membership_register_branch", "as", "t1", "join", "branch", "as", "t2", "on", "t1", ".", "branch_id", "=", "t2", ".", "branch_id", "where", "t1", ".", "register_year", "=", "value", "group", "by", "t2", ".", "branch_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name and open year for the branch with most number of memberships registered in 2016?", "question_toks": ["What", "is", "the", "name", "and", "open", "year", "for", "the", "branch", "with", "most", "number", "of", "memberships", "registered", "in", "2016", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], 2016.0, null]]}}, {"db_id": "shop_membership", "query": "SELECT T2.name ,  T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  =  2016 GROUP BY T2.branch_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", ",", "T2.open_year", "FROM", "membership_register_branch", "AS", "T1", "JOIN", "branch", "AS", "T2", "ON", "T1.branch_id", "=", "T2.branch_id", "WHERE", "T1.register_year", "=", "2016", "GROUP", "BY", "T2.branch_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "open_year", "from", "membership_register_branch", "as", "t1", "join", "branch", "as", "t2", "on", "t1", ".", "branch_id", "=", "t2", ".", "branch_id", "where", "t1", ".", "register_year", "=", "value", "group", "by", "t2", ".", "branch_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name and opening year for the branch that registered the most members in 2016?", "question_toks": ["What", "is", "the", "name", "and", "opening", "year", "for", "the", "branch", "that", "registered", "the", "most", "members", "in", "2016", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], 2016.0, null]]}}, {"db_id": "shop_membership", "query": "SELECT T2.name ,  T2.hometown FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T1.register_year  =  2016", "query_toks": ["SELECT", "T2.name", ",", "T2.hometown", "FROM", "membership_register_branch", "AS", "T1", "JOIN", "member", "AS", "T2", "ON", "T1.member_id", "=", "T2.member_id", "WHERE", "T1.register_year", "=", "2016"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "hometown", "from", "membership_register_branch", "as", "t1", "join", "member", "as", "t2", "on", "t1", ".", "member_id", "=", "t2", ".", "member_id", "where", "t1", ".", "register_year", "=", "value"], "question": "Show the member name and hometown who registered a branch in 2016.", "question_toks": ["Show", "the", "member", "name", "and", "hometown", "who", "registered", "a", "branch", "in", "2016", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 12, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], 2016.0, null]]}}, {"db_id": "shop_membership", "query": "SELECT T2.name ,  T2.hometown FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T1.register_year  =  2016", "query_toks": ["SELECT", "T2.name", ",", "T2.hometown", "FROM", "membership_register_branch", "AS", "T1", "JOIN", "member", "AS", "T2", "ON", "T1.member_id", "=", "T2.member_id", "WHERE", "T1.register_year", "=", "2016"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "hometown", "from", "membership_register_branch", "as", "t1", "join", "member", "as", "t2", "on", "t1", ".", "member_id", "=", "t2", ".", "member_id", "where", "t1", ".", "register_year", "=", "value"], "question": "What are the member names and hometowns of those who registered at a branch in 2016?", "question_toks": ["What", "are", "the", "member", "names", "and", "hometowns", "of", "those", "who", "registered", "at", "a", "branch", "in", "2016", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 12, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], 2016.0, null]]}}, {"db_id": "voter_2", "query": "SELECT max(Age) ,  min(Age) FROM STUDENT WHERE Major  =  600", "query_toks": ["SELECT", "max", "(", "Age", ")", ",", "min", "(", "Age", ")", "FROM", "STUDENT", "WHERE", "Major", "=", "600"], "query_toks_no_value": ["select", "max", "(", "age", ")", ",", "min", "(", "age", ")", "from", "student", "where", "major", "=", "value"], "question": "What are the maximum and minimum age of students with major 600?", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "age", "of", "students", "with", "major", "600", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 4, false], null]], [2, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], 600.0, null]]}}, {"db_id": "voter_2", "query": "SELECT max(Age) ,  min(Age) FROM STUDENT WHERE Major  =  600", "query_toks": ["SELECT", "max", "(", "Age", ")", ",", "min", "(", "Age", ")", "FROM", "STUDENT", "WHERE", "Major", "=", "600"], "query_toks_no_value": ["select", "max", "(", "age", ")", ",", "min", "(", "age", ")", "from", "student", "where", "major", "=", "value"], "question": "Tell me the ages of the oldest and youngest students studying major 600.", "question_toks": ["Tell", "me", "the", "ages", "of", "the", "oldest", "and", "youngest", "students", "studying", "major", "600", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 4, false], null]], [2, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], 600.0, null]]}}, {"db_id": "voter_2", "query": "SELECT DISTINCT Registration_Date ,  Election_Cycle FROM VOTING_RECORD", "query_toks": ["SELECT", "DISTINCT", "Registration_Date", ",", "Election_Cycle", "FROM", "VOTING_RECORD"], "query_toks_no_value": ["select", "distinct", "registration_date", ",", "election_cycle", "from", "voting_record"], "question": "Report the distinct registration date and the election cycle.", "question_toks": ["Report", "the", "distinct", "registration", "date", "and", "the", "election", "cycle", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "voter_2", "query": "SELECT DISTINCT Registration_Date ,  Election_Cycle FROM VOTING_RECORD", "query_toks": ["SELECT", "DISTINCT", "Registration_Date", ",", "Election_Cycle", "FROM", "VOTING_RECORD"], "query_toks_no_value": ["select", "distinct", "registration_date", ",", "election_cycle", "from", "voting_record"], "question": "What are the distinct registration dates and the election cycles?", "question_toks": ["What", "are", "the", "distinct", "registration", "dates", "and", "the", "election", "cycles", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "voter_2", "query": "SELECT DISTINCT President_Vote ,  VICE_President_Vote FROM VOTING_RECORD", "query_toks": ["SELECT", "DISTINCT", "President_Vote", ",", "VICE_President_Vote", "FROM", "VOTING_RECORD"], "query_toks_no_value": ["select", "distinct", "president_vote", ",", "vice_president_vote", "from", "voting_record"], "question": "Report the distinct president vote and the vice president vote.", "question_toks": ["Report", "the", "distinct", "president", "vote", "and", "the", "vice", "president", "vote", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "voter_2", "query": "SELECT DISTINCT President_Vote ,  VICE_President_Vote FROM VOTING_RECORD", "query_toks": ["SELECT", "DISTINCT", "President_Vote", ",", "VICE_President_Vote", "FROM", "VOTING_RECORD"], "query_toks_no_value": ["select", "distinct", "president_vote", ",", "vice_president_vote", "from", "voting_record"], "question": "List all the distinct president votes and the vice president votes.", "question_toks": ["List", "all", "the", "distinct", "president", "votes", "and", "the", "vice", "president", "votes", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "voter_2", "query": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.President_VOTE WHERE T1.sex  =  \"F\"", "query_toks": ["SELECT", "DISTINCT", "T1.Fname", ",", "T1.LName", "FROM", "STUDENT", "AS", "T1", "JOIN", "VOTING_RECORD", "AS", "T2", "ON", "T1.StuID", "=", "T2.President_VOTE", "WHERE", "T1.sex", "=", "``", "F", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "student", "as", "t1", "join", "voting_record", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "president_vote", "where", "t1", ".", "sex", "=", "value"], "question": "Find the first and last names of all the female (sex is F) students who have president votes.", "question_toks": ["Find", "the", "first", "and", "last", "names", "of", "all", "the", "female", "(", "sex", "is", "F", ")", "students", "who", "have", "president", "votes", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 12, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"F\"", null]]}}, {"db_id": "voter_2", "query": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.President_VOTE WHERE T1.sex  =  \"F\"", "query_toks": ["SELECT", "DISTINCT", "T1.Fname", ",", "T1.LName", "FROM", "STUDENT", "AS", "T1", "JOIN", "VOTING_RECORD", "AS", "T2", "ON", "T1.StuID", "=", "T2.President_VOTE", "WHERE", "T1.sex", "=", "``", "F", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "student", "as", "t1", "join", "voting_record", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "president_vote", "where", "t1", ".", "sex", "=", "value"], "question": "What are the first and last names of all the female students who have president votes?", "question_toks": ["What", "are", "the", "first", "and", "last", "names", "of", "all", "the", "female", "students", "who", "have", "president", "votes", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 12, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"F\"", null]]}}, {"db_id": "voter_2", "query": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_President_VOTE WHERE T1.age  =  18", "query_toks": ["SELECT", "DISTINCT", "T1.Fname", ",", "T1.LName", "FROM", "STUDENT", "AS", "T1", "JOIN", "VOTING_RECORD", "AS", "T2", "ON", "T1.StuID", "=", "T2.VICE_President_VOTE", "WHERE", "T1.age", "=", "18"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "student", "as", "t1", "join", "voting_record", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "vice_president_vote", "where", "t1", ".", "age", "=", "value"], "question": "Find the first and last name of all the students of age 18 who have vice president votes.", "question_toks": ["Find", "the", "first", "and", "last", "name", "of", "all", "the", "students", "of", "age", "18", "who", "have", "vice", "president", "votes", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], 18.0, null]]}}, {"db_id": "voter_2", "query": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_President_VOTE WHERE T1.age  =  18", "query_toks": ["SELECT", "DISTINCT", "T1.Fname", ",", "T1.LName", "FROM", "STUDENT", "AS", "T1", "JOIN", "VOTING_RECORD", "AS", "T2", "ON", "T1.StuID", "=", "T2.VICE_President_VOTE", "WHERE", "T1.age", "=", "18"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "student", "as", "t1", "join", "voting_record", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "vice_president_vote", "where", "t1", ".", "age", "=", "value"], "question": "What are the first names and last names of the students who are 18 years old and have vice president votes.", "question_toks": ["What", "are", "the", "first", "names", "and", "last", "names", "of", "the", "students", "who", "are", "18", "years", "old", "and", "have", "vice", "president", "votes", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], 18.0, null]]}}, {"db_id": "voter_2", "query": "SELECT Advisor ,  count(*) FROM STUDENT GROUP BY Advisor", "query_toks": ["SELECT", "Advisor", ",", "count", "(", "*", ")", "FROM", "STUDENT", "GROUP", "BY", "Advisor"], "query_toks_no_value": ["select", "advisor", ",", "count", "(", "*", ")", "from", "student", "group", "by", "advisor"], "question": "For each advisor, report the total number of students advised by him or her.", "question_toks": ["For", "each", "advisor", ",", "report", "the", "total", "number", "of", "students", "advised", "by", "him", "or", "her", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "voter_2", "query": "SELECT Advisor ,  count(*) FROM STUDENT GROUP BY Advisor", "query_toks": ["SELECT", "Advisor", ",", "count", "(", "*", ")", "FROM", "STUDENT", "GROUP", "BY", "Advisor"], "query_toks_no_value": ["select", "advisor", ",", "count", "(", "*", ")", "from", "student", "group", "by", "advisor"], "question": "How many students does each advisor have?", "question_toks": ["How", "many", "students", "does", "each", "advisor", "have", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "voter_2", "query": "SELECT Election_Cycle ,  count(*) FROM VOTING_RECORD GROUP BY Election_Cycle", "query_toks": ["SELECT", "Election_Cycle", ",", "count", "(", "*", ")", "FROM", "VOTING_RECORD", "GROUP", "BY", "Election_Cycle"], "query_toks_no_value": ["select", "election_cycle", ",", "count", "(", "*", ")", "from", "voting_record", "group", "by", "election_cycle"], "question": "For each election cycle, report the number of voting records.", "question_toks": ["For", "each", "election", "cycle", ",", "report", "the", "number", "of", "voting", "records", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 11, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "voter_2", "query": "SELECT Election_Cycle ,  count(*) FROM VOTING_RECORD GROUP BY Election_Cycle", "query_toks": ["SELECT", "Election_Cycle", ",", "count", "(", "*", ")", "FROM", "VOTING_RECORD", "GROUP", "BY", "Election_Cycle"], "query_toks_no_value": ["select", "election_cycle", ",", "count", "(", "*", ")", "from", "voting_record", "group", "by", "election_cycle"], "question": "Count the number of voting records for each election cycle.", "question_toks": ["Count", "the", "number", "of", "voting", "records", "for", "each", "election", "cycle", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 11, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "products_gen_characteristics", "query": "SELECT product_name ,  typical_buying_price FROM products", "query_toks": ["SELECT", "product_name", ",", "typical_buying_price", "FROM", "products"], "query_toks_no_value": ["select", "product_name", ",", "typical_buying_price", "from", "products"], "question": "What are the names and buying prices of all the products?", "question_toks": ["What", "are", "the", "names", "and", "buying", "prices", "of", "all", "the", "products", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "products_gen_characteristics", "query": "SELECT product_name ,  typical_buying_price FROM products", "query_toks": ["SELECT", "product_name", ",", "typical_buying_price", "FROM", "products"], "query_toks_no_value": ["select", "product_name", ",", "typical_buying_price", "from", "products"], "question": "Return the names and typical buying prices for all products.", "question_toks": ["Return", "the", "names", "and", "typical", "buying", "prices", "for", "all", "products", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "products_gen_characteristics", "query": "SELECT T1.product_name ,  T2.color_description ,  T1.product_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE product_category_code  =  \"Herbs\"", "query_toks": ["SELECT", "T1.product_name", ",", "T2.color_description", ",", "T1.product_description", "FROM", "products", "AS", "T1", "JOIN", "Ref_colors", "AS", "T2", "ON", "T1.color_code", "=", "T2.color_code", "WHERE", "product_category_code", "=", "``", "Herbs", "''"], "query_toks_no_value": ["select", "t1", ".", "product_name", ",", "t2", ".", "color_description", ",", "t1", ".", "product_description", "from", "products", "as", "t1", "join", "ref_colors", "as", "t2", "on", "t1", ".", "color_code", "=", "t2", ".", "color_code", "where", "product_category_code", "=", "value"], "question": "List the names, color descriptions and product descriptions of products with category \"Herbs\".", "question_toks": ["List", "the", "names", ",", "color", "descriptions", "and", "product", "descriptions", "of", "products", "with", "category", "``", "Herbs", "''", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 14, false], null], [0, 3, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 15, false], null], "\"Herbs\"", null]]}}, {"db_id": "products_gen_characteristics", "query": "SELECT T1.product_name ,  T2.color_description ,  T1.product_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE product_category_code  =  \"Herbs\"", "query_toks": ["SELECT", "T1.product_name", ",", "T2.color_description", ",", "T1.product_description", "FROM", "products", "AS", "T1", "JOIN", "Ref_colors", "AS", "T2", "ON", "T1.color_code", "=", "T2.color_code", "WHERE", "product_category_code", "=", "``", "Herbs", "''"], "query_toks_no_value": ["select", "t1", ".", "product_name", ",", "t2", ".", "color_description", ",", "t1", ".", "product_description", "from", "products", "as", "t1", "join", "ref_colors", "as", "t2", "on", "t1", ".", "color_code", "=", "t2", ".", "color_code", "where", "product_category_code", "=", "value"], "question": "What are the names, color descriptions, and product descriptions for products in the 'Herbs' category?", "question_toks": ["What", "are", "the", "names", ",", "color", "descriptions", ",", "and", "product", "descriptions", "for", "products", "in", "the", "'Herbs", "'", "category", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 14, false], null], [0, 3, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 15, false], null], "\"Herbs\"", null]]}}, {"db_id": "products_gen_characteristics", "query": "SELECT product_category_code ,  typical_buying_price FROM products WHERE product_name  =  \"cumin\"", "query_toks": ["SELECT", "product_category_code", ",", "typical_buying_price", "FROM", "products", "WHERE", "product_name", "=", "``", "cumin", "''"], "query_toks_no_value": ["select", "product_category_code", ",", "typical_buying_price", "from", "products", "where", "product_name", "=", "value"], "question": "What is the category and typical buying price  of the product with name \"cumin\"?", "question_toks": ["What", "is", "the", "category", "and", "typical", "buying", "price", "of", "the", "product", "with", "name", "``", "cumin", "''", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 16, false], null], "\"cumin\"", null]]}}, {"db_id": "products_gen_characteristics", "query": "SELECT product_category_code ,  typical_buying_price FROM products WHERE product_name  =  \"cumin\"", "query_toks": ["SELECT", "product_category_code", ",", "typical_buying_price", "FROM", "products", "WHERE", "product_name", "=", "``", "cumin", "''"], "query_toks_no_value": ["select", "product_category_code", ",", "typical_buying_price", "from", "products", "where", "product_name", "=", "value"], "question": "Return the category code and typical price of 'cumin'.", "question_toks": ["Return", "the", "category", "code", "and", "typical", "price", "of", "'cumin", "'", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 16, false], null], "\"cumin\"", null]]}}, {"db_id": "products_gen_characteristics", "query": "SELECT t1.color_code ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"chervil\"", "query_toks": ["SELECT", "t1.color_code", ",", "t2.color_description", "FROM", "products", "AS", "t1", "JOIN", "ref_colors", "AS", "t2", "ON", "t1.color_code", "=", "t2.color_code", "WHERE", "t1.product_name", "=", "``", "chervil", "''"], "query_toks_no_value": ["select", "t1", ".", "color_code", ",", "t2", ".", "color_description", "from", "products", "as", "t1", "join", "ref_colors", "as", "t2", "on", "t1", ".", "color_code", "=", "t2", ".", "color_code", "where", "t1", ".", "product_name", "=", "value"], "question": "What is the color code and description of the product named \"chervil\"?", "question_toks": ["What", "is", "the", "color", "code", "and", "description", "of", "the", "product", "named", "``", "chervil", "''", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 14, false], null], [0, 3, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 16, false], null], "\"chervil\"", null]]}}, {"db_id": "products_gen_characteristics", "query": "SELECT t1.color_code ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"chervil\"", "query_toks": ["SELECT", "t1.color_code", ",", "t2.color_description", "FROM", "products", "AS", "t1", "JOIN", "ref_colors", "AS", "t2", "ON", "t1.color_code", "=", "t2.color_code", "WHERE", "t1.product_name", "=", "``", "chervil", "''"], "query_toks_no_value": ["select", "t1", ".", "color_code", ",", "t2", ".", "color_description", "from", "products", "as", "t1", "join", "ref_colors", "as", "t2", "on", "t1", ".", "color_code", "=", "t2", ".", "color_code", "where", "t1", ".", "product_name", "=", "value"], "question": "Return the color code and description for the product with the name 'chervil'.", "question_toks": ["Return", "the", "color", "code", "and", "description", "for", "the", "product", "with", "the", "name", "'chervil", "'", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 14, false], null], [0, 3, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 16, false], null], "\"chervil\"", null]]}}, {"db_id": "products_gen_characteristics", "query": "SELECT t1.product_id ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code JOIN product_characteristics AS t3 ON t1.product_id  =  t3.product_id GROUP BY t1.product_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "t1.product_id", ",", "t2.color_description", "FROM", "products", "AS", "t1", "JOIN", "ref_colors", "AS", "t2", "ON", "t1.color_code", "=", "t2.color_code", "JOIN", "product_characteristics", "AS", "t3", "ON", "t1.product_id", "=", "t3.product_id", "GROUP", "BY", "t1.product_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "product_id", ",", "t2", ".", "color_description", "from", "products", "as", "t1", "join", "ref_colors", "as", "t2", "on", "t1", ".", "color_code", "=", "t2", ".", "color_code", "join", "product_characteristics", "as", "t3", "on", "t1", ".", "product_id", "=", "t3", ".", "product_id", "group", "by", "t1", ".", "product_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Find the id and color description of the products with at least 2 characteristics.", "question_toks": ["Find", "the", "id", "and", "color", "description", "of", "the", "products", "with", "at", "least", "2", "characteristics", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 14, false], null], [0, 3, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [[0, 13, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "products_gen_characteristics", "query": "SELECT t1.product_id ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code JOIN product_characteristics AS t3 ON t1.product_id  =  t3.product_id GROUP BY t1.product_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "t1.product_id", ",", "t2.color_description", "FROM", "products", "AS", "t1", "JOIN", "ref_colors", "AS", "t2", "ON", "t1.color_code", "=", "t2.color_code", "JOIN", "product_characteristics", "AS", "t3", "ON", "t1.product_id", "=", "t3.product_id", "GROUP", "BY", "t1.product_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "product_id", ",", "t2", ".", "color_description", "from", "products", "as", "t1", "join", "ref_colors", "as", "t2", "on", "t1", ".", "color_code", "=", "t2", ".", "color_code", "join", "product_characteristics", "as", "t3", "on", "t1", ".", "product_id", "=", "t3", ".", "product_id", "group", "by", "t1", ".", "product_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the product ids and color descriptions for products with two or more characteristics?", "question_toks": ["What", "are", "the", "product", "ids", "and", "color", "descriptions", "for", "products", "with", "two", "or", "more", "characteristics", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 14, false], null], [0, 3, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [[0, 13, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "products_gen_characteristics", "query": "SELECT t1.product_name ,  t1.typical_buying_price ,  t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"yellow\"", "query_toks": ["SELECT", "t1.product_name", ",", "t1.typical_buying_price", ",", "t1.typical_selling_price", "FROM", "products", "AS", "t1", "JOIN", "ref_colors", "AS", "t2", "ON", "t1.color_code", "=", "t2.color_code", "WHERE", "t2.color_description", "=", "``", "yellow", "''"], "query_toks_no_value": ["select", "t1", ".", "product_name", ",", "t1", ".", "typical_buying_price", ",", "t1", ".", "typical_selling_price", "from", "products", "as", "t1", "join", "ref_colors", "as", "t2", "on", "t1", ".", "color_code", "=", "t2", ".", "color_code", "where", "t2", ".", "color_description", "=", "value"], "question": "What are the name and typical buying and selling prices of the products that have color described as \"yellow\"?", "question_toks": ["What", "are", "the", "name", "and", "typical", "buying", "and", "selling", "prices", "of", "the", "products", "that", "have", "color", "described", "as", "``", "yellow", "''", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 14, false], null], [0, 3, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"yellow\"", null]]}}, {"db_id": "products_gen_characteristics", "query": "SELECT t1.product_name ,  t1.typical_buying_price ,  t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"yellow\"", "query_toks": ["SELECT", "t1.product_name", ",", "t1.typical_buying_price", ",", "t1.typical_selling_price", "FROM", "products", "AS", "t1", "JOIN", "ref_colors", "AS", "t2", "ON", "t1.color_code", "=", "t2.color_code", "WHERE", "t2.color_description", "=", "``", "yellow", "''"], "query_toks_no_value": ["select", "t1", ".", "product_name", ",", "t1", ".", "typical_buying_price", ",", "t1", ".", "typical_selling_price", "from", "products", "as", "t1", "join", "ref_colors", "as", "t2", "on", "t1", ".", "color_code", "=", "t2", ".", "color_code", "where", "t2", ".", "color_description", "=", "value"], "question": "Return the names and typical buying and selling prices for products that have 'yellow' as their color description.", "question_toks": ["Return", "the", "names", "and", "typical", "buying", "and", "selling", "prices", "for", "products", "that", "have", "'yellow", "'", "as", "their", "color", "description", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 14, false], null], [0, 3, false], null]], "table_units": [["table_unit", 4], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"yellow\"", null]]}}, {"db_id": "products_gen_characteristics", "query": "SELECT t3.characteristic_name ,  t3.characteristic_data_type FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"cumin\"", "query_toks": ["SELECT", "t3.characteristic_name", ",", "t3.characteristic_data_type", "FROM", "products", "AS", "t1", "JOIN", "product_characteristics", "AS", "t2", "ON", "t1.product_id", "=", "t2.product_id", "JOIN", "CHARACTERISTICS", "AS", "t3", "ON", "t2.characteristic_id", "=", "t3.characteristic_id", "WHERE", "t1.product_name", "=", "``", "cumin", "''"], "query_toks_no_value": ["select", "t3", ".", "characteristic_name", ",", "t3", ".", "characteristic_data_type", "from", "products", "as", "t1", "join", "product_characteristics", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "characteristics", "as", "t3", "on", "t2", ".", "characteristic_id", "=", "t3", ".", "characteristic_id", "where", "t1", ".", "product_name", "=", "value"], "question": "List all the characteristic names and data types of product \"cumin\".", "question_toks": ["List", "all", "the", "characteristic", "names", "and", "data", "types", "of", "product", "``", "cumin", "''", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 21, false], null]], "table_units": [["table_unit", 4], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 16, false], null], "\"cumin\"", null]]}}, {"db_id": "products_gen_characteristics", "query": "SELECT t3.characteristic_name ,  t3.characteristic_data_type FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"cumin\"", "query_toks": ["SELECT", "t3.characteristic_name", ",", "t3.characteristic_data_type", "FROM", "products", "AS", "t1", "JOIN", "product_characteristics", "AS", "t2", "ON", "t1.product_id", "=", "t2.product_id", "JOIN", "CHARACTERISTICS", "AS", "t3", "ON", "t2.characteristic_id", "=", "t3.characteristic_id", "WHERE", "t1.product_name", "=", "``", "cumin", "''"], "query_toks_no_value": ["select", "t3", ".", "characteristic_name", ",", "t3", ".", "characteristic_data_type", "from", "products", "as", "t1", "join", "product_characteristics", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "characteristics", "as", "t3", "on", "t2", ".", "characteristic_id", "=", "t3", ".", "characteristic_id", "where", "t1", ".", "product_name", "=", "value"], "question": "What are the names and data types of the characteristics of the 'cumin' product?", "question_toks": ["What", "are", "the", "names", "and", "data", "types", "of", "the", "characteristics", "of", "the", "'cumin", "'", "product", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 21, false], null]], "table_units": [["table_unit", 4], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 16, false], null], "\"cumin\"", null]]}}, {"db_id": "products_gen_characteristics", "query": "SELECT product_category_description ,  unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Herbs\"", "query_toks": ["SELECT", "product_category_description", ",", "unit_of_measure", "FROM", "ref_product_categories", "WHERE", "product_category_code", "=", "``", "Herbs", "''"], "query_toks_no_value": ["select", "product_category_description", ",", "unit_of_measure", "from", "ref_product_categories", "where", "product_category_code", "=", "value"], "question": "What is the product category description and unit of measurement of category \"Herbs\"?", "question_toks": ["What", "is", "the", "product", "category", "description", "and", "unit", "of", "measurement", "of", "category", "``", "Herbs", "''", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"Herbs\"", null]]}}, {"db_id": "products_gen_characteristics", "query": "SELECT product_category_description ,  unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Herbs\"", "query_toks": ["SELECT", "product_category_description", ",", "unit_of_measure", "FROM", "ref_product_categories", "WHERE", "product_category_code", "=", "``", "Herbs", "''"], "query_toks_no_value": ["select", "product_category_description", ",", "unit_of_measure", "from", "ref_product_categories", "where", "product_category_code", "=", "value"], "question": "Return the description and unit of measurement for products in the 'Herbs' category.", "question_toks": ["Return", "the", "description", "and", "unit", "of", "measurement", "for", "products", "in", "the", "'Herbs", "'", "category", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"Herbs\"", null]]}}, {"db_id": "products_gen_characteristics", "query": "SELECT t2.unit_of_measure ,  t2.product_category_code FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"chervil\"", "query_toks": ["SELECT", "t2.unit_of_measure", ",", "t2.product_category_code", "FROM", "products", "AS", "t1", "JOIN", "ref_product_categories", "AS", "t2", "ON", "t1.product_category_code", "=", "t2.product_category_code", "WHERE", "t1.product_name", "=", "``", "chervil", "''"], "query_toks_no_value": ["select", "t2", ".", "unit_of_measure", ",", "t2", ".", "product_category_code", "from", "products", "as", "t1", "join", "ref_product_categories", "as", "t2", "on", "t1", ".", "product_category_code", "=", "t2", ".", "product_category_code", "where", "t1", ".", "product_name", "=", "value"], "question": "Find the unit of measurement and product category code of product named \"chervil\".", "question_toks": ["Find", "the", "unit", "of", "measurement", "and", "product", "category", "code", "of", "product", "named", "``", "chervil", "''", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 5, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 16, false], null], "\"chervil\"", null]]}}, {"db_id": "products_gen_characteristics", "query": "SELECT t2.unit_of_measure ,  t2.product_category_code FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"chervil\"", "query_toks": ["SELECT", "t2.unit_of_measure", ",", "t2.product_category_code", "FROM", "products", "AS", "t1", "JOIN", "ref_product_categories", "AS", "t2", "ON", "t1.product_category_code", "=", "t2.product_category_code", "WHERE", "t1.product_name", "=", "``", "chervil", "''"], "query_toks_no_value": ["select", "t2", ".", "unit_of_measure", ",", "t2", ".", "product_category_code", "from", "products", "as", "t1", "join", "ref_product_categories", "as", "t2", "on", "t1", ".", "product_category_code", "=", "t2", ".", "product_category_code", "where", "t1", ".", "product_name", "=", "value"], "question": "What are the unit of measure and category code for the 'chervil' product?", "question_toks": ["What", "are", "the", "unit", "of", "measure", "and", "category", "code", "for", "the", "'chervil", "'", "product", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 5, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 16, false], null], "\"chervil\"", null]]}}, {"db_id": "products_gen_characteristics", "query": "SELECT characteristic_name ,  other_characteristic_details ,  characteristic_data_type FROM CHARACTERISTICS EXCEPT SELECT t1.characteristic_name ,  t1.other_characteristic_details ,  t1.characteristic_data_type FROM CHARACTERISTICS AS t1 JOIN product_characteristics AS t2 ON t1.characteristic_id  =  t2.characteristic_id", "query_toks": ["SELECT", "characteristic_name", ",", "other_characteristic_details", ",", "characteristic_data_type", "FROM", "CHARACTERISTICS", "EXCEPT", "SELECT", "t1.characteristic_name", ",", "t1.other_characteristic_details", ",", "t1.characteristic_data_type", "FROM", "CHARACTERISTICS", "AS", "t1", "JOIN", "product_characteristics", "AS", "t2", "ON", "t1.characteristic_id", "=", "t2.characteristic_id"], "query_toks_no_value": ["select", "characteristic_name", ",", "other_characteristic_details", ",", "characteristic_data_type", "from", "characteristics", "except", "select", "t1", ".", "characteristic_name", ",", "t1", ".", "other_characteristic_details", ",", "t1", ".", "characteristic_data_type", "from", "characteristics", "as", "t1", "join", "product_characteristics", "as", "t2", "on", "t1", ".", "characteristic_id", "=", "t2", ".", "characteristic_id"], "question": "What are the names, details and data types of the characteristics which are never used by any product?", "question_toks": ["What", "are", "the", "names", ",", "details", "and", "data", "types", "of", "the", "characteristics", "which", "are", "never", "used", "by", "any", "product", "?"], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 22, false], null]], "table_units": [["table_unit", 3], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "products_gen_characteristics", "query": "SELECT characteristic_name ,  other_characteristic_details ,  characteristic_data_type FROM CHARACTERISTICS EXCEPT SELECT t1.characteristic_name ,  t1.other_characteristic_details ,  t1.characteristic_data_type FROM CHARACTERISTICS AS t1 JOIN product_characteristics AS t2 ON t1.characteristic_id  =  t2.characteristic_id", "query_toks": ["SELECT", "characteristic_name", ",", "other_characteristic_details", ",", "characteristic_data_type", "FROM", "CHARACTERISTICS", "EXCEPT", "SELECT", "t1.characteristic_name", ",", "t1.other_characteristic_details", ",", "t1.characteristic_data_type", "FROM", "CHARACTERISTICS", "AS", "t1", "JOIN", "product_characteristics", "AS", "t2", "ON", "t1.characteristic_id", "=", "t2.characteristic_id"], "query_toks_no_value": ["select", "characteristic_name", ",", "other_characteristic_details", ",", "characteristic_data_type", "from", "characteristics", "except", "select", "t1", ".", "characteristic_name", ",", "t1", ".", "other_characteristic_details", ",", "t1", ".", "characteristic_data_type", "from", "characteristics", "as", "t1", "join", "product_characteristics", "as", "t2", "on", "t1", ".", "characteristic_id", "=", "t2", ".", "characteristic_id"], "question": "Give the names, details, and data types of characteristics that are not found in any product.", "question_toks": ["Give", "the", "names", ",", "details", ",", "and", "data", "types", "of", "characteristics", "that", "are", "not", "found", "in", "any", "product", "."], "sql": {"except": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 22, false], null]], "table_units": [["table_unit", 3], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "swimming", "query": "SELECT country ,  count(*) FROM stadium GROUP BY country", "query_toks": ["SELECT", "country", ",", "count", "(", "*", ")", "FROM", "stadium", "GROUP", "BY", "country"], "query_toks_no_value": ["select", "country", ",", "count", "(", "*", ")", "from", "stadium", "group", "by", "country"], "question": "How many stadiums does each country have?", "question_toks": ["How", "many", "stadiums", "does", "each", "country", "have", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 16, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "swimming", "query": "SELECT nationality ,  count(*) FROM swimmer GROUP BY nationality HAVING count(*)  >  1", "query_toks": ["SELECT", "nationality", ",", "count", "(", "*", ")", "FROM", "swimmer", "GROUP", "BY", "nationality", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "nationality", ",", "count", "(", "*", ")", "from", "swimmer", "group", "by", "nationality", "having", "count", "(", "*", ")", ">", "value"], "question": "List countries that have more than one swimmer.", "question_toks": ["List", "countries", "that", "have", "more", "than", "one", "swimmer", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "swimming", "query": "SELECT meter_200 ,  meter_300 FROM swimmer WHERE nationality  =  'Australia'", "query_toks": ["SELECT", "meter_200", ",", "meter_300", "FROM", "swimmer", "WHERE", "nationality", "=", "'Australia", "'"], "query_toks_no_value": ["select", "meter_200", ",", "meter_300", "from", "swimmer", "where", "nationality", "=", "value"], "question": "Find all 200 meter and 300 meter results of swimmers with nationality \"Australia\".", "question_toks": ["Find", "all", "200", "meter", "and", "300", "meter", "results", "of", "swimmers", "with", "nationality", "``", "Australia", "''", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], "\"Australia\"", null]]}}, {"db_id": "swimming", "query": "SELECT t1.name ,  t1.capacity FROM stadium AS t1 JOIN event AS t2 ON t1.id  =  t2.stadium_id WHERE t2.name  =  'World Junior'", "query_toks": ["SELECT", "t1.name", ",", "t1.capacity", "FROM", "stadium", "AS", "t1", "JOIN", "event", "AS", "t2", "ON", "t1.id", "=", "t2.stadium_id", "WHERE", "t2.name", "=", "'World", "Junior", "'"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "capacity", "from", "stadium", "as", "t1", "join", "event", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "stadium_id", "where", "t2", ".", "name", "=", "value"], "question": "Find the name and capacity of the stadium where the event named \"World Junior\" happened.", "question_toks": ["Find", "the", "name", "and", "capacity", "of", "the", "stadium", "where", "the", "event", "named", "``", "World", "Junior", "''", "happened", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 12, false], null], [0, 20, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 19, false], null], "\"World Junior\"", null]]}}, {"db_id": "swimming", "query": "SELECT t1.name ,  t1.nationality FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win' GROUP BY t2.swimmer_id HAVING count(*)  >  1", "query_toks": ["SELECT", "t1.name", ",", "t1.nationality", "FROM", "swimmer", "AS", "t1", "JOIN", "record", "AS", "t2", "ON", "t1.id", "=", "t2.swimmer_id", "WHERE", "RESULT", "=", "'Win", "'", "GROUP", "BY", "t2.swimmer_id", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "nationality", "from", "swimmer", "as", "t1", "join", "record", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "swimmer_id", "where", "result", "=", "value", "group", "by", "t2", ".", "swimmer_id", "having", "count", "(", "*", ")", ">", "value"], "question": "Find the name and nationality of the swimmer who has won (i.e., has a result of \"win\") more than 1 time.", "question_toks": ["Find", "the", "name", "and", "nationality", "of", "the", "swimmer", "who", "has", "won", "(", "i.e.", ",", "has", "a", "result", "of", "``", "win", "''", ")", "more", "than", "1", "time", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 24, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [[0, 24, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 23, false], null], "\"Win\"", null]]}}, {"db_id": "railway", "query": "SELECT Wheels ,  LOCATION FROM railway", "query_toks": ["SELECT", "Wheels", ",", "LOCATION", "FROM", "railway"], "query_toks_no_value": ["select", "wheels", ",", "location", "from", "railway"], "question": "List the wheels and locations of the railways.", "question_toks": ["List", "the", "wheels", "and", "locations", "of", "the", "railways", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "railway", "query": "SELECT Name ,  Arrival FROM train", "query_toks": ["SELECT", "Name", ",", "Arrival", "FROM", "train"], "query_toks_no_value": ["select", "name", ",", "arrival", "from", "train"], "question": "What are the names and arrival times of trains?", "question_toks": ["What", "are", "the", "names", "and", "arrival", "times", "of", "trains", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "railway", "query": "SELECT T2.Name ,  T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID", "query_toks": ["SELECT", "T2.Name", ",", "T1.Location", "FROM", "railway", "AS", "T1", "JOIN", "train", "AS", "T2", "ON", "T1.Railway_ID", "=", "T2.Railway_ID"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t1", ".", "location", "from", "railway", "as", "t1", "join", "train", "as", "t2", "on", "t1", ".", "railway_id", "=", "t2", ".", "railway_id"], "question": "Show the names of trains and locations of railways they are in.", "question_toks": ["Show", "the", "names", "of", "trains", "and", "locations", "of", "railways", "they", "are", "in", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "railway", "query": "SELECT T2.Railway_ID ,  T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID GROUP BY T2.Railway_ID HAVING COUNT(*)  >  1", "query_toks": ["SELECT", "T2.Railway_ID", ",", "T1.Location", "FROM", "railway", "AS", "T1", "JOIN", "train", "AS", "T2", "ON", "T1.Railway_ID", "=", "T2.Railway_ID", "GROUP", "BY", "T2.Railway_ID", "HAVING", "COUNT", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t2", ".", "railway_id", ",", "t1", ".", "location", "from", "railway", "as", "t1", "join", "train", "as", "t2", "on", "t1", ".", "railway_id", "=", "t2", ".", "railway_id", "group", "by", "t2", ".", "railway_id", "having", "count", "(", "*", ")", ">", "value"], "question": "Show id and location of railways that are associated with more than one train.", "question_toks": ["Show", "id", "and", "location", "of", "railways", "that", "are", "associated", "with", "more", "than", "one", "train", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 13, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "railway", "query": "SELECT T2.Railway_ID ,  T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID GROUP BY T2.Railway_ID ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.Railway_ID", ",", "T1.Builder", "FROM", "railway", "AS", "T1", "JOIN", "train", "AS", "T2", "ON", "T1.Railway_ID", "=", "T2.Railway_ID", "GROUP", "BY", "T2.Railway_ID", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "railway_id", ",", "t1", ".", "builder", "from", "railway", "as", "t1", "join", "train", "as", "t2", "on", "t1", ".", "railway_id", "=", "t2", ".", "railway_id", "group", "by", "t2", ".", "railway_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Show the id and builder of the railway that are associated with the most trains.", "question_toks": ["Show", "the", "id", "and", "builder", "of", "the", "railway", "that", "are", "associated", "with", "the", "most", "trains", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "railway", "query": "SELECT Builder ,  COUNT(*) FROM railway GROUP BY Builder", "query_toks": ["SELECT", "Builder", ",", "COUNT", "(", "*", ")", "FROM", "railway", "GROUP", "BY", "Builder"], "query_toks_no_value": ["select", "builder", ",", "count", "(", "*", ")", "from", "railway", "group", "by", "builder"], "question": "Show different builders of railways, along with the corresponding number of railways using each builder.", "question_toks": ["Show", "different", "builders", "of", "railways", ",", "along", "with", "the", "corresponding", "number", "of", "railways", "using", "each", "builder", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "railway", "query": "SELECT LOCATION ,  COUNT(*) FROM railway GROUP BY LOCATION", "query_toks": ["SELECT", "LOCATION", ",", "COUNT", "(", "*", ")", "FROM", "railway", "GROUP", "BY", "LOCATION"], "query_toks_no_value": ["select", "location", ",", "count", "(", "*", ")", "from", "railway", "group", "by", "location"], "question": "Show different locations of railways along with the corresponding number of railways at each location.", "question_toks": ["Show", "different", "locations", "of", "railways", "along", "with", "the", "corresponding", "number", "of", "railways", "at", "each", "location", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_products_contacts", "query": "SELECT state_province_county ,  count(*) FROM addresses GROUP BY state_province_county", "query_toks": ["SELECT", "state_province_county", ",", "count", "(", "*", ")", "FROM", "addresses", "GROUP", "BY", "state_province_county"], "query_toks_no_value": ["select", "state_province_county", ",", "count", "(", "*", ")", "from", "addresses", "group", "by", "state_province_county"], "question": "Show each state and the number of addresses in each state.", "question_toks": ["Show", "each", "state", "and", "the", "number", "of", "addresses", "in", "each", "state", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_products_contacts", "query": "SELECT customer_name ,  customer_phone FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM customer_address_history)", "query_toks": ["SELECT", "customer_name", ",", "customer_phone", "FROM", "customers", "WHERE", "customer_id", "NOT", "IN", "(", "SELECT", "customer_id", "FROM", "customer_address_history", ")"], "query_toks_no_value": ["select", "customer_name", ",", "customer_phone", "from", "customers", "where", "customer_id", "not", "in", "(", "select", "customer_id", "from", "customer_address_history", ")"], "question": "Show names and phones of customers who do not have address information.", "question_toks": ["Show", "names", "and", "phones", "of", "customers", "who", "do", "not", "have", "address", "information", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 11, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 24, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "customers_and_products_contacts", "query": "SELECT customer_name ,  customer_phone ,  payment_method_code FROM customers ORDER BY customer_number DESC", "query_toks": ["SELECT", "customer_name", ",", "customer_phone", ",", "payment_method_code", "FROM", "customers", "ORDER", "BY", "customer_number", "DESC"], "query_toks_no_value": ["select", "customer_name", ",", "customer_phone", ",", "payment_method_code", "from", "customers", "order", "by", "customer_number", "desc"], "question": "Show the name, phone, and payment method code for all customers in descending order of customer number.", "question_toks": ["Show", "the", "name", ",", "phone", ",", "and", "payment", "method", "code", "for", "all", "customers", "in", "descending", "order", "of", "customer", "number", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 13, false], null]]], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_products_contacts", "query": "SELECT T1.product_name ,  sum(T2.order_quantity) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id", "query_toks": ["SELECT", "T1.product_name", ",", "sum", "(", "T2.order_quantity", ")", "FROM", "products", "AS", "T1", "JOIN", "order_items", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "GROUP", "BY", "T1.product_id"], "query_toks_no_value": ["select", "t1", ".", "product_name", ",", "sum", "(", "t2", ".", "order_quantity", ")", "from", "products", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "group", "by", "t1", ".", "product_id"], "question": "Show the product name and total order quantity for each product.", "question_toks": ["Show", "the", "product", "name", "and", "total", "order", "quantity", "for", "each", "product", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 34, false], null]], "table_units": [["table_unit", 1], ["table_unit", 6]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [4, [0, [0, 35, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_products_contacts", "query": "SELECT min(product_price) ,  max(product_price) ,  avg(product_price) FROM products", "query_toks": ["SELECT", "min", "(", "product_price", ")", ",", "max", "(", "product_price", ")", ",", "avg", "(", "product_price", ")", "FROM", "products"], "query_toks_no_value": ["select", "min", "(", "product_price", ")", ",", "max", "(", "product_price", ")", ",", "avg", "(", "product_price", ")", "from", "products"], "question": "Show the minimum, maximum, average price for all products.", "question_toks": ["Show", "the", "minimum", ",", "maximum", ",", "average", "price", "for", "all", "products", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 10, false], null]], [1, [0, [0, 10, false], null]], [5, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_products_contacts", "query": "SELECT T2.customer_name ,  T3.city ,  T1.date_from ,  T1.date_to FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id JOIN addresses AS T3 ON T1.address_id  =  T3.address_id", "query_toks": ["SELECT", "T2.customer_name", ",", "T3.city", ",", "T1.date_from", ",", "T1.date_to", "FROM", "customer_address_history", "AS", "T1", "JOIN", "customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "JOIN", "addresses", "AS", "T3", "ON", "T1.address_id", "=", "T3.address_id"], "query_toks_no_value": ["select", "t2", ".", "customer_name", ",", "t3", ".", "city", ",", "t1", ".", "date_from", ",", "t1", ".", "date_to", "from", "customer_address_history", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "addresses", "as", "t3", "on", "t1", ".", "address_id", "=", "t3", ".", "address_id"], "question": "Show the customer name, customer address city, date from, and date to for each customer address history.", "question_toks": ["Show", "the", "customer", "name", ",", "customer", "address", "city", ",", "date", "from", ",", "and", "date", "to", "for", "each", "customer", "address", "history", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 24, false], null], [0, 11, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 26, false], null]], [0, [0, [0, 27, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_products_contacts", "query": "SELECT  T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T3.order_id  =  T2.order_id GROUP BY T1.customer_id ORDER BY sum(T3.order_quantity) DESC LIMIT 1", "query_toks": ["SELECT", "T1.customer_name", ",", "T1.customer_phone", "FROM", "customers", "AS", "T1", "JOIN", "customer_orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "JOIN", "order_items", "AS", "T3", "ON", "T3.order_id", "=", "T2.order_id", "GROUP", "BY", "T1.customer_id", "ORDER", "BY", "sum", "(", "T3.order_quantity", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "customer_name", ",", "t1", ".", "customer_phone", "from", "customers", "as", "t1", "join", "customer_orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "order_items", "as", "t3", "on", "t3", ".", "order_id", "=", "t2", ".", "order_id", "group", "by", "t1", ".", "customer_id", "order", "by", "sum", "(", "t3", ".", "order_quantity", ")", "desc", "limit", "value"], "question": "What are the name and phone of the customer with the most ordered product quantity?", "question_toks": ["What", "are", "the", "name", "and", "phone", "of", "the", "customer", "with", "the", "most", "ordered", "product", "quantity", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 29, false], null]], "table_units": [["table_unit", 2], ["table_unit", 5]]}, "groupBy": [[0, 11, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [4, 35, false], null]]], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_products_contacts", "query": "SELECT product_type_code ,  product_name FROM products WHERE product_price  >  1000 OR product_price  <  500", "query_toks": ["SELECT", "product_type_code", ",", "product_name", "FROM", "products", "WHERE", "product_price", ">", "1000", "OR", "product_price", "<", "500"], "query_toks_no_value": ["select", "product_type_code", ",", "product_name", "from", "products", "where", "product_price", ">", "value", "or", "product_price", "<", "value"], "question": "Show the product type and name for the products with price higher than 1000 or lower than 500.", "question_toks": ["Show", "the", "product", "type", "and", "name", "for", "the", "products", "with", "price", "higher", "than", "1000", "or", "lower", "than", "500", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 10, false], null], 1000.0, null], "or", [false, 4, [0, [0, 10, false], null], 500.0, null]]}}, {"db_id": "dorm_1", "query": "SELECT avg(age) ,  city_code FROM student GROUP BY city_code", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "city_code", "FROM", "student", "GROUP", "BY", "city_code"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "city_code", "from", "student", "group", "by", "city_code"], "question": "Find the average age of all students living in the each city.", "question_toks": ["Find", "the", "average", "age", "of", "all", "students", "living", "in", "the", "each", "city", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "dorm_1", "query": "SELECT avg(age) ,  city_code FROM student GROUP BY city_code", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "city_code", "FROM", "student", "GROUP", "BY", "city_code"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "city_code", "from", "student", "group", "by", "city_code"], "question": "What is the average age for each city and what are those cities?", "question_toks": ["What", "is", "the", "average", "age", "for", "each", "city", "and", "what", "are", "those", "cities", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "dorm_1", "query": "SELECT avg(student_capacity) ,  sum(student_capacity) FROM dorm WHERE gender  =  'X'", "query_toks": ["SELECT", "avg", "(", "student_capacity", ")", ",", "sum", "(", "student_capacity", ")", "FROM", "dorm", "WHERE", "gender", "=", "'X", "'"], "query_toks_no_value": ["select", "avg", "(", "student_capacity", ")", ",", "sum", "(", "student_capacity", ")", "from", "dorm", "where", "gender", "=", "value"], "question": "Find the average and total capacity of dorms for the students with gender X.", "question_toks": ["Find", "the", "average", "and", "total", "capacity", "of", "dorms", "for", "the", "students", "with", "gender", "X", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 11, false], null]], [4, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"X\"", null]]}}, {"db_id": "dorm_1", "query": "SELECT avg(student_capacity) ,  sum(student_capacity) FROM dorm WHERE gender  =  'X'", "query_toks": ["SELECT", "avg", "(", "student_capacity", ")", ",", "sum", "(", "student_capacity", ")", "FROM", "dorm", "WHERE", "gender", "=", "'X", "'"], "query_toks_no_value": ["select", "avg", "(", "student_capacity", ")", ",", "sum", "(", "student_capacity", ")", "from", "dorm", "where", "gender", "=", "value"], "question": "What is the average and total capacity for all dorms who are of gender X?", "question_toks": ["What", "is", "the", "average", "and", "total", "capacity", "for", "all", "dorms", "who", "are", "of", "gender", "X", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 11, false], null]], [4, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"X\"", null]]}}, {"db_id": "dorm_1", "query": "SELECT student_capacity ,  gender FROM dorm WHERE dorm_name LIKE '%Donor%'", "query_toks": ["SELECT", "student_capacity", ",", "gender", "FROM", "dorm", "WHERE", "dorm_name", "LIKE", "'", "%", "Donor", "%", "'"], "query_toks_no_value": ["select", "student_capacity", ",", "gender", "from", "dorm", "where", "dorm_name", "like", "value"], "question": "Find the capacity and gender type of the dorm whose name has substring \u2018Donor\u2019.", "question_toks": ["Find", "the", "capacity", "and", "gender", "type", "of", "the", "dorm", "whose", "name", "has", "substring", "\u2018Donor\u2019", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 10, false], null], "\"%Donor%\"", null]]}}, {"db_id": "dorm_1", "query": "SELECT student_capacity ,  gender FROM dorm WHERE dorm_name LIKE '%Donor%'", "query_toks": ["SELECT", "student_capacity", ",", "gender", "FROM", "dorm", "WHERE", "dorm_name", "LIKE", "'", "%", "Donor", "%", "'"], "query_toks_no_value": ["select", "student_capacity", ",", "gender", "from", "dorm", "where", "dorm_name", "like", "value"], "question": "What is the student capacity and type of gender for the dorm whose name as the phrase Donor in it?", "question_toks": ["What", "is", "the", "student", "capacity", "and", "type", "of", "gender", "for", "the", "dorm", "whose", "name", "as", "the", "phrase", "Donor", "in", "it", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 10, false], null], "\"%Donor%\"", null]]}}, {"db_id": "dorm_1", "query": "SELECT dorm_name ,  gender FROM dorm WHERE student_capacity  >  300 OR student_capacity  <  100", "query_toks": ["SELECT", "dorm_name", ",", "gender", "FROM", "dorm", "WHERE", "student_capacity", ">", "300", "OR", "student_capacity", "<", "100"], "query_toks_no_value": ["select", "dorm_name", ",", "gender", "from", "dorm", "where", "student_capacity", ">", "value", "or", "student_capacity", "<", "value"], "question": "Find the name and gender type of the dorms whose capacity is greater than 300 or less than 100.", "question_toks": ["Find", "the", "name", "and", "gender", "type", "of", "the", "dorms", "whose", "capacity", "is", "greater", "than", "300", "or", "less", "than", "100", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 11, false], null], 300.0, null], "or", [false, 4, [0, [0, 11, false], null], 100.0, null]]}}, {"db_id": "dorm_1", "query": "SELECT dorm_name ,  gender FROM dorm WHERE student_capacity  >  300 OR student_capacity  <  100", "query_toks": ["SELECT", "dorm_name", ",", "gender", "FROM", "dorm", "WHERE", "student_capacity", ">", "300", "OR", "student_capacity", "<", "100"], "query_toks_no_value": ["select", "dorm_name", ",", "gender", "from", "dorm", "where", "student_capacity", ">", "value", "or", "student_capacity", "<", "value"], "question": "What are the names and types of the dorms that have a capacity greater than 300 or less than 100?", "question_toks": ["What", "are", "the", "names", "and", "types", "of", "the", "dorms", "that", "have", "a", "capacity", "greater", "than", "300", "or", "less", "than", "100", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 11, false], null], 300.0, null], "or", [false, 4, [0, [0, 11, false], null], 100.0, null]]}}, {"db_id": "dorm_1", "query": "SELECT count(DISTINCT major) ,  count(DISTINCT city_code) FROM student", "query_toks": ["SELECT", "count", "(", "DISTINCT", "major", ")", ",", "count", "(", "DISTINCT", "city_code", ")", "FROM", "student"], "query_toks_no_value": ["select", "count", "(", "distinct", "major", ")", ",", "count", "(", "distinct", "city_code", ")", "from", "student"], "question": "Find the numbers of different majors and cities.", "question_toks": ["Find", "the", "numbers", "of", "different", "majors", "and", "cities", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 6, true], null]], [3, [0, [0, 8, true], null]]]], "union": null, "where": []}}, {"db_id": "dorm_1", "query": "SELECT count(DISTINCT major) ,  count(DISTINCT city_code) FROM student", "query_toks": ["SELECT", "count", "(", "DISTINCT", "major", ")", ",", "count", "(", "DISTINCT", "city_code", ")", "FROM", "student"], "query_toks_no_value": ["select", "count", "(", "distinct", "major", ")", ",", "count", "(", "distinct", "city_code", ")", "from", "student"], "question": "How many different majors are there and how many different city codes are there for each student?", "question_toks": ["How", "many", "different", "majors", "are", "there", "and", "how", "many", "different", "city", "codes", "are", "there", "for", "each", "student", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 6, true], null]], [3, [0, [0, 8, true], null]]]], "union": null, "where": []}}, {"db_id": "dorm_1", "query": "SELECT fname ,  lname FROM student WHERE age  <  (SELECT avg(age) FROM student)", "query_toks": ["SELECT", "fname", ",", "lname", "FROM", "student", "WHERE", "age", "<", "(", "SELECT", "avg", "(", "age", ")", "FROM", "student", ")"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "student", "where", "age", "<", "(", "select", "avg", "(", "age", ")", "from", "student", ")"], "question": "Find the first and last name of students whose age is younger than the average age.", "question_toks": ["Find", "the", "first", "and", "last", "name", "of", "students", "whose", "age", "is", "younger", "than", "the", "average", "age", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 4, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "dorm_1", "query": "SELECT fname ,  lname FROM student WHERE age  <  (SELECT avg(age) FROM student)", "query_toks": ["SELECT", "fname", ",", "lname", "FROM", "student", "WHERE", "age", "<", "(", "SELECT", "avg", "(", "age", ")", "FROM", "student", ")"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "student", "where", "age", "<", "(", "select", "avg", "(", "age", ")", "from", "student", ")"], "question": "What is the first and last name of all students who are younger than average?", "question_toks": ["What", "is", "the", "first", "and", "last", "name", "of", "all", "students", "who", "are", "younger", "than", "average", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 4, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "dorm_1", "query": "SELECT fname ,  lname FROM student WHERE city_code != 'HKG' ORDER BY age", "query_toks": ["SELECT", "fname", ",", "lname", "FROM", "student", "WHERE", "city_code", "!", "=", "'HKG", "'", "ORDER", "BY", "age"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "student", "where", "city_code", "!", "=", "value", "order", "by", "age"], "question": "List the first and last name of students who are not living in the city with code HKG, and sorted the results by their ages.", "question_toks": ["List", "the", "first", "and", "last", "name", "of", "students", "who", "are", "not", "living", "in", "the", "city", "with", "code", "HKG", ",", "and", "sorted", "the", "results", "by", "their", "ages", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 4, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 8, false], null], "\"HKG\"", null]]}}, {"db_id": "dorm_1", "query": "SELECT fname ,  lname FROM student WHERE city_code != 'HKG' ORDER BY age", "query_toks": ["SELECT", "fname", ",", "lname", "FROM", "student", "WHERE", "city_code", "!", "=", "'HKG", "'", "ORDER", "BY", "age"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "student", "where", "city_code", "!", "=", "value", "order", "by", "age"], "question": "What are the first and last names of all students who are not living in the city HKG and order the results by age?", "question_toks": ["What", "are", "the", "first", "and", "last", "names", "of", "all", "students", "who", "are", "not", "living", "in", "the", "city", "HKG", "and", "order", "the", "results", "by", "age", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 4, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 8, false], null], "\"HKG\"", null]]}}, {"db_id": "dorm_1", "query": "SELECT count(*) ,  sum(student_capacity) ,  gender FROM dorm GROUP BY gender", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "sum", "(", "student_capacity", ")", ",", "gender", "FROM", "dorm", "GROUP", "BY", "gender"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "sum", "(", "student_capacity", ")", ",", "gender", "from", "dorm", "group", "by", "gender"], "question": "Find the number of dorms and total capacity for each gender.", "question_toks": ["Find", "the", "number", "of", "dorms", "and", "total", "capacity", "for", "each", "gender", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [4, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "dorm_1", "query": "SELECT count(*) ,  sum(student_capacity) ,  gender FROM dorm GROUP BY gender", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "sum", "(", "student_capacity", ")", ",", "gender", "FROM", "dorm", "GROUP", "BY", "gender"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "sum", "(", "student_capacity", ")", ",", "gender", "from", "dorm", "group", "by", "gender"], "question": "How many dorms are there and what is the total capacity for each gender?", "question_toks": ["How", "many", "dorms", "are", "there", "and", "what", "is", "the", "total", "capacity", "for", "each", "gender", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [4, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "dorm_1", "query": "SELECT avg(age) ,  max(age) ,  sex FROM student GROUP BY sex", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "max", "(", "age", ")", ",", "sex", "FROM", "student", "GROUP", "BY", "sex"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "max", "(", "age", ")", ",", "sex", "from", "student", "group", "by", "sex"], "question": "Find the average and oldest age for students with different sex.", "question_toks": ["Find", "the", "average", "and", "oldest", "age", "for", "students", "with", "different", "sex", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]], [1, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "dorm_1", "query": "SELECT avg(age) ,  max(age) ,  sex FROM student GROUP BY sex", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "max", "(", "age", ")", ",", "sex", "FROM", "student", "GROUP", "BY", "sex"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "max", "(", "age", ")", ",", "sex", "from", "student", "group", "by", "sex"], "question": "What is the average and oldest age for each gender of student?", "question_toks": ["What", "is", "the", "average", "and", "oldest", "age", "for", "each", "gender", "of", "student", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]], [1, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "dorm_1", "query": "SELECT count(*) ,  major FROM student GROUP BY major", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "major", "FROM", "student", "GROUP", "BY", "major"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "major", "from", "student", "group", "by", "major"], "question": "Find the number of students in each major.", "question_toks": ["Find", "the", "number", "of", "students", "in", "each", "major", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "dorm_1", "query": "SELECT count(*) ,  major FROM student GROUP BY major", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "major", "FROM", "student", "GROUP", "BY", "major"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "major", "from", "student", "group", "by", "major"], "question": "How many students are there in each major?", "question_toks": ["How", "many", "students", "are", "there", "in", "each", "major", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "dorm_1", "query": "SELECT count(*) ,  avg(age) ,  city_code FROM student GROUP BY city_code", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "avg", "(", "age", ")", ",", "city_code", "FROM", "student", "GROUP", "BY", "city_code"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "avg", "(", "age", ")", ",", "city_code", "from", "student", "group", "by", "city_code"], "question": "Find the number and average age of students living in each city.", "question_toks": ["Find", "the", "number", "and", "average", "age", "of", "students", "living", "in", "each", "city", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [5, [0, [0, 4, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "dorm_1", "query": "SELECT count(*) ,  avg(age) ,  city_code FROM student GROUP BY city_code", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "avg", "(", "age", ")", ",", "city_code", "FROM", "student", "GROUP", "BY", "city_code"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "avg", "(", "age", ")", ",", "city_code", "from", "student", "group", "by", "city_code"], "question": "How many students live in each city and what are their average ages?", "question_toks": ["How", "many", "students", "live", "in", "each", "city", "and", "what", "are", "their", "average", "ages", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [5, [0, [0, 4, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "dorm_1", "query": "SELECT count(*) ,  avg(age) ,  city_code FROM student WHERE sex  =  'M' GROUP BY city_code", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "avg", "(", "age", ")", ",", "city_code", "FROM", "student", "WHERE", "sex", "=", "'M", "'", "GROUP", "BY", "city_code"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "avg", "(", "age", ")", ",", "city_code", "from", "student", "where", "sex", "=", "value", "group", "by", "city_code"], "question": "Find the average age and number of male students (with sex M) from each city.", "question_toks": ["Find", "the", "average", "age", "and", "number", "of", "male", "students", "(", "with", "sex", "M", ")", "from", "each", "city", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [5, [0, [0, 4, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"M\"", null]]}}, {"db_id": "dorm_1", "query": "SELECT count(*) ,  avg(age) ,  city_code FROM student WHERE sex  =  'M' GROUP BY city_code", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "avg", "(", "age", ")", ",", "city_code", "FROM", "student", "WHERE", "sex", "=", "'M", "'", "GROUP", "BY", "city_code"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "avg", "(", "age", ")", ",", "city_code", "from", "student", "where", "sex", "=", "value", "group", "by", "city_code"], "question": "What is the average age and how many male students are there in each city?", "question_toks": ["What", "is", "the", "average", "age", "and", "how", "many", "male", "students", "are", "there", "in", "each", "city", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [5, [0, [0, 4, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], "\"M\"", null]]}}, {"db_id": "dorm_1", "query": "SELECT count(*) ,  city_code FROM student GROUP BY city_code HAVING count(*)  >  1", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "city_code", "FROM", "student", "GROUP", "BY", "city_code", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "city_code", "from", "student", "group", "by", "city_code", "having", "count", "(", "*", ")", ">", "value"], "question": "Find the number of students for the cities where have more than one student.", "question_toks": ["Find", "the", "number", "of", "students", "for", "the", "cities", "where", "have", "more", "than", "one", "student", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 8, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "dorm_1", "query": "SELECT count(*) ,  city_code FROM student GROUP BY city_code HAVING count(*)  >  1", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "city_code", "FROM", "student", "GROUP", "BY", "city_code", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "city_code", "from", "student", "group", "by", "city_code", "having", "count", "(", "*", ")", ">", "value"], "question": "How many students are from each city, and which cities have more than one cities?", "question_toks": ["How", "many", "students", "are", "from", "each", "city", ",", "and", "which", "cities", "have", "more", "than", "one", "cities", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 8, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "dorm_1", "query": "SELECT fname ,  lname FROM student WHERE major != (SELECT major FROM student GROUP BY major ORDER BY count(*) DESC LIMIT 1)", "query_toks": ["SELECT", "fname", ",", "lname", "FROM", "student", "WHERE", "major", "!", "=", "(", "SELECT", "major", "FROM", "student", "GROUP", "BY", "major", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "student", "where", "major", "!", "=", "(", "select", "major", "from", "student", "group", "by", "major", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")"], "question": "Find the first and last name of students who are not in the largest major.", "question_toks": ["Find", "the", "first", "and", "last", "name", "of", "students", "who", "are", "not", "in", "the", "largest", "major", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 6, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "dorm_1", "query": "SELECT fname ,  lname FROM student WHERE major != (SELECT major FROM student GROUP BY major ORDER BY count(*) DESC LIMIT 1)", "query_toks": ["SELECT", "fname", ",", "lname", "FROM", "student", "WHERE", "major", "!", "=", "(", "SELECT", "major", "FROM", "student", "GROUP", "BY", "major", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "student", "where", "major", "!", "=", "(", "select", "major", "from", "student", "group", "by", "major", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")"], "question": "What is the first and last name of the students who are not in the largest major?", "question_toks": ["What", "is", "the", "first", "and", "last", "name", "of", "the", "students", "who", "are", "not", "in", "the", "largest", "major", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 6, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 6, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "dorm_1", "query": "SELECT count(*) ,  sex FROM student WHERE age  >  (SELECT avg(age) FROM student) GROUP BY sex", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "sex", "FROM", "student", "WHERE", "age", ">", "(", "SELECT", "avg", "(", "age", ")", "FROM", "student", ")", "GROUP", "BY", "sex"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "sex", "from", "student", "where", "age", ">", "(", "select", "avg", "(", "age", ")", "from", "student", ")", "group", "by", "sex"], "question": "Find the number of students whose age is older than the average age for each gender.", "question_toks": ["Find", "the", "number", "of", "students", "whose", "age", "is", "older", "than", "the", "average", "age", "for", "each", "gender", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 4, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "dorm_1", "query": "SELECT count(*) ,  sex FROM student WHERE age  >  (SELECT avg(age) FROM student) GROUP BY sex", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "sex", "FROM", "student", "WHERE", "age", ">", "(", "SELECT", "avg", "(", "age", ")", "FROM", "student", ")", "GROUP", "BY", "sex"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "sex", "from", "student", "where", "age", ">", "(", "select", "avg", "(", "age", ")", "from", "student", ")", "group", "by", "sex"], "question": "How many students are older than average for each gender?", "question_toks": ["How", "many", "students", "are", "older", "than", "average", "for", "each", "gender", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 4, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "dorm_1", "query": "SELECT avg(T1.age) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid GROUP BY T3.dorm_name", "query_toks": ["SELECT", "avg", "(", "T1.age", ")", ",", "T3.dorm_name", "FROM", "student", "AS", "T1", "JOIN", "lives_in", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "dorm", "AS", "T3", "ON", "T3.dormid", "=", "T2.dormid", "GROUP", "BY", "T3.dorm_name"], "query_toks_no_value": ["select", "avg", "(", "t1", ".", "age", ")", ",", "t3", ".", "dorm_name", "from", "student", "as", "t1", "join", "lives_in", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "dorm", "as", "t3", "on", "t3", ".", "dormid", "=", "t2", ".", "dormid", "group", "by", "t3", ".", "dorm_name"], "question": "Find the average age of students living in each dorm and the name of dorm.", "question_toks": ["Find", "the", "average", "age", "of", "students", "living", "in", "each", "dorm", "and", "the", "name", "of", "dorm", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null]], "table_units": [["table_unit", 0], ["table_unit", 4]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "dorm_1", "query": "SELECT avg(T1.age) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid GROUP BY T3.dorm_name", "query_toks": ["SELECT", "avg", "(", "T1.age", ")", ",", "T3.dorm_name", "FROM", "student", "AS", "T1", "JOIN", "lives_in", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "dorm", "AS", "T3", "ON", "T3.dormid", "=", "T2.dormid", "GROUP", "BY", "T3.dorm_name"], "query_toks_no_value": ["select", "avg", "(", "t1", ".", "age", ")", ",", "t3", ".", "dorm_name", "from", "student", "as", "t1", "join", "lives_in", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "dorm", "as", "t3", "on", "t3", ".", "dormid", "=", "t2", ".", "dormid", "group", "by", "t3", ".", "dorm_name"], "question": "What is the average age for each dorm and what are the names of each dorm?", "question_toks": ["What", "is", "the", "average", "age", "for", "each", "dorm", "and", "what", "are", "the", "names", "of", "each", "dorm", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null]], "table_units": [["table_unit", 0], ["table_unit", 4]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "dorm_1", "query": "SELECT count(*) ,  T1.dormid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid WHERE T1.student_capacity  >  100 GROUP BY T1.dormid", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.dormid", "FROM", "dorm", "AS", "T1", "JOIN", "has_amenity", "AS", "T2", "ON", "T1.dormid", "=", "T2.dormid", "WHERE", "T1.student_capacity", ">", "100", "GROUP", "BY", "T1.dormid"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "dormid", "from", "dorm", "as", "t1", "join", "has_amenity", "as", "t2", "on", "t1", ".", "dormid", "=", "t2", ".", "dormid", "where", "t1", ".", "student_capacity", ">", "value", "group", "by", "t1", ".", "dormid"], "question": "Find the number of amenities for each of the dorms that can accommodate more than 100 students.", "question_toks": ["Find", "the", "number", "of", "amenities", "for", "each", "of", "the", "dorms", "that", "can", "accommodate", "more", "than", "100", "students", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 15, false], null]], "table_units": [["table_unit", 1], ["table_unit", 3]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 11, false], null], 100.0, null]]}}, {"db_id": "dorm_1", "query": "SELECT count(*) ,  T1.dormid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid WHERE T1.student_capacity  >  100 GROUP BY T1.dormid", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.dormid", "FROM", "dorm", "AS", "T1", "JOIN", "has_amenity", "AS", "T2", "ON", "T1.dormid", "=", "T2.dormid", "WHERE", "T1.student_capacity", ">", "100", "GROUP", "BY", "T1.dormid"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "dormid", "from", "dorm", "as", "t1", "join", "has_amenity", "as", "t2", "on", "t1", ".", "dormid", "=", "t2", ".", "dormid", "where", "t1", ".", "student_capacity", ">", "value", "group", "by", "t1", ".", "dormid"], "question": "For each dorm, how many amenities does it have?", "question_toks": ["For", "each", "dorm", ",", "how", "many", "amenities", "does", "it", "have", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 15, false], null]], "table_units": [["table_unit", 1], ["table_unit", 3]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 11, false], null], 100.0, null]]}}, {"db_id": "dorm_1", "query": "SELECT count(*) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T1.age  >  20 GROUP BY T3.dorm_name", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T3.dorm_name", "FROM", "student", "AS", "T1", "JOIN", "lives_in", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "dorm", "AS", "T3", "ON", "T3.dormid", "=", "T2.dormid", "WHERE", "T1.age", ">", "20", "GROUP", "BY", "T3.dorm_name"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t3", ".", "dorm_name", "from", "student", "as", "t1", "join", "lives_in", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "dorm", "as", "t3", "on", "t3", ".", "dormid", "=", "t2", ".", "dormid", "where", "t1", ".", "age", ">", "value", "group", "by", "t3", ".", "dorm_name"], "question": "Find the number of students who is older than 20 in each dorm.", "question_toks": ["Find", "the", "number", "of", "students", "who", "is", "older", "than", "20", "in", "each", "dorm", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null]], "table_units": [["table_unit", 0], ["table_unit", 4]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 4, false], null], 20.0, null]]}}, {"db_id": "dorm_1", "query": "SELECT count(*) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T1.age  >  20 GROUP BY T3.dorm_name", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T3.dorm_name", "FROM", "student", "AS", "T1", "JOIN", "lives_in", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "dorm", "AS", "T3", "ON", "T3.dormid", "=", "T2.dormid", "WHERE", "T1.age", ">", "20", "GROUP", "BY", "T3.dorm_name"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t3", ".", "dorm_name", "from", "student", "as", "t1", "join", "lives_in", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "dorm", "as", "t3", "on", "t3", ".", "dormid", "=", "t2", ".", "dormid", "where", "t1", ".", "age", ">", "value", "group", "by", "t3", ".", "dorm_name"], "question": "How many students are older than 20 in each dorm?", "question_toks": ["How", "many", "students", "are", "older", "than", "20", "in", "each", "dorm", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null]], "table_units": [["table_unit", 0], ["table_unit", 4]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 4, false], null], 20.0, null]]}}, {"db_id": "dorm_1", "query": "SELECT T1.dorm_name ,  T1.student_capacity FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid GROUP BY T2.dormid ORDER BY count(*) LIMIT 1", "query_toks": ["SELECT", "T1.dorm_name", ",", "T1.student_capacity", "FROM", "dorm", "AS", "T1", "JOIN", "has_amenity", "AS", "T2", "ON", "T1.dormid", "=", "T2.dormid", "JOIN", "dorm_amenity", "AS", "T3", "ON", "T2.amenid", "=", "T3.amenid", "GROUP", "BY", "T2.dormid", "ORDER", "BY", "count", "(", "*", ")", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "dorm_name", ",", "t1", ".", "student_capacity", "from", "dorm", "as", "t1", "join", "has_amenity", "as", "t2", "on", "t1", ".", "dormid", "=", "t2", ".", "dormid", "join", "dorm_amenity", "as", "t3", "on", "t2", ".", "amenid", "=", "t3", ".", "amenid", "group", "by", "t2", ".", "dormid", "order", "by", "count", "(", "*", ")", "limit", "value"], "question": "Find the name and capacity of the dorm with least number of amenities.", "question_toks": ["Find", "the", "name", "and", "capacity", "of", "the", "dorm", "with", "least", "number", "of", "amenities", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 15, false], null]], "table_units": [["table_unit", 1], ["table_unit", 3]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "dorm_1", "query": "SELECT T1.dorm_name ,  T1.student_capacity FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid GROUP BY T2.dormid ORDER BY count(*) LIMIT 1", "query_toks": ["SELECT", "T1.dorm_name", ",", "T1.student_capacity", "FROM", "dorm", "AS", "T1", "JOIN", "has_amenity", "AS", "T2", "ON", "T1.dormid", "=", "T2.dormid", "JOIN", "dorm_amenity", "AS", "T3", "ON", "T2.amenid", "=", "T3.amenid", "GROUP", "BY", "T2.dormid", "ORDER", "BY", "count", "(", "*", ")", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "dorm_name", ",", "t1", ".", "student_capacity", "from", "dorm", "as", "t1", "join", "has_amenity", "as", "t2", "on", "t1", ".", "dormid", "=", "t2", ".", "dormid", "join", "dorm_amenity", "as", "t3", "on", "t2", ".", "amenid", "=", "t3", ".", "amenid", "group", "by", "t2", ".", "dormid", "order", "by", "count", "(", "*", ")", "limit", "value"], "question": "What is the name and capacity of the dorm with the fewest amount of amenities?", "question_toks": ["What", "is", "the", "name", "and", "capacity", "of", "the", "dorm", "with", "the", "fewest", "amount", "of", "amenities", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 15, false], null]], "table_units": [["table_unit", 1], ["table_unit", 3]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "dorm_1", "query": "SELECT T1.fname ,  T1.lname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge')", "query_toks": ["SELECT", "T1.fname", ",", "T1.lname", "FROM", "student", "AS", "T1", "JOIN", "lives_in", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "WHERE", "T2.dormid", "IN", "(", "SELECT", "T3.dormid", "FROM", "has_amenity", "AS", "T3", "JOIN", "dorm_amenity", "AS", "T4", "ON", "T3.amenid", "=", "T4.amenid", "WHERE", "T4.amenity_name", "=", "'TV", "Lounge", "'", ")"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "student", "as", "t1", "join", "lives_in", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t2", ".", "dormid", "in", "(", "select", "t3", ".", "dormid", "from", "has_amenity", "as", "t3", "join", "dorm_amenity", "as", "t4", "on", "t3", ".", "amenid", "=", "t4", ".", "amenid", "where", "t4", ".", "amenity_name", "=", "value", ")"], "question": "Find the first and last name of students who are living in the dorms that have amenity TV Lounge.", "question_toks": ["Find", "the", "first", "and", "last", "name", "of", "students", "who", "are", "living", "in", "the", "dorms", "that", "have", "amenity", "TV", "Lounge", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null]], "table_units": [["table_unit", 0], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 8, [0, [0, 18, false], null], {"except": null, "from": {"conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], "\"TV Lounge\"", null]]}, null]]}}, {"db_id": "dorm_1", "query": "SELECT T1.fname ,  T1.lname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge')", "query_toks": ["SELECT", "T1.fname", ",", "T1.lname", "FROM", "student", "AS", "T1", "JOIN", "lives_in", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "WHERE", "T2.dormid", "IN", "(", "SELECT", "T3.dormid", "FROM", "has_amenity", "AS", "T3", "JOIN", "dorm_amenity", "AS", "T4", "ON", "T3.amenid", "=", "T4.amenid", "WHERE", "T4.amenity_name", "=", "'TV", "Lounge", "'", ")"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "student", "as", "t1", "join", "lives_in", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t2", ".", "dormid", "in", "(", "select", "t3", ".", "dormid", "from", "has_amenity", "as", "t3", "join", "dorm_amenity", "as", "t4", "on", "t3", ".", "amenid", "=", "t4", ".", "amenid", "where", "t4", ".", "amenity_name", "=", "value", ")"], "question": "What are the first and last names of all students who are living in a dorm with a TV Lounge?", "question_toks": ["What", "are", "the", "first", "and", "last", "names", "of", "all", "students", "who", "are", "living", "in", "a", "dorm", "with", "a", "TV", "Lounge", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null]], "table_units": [["table_unit", 0], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 8, [0, [0, 18, false], null], {"except": null, "from": {"conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], "\"TV Lounge\"", null]]}, null]]}}, {"db_id": "dorm_1", "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid NOT IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge')", "query_toks": ["SELECT", "T1.fname", ",", "T1.age", "FROM", "student", "AS", "T1", "JOIN", "lives_in", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "WHERE", "T2.dormid", "NOT", "IN", "(", "SELECT", "T3.dormid", "FROM", "has_amenity", "AS", "T3", "JOIN", "dorm_amenity", "AS", "T4", "ON", "T3.amenid", "=", "T4.amenid", "WHERE", "T4.amenity_name", "=", "'TV", "Lounge", "'", ")"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "age", "from", "student", "as", "t1", "join", "lives_in", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t2", ".", "dormid", "not", "in", "(", "select", "t3", ".", "dormid", "from", "has_amenity", "as", "t3", "join", "dorm_amenity", "as", "t4", "on", "t3", ".", "amenid", "=", "t4", ".", "amenid", "where", "t4", ".", "amenity_name", "=", "value", ")"], "question": "Find the first name and age of students who are living in the dorms that do not have amenity TV Lounge.", "question_toks": ["Find", "the", "first", "name", "and", "age", "of", "students", "who", "are", "living", "in", "the", "dorms", "that", "do", "not", "have", "amenity", "TV", "Lounge", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null]], "table_units": [["table_unit", 0], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 18, false], null], {"except": null, "from": {"conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], "\"TV Lounge\"", null]]}, null]]}}, {"db_id": "dorm_1", "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid NOT IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge')", "query_toks": ["SELECT", "T1.fname", ",", "T1.age", "FROM", "student", "AS", "T1", "JOIN", "lives_in", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "WHERE", "T2.dormid", "NOT", "IN", "(", "SELECT", "T3.dormid", "FROM", "has_amenity", "AS", "T3", "JOIN", "dorm_amenity", "AS", "T4", "ON", "T3.amenid", "=", "T4.amenid", "WHERE", "T4.amenity_name", "=", "'TV", "Lounge", "'", ")"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "age", "from", "student", "as", "t1", "join", "lives_in", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t2", ".", "dormid", "not", "in", "(", "select", "t3", ".", "dormid", "from", "has_amenity", "as", "t3", "join", "dorm_amenity", "as", "t4", "on", "t3", ".", "amenid", "=", "t4", ".", "amenid", "where", "t4", ".", "amenity_name", "=", "value", ")"], "question": "What is the first name and age of every student who lives in a dorm with a TV Lounge?", "question_toks": ["What", "is", "the", "first", "name", "and", "age", "of", "every", "student", "who", "lives", "in", "a", "dorm", "with", "a", "TV", "Lounge", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null]], "table_units": [["table_unit", 0], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 18, false], null], {"except": null, "from": {"conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 14, false], null], "\"TV Lounge\"", null]]}, null]]}}, {"db_id": "customer_complaints", "query": "SELECT email_address ,  phone_number FROM customers ORDER BY email_address ,  phone_number", "query_toks": ["SELECT", "email_address", ",", "phone_number", "FROM", "customers", "ORDER", "BY", "email_address", ",", "phone_number"], "query_toks_no_value": ["select", "email_address", ",", "phone_number", "from", "customers", "order", "by", "email_address", ",", "phone_number"], "question": "Find the emails and phone numbers of all the customers, ordered by email address and phone number.", "question_toks": ["Find", "the", "emails", "and", "phone", "numbers", "of", "all", "the", "customers", ",", "ordered", "by", "email", "address", "and", "phone", "number", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 13, false], null], [0, [0, 14, false], null]]], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "customer_complaints", "query": "SELECT email_address ,  phone_number FROM customers ORDER BY email_address ,  phone_number", "query_toks": ["SELECT", "email_address", ",", "phone_number", "FROM", "customers", "ORDER", "BY", "email_address", ",", "phone_number"], "query_toks_no_value": ["select", "email_address", ",", "phone_number", "from", "customers", "order", "by", "email_address", ",", "phone_number"], "question": "What are the emails and phone numbers of all customers, sorted by email address and phone number?", "question_toks": ["What", "are", "the", "emails", "and", "phone", "numbers", "of", "all", "customers", ",", "sorted", "by", "email", "address", "and", "phone", "number", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 13, false], null], [0, [0, 14, false], null]]], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "customer_complaints", "query": "SELECT t1.product_name ,  count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_name", "query_toks": ["SELECT", "t1.product_name", ",", "count", "(", "*", ")", "FROM", "products", "AS", "t1", "JOIN", "complaints", "AS", "t2", "ON", "t1.product_id", "=", "t2.product_id", "GROUP", "BY", "t1.product_name"], "query_toks_no_value": ["select", "t1", ".", "product_name", ",", "count", "(", "*", ")", "from", "products", "as", "t1", "join", "complaints", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "group", "by", "t1", ".", "product_name"], "question": "List the name of all products along with the number of complaints that they have received.", "question_toks": ["List", "the", "name", "of", "all", "products", "along", "with", "the", "number", "of", "complaints", "that", "they", "have", "received", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 24, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 20, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customer_complaints", "query": "SELECT t1.product_name ,  count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_name", "query_toks": ["SELECT", "t1.product_name", ",", "count", "(", "*", ")", "FROM", "products", "AS", "t1", "JOIN", "complaints", "AS", "t2", "ON", "t1.product_id", "=", "t2.product_id", "GROUP", "BY", "t1.product_name"], "query_toks_no_value": ["select", "t1", ".", "product_name", ",", "count", "(", "*", ")", "from", "products", "as", "t1", "join", "complaints", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "group", "by", "t1", ".", "product_name"], "question": "What are all the different product names, and how many complains has each received?", "question_toks": ["What", "are", "all", "the", "different", "product", "names", ",", "and", "how", "many", "complains", "has", "each", "received", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 24, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 20, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "customer_complaints", "query": "SELECT email_address ,  phone_number FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM complaints)", "query_toks": ["SELECT", "email_address", ",", "phone_number", "FROM", "customers", "WHERE", "customer_id", "NOT", "IN", "(", "SELECT", "customer_id", "FROM", "complaints", ")"], "query_toks_no_value": ["select", "email_address", ",", "phone_number", "from", "customers", "where", "customer_id", "not", "in", "(", "select", "customer_id", "from", "complaints", ")"], "question": "Find the email and phone number of the customers who have never filed a complaint before.", "question_toks": ["Find", "the", "email", "and", "phone", "number", "of", "the", "customers", "who", "have", "never", "filed", "a", "complaint", "before", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 7, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 25, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "customer_complaints", "query": "SELECT email_address ,  phone_number FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM complaints)", "query_toks": ["SELECT", "email_address", ",", "phone_number", "FROM", "customers", "WHERE", "customer_id", "NOT", "IN", "(", "SELECT", "customer_id", "FROM", "complaints", ")"], "query_toks_no_value": ["select", "email_address", ",", "phone_number", "from", "customers", "where", "customer_id", "not", "in", "(", "select", "customer_id", "from", "complaints", ")"], "question": "What are the emails and phone numbers of custoemrs who have never filed a complaint?", "question_toks": ["What", "are", "the", "emails", "and", "phone", "numbers", "of", "custoemrs", "who", "have", "never", "filed", "a", "complaint", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 7, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 25, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "customer_complaints", "query": "SELECT product_name ,  product_category_code FROM products ORDER BY product_price DESC LIMIT 1", "query_toks": ["SELECT", "product_name", ",", "product_category_code", "FROM", "products", "ORDER", "BY", "product_price", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "product_name", ",", "product_category_code", "from", "products", "order", "by", "product_price", "desc", "limit", "value"], "question": "Find the name and category of the most expensive product.", "question_toks": ["Find", "the", "name", "and", "category", "of", "the", "most", "expensive", "product", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 22, false], null]]], "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "customer_complaints", "query": "SELECT product_name ,  product_category_code FROM products ORDER BY product_price DESC LIMIT 1", "query_toks": ["SELECT", "product_name", ",", "product_category_code", "FROM", "products", "ORDER", "BY", "product_price", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "product_name", ",", "product_category_code", "from", "products", "order", "by", "product_price", "desc", "limit", "value"], "question": "What is the name and category code of the product with the highest price?", "question_toks": ["What", "is", "the", "name", "and", "category", "code", "of", "the", "product", "with", "the", "highest", "price", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 22, false], null]]], "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "customer_complaints", "query": "SELECT avg(product_price) ,  product_category_code FROM products GROUP BY product_category_code", "query_toks": ["SELECT", "avg", "(", "product_price", ")", ",", "product_category_code", "FROM", "products", "GROUP", "BY", "product_category_code"], "query_toks_no_value": ["select", "avg", "(", "product_price", ")", ",", "product_category_code", "from", "products", "group", "by", "product_category_code"], "question": "What is the average price of the products for each category?", "question_toks": ["What", "is", "the", "average", "price", "of", "the", "products", "for", "each", "category", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 17, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 22, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "customer_complaints", "query": "SELECT avg(product_price) ,  product_category_code FROM products GROUP BY product_category_code", "query_toks": ["SELECT", "avg", "(", "product_price", ")", ",", "product_category_code", "FROM", "products", "GROUP", "BY", "product_category_code"], "query_toks_no_value": ["select", "avg", "(", "product_price", ")", ",", "product_category_code", "from", "products", "group", "by", "product_category_code"], "question": "Return the average price of products that have each category code.", "question_toks": ["Return", "the", "average", "price", "of", "products", "that", "have", "each", "category", "code", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 17, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 22, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "customer_complaints", "query": "SELECT address_line_1 ,  address_line_2 FROM customers WHERE email_address  =  \"vbogisich@example.org\"", "query_toks": ["SELECT", "address_line_1", ",", "address_line_2", "FROM", "customers", "WHERE", "email_address", "=", "``", "vbogisich", "@", "example.org", "''"], "query_toks_no_value": ["select", "address_line_1", ",", "address_line_2", "from", "customers", "where", "email_address", "=", "value"], "question": "Find the address line 1 and 2 of the customer with email \"vbogisich@example.org\".", "question_toks": ["Find", "the", "address", "line", "1", "and", "2", "of", "the", "customer", "with", "email", "``", "vbogisich", "@", "example.org", "''", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 13, false], null], "\"vbogisich@example.org\"", null]]}}, {"db_id": "customer_complaints", "query": "SELECT address_line_1 ,  address_line_2 FROM customers WHERE email_address  =  \"vbogisich@example.org\"", "query_toks": ["SELECT", "address_line_1", ",", "address_line_2", "FROM", "customers", "WHERE", "email_address", "=", "``", "vbogisich", "@", "example.org", "''"], "query_toks_no_value": ["select", "address_line_1", ",", "address_line_2", "from", "customers", "where", "email_address", "=", "value"], "question": "What are lines 1 and 2 of the addressed of the customer with the email \"vbogisich@example.org\"?", "question_toks": ["What", "are", "lines", "1", "and", "2", "of", "the", "addressed", "of", "the", "customer", "with", "the", "email", "``", "vbogisich", "@", "example.org", "''", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 13, false], null], "\"vbogisich@example.org\"", null]]}}, {"db_id": "customer_complaints", "query": "SELECT complaint_status_code ,  count(*) FROM complaints WHERE complaint_type_code  =  \"Product Failure\" GROUP BY complaint_status_code", "query_toks": ["SELECT", "complaint_status_code", ",", "count", "(", "*", ")", "FROM", "complaints", "WHERE", "complaint_type_code", "=", "``", "Product", "Failure", "''", "GROUP", "BY", "complaint_status_code"], "query_toks_no_value": ["select", "complaint_status_code", ",", "count", "(", "*", ")", "from", "complaints", "where", "complaint_type_code", "=", "value", "group", "by", "complaint_status_code"], "question": "Find the number of complaints with Product Failure type for each complaint status.", "question_toks": ["Find", "the", "number", "of", "complaints", "with", "Product", "Failure", "type", "for", "each", "complaint", "status", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 27, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 27, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 28, false], null], "\"Product Failure\"", null]]}}, {"db_id": "customer_complaints", "query": "SELECT complaint_status_code ,  count(*) FROM complaints WHERE complaint_type_code  =  \"Product Failure\" GROUP BY complaint_status_code", "query_toks": ["SELECT", "complaint_status_code", ",", "count", "(", "*", ")", "FROM", "complaints", "WHERE", "complaint_type_code", "=", "``", "Product", "Failure", "''", "GROUP", "BY", "complaint_status_code"], "query_toks_no_value": ["select", "complaint_status_code", ",", "count", "(", "*", ")", "from", "complaints", "where", "complaint_type_code", "=", "value", "group", "by", "complaint_status_code"], "question": "Of complaints with the type code \"Product Failure\", how many had each different status code?", "question_toks": ["Of", "complaints", "with", "the", "type", "code", "``", "Product", "Failure", "''", ",", "how", "many", "had", "each", "different", "status", "code", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 27, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 27, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 28, false], null], "\"Product Failure\"", null]]}}, {"db_id": "workshop_paper", "query": "SELECT Author ,  College FROM submission", "query_toks": ["SELECT", "Author", ",", "College", "FROM", "submission"], "query_toks_no_value": ["select", "author", ",", "college", "from", "submission"], "question": "What are the authors of submissions and their colleges?", "question_toks": ["What", "are", "the", "authors", "of", "submissions", "and", "their", "colleges", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "workshop_paper", "query": "SELECT Author ,  College FROM submission", "query_toks": ["SELECT", "Author", ",", "College", "FROM", "submission"], "query_toks_no_value": ["select", "author", ",", "college", "from", "submission"], "question": "For each submission, show the author and their affiliated college.", "question_toks": ["For", "each", "submission", ",", "show", "the", "author", "and", "their", "affiliated", "college", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "workshop_paper", "query": "SELECT College ,  COUNT(*) FROM submission GROUP BY College", "query_toks": ["SELECT", "College", ",", "COUNT", "(", "*", ")", "FROM", "submission", "GROUP", "BY", "College"], "query_toks_no_value": ["select", "college", ",", "count", "(", "*", ")", "from", "submission", "group", "by", "college"], "question": "Show different colleges along with the number of authors of submission from each college.", "question_toks": ["Show", "different", "colleges", "along", "with", "the", "number", "of", "authors", "of", "submission", "from", "each", "college", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "workshop_paper", "query": "SELECT College ,  COUNT(*) FROM submission GROUP BY College", "query_toks": ["SELECT", "College", ",", "COUNT", "(", "*", ")", "FROM", "submission", "GROUP", "BY", "College"], "query_toks_no_value": ["select", "college", ",", "count", "(", "*", ")", "from", "submission", "group", "by", "college"], "question": "For each college, return the college name and the count of authors with submissions from that college.", "question_toks": ["For", "each", "college", ",", "return", "the", "college", "name", "and", "the", "count", "of", "authors", "with", "submissions", "from", "that", "college", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 8, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "workshop_paper", "query": "SELECT T2.Author ,  T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID", "query_toks": ["SELECT", "T2.Author", ",", "T1.Result", "FROM", "acceptance", "AS", "T1", "JOIN", "submission", "AS", "T2", "ON", "T1.Submission_ID", "=", "T2.Submission_ID"], "query_toks_no_value": ["select", "t2", ".", "author", ",", "t1", ".", "result", "from", "acceptance", "as", "t1", "join", "submission", "as", "t2", "on", "t1", ".", "submission_id", "=", "t2", ".", "submission_id"], "question": "Show the authors of submissions and the acceptance results of their submissions.", "question_toks": ["Show", "the", "authors", "of", "submissions", "and", "the", "acceptance", "results", "of", "their", "submissions", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 5, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "workshop_paper", "query": "SELECT T2.Author ,  T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID", "query_toks": ["SELECT", "T2.Author", ",", "T1.Result", "FROM", "acceptance", "AS", "T1", "JOIN", "submission", "AS", "T2", "ON", "T1.Submission_ID", "=", "T2.Submission_ID"], "query_toks_no_value": ["select", "t2", ".", "author", ",", "t1", ".", "result", "from", "acceptance", "as", "t1", "join", "submission", "as", "t2", "on", "t1", ".", "submission_id", "=", "t2", ".", "submission_id"], "question": "For each submission, find its author and acceptance result.", "question_toks": ["For", "each", "submission", ",", "find", "its", "author", "and", "acceptance", "result", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 5, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "workshop_paper", "query": "SELECT T2.Author ,  COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author", "query_toks": ["SELECT", "T2.Author", ",", "COUNT", "(", "DISTINCT", "T1.workshop_id", ")", "FROM", "acceptance", "AS", "T1", "JOIN", "submission", "AS", "T2", "ON", "T1.Submission_ID", "=", "T2.Submission_ID", "GROUP", "BY", "T2.Author"], "query_toks_no_value": ["select", "t2", ".", "author", ",", "count", "(", "distinct", "t1", ".", "workshop_id", ")", "from", "acceptance", "as", "t1", "join", "submission", "as", "t2", "on", "t1", ".", "submission_id", "=", "t2", ".", "submission_id", "group", "by", "t2", ".", "author"], "question": "Show each author and the number of workshops they submitted to.", "question_toks": ["Show", "each", "author", "and", "the", "number", "of", "workshops", "they", "submitted", "to", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 5, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 10, true], null]]]], "union": null, "where": []}}, {"db_id": "workshop_paper", "query": "SELECT T2.Author ,  COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author", "query_toks": ["SELECT", "T2.Author", ",", "COUNT", "(", "DISTINCT", "T1.workshop_id", ")", "FROM", "acceptance", "AS", "T1", "JOIN", "submission", "AS", "T2", "ON", "T1.Submission_ID", "=", "T2.Submission_ID", "GROUP", "BY", "T2.Author"], "query_toks_no_value": ["select", "t2", ".", "author", ",", "count", "(", "distinct", "t1", ".", "workshop_id", ")", "from", "acceptance", "as", "t1", "join", "submission", "as", "t2", "on", "t1", ".", "submission_id", "=", "t2", ".", "submission_id", "group", "by", "t2", ".", "author"], "question": "How many workshops did each author submit to? Return the author name and the number of workshops.", "question_toks": ["How", "many", "workshops", "did", "each", "author", "submit", "to", "?", "Return", "the", "author", "name", "and", "the", "number", "of", "workshops", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 5, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 10, true], null]]]], "union": null, "where": []}}, {"db_id": "workshop_paper", "query": "SELECT Date ,  Venue FROM workshop ORDER BY Venue", "query_toks": ["SELECT", "Date", ",", "Venue", "FROM", "workshop", "ORDER", "BY", "Venue"], "query_toks_no_value": ["select", "date", ",", "venue", "from", "workshop", "order", "by", "venue"], "question": "Show the date and venue of each workshop in ascending alphabetical order of the venue.", "question_toks": ["Show", "the", "date", "and", "venue", "of", "each", "workshop", "in", "ascending", "alphabetical", "order", "of", "the", "venue", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 3, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "workshop_paper", "query": "SELECT Date ,  Venue FROM workshop ORDER BY Venue", "query_toks": ["SELECT", "Date", ",", "Venue", "FROM", "workshop", "ORDER", "BY", "Venue"], "query_toks_no_value": ["select", "date", ",", "venue", "from", "workshop", "order", "by", "venue"], "question": "Sort the each workshop in alphabetical order of the venue. Return the date and venue of each workshop.", "question_toks": ["Sort", "the", "each", "workshop", "in", "alphabetical", "order", "of", "the", "venue", ".", "Return", "the", "date", "and", "venue", "of", "each", "workshop", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 3, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_share_transactions", "query": "SELECT date_of_transaction ,  share_count FROM TRANSACTIONS", "query_toks": ["SELECT", "date_of_transaction", ",", "share_count", "FROM", "TRANSACTIONS"], "query_toks_no_value": ["select", "date_of_transaction", ",", "share_count", "from", "transactions"], "question": "Show all date and share count of transactions.", "question_toks": ["Show", "all", "date", "and", "share", "count", "of", "transactions", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_share_transactions", "query": "SELECT T1.transaction_type_description ,  T2.date_of_transaction FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code  =  T2.transaction_type_code WHERE T2.share_count  <  10", "query_toks": ["SELECT", "T1.transaction_type_description", ",", "T2.date_of_transaction", "FROM", "Ref_Transaction_Types", "AS", "T1", "JOIN", "TRANSACTIONS", "AS", "T2", "ON", "T1.transaction_type_code", "=", "T2.transaction_type_code", "WHERE", "T2.share_count", "<", "10"], "query_toks_no_value": ["select", "t1", ".", "transaction_type_description", ",", "t2", ".", "date_of_transaction", "from", "ref_transaction_types", "as", "t1", "join", "transactions", "as", "t2", "on", "t1", ".", "transaction_type_code", "=", "t2", ".", "transaction_type_code", "where", "t2", ".", "share_count", "<", "value"], "question": "Show the transaction type descriptions and dates if the share count is smaller than 10.", "question_toks": ["Show", "the", "transaction", "type", "descriptions", "and", "dates", "if", "the", "share", "count", "is", "smaller", "than", "10", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 10, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 13, false], null], 10.0, null]]}}, {"db_id": "tracking_share_transactions", "query": "SELECT lot_details ,  investor_id FROM LOTS", "query_toks": ["SELECT", "lot_details", ",", "investor_id", "FROM", "LOTS"], "query_toks_no_value": ["select", "lot_details", ",", "investor_id", "from", "lots"], "question": "Return the lot details and investor ids.", "question_toks": ["Return", "the", "lot", "details", "and", "investor", "ids", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_share_transactions", "query": "SELECT T1.sales_details ,  T2.date_of_transaction FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id  =  T2.transaction_id WHERE T2.amount_of_transaction  <  3000", "query_toks": ["SELECT", "T1.sales_details", ",", "T2.date_of_transaction", "FROM", "SALES", "AS", "T1", "JOIN", "TRANSACTIONS", "AS", "T2", "ON", "T1.sales_transaction_id", "=", "T2.transaction_id", "WHERE", "T2.amount_of_transaction", "<", "3000"], "query_toks_no_value": ["select", "t1", ".", "sales_details", ",", "t2", ".", "date_of_transaction", "from", "sales", "as", "t1", "join", "transactions", "as", "t2", "on", "t1", ".", "sales_transaction_id", "=", "t2", ".", "transaction_id", "where", "t2", ".", "amount_of_transaction", "<", "value"], "question": "What are the sale details and dates of transactions with amount smaller than 3000?", "question_toks": ["What", "are", "the", "sale", "details", "and", "dates", "of", "transactions", "with", "amount", "smaller", "than", "3000", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null]], "table_units": [["table_unit", 4], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 12, false], null], 3000.0, null]]}}, {"db_id": "tracking_share_transactions", "query": "SELECT transaction_type_code ,  avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code", "query_toks": ["SELECT", "transaction_type_code", ",", "avg", "(", "amount_of_transaction", ")", "FROM", "TRANSACTIONS", "GROUP", "BY", "transaction_type_code"], "query_toks_no_value": ["select", "transaction_type_code", ",", "avg", "(", "amount_of_transaction", ")", "from", "transactions", "group", "by", "transaction_type_code"], "question": "Show the average transaction amount for different transaction types.", "question_toks": ["Show", "the", "average", "transaction", "amount", "for", "different", "transaction", "types", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [5, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_share_transactions", "query": "SELECT transaction_type_code ,  max(share_count) ,  min(share_count) FROM TRANSACTIONS GROUP BY transaction_type_code", "query_toks": ["SELECT", "transaction_type_code", ",", "max", "(", "share_count", ")", ",", "min", "(", "share_count", ")", "FROM", "TRANSACTIONS", "GROUP", "BY", "transaction_type_code"], "query_toks_no_value": ["select", "transaction_type_code", ",", "max", "(", "share_count", ")", ",", "min", "(", "share_count", ")", "from", "transactions", "group", "by", "transaction_type_code"], "question": "Show the maximum and minimum share count of different transaction types.", "question_toks": ["Show", "the", "maximum", "and", "minimum", "share", "count", "of", "different", "transaction", "types", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [1, [0, [0, 13, false], null]], [2, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_share_transactions", "query": "SELECT investor_id ,  avg(share_count) FROM TRANSACTIONS GROUP BY investor_id", "query_toks": ["SELECT", "investor_id", ",", "avg", "(", "share_count", ")", "FROM", "TRANSACTIONS", "GROUP", "BY", "investor_id"], "query_toks_no_value": ["select", "investor_id", ",", "avg", "(", "share_count", ")", "from", "transactions", "group", "by", "investor_id"], "question": "Show the average share count of transactions for different investors.", "question_toks": ["Show", "the", "average", "share", "count", "of", "transactions", "for", "different", "investors", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [5, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_share_transactions", "query": "SELECT investor_id ,  avg(share_count) FROM TRANSACTIONS GROUP BY investor_id ORDER BY avg(share_count)", "query_toks": ["SELECT", "investor_id", ",", "avg", "(", "share_count", ")", "FROM", "TRANSACTIONS", "GROUP", "BY", "investor_id", "ORDER", "BY", "avg", "(", "share_count", ")"], "query_toks_no_value": ["select", "investor_id", ",", "avg", "(", "share_count", ")", "from", "transactions", "group", "by", "investor_id", "order", "by", "avg", "(", "share_count", ")"], "question": "Show the average share count of transactions each each investor, ordered by average share count.", "question_toks": ["Show", "the", "average", "share", "count", "of", "transactions", "each", "each", "investor", ",", "ordered", "by", "average", "share", "count", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [5, 13, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]], [5, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_share_transactions", "query": "SELECT investor_id ,  avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY investor_id", "query_toks": ["SELECT", "investor_id", ",", "avg", "(", "amount_of_transaction", ")", "FROM", "TRANSACTIONS", "GROUP", "BY", "investor_id"], "query_toks_no_value": ["select", "investor_id", ",", "avg", "(", "amount_of_transaction", ")", "from", "transactions", "group", "by", "investor_id"], "question": "Show the average amount of transactions for different investors.", "question_toks": ["Show", "the", "average", "amount", "of", "transactions", "for", "different", "investors", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [5, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_share_transactions", "query": "SELECT T2.lot_id ,  avg(amount_of_transaction) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id  =  T2.transaction_id GROUP BY T2.lot_id", "query_toks": ["SELECT", "T2.lot_id", ",", "avg", "(", "amount_of_transaction", ")", "FROM", "TRANSACTIONS", "AS", "T1", "JOIN", "Transactions_Lots", "AS", "T2", "ON", "T1.transaction_id", "=", "T2.transaction_id", "GROUP", "BY", "T2.lot_id"], "query_toks_no_value": ["select", "t2", ".", "lot_id", ",", "avg", "(", "amount_of_transaction", ")", "from", "transactions", "as", "t1", "join", "transactions_lots", "as", "t2", "on", "t1", ".", "transaction_id", "=", "t2", ".", "transaction_id", "group", "by", "t2", ".", "lot_id"], "question": "Show the average amount of transactions for different lots.", "question_toks": ["Show", "the", "average", "amount", "of", "transactions", "for", "different", "lots", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 19, false], null]], "table_units": [["table_unit", 3], ["table_unit", 6]]}, "groupBy": [[0, 20, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]], [5, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_share_transactions", "query": "SELECT T2.lot_id ,  avg(amount_of_transaction) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id  =  T2.transaction_id GROUP BY T2.lot_id ORDER BY avg(amount_of_transaction)", "query_toks": ["SELECT", "T2.lot_id", ",", "avg", "(", "amount_of_transaction", ")", "FROM", "TRANSACTIONS", "AS", "T1", "JOIN", "Transactions_Lots", "AS", "T2", "ON", "T1.transaction_id", "=", "T2.transaction_id", "GROUP", "BY", "T2.lot_id", "ORDER", "BY", "avg", "(", "amount_of_transaction", ")"], "query_toks_no_value": ["select", "t2", ".", "lot_id", ",", "avg", "(", "amount_of_transaction", ")", "from", "transactions", "as", "t1", "join", "transactions_lots", "as", "t2", "on", "t1", ".", "transaction_id", "=", "t2", ".", "transaction_id", "group", "by", "t2", ".", "lot_id", "order", "by", "avg", "(", "amount_of_transaction", ")"], "question": "Show the average amount of transactions for different lots, ordered by average amount of transactions.", "question_toks": ["Show", "the", "average", "amount", "of", "transactions", "for", "different", "lots", ",", "ordered", "by", "average", "amount", "of", "transactions", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 19, false], null]], "table_units": [["table_unit", 3], ["table_unit", 6]]}, "groupBy": [[0, 20, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [5, 12, false], null]]], "select": [false, [[0, [0, [0, 20, false], null]], [5, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_share_transactions", "query": "SELECT investor_id ,  COUNT(*) FROM TRANSACTIONS WHERE transaction_type_code  =  \"SALE\" GROUP BY investor_id", "query_toks": ["SELECT", "investor_id", ",", "COUNT", "(", "*", ")", "FROM", "TRANSACTIONS", "WHERE", "transaction_type_code", "=", "``", "SALE", "''", "GROUP", "BY", "investor_id"], "query_toks_no_value": ["select", "investor_id", ",", "count", "(", "*", ")", "from", "transactions", "where", "transaction_type_code", "=", "value", "group", "by", "investor_id"], "question": "Show the number of transactions with transaction type code \"SALE\" for different investors if it is larger than 0.", "question_toks": ["Show", "the", "number", "of", "transactions", "with", "transaction", "type", "code", "``", "SALE", "''", "for", "different", "investors", "if", "it", "is", "larger", "than", "0", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"SALE\"", null]]}}, {"db_id": "tracking_share_transactions", "query": "SELECT investor_id ,  COUNT(*) FROM TRANSACTIONS GROUP BY investor_id", "query_toks": ["SELECT", "investor_id", ",", "COUNT", "(", "*", ")", "FROM", "TRANSACTIONS", "GROUP", "BY", "investor_id"], "query_toks_no_value": ["select", "investor_id", ",", "count", "(", "*", ")", "from", "transactions", "group", "by", "investor_id"], "question": "Show the number of transactions for different investors.", "question_toks": ["Show", "the", "number", "of", "transactions", "for", "different", "investors", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_share_transactions", "query": "SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.investor_id", ",", "T1.Investor_details", "FROM", "INVESTORS", "AS", "T1", "JOIN", "TRANSACTIONS", "AS", "T2", "ON", "T1.investor_id", "=", "T2.investor_id", "GROUP", "BY", "T2.investor_id", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "investor_id", ",", "t1", ".", "investor_details", "from", "investors", "as", "t1", "join", "transactions", "as", "t2", "on", "t1", ".", "investor_id", "=", "t2", ".", "investor_id", "group", "by", "t2", ".", "investor_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Show the id and details of the investor that has the largest number of transactions.", "question_toks": ["Show", "the", "id", "and", "details", "of", "the", "investor", "that", "has", "the", "largest", "number", "of", "transactions", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_share_transactions", "query": "SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT(*) DESC LIMIT 3", "query_toks": ["SELECT", "T2.investor_id", ",", "T1.Investor_details", "FROM", "INVESTORS", "AS", "T1", "JOIN", "TRANSACTIONS", "AS", "T2", "ON", "T1.investor_id", "=", "T2.investor_id", "GROUP", "BY", "T2.investor_id", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "t2", ".", "investor_id", ",", "t1", ".", "investor_details", "from", "investors", "as", "t1", "join", "transactions", "as", "t2", "on", "t1", ".", "investor_id", "=", "t2", ".", "investor_id", "group", "by", "t2", ".", "investor_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Show the id and details for the investors who have the top 3 number of transactions.", "question_toks": ["Show", "the", "id", "and", "details", "for", "the", "investors", "who", "have", "the", "top", "3", "number", "of", "transactions", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": 3, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_share_transactions", "query": "SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id WHERE T2.transaction_type_code  =  \"SALE\" GROUP BY T2.investor_id HAVING COUNT(*)  >=  2", "query_toks": ["SELECT", "T2.investor_id", ",", "T1.Investor_details", "FROM", "INVESTORS", "AS", "T1", "JOIN", "TRANSACTIONS", "AS", "T2", "ON", "T1.investor_id", "=", "T2.investor_id", "WHERE", "T2.transaction_type_code", "=", "``", "SALE", "''", "GROUP", "BY", "T2.investor_id", "HAVING", "COUNT", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "investor_id", ",", "t1", ".", "investor_details", "from", "investors", "as", "t1", "join", "transactions", "as", "t2", "on", "t1", ".", "investor_id", "=", "t2", ".", "investor_id", "where", "t2", ".", "transaction_type_code", "=", "value", "group", "by", "t2", ".", "investor_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show the ids and details of the investors who have at least two transactions with type code \"SALE\".", "question_toks": ["Show", "the", "ids", "and", "details", "of", "the", "investors", "who", "have", "at", "least", "two", "transactions", "with", "type", "code", "``", "SALE", "''", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [[0, 9, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"SALE\"", null]]}}, {"db_id": "cre_Theme_park", "query": "SELECT Name ,  Other_Details FROM Staff", "query_toks": ["SELECT", "Name", ",", "Other_Details", "FROM", "Staff"], "query_toks_no_value": ["select", "name", ",", "other_details", "from", "staff"], "question": "Show the names and details of all the staff members.", "question_toks": ["Show", "the", "names", "and", "details", "of", "all", "the", "staff", "members", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 14]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 49, false], null]], [0, [0, [0, 50, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Theme_park", "query": "SELECT Name ,  Other_Details FROM Staff", "query_toks": ["SELECT", "Name", ",", "Other_Details", "FROM", "Staff"], "query_toks_no_value": ["select", "name", ",", "other_details", "from", "staff"], "question": "What is the name and detail of each staff member?", "question_toks": ["What", "is", "the", "name", "and", "detail", "of", "each", "staff", "member", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 14]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 49, false], null]], [0, [0, [0, 50, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Theme_park", "query": "SELECT Name ,  Opening_Hours FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\" OR How_to_Get_There  =  \"walk\"", "query_toks": ["SELECT", "Name", ",", "Opening_Hours", "FROM", "TOURIST_ATTRACTIONS", "WHERE", "How_to_Get_There", "=", "``", "bus", "''", "OR", "How_to_Get_There", "=", "``", "walk", "''"], "query_toks_no_value": ["select", "name", ",", "opening_hours", "from", "tourist_attractions", "where", "how_to_get_there", "=", "value", "or", "how_to_get_there", "=", "value"], "question": "What are the names and opening hours of the tourist attractions that can be accessed by bus or walk?", "question_toks": ["What", "are", "the", "names", "and", "opening", "hours", "of", "the", "tourist", "attractions", "that", "can", "be", "accessed", "by", "bus", "or", "walk", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 21, false], null], "\"bus\"", null], "or", [false, 2, [0, [0, 21, false], null], "\"walk\"", null]]}}, {"db_id": "cre_Theme_park", "query": "SELECT Name ,  Opening_Hours FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\" OR How_to_Get_There  =  \"walk\"", "query_toks": ["SELECT", "Name", ",", "Opening_Hours", "FROM", "TOURIST_ATTRACTIONS", "WHERE", "How_to_Get_There", "=", "``", "bus", "''", "OR", "How_to_Get_There", "=", "``", "walk", "''"], "query_toks_no_value": ["select", "name", ",", "opening_hours", "from", "tourist_attractions", "where", "how_to_get_there", "=", "value", "or", "how_to_get_there", "=", "value"], "question": "Find the names and opening hours of the tourist attractions that we get to by bus or walk.", "question_toks": ["Find", "the", "names", "and", "opening", "hours", "of", "the", "tourist", "attractions", "that", "we", "get", "to", "by", "bus", "or", "walk", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 21, false], null], "\"bus\"", null], "or", [false, 2, [0, [0, 21, false], null], "\"walk\"", null]]}}, {"db_id": "cre_Theme_park", "query": "SELECT T1.Museum_Details ,  T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID  =  T2.Tourist_Attraction_ID", "query_toks": ["SELECT", "T1.Museum_Details", ",", "T2.Opening_Hours", "FROM", "MUSEUMS", "AS", "T1", "JOIN", "TOURIST_ATTRACTIONS", "AS", "T2", "ON", "T1.Museum_ID", "=", "T2.Tourist_Attraction_ID"], "query_toks_no_value": ["select", "t1", ".", "museum_details", ",", "t2", ".", "opening_hours", "from", "museums", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "museum_id", "=", "t2", ".", "tourist_attraction_id"], "question": "What are the details and opening hours of the museums?", "question_toks": ["What", "are", "the", "details", "and", "opening", "hours", "of", "the", "museums", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 30, false], null], [0, 18, false], null]], "table_units": [["table_unit", 9], ["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 31, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Theme_park", "query": "SELECT T1.Museum_Details ,  T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID  =  T2.Tourist_Attraction_ID", "query_toks": ["SELECT", "T1.Museum_Details", ",", "T2.Opening_Hours", "FROM", "MUSEUMS", "AS", "T1", "JOIN", "TOURIST_ATTRACTIONS", "AS", "T2", "ON", "T1.Museum_ID", "=", "T2.Tourist_Attraction_ID"], "query_toks_no_value": ["select", "t1", ".", "museum_details", ",", "t2", ".", "opening_hours", "from", "museums", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "museum_id", "=", "t2", ".", "tourist_attraction_id"], "question": "Give me the detail and opening hour for each museum.", "question_toks": ["Give", "me", "the", "detail", "and", "opening", "hour", "for", "each", "museum", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 30, false], null], [0, 18, false], null]], "table_units": [["table_unit", 9], ["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 31, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Theme_park", "query": "SELECT T1.Name ,  T1.Description FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"film festival\"", "query_toks": ["SELECT", "T1.Name", ",", "T1.Description", "FROM", "PHOTOS", "AS", "T1", "JOIN", "TOURIST_ATTRACTIONS", "AS", "T2", "ON", "T1.Tourist_Attraction_ID", "=", "T2.Tourist_Attraction_ID", "WHERE", "T2.Name", "=", "``", "film", "festival", "''"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "description", "from", "photos", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "where", "t2", ".", "name", "=", "value"], "question": "What are the names and descriptions of the photos taken at the tourist attraction \"film festival\"?", "question_toks": ["What", "are", "the", "names", "and", "descriptions", "of", "the", "photos", "taken", "at", "the", "tourist", "attraction", "``", "film", "festival", "''", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 42, false], null], [0, 18, false], null]], "table_units": [["table_unit", 13], ["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 43, false], null]], [0, [0, [0, 44, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 22, false], null], "\"film festival\"", null]]}}, {"db_id": "cre_Theme_park", "query": "SELECT T1.Name ,  T1.Description FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"film festival\"", "query_toks": ["SELECT", "T1.Name", ",", "T1.Description", "FROM", "PHOTOS", "AS", "T1", "JOIN", "TOURIST_ATTRACTIONS", "AS", "T2", "ON", "T1.Tourist_Attraction_ID", "=", "T2.Tourist_Attraction_ID", "WHERE", "T2.Name", "=", "``", "film", "festival", "''"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "description", "from", "photos", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "where", "t2", ".", "name", "=", "value"], "question": "Find the names and descriptions of the photos taken at the tourist attraction called \"film festival\".", "question_toks": ["Find", "the", "names", "and", "descriptions", "of", "the", "photos", "taken", "at", "the", "tourist", "attraction", "called", "``", "film", "festival", "''", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 42, false], null], [0, 18, false], null]], "table_units": [["table_unit", 13], ["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 43, false], null]], [0, [0, [0, 44, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 22, false], null], "\"film festival\"", null]]}}, {"db_id": "cre_Theme_park", "query": "SELECT T1.Royal_Family_Details ,  T2.How_to_Get_There FROM ROYAL_FAMILY AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID  =  T2.Tourist_Attraction_ID", "query_toks": ["SELECT", "T1.Royal_Family_Details", ",", "T2.How_to_Get_There", "FROM", "ROYAL_FAMILY", "AS", "T1", "JOIN", "TOURIST_ATTRACTIONS", "AS", "T2", "ON", "T1.Royal_Family_ID", "=", "T2.Tourist_Attraction_ID"], "query_toks_no_value": ["select", "t1", ".", "royal_family_details", ",", "t2", ".", "how_to_get_there", "from", "royal_family", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "royal_family_id", "=", "t2", ".", "tourist_attraction_id"], "question": "What are the details and ways to get to tourist attractions related to royal family?", "question_toks": ["What", "are", "the", "details", "and", "ways", "to", "get", "to", "tourist", "attractions", "related", "to", "royal", "family", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 32, false], null], [0, 18, false], null]], "table_units": [["table_unit", 10], ["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Theme_park", "query": "SELECT T1.Royal_Family_Details ,  T2.How_to_Get_There FROM ROYAL_FAMILY AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID  =  T2.Tourist_Attraction_ID", "query_toks": ["SELECT", "T1.Royal_Family_Details", ",", "T2.How_to_Get_There", "FROM", "ROYAL_FAMILY", "AS", "T1", "JOIN", "TOURIST_ATTRACTIONS", "AS", "T2", "ON", "T1.Royal_Family_ID", "=", "T2.Tourist_Attraction_ID"], "query_toks_no_value": ["select", "t1", ".", "royal_family_details", ",", "t2", ".", "how_to_get_there", "from", "royal_family", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "royal_family_id", "=", "t2", ".", "tourist_attraction_id"], "question": "Which tourist attractions are related to royal family? Tell me their details and how we can get there.", "question_toks": ["Which", "tourist", "attractions", "are", "related", "to", "royal", "family", "?", "Tell", "me", "their", "details", "and", "how", "we", "can", "get", "there", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 32, false], null], [0, 18, false], null]], "table_units": [["table_unit", 10], ["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 21, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Theme_park", "query": "SELECT T2.Visit_Date ,  T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID  =  T2.Tourist_ID WHERE T1.Tourist_Details  =  \"Vincent\"", "query_toks": ["SELECT", "T2.Visit_Date", ",", "T2.Visit_Details", "FROM", "VISITORS", "AS", "T1", "JOIN", "VISITS", "AS", "T2", "ON", "T1.Tourist_ID", "=", "T2.Tourist_ID", "WHERE", "T1.Tourist_Details", "=", "``", "Vincent", "''"], "query_toks_no_value": ["select", "t2", ".", "visit_date", ",", "t2", ".", "visit_details", "from", "visitors", "as", "t1", "join", "visits", "as", "t2", "on", "t1", ".", "tourist_id", "=", "t2", ".", "tourist_id", "where", "t1", ".", "tourist_details", "=", "value"], "question": "What are the visit date and details of the visitor whose detail is 'Vincent'?", "question_toks": ["What", "are", "the", "visit", "date", "and", "details", "of", "the", "visitor", "whose", "detail", "is", "'Vincent", "'", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 38, false], null]], "table_units": [["table_unit", 3], ["table_unit", 12]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 39, false], null]], [0, [0, [0, 40, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Vincent\"", null]]}}, {"db_id": "cre_Theme_park", "query": "SELECT T2.Visit_Date ,  T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID  =  T2.Tourist_ID WHERE T1.Tourist_Details  =  \"Vincent\"", "query_toks": ["SELECT", "T2.Visit_Date", ",", "T2.Visit_Details", "FROM", "VISITORS", "AS", "T1", "JOIN", "VISITS", "AS", "T2", "ON", "T1.Tourist_ID", "=", "T2.Tourist_ID", "WHERE", "T1.Tourist_Details", "=", "``", "Vincent", "''"], "query_toks_no_value": ["select", "t2", ".", "visit_date", ",", "t2", ".", "visit_details", "from", "visitors", "as", "t1", "join", "visits", "as", "t2", "on", "t1", ".", "tourist_id", "=", "t2", ".", "tourist_id", "where", "t1", ".", "tourist_details", "=", "value"], "question": "Find the visit date and details of the tourist whose detail is 'Vincent'", "question_toks": ["Find", "the", "visit", "date", "and", "details", "of", "the", "tourist", "whose", "detail", "is", "'Vincent", "'"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 38, false], null]], "table_units": [["table_unit", 3], ["table_unit", 12]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 39, false], null]], [0, [0, [0, 40, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Vincent\"", null]]}}, {"db_id": "cre_Theme_park", "query": "SELECT T1.Name ,  T3.Visit_Date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Vincent\" OR T2.Tourist_Details  =  \"Vivian\"", "query_toks": ["SELECT", "T1.Name", ",", "T3.Visit_Date", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "VISITORS", "AS", "T2", "JOIN", "VISITS", "AS", "T3", "ON", "T1.Tourist_Attraction_ID", "=", "T3.Tourist_Attraction_ID", "AND", "T2.Tourist_ID", "=", "T3.Tourist_ID", "WHERE", "T2.Tourist_Details", "=", "``", "Vincent", "''", "OR", "T2.Tourist_Details", "=", "``", "Vivian", "''"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t3", ".", "visit_date", "from", "tourist_attractions", "as", "t1", "join", "visitors", "as", "t2", "join", "visits", "as", "t3", "on", "t1", ".", "tourist_attraction_id", "=", "t3", ".", "tourist_attraction_id", "and", "t2", ".", "tourist_id", "=", "t3", ".", "tourist_id", "where", "t2", ".", "tourist_details", "=", "value", "or", "t2", ".", "tourist_details", "=", "value"], "question": "What are the names of the tourist attractions and the dates when the tourists named Vincent or Vivian visited there?", "question_toks": ["What", "are", "the", "names", "of", "the", "tourist", "attractions", "and", "the", "dates", "when", "the", "tourists", "named", "Vincent", "or", "Vivian", "visited", "there", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 37, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 38, false], null]], "table_units": [["table_unit", 6], ["table_unit", 3], ["table_unit", 12]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 39, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Vincent\"", null], "or", [false, 2, [0, [0, 10, false], null], "\"Vivian\"", null]]}}, {"db_id": "cre_Theme_park", "query": "SELECT T1.Name ,  T3.Visit_Date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Vincent\" OR T2.Tourist_Details  =  \"Vivian\"", "query_toks": ["SELECT", "T1.Name", ",", "T3.Visit_Date", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "VISITORS", "AS", "T2", "JOIN", "VISITS", "AS", "T3", "ON", "T1.Tourist_Attraction_ID", "=", "T3.Tourist_Attraction_ID", "AND", "T2.Tourist_ID", "=", "T3.Tourist_ID", "WHERE", "T2.Tourist_Details", "=", "``", "Vincent", "''", "OR", "T2.Tourist_Details", "=", "``", "Vivian", "''"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t3", ".", "visit_date", "from", "tourist_attractions", "as", "t1", "join", "visitors", "as", "t2", "join", "visits", "as", "t3", "on", "t1", ".", "tourist_attraction_id", "=", "t3", ".", "tourist_attraction_id", "and", "t2", ".", "tourist_id", "=", "t3", ".", "tourist_id", "where", "t2", ".", "tourist_details", "=", "value", "or", "t2", ".", "tourist_details", "=", "value"], "question": "For each tourist attraction, return its name and the date when the tourists named Vincent or Vivian visited there.", "question_toks": ["For", "each", "tourist", "attraction", ",", "return", "its", "name", "and", "the", "date", "when", "the", "tourists", "named", "Vincent", "or", "Vivian", "visited", "there", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 37, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 38, false], null]], "table_units": [["table_unit", 6], ["table_unit", 3], ["table_unit", 12]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 39, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Vincent\"", null], "or", [false, 2, [0, [0, 10, false], null], "\"Vivian\"", null]]}}, {"db_id": "cre_Theme_park", "query": "SELECT star_rating_code ,  avg(price_range) FROM HOTELS GROUP BY star_rating_code", "query_toks": ["SELECT", "star_rating_code", ",", "avg", "(", "price_range", ")", "FROM", "HOTELS", "GROUP", "BY", "star_rating_code"], "query_toks_no_value": ["select", "star_rating_code", ",", "avg", "(", "price_range", ")", "from", "hotels", "group", "by", "star_rating_code"], "question": "Show the average price of hotels for each star rating code.", "question_toks": ["Show", "the", "average", "price", "of", "hotels", "for", "each", "star", "rating", "code", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 14, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [5, [0, [0, 16, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Theme_park", "query": "SELECT star_rating_code ,  avg(price_range) FROM HOTELS GROUP BY star_rating_code", "query_toks": ["SELECT", "star_rating_code", ",", "avg", "(", "price_range", ")", "FROM", "HOTELS", "GROUP", "BY", "star_rating_code"], "query_toks_no_value": ["select", "star_rating_code", ",", "avg", "(", "price_range", ")", "from", "hotels", "group", "by", "star_rating_code"], "question": "What is the average price range of hotels for each each star rating code?", "question_toks": ["What", "is", "the", "average", "price", "range", "of", "hotels", "for", "each", "each", "star", "rating", "code", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 14, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [5, [0, [0, 16, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Theme_park", "query": "SELECT pets_allowed_yn ,  avg(price_range) FROM HOTELS GROUP BY pets_allowed_yn", "query_toks": ["SELECT", "pets_allowed_yn", ",", "avg", "(", "price_range", ")", "FROM", "HOTELS", "GROUP", "BY", "pets_allowed_yn"], "query_toks_no_value": ["select", "pets_allowed_yn", ",", "avg", "(", "price_range", ")", "from", "hotels", "group", "by", "pets_allowed_yn"], "question": "Show the average price of hotels for different pet policy.", "question_toks": ["Show", "the", "average", "price", "of", "hotels", "for", "different", "pet", "policy", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [5, [0, [0, 16, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Theme_park", "query": "SELECT pets_allowed_yn ,  avg(price_range) FROM HOTELS GROUP BY pets_allowed_yn", "query_toks": ["SELECT", "pets_allowed_yn", ",", "avg", "(", "price_range", ")", "FROM", "HOTELS", "GROUP", "BY", "pets_allowed_yn"], "query_toks_no_value": ["select", "pets_allowed_yn", ",", "avg", "(", "price_range", ")", "from", "hotels", "group", "by", "pets_allowed_yn"], "question": "What are the average prices of hotels grouped by their pet policy.", "question_toks": ["What", "are", "the", "average", "prices", "of", "hotels", "grouped", "by", "their", "pet", "policy", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [5, [0, [0, 16, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Theme_park", "query": "SELECT hotel_id ,  star_rating_code FROM HOTELS ORDER BY price_range ASC", "query_toks": ["SELECT", "hotel_id", ",", "star_rating_code", "FROM", "HOTELS", "ORDER", "BY", "price_range", "ASC"], "query_toks_no_value": ["select", "hotel_id", ",", "star_rating_code", "from", "hotels", "order", "by", "price_range", "asc"], "question": "Show the id and star rating of each hotel, ordered by its price from low to high.", "question_toks": ["Show", "the", "id", "and", "star", "rating", "of", "each", "hotel", ",", "ordered", "by", "its", "price", "from", "low", "to", "high", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 16, false], null]]], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Theme_park", "query": "SELECT hotel_id ,  star_rating_code FROM HOTELS ORDER BY price_range ASC", "query_toks": ["SELECT", "hotel_id", ",", "star_rating_code", "FROM", "HOTELS", "ORDER", "BY", "price_range", "ASC"], "query_toks_no_value": ["select", "hotel_id", ",", "star_rating_code", "from", "hotels", "order", "by", "price_range", "asc"], "question": "Find the id and star rating of each hotel and sort them in increasing order of price.", "question_toks": ["Find", "the", "id", "and", "star", "rating", "of", "each", "hotel", "and", "sort", "them", "in", "increasing", "order", "of", "price", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 16, false], null]]], "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Theme_park", "query": "SELECT other_hotel_details ,  star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3", "query_toks": ["SELECT", "other_hotel_details", ",", "star_rating_code", "FROM", "HOTELS", "ORDER", "BY", "price_range", "ASC", "LIMIT", "3"], "query_toks_no_value": ["select", "other_hotel_details", ",", "star_rating_code", "from", "hotels", "order", "by", "price_range", "asc", "limit", "value"], "question": "Show the details and star ratings of the 3 least expensive hotels.", "question_toks": ["Show", "the", "details", "and", "star", "ratings", "of", "the", "3", "least", "expensive", "hotels", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": 3, "orderBy": ["asc", [[0, [0, 16, false], null]]], "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Theme_park", "query": "SELECT other_hotel_details ,  star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3", "query_toks": ["SELECT", "other_hotel_details", ",", "star_rating_code", "FROM", "HOTELS", "ORDER", "BY", "price_range", "ASC", "LIMIT", "3"], "query_toks_no_value": ["select", "other_hotel_details", ",", "star_rating_code", "from", "hotels", "order", "by", "price_range", "asc", "limit", "value"], "question": "What are the details and star ratings of the three hotels with the lowest price ranges?", "question_toks": ["What", "are", "the", "details", "and", "star", "ratings", "of", "the", "three", "hotels", "with", "the", "lowest", "price", "ranges", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": 3, "orderBy": ["asc", [[0, [0, 16, false], null]]], "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Theme_park", "query": "SELECT T1.Attraction_Type_Description ,  T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code  =  T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.Attraction_Type_Description", ",", "T2.Attraction_Type_Code", "FROM", "Ref_Attraction_Types", "AS", "T1", "JOIN", "Tourist_Attractions", "AS", "T2", "ON", "T1.Attraction_Type_Code", "=", "T2.Attraction_Type_Code", "GROUP", "BY", "T2.Attraction_Type_Code", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "attraction_type_description", ",", "t2", ".", "attraction_type_code", "from", "ref_attraction_types", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "attraction_type_code", "=", "t2", ".", "attraction_type_code", "group", "by", "t2", ".", "attraction_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Show the description and code of the attraction type most tourist attractions belong to.", "question_toks": ["Show", "the", "description", "and", "code", "of", "the", "attraction", "type", "most", "tourist", "attractions", "belong", "to", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 19, false], null]], "table_units": [["table_unit", 2], ["table_unit", 6]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Theme_park", "query": "SELECT T1.Attraction_Type_Description ,  T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code  =  T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.Attraction_Type_Description", ",", "T2.Attraction_Type_Code", "FROM", "Ref_Attraction_Types", "AS", "T1", "JOIN", "Tourist_Attractions", "AS", "T2", "ON", "T1.Attraction_Type_Code", "=", "T2.Attraction_Type_Code", "GROUP", "BY", "T2.Attraction_Type_Code", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "attraction_type_description", ",", "t2", ".", "attraction_type_code", "from", "ref_attraction_types", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "attraction_type_code", "=", "t2", ".", "attraction_type_code", "group", "by", "t2", ".", "attraction_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which attraction type does the most tourist attractions belong to? Tell me its  attraction type description and code.", "question_toks": ["Which", "attraction", "type", "does", "the", "most", "tourist", "attractions", "belong", "to", "?", "Tell", "me", "its", "attraction", "type", "description", "and", "code", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 19, false], null]], "table_units": [["table_unit", 2], ["table_unit", 6]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 19, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Theme_park", "query": "SELECT How_to_Get_There ,  COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There", "query_toks": ["SELECT", "How_to_Get_There", ",", "COUNT", "(", "*", ")", "FROM", "Tourist_Attractions", "GROUP", "BY", "How_to_Get_There"], "query_toks_no_value": ["select", "how_to_get_there", ",", "count", "(", "*", ")", "from", "tourist_attractions", "group", "by", "how_to_get_there"], "question": "Show different ways to get to attractions and the number of attractions that can be accessed in the corresponding way.", "question_toks": ["Show", "different", "ways", "to", "get", "to", "attractions", "and", "the", "number", "of", "attractions", "that", "can", "be", "accessed", "in", "the", "corresponding", "way", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 21, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 21, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Theme_park", "query": "SELECT How_to_Get_There ,  COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There", "query_toks": ["SELECT", "How_to_Get_There", ",", "COUNT", "(", "*", ")", "FROM", "Tourist_Attractions", "GROUP", "BY", "How_to_Get_There"], "query_toks_no_value": ["select", "how_to_get_there", ",", "count", "(", "*", ")", "from", "tourist_attractions", "group", "by", "how_to_get_there"], "question": "List all the possible ways to get to attractions, together with the number of attractions accessible by these methods.", "question_toks": ["List", "all", "the", "possible", "ways", "to", "get", "to", "attractions", ",", "together", "with", "the", "number", "of", "attractions", "accessible", "by", "these", "methods", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 21, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 21, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Theme_park", "query": "SELECT T1.Name ,  T2.Tourist_Attraction_ID ,   COUNT(*) FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID", "query_toks": ["SELECT", "T1.Name", ",", "T2.Tourist_Attraction_ID", ",", "COUNT", "(", "*", ")", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "VISITS", "AS", "T2", "ON", "T1.Tourist_Attraction_ID", "=", "T2.Tourist_Attraction_ID", "GROUP", "BY", "T2.Tourist_Attraction_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "tourist_attraction_id", ",", "count", "(", "*", ")", "from", "tourist_attractions", "as", "t1", "join", "visits", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "group", "by", "t2", ".", "tourist_attraction_id"], "question": "Show different tourist attractions' names, ids, and the corresponding number of visits.", "question_toks": ["Show", "different", "tourist", "attractions", "'", "names", ",", "ids", ",", "and", "the", "corresponding", "number", "of", "visits", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 37, false], null]], "table_units": [["table_unit", 6], ["table_unit", 12]]}, "groupBy": [[0, 37, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 37, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Theme_park", "query": "SELECT T1.Name ,  T2.Tourist_Attraction_ID ,   COUNT(*) FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID", "query_toks": ["SELECT", "T1.Name", ",", "T2.Tourist_Attraction_ID", ",", "COUNT", "(", "*", ")", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "VISITS", "AS", "T2", "ON", "T1.Tourist_Attraction_ID", "=", "T2.Tourist_Attraction_ID", "GROUP", "BY", "T2.Tourist_Attraction_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "tourist_attraction_id", ",", "count", "(", "*", ")", "from", "tourist_attractions", "as", "t1", "join", "visits", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "group", "by", "t2", ".", "tourist_attraction_id"], "question": "What are the name, id and the corresponding number of visits for each  tourist attraction?", "question_toks": ["What", "are", "the", "name", ",", "id", "and", "the", "corresponding", "number", "of", "visits", "for", "each", "tourist", "attraction", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 37, false], null]], "table_units": [["table_unit", 6], ["table_unit", 12]]}, "groupBy": [[0, 37, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 37, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Theme_park", "query": "SELECT T1.Name ,  T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.Name", ",", "T2.Tourist_Attraction_ID", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "VISITS", "AS", "T2", "ON", "T1.Tourist_Attraction_ID", "=", "T2.Tourist_Attraction_ID", "GROUP", "BY", "T2.Tourist_Attraction_ID", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "tourist_attraction_id", "from", "tourist_attractions", "as", "t1", "join", "visits", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "group", "by", "t2", ".", "tourist_attraction_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show the names and ids of tourist attractions that are visited at least two times.", "question_toks": ["Show", "the", "names", "and", "ids", "of", "tourist", "attractions", "that", "are", "visited", "at", "least", "two", "times", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 37, false], null]], "table_units": [["table_unit", 6], ["table_unit", 12]]}, "groupBy": [[0, 37, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 37, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Theme_park", "query": "SELECT T1.Name ,  T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.Name", ",", "T2.Tourist_Attraction_ID", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "VISITS", "AS", "T2", "ON", "T1.Tourist_Attraction_ID", "=", "T2.Tourist_Attraction_ID", "GROUP", "BY", "T2.Tourist_Attraction_ID", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "tourist_attraction_id", "from", "tourist_attractions", "as", "t1", "join", "visits", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "group", "by", "t2", ".", "tourist_attraction_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Which tourist attractions are visited at least twice? Give me their names and ids.", "question_toks": ["Which", "tourist", "attractions", "are", "visited", "at", "least", "twice", "?", "Give", "me", "their", "names", "and", "ids", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 37, false], null]], "table_units": [["table_unit", 6], ["table_unit", 12]]}, "groupBy": [[0, 37, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 37, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Theme_park", "query": "SELECT T1.Name ,  T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  <=  1", "query_toks": ["SELECT", "T1.Name", ",", "T1.Tourist_Attraction_ID", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "VISITS", "AS", "T2", "ON", "T1.Tourist_Attraction_ID", "=", "T2.Tourist_Attraction_ID", "GROUP", "BY", "T2.Tourist_Attraction_ID", "HAVING", "count", "(", "*", ")", "<", "=", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "tourist_attraction_id", "from", "tourist_attractions", "as", "t1", "join", "visits", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "group", "by", "t2", ".", "tourist_attraction_id", "having", "count", "(", "*", ")", "<", "=", "value"], "question": "Show the names and ids of tourist attractions that are visited at most once.", "question_toks": ["Show", "the", "names", "and", "ids", "of", "tourist", "attractions", "that", "are", "visited", "at", "most", "once", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 37, false], null]], "table_units": [["table_unit", 6], ["table_unit", 12]]}, "groupBy": [[0, 37, false]], "having": [[false, 6, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Theme_park", "query": "SELECT T1.Name ,  T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  <=  1", "query_toks": ["SELECT", "T1.Name", ",", "T1.Tourist_Attraction_ID", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "VISITS", "AS", "T2", "ON", "T1.Tourist_Attraction_ID", "=", "T2.Tourist_Attraction_ID", "GROUP", "BY", "T2.Tourist_Attraction_ID", "HAVING", "count", "(", "*", ")", "<", "=", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "tourist_attraction_id", "from", "tourist_attractions", "as", "t1", "join", "visits", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "group", "by", "t2", ".", "tourist_attraction_id", "having", "count", "(", "*", ")", "<", "=", "value"], "question": "What are the names and ids of the tourist attractions that are visited at most once?", "question_toks": ["What", "are", "the", "names", "and", "ids", "of", "the", "tourist", "attractions", "that", "are", "visited", "at", "most", "once", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 37, false], null]], "table_units": [["table_unit", 6], ["table_unit", 12]]}, "groupBy": [[0, 37, false]], "having": [[false, 6, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": []}}, {"db_id": "game_1", "query": "SELECT gname ,  gtype FROM Video_games ORDER BY gname", "query_toks": ["SELECT", "gname", ",", "gtype", "FROM", "Video_games", "ORDER", "BY", "gname"], "query_toks_no_value": ["select", "gname", ",", "gtype", "from", "video_games", "order", "by", "gname"], "question": "Show all video games and their types in the order of their names.", "question_toks": ["Show", "all", "video", "games", "and", "their", "types", "in", "the", "order", "of", "their", "names", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 10, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "game_1", "query": "SELECT gname ,  gtype FROM Video_games ORDER BY gname", "query_toks": ["SELECT", "gname", ",", "gtype", "FROM", "Video_games", "ORDER", "BY", "gname"], "query_toks_no_value": ["select", "gname", ",", "gtype", "from", "video_games", "order", "by", "gname"], "question": "What are the names of all the video games and their types in alphabetical order?", "question_toks": ["What", "are", "the", "names", "of", "all", "the", "video", "games", "and", "their", "types", "in", "alphabetical", "order", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 10, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "game_1", "query": "SELECT gtype ,  count(*) FROM Video_games GROUP BY gtype", "query_toks": ["SELECT", "gtype", ",", "count", "(", "*", ")", "FROM", "Video_games", "GROUP", "BY", "gtype"], "query_toks_no_value": ["select", "gtype", ",", "count", "(", "*", ")", "from", "video_games", "group", "by", "gtype"], "question": "Show all video game types and the number of video games in each type.", "question_toks": ["Show", "all", "video", "game", "types", "and", "the", "number", "of", "video", "games", "in", "each", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 11, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "game_1", "query": "SELECT gtype ,  count(*) FROM Video_games GROUP BY gtype", "query_toks": ["SELECT", "gtype", ",", "count", "(", "*", ")", "FROM", "Video_games", "GROUP", "BY", "gtype"], "query_toks_no_value": ["select", "gtype", ",", "count", "(", "*", ")", "from", "video_games", "group", "by", "gtype"], "question": "What are the types of video games and how many are in each type?", "question_toks": ["What", "are", "the", "types", "of", "video", "games", "and", "how", "many", "are", "in", "each", "type", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 11, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "game_1", "query": "SELECT major ,  avg(age) ,  min(age) ,  max(age) FROM Student GROUP BY major", "query_toks": ["SELECT", "major", ",", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "max", "(", "age", ")", "FROM", "Student", "GROUP", "BY", "major"], "query_toks_no_value": ["select", "major", ",", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "max", "(", "age", ")", "from", "student", "group", "by", "major"], "question": "Show the average, minimum, and maximum age for different majors.", "question_toks": ["Show", "the", "average", ",", "minimum", ",", "and", "maximum", "age", "for", "different", "majors", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [5, [0, [0, 4, false], null]], [2, [0, [0, 4, false], null]], [1, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "game_1", "query": "SELECT major ,  avg(age) ,  min(age) ,  max(age) FROM Student GROUP BY major", "query_toks": ["SELECT", "major", ",", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "max", "(", "age", ")", "FROM", "Student", "GROUP", "BY", "major"], "query_toks_no_value": ["select", "major", ",", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "max", "(", "age", ")", "from", "student", "group", "by", "major"], "question": "What are the average, minimum, and max ages for each of the different majors?", "question_toks": ["What", "are", "the", "average", ",", "minimum", ",", "and", "max", "ages", "for", "each", "of", "the", "different", "majors", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [5, [0, [0, 4, false], null]], [2, [0, [0, 4, false], null]], [1, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "game_1", "query": "SELECT sportname ,  count(*) FROM Sportsinfo GROUP BY sportname", "query_toks": ["SELECT", "sportname", ",", "count", "(", "*", ")", "FROM", "Sportsinfo", "GROUP", "BY", "sportname"], "query_toks_no_value": ["select", "sportname", ",", "count", "(", "*", ")", "from", "sportsinfo", "group", "by", "sportname"], "question": "Show all sport name and the number of students.", "question_toks": ["Show", "all", "sport", "name", "and", "the", "number", "of", "students", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 16, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "game_1", "query": "SELECT sportname ,  count(*) FROM Sportsinfo GROUP BY sportname", "query_toks": ["SELECT", "sportname", ",", "count", "(", "*", ")", "FROM", "Sportsinfo", "GROUP", "BY", "sportname"], "query_toks_no_value": ["select", "sportname", ",", "count", "(", "*", ")", "from", "sportsinfo", "group", "by", "sportname"], "question": "How many students play each sport?", "question_toks": ["How", "many", "students", "play", "each", "sport", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 16, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "game_1", "query": "SELECT StuID ,  count(*) ,  sum(gamesplayed) FROM Sportsinfo GROUP BY StuID", "query_toks": ["SELECT", "StuID", ",", "count", "(", "*", ")", ",", "sum", "(", "gamesplayed", ")", "FROM", "Sportsinfo", "GROUP", "BY", "StuID"], "query_toks_no_value": ["select", "stuid", ",", "count", "(", "*", ")", ",", "sum", "(", "gamesplayed", ")", "from", "sportsinfo", "group", "by", "stuid"], "question": "Show all student IDs with the number of sports and total number of games played", "question_toks": ["Show", "all", "student", "IDs", "with", "the", "number", "of", "sports", "and", "total", "number", "of", "games", "played"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [3, [0, [0, 0, false], null]], [4, [0, [0, 18, false], null]]]], "union": null, "where": []}}, {"db_id": "game_1", "query": "SELECT StuID ,  count(*) ,  sum(gamesplayed) FROM Sportsinfo GROUP BY StuID", "query_toks": ["SELECT", "StuID", ",", "count", "(", "*", ")", ",", "sum", "(", "gamesplayed", ")", "FROM", "Sportsinfo", "GROUP", "BY", "StuID"], "query_toks_no_value": ["select", "stuid", ",", "count", "(", "*", ")", ",", "sum", "(", "gamesplayed", ")", "from", "sportsinfo", "group", "by", "stuid"], "question": "What are the ids of all students along with how many sports and games did they play?", "question_toks": ["What", "are", "the", "ids", "of", "all", "students", "along", "with", "how", "many", "sports", "and", "games", "did", "they", "play", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [3, [0, [0, 0, false], null]], [4, [0, [0, 18, false], null]]]], "union": null, "where": []}}, {"db_id": "game_1", "query": "SELECT T2.Fname ,  T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.Fname", ",", "T2.Lname", "FROM", "Sportsinfo", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.StuID", "=", "T2.StuID", "GROUP", "BY", "T1.StuID", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "fname", ",", "t2", ".", "lname", "from", "sportsinfo", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "group", "by", "t1", ".", "stuid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the first name and last name of the student who have most number of sports?", "question_toks": ["What", "is", "the", "first", "name", "and", "last", "name", "of", "the", "student", "who", "have", "most", "number", "of", "sports", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 1, false], null]], "table_units": [["table_unit", 3], ["table_unit", 0]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "game_1", "query": "SELECT T2.Fname ,  T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.Fname", ",", "T2.Lname", "FROM", "Sportsinfo", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.StuID", "=", "T2.StuID", "GROUP", "BY", "T1.StuID", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "fname", ",", "t2", ".", "lname", "from", "sportsinfo", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "group", "by", "t1", ".", "stuid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the first and last name of the student who played the most sports?", "question_toks": ["What", "is", "the", "first", "and", "last", "name", "of", "the", "student", "who", "played", "the", "most", "sports", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 1, false], null]], "table_units": [["table_unit", 3], ["table_unit", 0]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "game_1", "query": "SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.Fname  =  \"David\" AND T2.Lname  =  \"Shieber\"", "query_toks": ["SELECT", "sum", "(", "hoursperweek", ")", ",", "sum", "(", "gamesplayed", ")", "FROM", "Sportsinfo", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.StuID", "=", "T2.StuID", "WHERE", "T2.Fname", "=", "``", "David", "''", "AND", "T2.Lname", "=", "``", "Shieber", "''"], "query_toks_no_value": ["select", "sum", "(", "hoursperweek", ")", ",", "sum", "(", "gamesplayed", ")", "from", "sportsinfo", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t2", ".", "fname", "=", "value", "and", "t2", ".", "lname", "=", "value"], "question": "Show total hours per week and number of games played for student David Shieber.", "question_toks": ["Show", "total", "hours", "per", "week", "and", "number", "of", "games", "played", "for", "student", "David", "Shieber", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 1, false], null]], "table_units": [["table_unit", 3], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 17, false], null]], [4, [0, [0, 18, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], "\"David\"", null], "and", [false, 2, [0, [0, 2, false], null], "\"Shieber\"", null]]}}, {"db_id": "game_1", "query": "SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.Fname  =  \"David\" AND T2.Lname  =  \"Shieber\"", "query_toks": ["SELECT", "sum", "(", "hoursperweek", ")", ",", "sum", "(", "gamesplayed", ")", "FROM", "Sportsinfo", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.StuID", "=", "T2.StuID", "WHERE", "T2.Fname", "=", "``", "David", "''", "AND", "T2.Lname", "=", "``", "Shieber", "''"], "query_toks_no_value": ["select", "sum", "(", "hoursperweek", ")", ",", "sum", "(", "gamesplayed", ")", "from", "sportsinfo", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t2", ".", "fname", "=", "value", "and", "t2", ".", "lname", "=", "value"], "question": "What is the total number of hours per work and number of games played by David Shieber?", "question_toks": ["What", "is", "the", "total", "number", "of", "hours", "per", "work", "and", "number", "of", "games", "played", "by", "David", "Shieber", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 1, false], null]], "table_units": [["table_unit", 3], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 17, false], null]], [4, [0, [0, 18, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], "\"David\"", null], "and", [false, 2, [0, [0, 2, false], null], "\"Shieber\"", null]]}}, {"db_id": "game_1", "query": "SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.age  <  20", "query_toks": ["SELECT", "sum", "(", "hoursperweek", ")", ",", "sum", "(", "gamesplayed", ")", "FROM", "Sportsinfo", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.StuID", "=", "T2.StuID", "WHERE", "T2.age", "<", "20"], "query_toks_no_value": ["select", "sum", "(", "hoursperweek", ")", ",", "sum", "(", "gamesplayed", ")", "from", "sportsinfo", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t2", ".", "age", "<", "value"], "question": "Show total hours per week and number of games played for students under 20.", "question_toks": ["Show", "total", "hours", "per", "week", "and", "number", "of", "games", "played", "for", "students", "under", "20", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 1, false], null]], "table_units": [["table_unit", 3], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 17, false], null]], [4, [0, [0, 18, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 4, false], null], 20.0, null]]}}, {"db_id": "game_1", "query": "SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.age  <  20", "query_toks": ["SELECT", "sum", "(", "hoursperweek", ")", ",", "sum", "(", "gamesplayed", ")", "FROM", "Sportsinfo", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.StuID", "=", "T2.StuID", "WHERE", "T2.age", "<", "20"], "query_toks_no_value": ["select", "sum", "(", "hoursperweek", ")", ",", "sum", "(", "gamesplayed", ")", "from", "sportsinfo", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t2", ".", "age", "<", "value"], "question": "What is the total number of hours per week and number of games played by students under 20?", "question_toks": ["What", "is", "the", "total", "number", "of", "hours", "per", "week", "and", "number", "of", "games", "played", "by", "students", "under", "20", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 1, false], null]], "table_units": [["table_unit", 3], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[4, [0, [0, 17, false], null]], [4, [0, [0, 18, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 4, false], null], 20.0, null]]}}, {"db_id": "game_1", "query": "SELECT gameid ,  sum(hours_played) FROM Plays_games GROUP BY gameid", "query_toks": ["SELECT", "gameid", ",", "sum", "(", "hours_played", ")", "FROM", "Plays_games", "GROUP", "BY", "gameid"], "query_toks_no_value": ["select", "gameid", ",", "sum", "(", "hours_played", ")", "from", "plays_games", "group", "by", "gameid"], "question": "Show all game ids and the number of hours played.", "question_toks": ["Show", "all", "game", "ids", "and", "the", "number", "of", "hours", "played", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [4, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "game_1", "query": "SELECT gameid ,  sum(hours_played) FROM Plays_games GROUP BY gameid", "query_toks": ["SELECT", "gameid", ",", "sum", "(", "hours_played", ")", "FROM", "Plays_games", "GROUP", "BY", "gameid"], "query_toks_no_value": ["select", "gameid", ",", "sum", "(", "hours_played", ")", "from", "plays_games", "group", "by", "gameid"], "question": "What are ids and total number of hours played for each game?", "question_toks": ["What", "are", "ids", "and", "total", "number", "of", "hours", "played", "for", "each", "game", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [4, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "game_1", "query": "SELECT Stuid ,  sum(hours_played) FROM Plays_games GROUP BY Stuid", "query_toks": ["SELECT", "Stuid", ",", "sum", "(", "hours_played", ")", "FROM", "Plays_games", "GROUP", "BY", "Stuid"], "query_toks_no_value": ["select", "stuid", ",", "sum", "(", "hours_played", ")", "from", "plays_games", "group", "by", "stuid"], "question": "Show all student ids and the number of hours played.", "question_toks": ["Show", "all", "student", "ids", "and", "the", "number", "of", "hours", "played", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [4, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "game_1", "query": "SELECT Stuid ,  sum(hours_played) FROM Plays_games GROUP BY Stuid", "query_toks": ["SELECT", "Stuid", ",", "sum", "(", "hours_played", ")", "FROM", "Plays_games", "GROUP", "BY", "Stuid"], "query_toks_no_value": ["select", "stuid", ",", "sum", "(", "hours_played", ")", "from", "plays_games", "group", "by", "stuid"], "question": "What are the ids of all students and number of hours played?", "question_toks": ["What", "are", "the", "ids", "of", "all", "students", "and", "number", "of", "hours", "played", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [4, [0, [0, 14, false], null]]]], "union": null, "where": []}}, {"db_id": "game_1", "query": "SELECT T2.lname ,  T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.SportName  =  \"Football\" OR T1.SportName  =  \"Lacrosse\"", "query_toks": ["SELECT", "T2.lname", ",", "T2.fname", "FROM", "SportsInfo", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.StuID", "=", "T2.StuID", "WHERE", "T1.SportName", "=", "``", "Football", "''", "OR", "T1.SportName", "=", "``", "Lacrosse", "''"], "query_toks_no_value": ["select", "t2", ".", "lname", ",", "t2", ".", "fname", "from", "sportsinfo", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t1", ".", "sportname", "=", "value", "or", "t1", ".", "sportname", "=", "value"], "question": "Find the last and first name of students who are playing Football or Lacrosse.", "question_toks": ["Find", "the", "last", "and", "first", "name", "of", "students", "who", "are", "playing", "Football", "or", "Lacrosse", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 1, false], null]], "table_units": [["table_unit", 3], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 16, false], null], "\"Football\"", null], "or", [false, 2, [0, [0, 16, false], null], "\"Lacrosse\"", null]]}}, {"db_id": "game_1", "query": "SELECT T2.lname ,  T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.SportName  =  \"Football\" OR T1.SportName  =  \"Lacrosse\"", "query_toks": ["SELECT", "T2.lname", ",", "T2.fname", "FROM", "SportsInfo", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.StuID", "=", "T2.StuID", "WHERE", "T1.SportName", "=", "``", "Football", "''", "OR", "T1.SportName", "=", "``", "Lacrosse", "''"], "query_toks_no_value": ["select", "t2", ".", "lname", ",", "t2", ".", "fname", "from", "sportsinfo", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t1", ".", "sportname", "=", "value", "or", "t1", ".", "sportname", "=", "value"], "question": "What is the first and last name of all students who play Football or Lacrosse?", "question_toks": ["What", "is", "the", "first", "and", "last", "name", "of", "all", "students", "who", "play", "Football", "or", "Lacrosse", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 1, false], null]], "table_units": [["table_unit", 3], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 16, false], null], "\"Football\"", null], "or", [false, 2, [0, [0, 16, false], null], "\"Lacrosse\"", null]]}}, {"db_id": "game_1", "query": "SELECT fname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Football\" INTERSECT SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Lacrosse\")", "query_toks": ["SELECT", "fname", ",", "age", "FROM", "Student", "WHERE", "StuID", "IN", "(", "SELECT", "StuID", "FROM", "Sportsinfo", "WHERE", "SportName", "=", "``", "Football", "''", "INTERSECT", "SELECT", "StuID", "FROM", "Sportsinfo", "WHERE", "SportName", "=", "``", "Lacrosse", "''", ")"], "query_toks_no_value": ["select", "fname", ",", "age", "from", "student", "where", "stuid", "in", "(", "select", "stuid", "from", "sportsinfo", "where", "sportname", "=", "value", "intersect", "select", "stuid", "from", "sportsinfo", "where", "sportname", "=", "value", ")"], "question": "Find the first name and age of the students who are playing both Football and Lacrosse.", "question_toks": ["Find", "the", "first", "name", "and", "age", "of", "the", "students", "who", "are", "playing", "both", "Football", "and", "Lacrosse", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 16, false], null], "\"Lacrosse\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 16, false], null], "\"Football\"", null]]}, null]]}}, {"db_id": "game_1", "query": "SELECT fname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Football\" INTERSECT SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Lacrosse\")", "query_toks": ["SELECT", "fname", ",", "age", "FROM", "Student", "WHERE", "StuID", "IN", "(", "SELECT", "StuID", "FROM", "Sportsinfo", "WHERE", "SportName", "=", "``", "Football", "''", "INTERSECT", "SELECT", "StuID", "FROM", "Sportsinfo", "WHERE", "SportName", "=", "``", "Lacrosse", "''", ")"], "query_toks_no_value": ["select", "fname", ",", "age", "from", "student", "where", "stuid", "in", "(", "select", "stuid", "from", "sportsinfo", "where", "sportname", "=", "value", "intersect", "select", "stuid", "from", "sportsinfo", "where", "sportname", "=", "value", ")"], "question": "What are the first names and ages of all students who are playing both Football and Lacrosse?", "question_toks": ["What", "are", "the", "first", "names", "and", "ages", "of", "all", "students", "who", "are", "playing", "both", "Football", "and", "Lacrosse", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 16, false], null], "\"Lacrosse\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 16, false], null], "\"Football\"", null]]}, null]]}}, {"db_id": "game_1", "query": "SELECT lname ,  sex FROM Student WHERE StuID IN (SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Call of Destiny\" INTERSECT SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Works of Widenius\")", "query_toks": ["SELECT", "lname", ",", "sex", "FROM", "Student", "WHERE", "StuID", "IN", "(", "SELECT", "T1.StuID", "FROM", "Plays_games", "AS", "T1", "JOIN", "Video_games", "AS", "T2", "ON", "T1.GameID", "=", "T2.GameID", "WHERE", "T2.Gname", "=", "``", "Call", "of", "Destiny", "''", "INTERSECT", "SELECT", "T1.StuID", "FROM", "Plays_games", "AS", "T1", "JOIN", "Video_games", "AS", "T2", "ON", "T1.GameID", "=", "T2.GameID", "WHERE", "T2.Gname", "=", "``", "Works", "of", "Widenius", "''", ")"], "query_toks_no_value": ["select", "lname", ",", "sex", "from", "student", "where", "stuid", "in", "(", "select", "t1", ".", "stuid", "from", "plays_games", "as", "t1", "join", "video_games", "as", "t2", "on", "t1", ".", "gameid", "=", "t2", ".", "gameid", "where", "t2", ".", "gname", "=", "value", "intersect", "select", "t1", ".", "stuid", "from", "plays_games", "as", "t1", "join", "video_games", "as", "t2", "on", "t1", ".", "gameid", "=", "t2", ".", "gameid", "where", "t2", ".", "gname", "=", "value", ")"], "question": "Find the last name and gender of the students who are playing both Call of Destiny and Works of Widenius games.", "question_toks": ["Find", "the", "last", "name", "and", "gender", "of", "the", "students", "who", "are", "playing", "both", "Call", "of", "Destiny", "and", "Works", "of", "Widenius", "games", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 9, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 9, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Works of Widenius\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Call of Destiny\"", null]]}, null]]}}, {"db_id": "game_1", "query": "SELECT lname ,  sex FROM Student WHERE StuID IN (SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Call of Destiny\" INTERSECT SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Works of Widenius\")", "query_toks": ["SELECT", "lname", ",", "sex", "FROM", "Student", "WHERE", "StuID", "IN", "(", "SELECT", "T1.StuID", "FROM", "Plays_games", "AS", "T1", "JOIN", "Video_games", "AS", "T2", "ON", "T1.GameID", "=", "T2.GameID", "WHERE", "T2.Gname", "=", "``", "Call", "of", "Destiny", "''", "INTERSECT", "SELECT", "T1.StuID", "FROM", "Plays_games", "AS", "T1", "JOIN", "Video_games", "AS", "T2", "ON", "T1.GameID", "=", "T2.GameID", "WHERE", "T2.Gname", "=", "``", "Works", "of", "Widenius", "''", ")"], "query_toks_no_value": ["select", "lname", ",", "sex", "from", "student", "where", "stuid", "in", "(", "select", "t1", ".", "stuid", "from", "plays_games", "as", "t1", "join", "video_games", "as", "t2", "on", "t1", ".", "gameid", "=", "t2", ".", "gameid", "where", "t2", ".", "gname", "=", "value", "intersect", "select", "t1", ".", "stuid", "from", "plays_games", "as", "t1", "join", "video_games", "as", "t2", "on", "t1", ".", "gameid", "=", "t2", ".", "gameid", "where", "t2", ".", "gname", "=", "value", ")"], "question": "what is the last name and gender of all students who played both Call of Destiny and Works of Widenius?", "question_toks": ["what", "is", "the", "last", "name", "and", "gender", "of", "all", "students", "who", "played", "both", "Call", "of", "Destiny", "and", "Works", "of", "Widenius", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 8, [0, [0, 1, false], null], {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 9, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 13, false], null], [0, 9, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Works of Widenius\"", null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Call of Destiny\"", null]]}, null]]}}, {"db_id": "customers_and_addresses", "query": "SELECT state_province_county ,  country FROM addresses WHERE zip_postcode LIKE \"4%\"", "query_toks": ["SELECT", "state_province_county", ",", "country", "FROM", "addresses", "WHERE", "zip_postcode", "LIKE", "``", "4", "%", "''"], "query_toks_no_value": ["select", "state_province_county", ",", "country", "from", "addresses", "where", "zip_postcode", "like", "value"], "question": "Find the state and country of all cities with post code starting with 4.", "question_toks": ["Find", "the", "state", "and", "country", "of", "all", "cities", "with", "post", "code", "starting", "with", "4", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 4, false], null], "\"4%\"", null]]}}, {"db_id": "customers_and_addresses", "query": "SELECT state_province_county ,  country FROM addresses WHERE zip_postcode LIKE \"4%\"", "query_toks": ["SELECT", "state_province_county", ",", "country", "FROM", "addresses", "WHERE", "zip_postcode", "LIKE", "``", "4", "%", "''"], "query_toks_no_value": ["select", "state_province_county", ",", "country", "from", "addresses", "where", "zip_postcode", "like", "value"], "question": "What are the state and country of all the cities that have post codes starting with 4.\\", "question_toks": ["What", "are", "the", "state", "and", "country", "of", "all", "the", "cities", "that", "have", "post", "codes", "starting", "with", "4.\\"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 9, [0, [0, 4, false], null], "\"4%\"", null]]}}, {"db_id": "customers_and_addresses", "query": "SELECT channel_code ,  contact_number FROM customer_contact_channels WHERE active_to_date - active_from_date  =  (SELECT active_to_date - active_from_date FROM customer_contact_channels ORDER BY (active_to_date - active_from_date) DESC LIMIT 1)", "query_toks": ["SELECT", "channel_code", ",", "contact_number", "FROM", "customer_contact_channels", "WHERE", "active_to_date", "-", "active_from_date", "=", "(", "SELECT", "active_to_date", "-", "active_from_date", "FROM", "customer_contact_channels", "ORDER", "BY", "(", "active_to_date", "-", "active_from_date", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "channel_code", ",", "contact_number", "from", "customer_contact_channels", "where", "active_to_date", "-", "active_from_date", "=", "(", "select", "active_to_date", "-", "active_from_date", "from", "customer_contact_channels", "order", "by", "(", "active_to_date", "-", "active_from_date", ")", "desc", "limit", "value", ")"], "question": "What is the channel code and contact number of the customer contact channel that was active for the longest time?", "question_toks": ["What", "is", "the", "channel", "code", "and", "contact", "number", "of", "the", "customer", "contact", "channel", "that", "was", "active", "for", "the", "longest", "time", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 2, [1, [0, 23, false], [0, 22, false]], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[1, [0, 23, false], [0, 22, false]]]], "select": [false, [[0, [1, [0, 23, false], [0, 22, false]]]]], "union": null, "where": []}, null]]}}, {"db_id": "customers_and_addresses", "query": "SELECT channel_code ,  contact_number FROM customer_contact_channels WHERE active_to_date - active_from_date  =  (SELECT active_to_date - active_from_date FROM customer_contact_channels ORDER BY (active_to_date - active_from_date) DESC LIMIT 1)", "query_toks": ["SELECT", "channel_code", ",", "contact_number", "FROM", "customer_contact_channels", "WHERE", "active_to_date", "-", "active_from_date", "=", "(", "SELECT", "active_to_date", "-", "active_from_date", "FROM", "customer_contact_channels", "ORDER", "BY", "(", "active_to_date", "-", "active_from_date", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "channel_code", ",", "contact_number", "from", "customer_contact_channels", "where", "active_to_date", "-", "active_from_date", "=", "(", "select", "active_to_date", "-", "active_from_date", "from", "customer_contact_channels", "order", "by", "(", "active_to_date", "-", "active_from_date", ")", "desc", "limit", "value", ")"], "question": "Return the channel code and contact number of the customer contact channel whose active duration was the longest.", "question_toks": ["Return", "the", "channel", "code", "and", "contact", "number", "of", "the", "customer", "contact", "channel", "whose", "active", "duration", "was", "the", "longest", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 2, [1, [0, 23, false], [0, 22, false]], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[1, [0, 23, false], [0, 22, false]]]], "select": [false, [[0, [1, [0, 23, false], [0, 22, false]]]]], "union": null, "where": []}, null]]}}, {"db_id": "customers_and_addresses", "query": "SELECT t1.customer_name ,  t2.active_from_date FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.channel_code  =  'Email'", "query_toks": ["SELECT", "t1.customer_name", ",", "t2.active_from_date", "FROM", "customers", "AS", "t1", "JOIN", "customer_contact_channels", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "WHERE", "t2.channel_code", "=", "'Email", "'"], "query_toks_no_value": ["select", "t1", ".", "customer_name", ",", "t2", ".", "active_from_date", "from", "customers", "as", "t1", "join", "customer_contact_channels", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t2", ".", "channel_code", "=", "value"], "question": "Find the name and active date of the customer that use email as the contact channel.", "question_toks": ["Find", "the", "name", "and", "active", "date", "of", "the", "customer", "that", "use", "email", "as", "the", "contact", "channel", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 20, false], null]], "table_units": [["table_unit", 2], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 22, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 21, false], null], "\"Email\"", null]]}}, {"db_id": "customers_and_addresses", "query": "SELECT t1.customer_name ,  t2.active_from_date FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.channel_code  =  'Email'", "query_toks": ["SELECT", "t1.customer_name", ",", "t2.active_from_date", "FROM", "customers", "AS", "t1", "JOIN", "customer_contact_channels", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "WHERE", "t2.channel_code", "=", "'Email", "'"], "query_toks_no_value": ["select", "t1", ".", "customer_name", ",", "t2", ".", "active_from_date", "from", "customers", "as", "t1", "join", "customer_contact_channels", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t2", ".", "channel_code", "=", "value"], "question": "What are the name and active date of the customers whose contact channel code is email?", "question_toks": ["What", "are", "the", "name", "and", "active", "date", "of", "the", "customers", "whose", "contact", "channel", "code", "is", "email", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 20, false], null]], "table_units": [["table_unit", 2], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 22, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 21, false], null], "\"Email\"", null]]}}, {"db_id": "customers_and_addresses", "query": "SELECT t1.customer_name ,  t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id WHERE order_status  =  \"Delivered\"", "query_toks": ["SELECT", "t1.customer_name", ",", "t2.order_date", "FROM", "customers", "AS", "t1", "JOIN", "customer_orders", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "WHERE", "order_status", "=", "``", "Delivered", "''"], "query_toks_no_value": ["select", "t1", ".", "customer_name", ",", "t2", ".", "order_date", "from", "customers", "as", "t1", "join", "customer_orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "order_status", "=", "value"], "question": "Find the customer name and date of the orders that have the status \"Delivered\".", "question_toks": ["Find", "the", "customer", "name", "and", "date", "of", "the", "orders", "that", "have", "the", "status", "``", "Delivered", "''", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 26, false], null]], "table_units": [["table_unit", 2], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 28, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 27, false], null], "\"Delivered\"", null]]}}, {"db_id": "customers_and_addresses", "query": "SELECT t1.customer_name ,  t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id WHERE order_status  =  \"Delivered\"", "query_toks": ["SELECT", "t1.customer_name", ",", "t2.order_date", "FROM", "customers", "AS", "t1", "JOIN", "customer_orders", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "WHERE", "order_status", "=", "``", "Delivered", "''"], "query_toks_no_value": ["select", "t1", ".", "customer_name", ",", "t2", ".", "order_date", "from", "customers", "as", "t1", "join", "customer_orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "order_status", "=", "value"], "question": "What are the customer name and date of the orders whose status is \"Delivered\".", "question_toks": ["What", "are", "the", "customer", "name", "and", "date", "of", "the", "orders", "whose", "status", "is", "``", "Delivered", "''", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 26, false], null]], "table_units": [["table_unit", 2], ["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 28, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 27, false], null], "\"Delivered\"", null]]}}, {"db_id": "customers_and_addresses", "query": "SELECT t2.product_details ,  t2.product_id FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY sum(t1.order_quantity) LIMIT 1", "query_toks": ["SELECT", "t2.product_details", ",", "t2.product_id", "FROM", "order_items", "AS", "t1", "JOIN", "products", "AS", "t2", "ON", "t1.product_id", "=", "t2.product_id", "GROUP", "BY", "t1.product_id", "ORDER", "BY", "sum", "(", "t1.order_quantity", ")", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "product_details", ",", "t2", ".", "product_id", "from", "order_items", "as", "t1", "join", "products", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "group", "by", "t1", ".", "product_id", "order", "by", "sum", "(", "t1", ".", "order_quantity", ")", "limit", "value"], "question": "Find the name and ID of the product whose total order quantity is the largest.", "question_toks": ["Find", "the", "name", "and", "ID", "of", "the", "product", "whose", "total", "order", "quantity", "is", "the", "largest", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 31, false], null], [0, 8, false], null]], "table_units": [["table_unit", 6], ["table_unit", 1]]}, "groupBy": [[0, 31, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [4, 32, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "customers_and_addresses", "query": "SELECT t2.product_details ,  t2.product_id FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY sum(t1.order_quantity) LIMIT 1", "query_toks": ["SELECT", "t2.product_details", ",", "t2.product_id", "FROM", "order_items", "AS", "t1", "JOIN", "products", "AS", "t2", "ON", "t1.product_id", "=", "t2.product_id", "GROUP", "BY", "t1.product_id", "ORDER", "BY", "sum", "(", "t1.order_quantity", ")", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "product_details", ",", "t2", ".", "product_id", "from", "order_items", "as", "t1", "join", "products", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "group", "by", "t1", ".", "product_id", "order", "by", "sum", "(", "t1", ".", "order_quantity", ")", "limit", "value"], "question": "What are the name and ID of the product bought the most.", "question_toks": ["What", "are", "the", "name", "and", "ID", "of", "the", "product", "bought", "the", "most", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 31, false], null], [0, 8, false], null]], "table_units": [["table_unit", 6], ["table_unit", 1]]}, "groupBy": [[0, 31, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [4, 32, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "music_4", "query": "SELECT Date_of_ceremony ,  RESULT FROM music_festival", "query_toks": ["SELECT", "Date_of_ceremony", ",", "RESULT", "FROM", "music_festival"], "query_toks_no_value": ["select", "date_of_ceremony", ",", "result", "from", "music_festival"], "question": "Return the dates of ceremony and the results of all music festivals", "question_toks": ["Return", "the", "dates", "of", "ceremony", "and", "the", "results", "of", "all", "music", "festivals"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "music_4", "query": "SELECT Date_of_ceremony ,  RESULT FROM music_festival", "query_toks": ["SELECT", "Date_of_ceremony", ",", "RESULT", "FROM", "music_festival"], "query_toks_no_value": ["select", "date_of_ceremony", ",", "result", "from", "music_festival"], "question": "What are the dates of ceremony and results for each music festival?", "question_toks": ["What", "are", "the", "dates", "of", "ceremony", "and", "results", "for", "each", "music", "festival", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "music_4", "query": "SELECT max(Weeks_on_Top) ,  min(Weeks_on_Top) FROM volume", "query_toks": ["SELECT", "max", "(", "Weeks_on_Top", ")", ",", "min", "(", "Weeks_on_Top", ")", "FROM", "volume"], "query_toks_no_value": ["select", "max", "(", "weeks_on_top", ")", ",", "min", "(", "weeks_on_top", ")", "from", "volume"], "question": "What are the maximum and minimum week on top of all volumes?", "question_toks": ["What", "are", "the", "maximum", "and", "minimum", "week", "on", "top", "of", "all", "volumes", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 9, false], null]], [2, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "music_4", "query": "SELECT max(Weeks_on_Top) ,  min(Weeks_on_Top) FROM volume", "query_toks": ["SELECT", "max", "(", "Weeks_on_Top", ")", ",", "min", "(", "Weeks_on_Top", ")", "FROM", "volume"], "query_toks_no_value": ["select", "max", "(", "weeks_on_top", ")", ",", "min", "(", "weeks_on_top", ")", "from", "volume"], "question": "Give the maximum and minimum weeks on top across all volumes.", "question_toks": ["Give", "the", "maximum", "and", "minimum", "weeks", "on", "top", "across", "all", "volumes", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 9, false], null]], [2, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "music_4", "query": "SELECT Famous_Title ,  Age FROM artist ORDER BY Age DESC", "query_toks": ["SELECT", "Famous_Title", ",", "Age", "FROM", "artist", "ORDER", "BY", "Age", "DESC"], "query_toks_no_value": ["select", "famous_title", ",", "age", "from", "artist", "order", "by", "age", "desc"], "question": "Please list the age and famous title of artists in descending order of age.", "question_toks": ["Please", "list", "the", "age", "and", "famous", "title", "of", "artists", "in", "descending", "order", "of", "age", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 3, false], null]]], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "music_4", "query": "SELECT Famous_Title ,  Age FROM artist ORDER BY Age DESC", "query_toks": ["SELECT", "Famous_Title", ",", "Age", "FROM", "artist", "ORDER", "BY", "Age", "DESC"], "query_toks_no_value": ["select", "famous_title", ",", "age", "from", "artist", "order", "by", "age", "desc"], "question": "What are the famous titles and ages of each artist, listed in descending order by age?", "question_toks": ["What", "are", "the", "famous", "titles", "and", "ages", "of", "each", "artist", ",", "listed", "in", "descending", "order", "by", "age", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 3, false], null]]], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "music_4", "query": "SELECT Category ,  COUNT(*) FROM music_festival GROUP BY Category", "query_toks": ["SELECT", "Category", ",", "COUNT", "(", "*", ")", "FROM", "music_festival", "GROUP", "BY", "Category"], "query_toks_no_value": ["select", "category", ",", "count", "(", "*", ")", "from", "music_festival", "group", "by", "category"], "question": "Please show the categories of the music festivals and the count.", "question_toks": ["Please", "show", "the", "categories", "of", "the", "music", "festivals", "and", "the", "count", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "music_4", "query": "SELECT Category ,  COUNT(*) FROM music_festival GROUP BY Category", "query_toks": ["SELECT", "Category", ",", "COUNT", "(", "*", ")", "FROM", "music_festival", "GROUP", "BY", "Category"], "query_toks_no_value": ["select", "category", ",", "count", "(", "*", ")", "from", "music_festival", "group", "by", "category"], "question": "Return the number of music festivals of each category.", "question_toks": ["Return", "the", "number", "of", "music", "festivals", "of", "each", "category", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "music_4", "query": "SELECT RESULT ,  COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC", "query_toks": ["SELECT", "RESULT", ",", "COUNT", "(", "*", ")", "FROM", "music_festival", "GROUP", "BY", "RESULT", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "result", ",", "count", "(", "*", ")", "from", "music_festival", "group", "by", "result", "order", "by", "count", "(", "*", ")", "desc"], "question": "Please show the results of music festivals and the number of music festivals that have had each, ordered by this count.", "question_toks": ["Please", "show", "the", "results", "of", "music", "festivals", "and", "the", "number", "of", "music", "festivals", "that", "have", "had", "each", ",", "ordered", "by", "this", "count", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 17, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 17, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "music_4", "query": "SELECT RESULT ,  COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC", "query_toks": ["SELECT", "RESULT", ",", "COUNT", "(", "*", ")", "FROM", "music_festival", "GROUP", "BY", "RESULT", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "result", ",", "count", "(", "*", ")", "from", "music_festival", "group", "by", "result", "order", "by", "count", "(", "*", ")", "desc"], "question": "How many music festivals have had each kind of result, ordered descending by count?", "question_toks": ["How", "many", "music", "festivals", "have", "had", "each", "kind", "of", "result", ",", "ordered", "descending", "by", "count", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 17, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 17, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "roller_coaster", "query": "SELECT LENGTH ,  Height FROM roller_coaster", "query_toks": ["SELECT", "LENGTH", ",", "Height", "FROM", "roller_coaster"], "query_toks_no_value": ["select", "length", ",", "height", "from", "roller_coaster"], "question": "What are the lengths and heights of roller coasters?", "question_toks": ["What", "are", "the", "lengths", "and", "heights", "of", "roller", "coasters", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "roller_coaster", "query": "SELECT Status ,  COUNT(*) FROM roller_coaster GROUP BY Status", "query_toks": ["SELECT", "Status", ",", "COUNT", "(", "*", ")", "FROM", "roller_coaster", "GROUP", "BY", "Status"], "query_toks_no_value": ["select", "status", ",", "count", "(", "*", ")", "from", "roller_coaster", "group", "by", "status"], "question": "Show the different statuses and the numbers of roller coasters for each status.", "question_toks": ["Show", "the", "different", "statuses", "and", "the", "numbers", "of", "roller", "coasters", "for", "each", "status", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "roller_coaster", "query": "SELECT T2.Name ,  T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID", "query_toks": ["SELECT", "T2.Name", ",", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "roller_coaster", "AS", "T2", "ON", "T1.Country_ID", "=", "T2.Country_ID"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t1", ".", "name", "from", "country", "as", "t1", "join", "roller_coaster", "as", "t2", "on", "t1", ".", "country_id", "=", "t2", ".", "country_id"], "question": "Show the names of roller coasters and names of country they are in.", "question_toks": ["Show", "the", "names", "of", "roller", "coasters", "and", "names", "of", "country", "they", "are", "in", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 4, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "roller_coaster", "query": "SELECT T1.Name ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID ORDER BY T2.Height DESC LIMIT 1", "query_toks": ["SELECT", "T1.Name", ",", "T1.population", "FROM", "country", "AS", "T1", "JOIN", "roller_coaster", "AS", "T2", "ON", "T1.Country_ID", "=", "T2.Country_ID", "ORDER", "BY", "T2.Height", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "population", "from", "country", "as", "t1", "join", "roller_coaster", "as", "t2", "on", "t1", ".", "country_id", "=", "t2", ".", "country_id", "order", "by", "t2", ".", "height", "desc", "limit", "value"], "question": "Show the name and population of the country that has the highest roller coaster.", "question_toks": ["Show", "the", "name", "and", "population", "of", "the", "country", "that", "has", "the", "highest", "roller", "coaster", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 4, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "roller_coaster", "query": "SELECT T1.Name ,  avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID GROUP BY T1.Name", "query_toks": ["SELECT", "T1.Name", ",", "avg", "(", "T2.Speed", ")", "FROM", "country", "AS", "T1", "JOIN", "roller_coaster", "AS", "T2", "ON", "T1.Country_ID", "=", "T2.Country_ID", "GROUP", "BY", "T1.Name"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "avg", "(", "t2", ".", "speed", ")", "from", "country", "as", "t1", "join", "roller_coaster", "as", "t2", "on", "t1", ".", "country_id", "=", "t2", ".", "country_id", "group", "by", "t1", ".", "name"], "question": "Show the names of countries and the average speed of roller coasters from each country.", "question_toks": ["Show", "the", "names", "of", "countries", "and", "the", "average", "speed", "of", "roller", "coasters", "from", "each", "country", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 4, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 11, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [5, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "roller_coaster", "query": "SELECT T1.name ,  T1.area ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed  >  60 INTERSECT SELECT T1.name ,  T1.area ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed  <  55", "query_toks": ["SELECT", "T1.name", ",", "T1.area", ",", "T1.population", "FROM", "country", "AS", "T1", "JOIN", "roller_coaster", "AS", "T2", "ON", "T1.Country_ID", "=", "T2.Country_ID", "WHERE", "T2.speed", ">", "60", "INTERSECT", "SELECT", "T1.name", ",", "T1.area", ",", "T1.population", "FROM", "country", "AS", "T1", "JOIN", "roller_coaster", "AS", "T2", "ON", "T1.Country_ID", "=", "T2.Country_ID", "WHERE", "T2.speed", "<", "55"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "area", ",", "t1", ".", "population", "from", "country", "as", "t1", "join", "roller_coaster", "as", "t2", "on", "t1", ".", "country_id", "=", "t2", ".", "country_id", "where", "t2", ".", "speed", ">", "value", "intersect", "select", "t1", ".", "name", ",", "t1", ".", "area", ",", "t1", ".", "population", "from", "country", "as", "t1", "join", "roller_coaster", "as", "t2", "on", "t1", ".", "country_id", "=", "t2", ".", "country_id", "where", "t2", ".", "speed", "<", "value"], "question": "What are the country names, area and population which has both roller coasters with speed higher", "question_toks": ["What", "are", "the", "country", "names", ",", "area", "and", "population", "which", "has", "both", "roller", "coasters", "with", "speed", "higher"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 4, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 4, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 7, false], null], 55.0, null]]}, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 7, false], null], 60.0, null]]}}, {"db_id": "ship_1", "query": "SELECT count(*) ,  rank FROM captain GROUP BY rank", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "rank", "FROM", "captain", "GROUP", "BY", "rank"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "rank", "from", "captain", "group", "by", "rank"], "question": "How many captains are in each rank?", "question_toks": ["How", "many", "captains", "are", "in", "each", "rank", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "ship_1", "query": "SELECT count(*) ,  rank FROM captain GROUP BY rank", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "rank", "FROM", "captain", "GROUP", "BY", "rank"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "rank", "from", "captain", "group", "by", "rank"], "question": "Count the number of captains that have each rank.", "question_toks": ["Count", "the", "number", "of", "captains", "that", "have", "each", "rank", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "ship_1", "query": "SELECT count(*) ,  rank FROM captain WHERE age  <  50 GROUP BY rank", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "rank", "FROM", "captain", "WHERE", "age", "<", "50", "GROUP", "BY", "rank"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "rank", "from", "captain", "where", "age", "<", "value", "group", "by", "rank"], "question": "How many captains with younger than 50 are in each rank?", "question_toks": ["How", "many", "captains", "with", "younger", "than", "50", "are", "in", "each", "rank", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 4, false], null], 50.0, null]]}}, {"db_id": "ship_1", "query": "SELECT count(*) ,  rank FROM captain WHERE age  <  50 GROUP BY rank", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "rank", "FROM", "captain", "WHERE", "age", "<", "50", "GROUP", "BY", "rank"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "rank", "from", "captain", "where", "age", "<", "value", "group", "by", "rank"], "question": "Count the number of captains younger than 50 of each rank.", "question_toks": ["Count", "the", "number", "of", "captains", "younger", "than", "50", "of", "each", "rank", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 4, false], null], 50.0, null]]}}, {"db_id": "ship_1", "query": "SELECT name ,  CLASS ,  rank FROM captain", "query_toks": ["SELECT", "name", ",", "CLASS", ",", "rank", "FROM", "captain"], "query_toks_no_value": ["select", "name", ",", "class", ",", "rank", "from", "captain"], "question": "Find the name, class and rank of all captains.", "question_toks": ["Find", "the", "name", ",", "class", "and", "rank", "of", "all", "captains", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "ship_1", "query": "SELECT name ,  CLASS ,  rank FROM captain", "query_toks": ["SELECT", "name", ",", "CLASS", ",", "rank", "FROM", "captain"], "query_toks_no_value": ["select", "name", ",", "class", ",", "rank", "from", "captain"], "question": "What are the names, classes, and ranks of all captains?", "question_toks": ["What", "are", "the", "names", ",", "classes", ",", "and", "ranks", "of", "all", "captains", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "ship_1", "query": "SELECT avg(age) ,  min(age) ,  CLASS FROM captain GROUP BY CLASS", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "CLASS", "FROM", "captain", "GROUP", "BY", "CLASS"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "class", "from", "captain", "group", "by", "class"], "question": "What are the average and minimum age of captains in different class?", "question_toks": ["What", "are", "the", "average", "and", "minimum", "age", "of", "captains", "in", "different", "class", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]], [2, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "ship_1", "query": "SELECT avg(age) ,  min(age) ,  CLASS FROM captain GROUP BY CLASS", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "CLASS", "FROM", "captain", "GROUP", "BY", "CLASS"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "class", "from", "captain", "group", "by", "class"], "question": "Return the average and minimum age of captains in each class.", "question_toks": ["Return", "the", "average", "and", "minimum", "age", "of", "captains", "in", "each", "class", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 4, false], null]], [2, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "ship_1", "query": "SELECT name ,  TYPE ,  flag FROM ship ORDER BY built_year DESC LIMIT 1", "query_toks": ["SELECT", "name", ",", "TYPE", ",", "flag", "FROM", "ship", "ORDER", "BY", "built_year", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "type", ",", "flag", "from", "ship", "order", "by", "built_year", "desc", "limit", "value"], "question": "Find the name, type, and flag of the ship that is built in the most recent year.", "question_toks": ["Find", "the", "name", ",", "type", ",", "and", "flag", "of", "the", "ship", "that", "is", "built", "in", "the", "most", "recent", "year", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 10, false], null]]], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "ship_1", "query": "SELECT name ,  TYPE ,  flag FROM ship ORDER BY built_year DESC LIMIT 1", "query_toks": ["SELECT", "name", ",", "TYPE", ",", "flag", "FROM", "ship", "ORDER", "BY", "built_year", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "type", ",", "flag", "from", "ship", "order", "by", "built_year", "desc", "limit", "value"], "question": "What is the name, type, and flag of the ship that was built in the most recent year?", "question_toks": ["What", "is", "the", "name", ",", "type", ",", "and", "flag", "of", "the", "ship", "that", "was", "built", "in", "the", "most", "recent", "year", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 10, false], null]]], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "ship_1", "query": "SELECT count(*) ,  flag FROM ship GROUP BY flag", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "flag", "FROM", "ship", "GROUP", "BY", "flag"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "flag", "from", "ship", "group", "by", "flag"], "question": "Group by ships by flag, and return number of ships that have each flag.", "question_toks": ["Group", "by", "ships", "by", "flag", ",", "and", "return", "number", "of", "ships", "that", "have", "each", "flag", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "ship_1", "query": "SELECT count(*) ,  flag FROM ship GROUP BY flag", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "flag", "FROM", "ship", "GROUP", "BY", "flag"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "flag", "from", "ship", "group", "by", "flag"], "question": "What are the different ship flags, and how many ships have each?", "question_toks": ["What", "are", "the", "different", "ship", "flags", ",", "and", "how", "many", "ships", "have", "each", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "ship_1", "query": "SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain)", "query_toks": ["SELECT", "name", ",", "CLASS", "FROM", "ship", "WHERE", "ship_id", "NOT", "IN", "(", "SELECT", "ship_id", "FROM", "captain", ")"], "query_toks_no_value": ["select", "name", ",", "class", "from", "ship", "where", "ship_id", "not", "in", "(", "select", "ship_id", "from", "captain", ")"], "question": "what are the names and classes of the ships that do not have any captain yet?", "question_toks": ["what", "are", "the", "names", "and", "classes", "of", "the", "ships", "that", "do", "not", "have", "any", "captain", "yet", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 7, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "ship_1", "query": "SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain)", "query_toks": ["SELECT", "name", ",", "CLASS", "FROM", "ship", "WHERE", "ship_id", "NOT", "IN", "(", "SELECT", "ship_id", "FROM", "captain", ")"], "query_toks_no_value": ["select", "name", ",", "class", "from", "ship", "where", "ship_id", "not", "in", "(", "select", "ship_id", "from", "captain", ")"], "question": "Return the names and classes of ships that do not have a captain?", "question_toks": ["Return", "the", "names", "and", "classes", "of", "ships", "that", "do", "not", "have", "a", "captain", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 7, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "ship_1", "query": "SELECT name ,  flag FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank  =  'Midshipman')", "query_toks": ["SELECT", "name", ",", "flag", "FROM", "ship", "WHERE", "ship_id", "NOT", "IN", "(", "SELECT", "ship_id", "FROM", "captain", "WHERE", "rank", "=", "'Midshipman", "'", ")"], "query_toks_no_value": ["select", "name", ",", "flag", "from", "ship", "where", "ship_id", "not", "in", "(", "select", "ship_id", "from", "captain", "where", "rank", "=", "value", ")"], "question": "Find the name and flag of ships that are not steered by any captain with Midshipman rank.", "question_toks": ["Find", "the", "name", "and", "flag", "of", "ships", "that", "are", "not", "steered", "by", "any", "captain", "with", "Midshipman", "rank", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 7, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"Midshipman\"", null]]}, null]]}}, {"db_id": "ship_1", "query": "SELECT name ,  flag FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank  =  'Midshipman')", "query_toks": ["SELECT", "name", ",", "flag", "FROM", "ship", "WHERE", "ship_id", "NOT", "IN", "(", "SELECT", "ship_id", "FROM", "captain", "WHERE", "rank", "=", "'Midshipman", "'", ")"], "query_toks_no_value": ["select", "name", ",", "flag", "from", "ship", "where", "ship_id", "not", "in", "(", "select", "ship_id", "from", "captain", "where", "rank", "=", "value", ")"], "question": "What are the names and flags of ships that do not have a captain with the rank of Midshipman?", "question_toks": ["What", "are", "the", "names", "and", "flags", "of", "ships", "that", "do", "not", "have", "a", "captain", "with", "the", "rank", "of", "Midshipman", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 7, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"Midshipman\"", null]]}, null]]}}, {"db_id": "city_record", "query": "SELECT city ,  GDP FROM city ORDER BY GDP LIMIT 1", "query_toks": ["SELECT", "city", ",", "GDP", "FROM", "city", "ORDER", "BY", "GDP", "LIMIT", "1"], "query_toks_no_value": ["select", "city", ",", "gdp", "from", "city", "order", "by", "gdp", "limit", "value"], "question": "Which city has the lowest GDP? Please list the city name and its GDP.", "question_toks": ["Which", "city", "has", "the", "lowest", "GDP", "?", "Please", "list", "the", "city", "name", "and", "its", "GDP", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "city_record", "query": "SELECT city ,  GDP FROM city ORDER BY GDP LIMIT 1", "query_toks": ["SELECT", "city", ",", "GDP", "FROM", "city", "ORDER", "BY", "GDP", "LIMIT", "1"], "query_toks_no_value": ["select", "city", ",", "gdp", "from", "city", "order", "by", "gdp", "limit", "value"], "question": "What is the city with the smallest GDP? Return the city and its GDP.", "question_toks": ["What", "is", "the", "city", "with", "the", "smallest", "GDP", "?", "Return", "the", "city", "and", "its", "GDP", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "city_record", "query": "SELECT count(*) ,  Competition FROM MATCH GROUP BY Competition", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "Competition", "FROM", "MATCH", "GROUP", "BY", "Competition"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "competition", "from", "match", "group", "by", "competition"], "question": "Find the number of matches in different competitions.", "question_toks": ["Find", "the", "number", "of", "matches", "in", "different", "competitions", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "city_record", "query": "SELECT count(*) ,  Competition FROM MATCH GROUP BY Competition", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "Competition", "FROM", "MATCH", "GROUP", "BY", "Competition"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "competition", "from", "match", "group", "by", "competition"], "question": "For each competition, count the number of matches.", "question_toks": ["For", "each", "competition", ",", "count", "the", "number", "of", "matches", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "city_record", "query": "SELECT t1.gdp ,  t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY t2.Host_City HAVING count(*)  >  1", "query_toks": ["SELECT", "t1.gdp", ",", "t1.Regional_Population", "FROM", "city", "AS", "T1", "JOIN", "hosting_city", "AS", "T2", "ON", "T1.city_id", "=", "T2.host_city", "GROUP", "BY", "t2.Host_City", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "gdp", ",", "t1", ".", "regional_population", "from", "city", "as", "t1", "join", "hosting_city", "as", "t2", "on", "t1", ".", "city_id", "=", "t2", ".", "host_city", "group", "by", "t2", ".", "host_city", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the GDP and population of the city that already served as a host more than once?", "question_toks": ["What", "are", "the", "GDP", "and", "population", "of", "the", "city", "that", "already", "served", "as", "a", "host", "more", "than", "once", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 27, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [[0, 27, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "city_record", "query": "SELECT t1.gdp ,  t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY t2.Host_City HAVING count(*)  >  1", "query_toks": ["SELECT", "t1.gdp", ",", "t1.Regional_Population", "FROM", "city", "AS", "T1", "JOIN", "hosting_city", "AS", "T2", "ON", "T1.city_id", "=", "T2.host_city", "GROUP", "BY", "t2.Host_City", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "gdp", ",", "t1", ".", "regional_population", "from", "city", "as", "t1", "join", "hosting_city", "as", "t2", "on", "t1", ".", "city_id", "=", "t2", ".", "host_city", "group", "by", "t2", ".", "host_city", "having", "count", "(", "*", ")", ">", "value"], "question": "Which cities have served as host cities more than once? Return me their GDP and population.", "question_toks": ["Which", "cities", "have", "served", "as", "host", "cities", "more", "than", "once", "?", "Return", "me", "their", "GDP", "and", "population", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 27, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [[0, 27, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "e_government", "query": "SELECT individual_first_name ,  individual_middle_name ,  individual_last_name FROM individuals ORDER BY individual_last_name", "query_toks": ["SELECT", "individual_first_name", ",", "individual_middle_name", ",", "individual_last_name", "FROM", "individuals", "ORDER", "BY", "individual_last_name"], "query_toks_no_value": ["select", "individual_first_name", ",", "individual_middle_name", ",", "individual_last_name", "from", "individuals", "order", "by", "individual_last_name"], "question": "List every individual's first name, middle name and last name in alphabetical order by last name.", "question_toks": ["List", "every", "individual", "'s", "first", "name", ",", "middle", "name", "and", "last", "name", "in", "alphabetical", "order", "by", "last", "name", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 23, false], null]]], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 19, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": []}}, {"db_id": "e_government", "query": "SELECT individual_first_name ,  individual_middle_name ,  individual_last_name FROM individuals ORDER BY individual_last_name", "query_toks": ["SELECT", "individual_first_name", ",", "individual_middle_name", ",", "individual_last_name", "FROM", "individuals", "ORDER", "BY", "individual_last_name"], "query_toks_no_value": ["select", "individual_first_name", ",", "individual_middle_name", ",", "individual_last_name", "from", "individuals", "order", "by", "individual_last_name"], "question": "What are the first, middle, and last names of all individuals, ordered by last name?", "question_toks": ["What", "are", "the", "first", ",", "middle", ",", "and", "last", "names", "of", "all", "individuals", ",", "ordered", "by", "last", "name", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 23, false], null]]], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 19, false], null]], [0, [0, [0, 23, false], null]]]], "union": null, "where": []}}, {"db_id": "e_government", "query": "SELECT payment_method_code ,  party_phone FROM parties WHERE party_email  =  \"enrico09@example.com\"", "query_toks": ["SELECT", "payment_method_code", ",", "party_phone", "FROM", "parties", "WHERE", "party_email", "=", "``", "enrico09", "@", "example.com", "''"], "query_toks_no_value": ["select", "payment_method_code", ",", "party_phone", "from", "parties", "where", "party_email", "=", "value"], "question": "Find the payment method and phone of the party with email \"enrico09@example.com\".", "question_toks": ["Find", "the", "payment", "method", "and", "phone", "of", "the", "party", "with", "email", "``", "enrico09", "@", "example.com", "''", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 29, false], null]], [0, [0, [0, 30, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 31, false], null], "\"enrico09@example.com\"", null]]}}, {"db_id": "e_government", "query": "SELECT payment_method_code ,  party_phone FROM parties WHERE party_email  =  \"enrico09@example.com\"", "query_toks": ["SELECT", "payment_method_code", ",", "party_phone", "FROM", "parties", "WHERE", "party_email", "=", "``", "enrico09", "@", "example.com", "''"], "query_toks_no_value": ["select", "payment_method_code", ",", "party_phone", "from", "parties", "where", "party_email", "=", "value"], "question": "What is the payment method code and party phone of the party with the email 'enrico09@example.com'?", "question_toks": ["What", "is", "the", "payment", "method", "code", "and", "party", "phone", "of", "the", "party", "with", "the", "email", "'enrico09", "@", "example.com", "'", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 29, false], null]], [0, [0, [0, 30, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 31, false], null], "\"enrico09@example.com\"", null]]}}, {"db_id": "school_bus", "query": "SELECT name ,  home_city ,  age FROM driver", "query_toks": ["SELECT", "name", ",", "home_city", ",", "age", "FROM", "driver"], "query_toks_no_value": ["select", "name", ",", "home_city", ",", "age", "from", "driver"], "question": "Show the name, home city, and age for all drivers.", "question_toks": ["Show", "the", "name", ",", "home", "city", ",", "and", "age", "for", "all", "drivers", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "school_bus", "query": "SELECT party ,  count(*) FROM driver GROUP BY party", "query_toks": ["SELECT", "party", ",", "count", "(", "*", ")", "FROM", "driver", "GROUP", "BY", "party"], "query_toks_no_value": ["select", "party", ",", "count", "(", "*", ")", "from", "driver", "group", "by", "party"], "question": "Show the party and the number of drivers in each party.", "question_toks": ["Show", "the", "party", "and", "the", "number", "of", "drivers", "in", "each", "party", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "school_bus", "query": "SELECT T2.school ,  T3.name FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id JOIN driver AS T3 ON T1.driver_id  =  T3.driver_id", "query_toks": ["SELECT", "T2.school", ",", "T3.name", "FROM", "school_bus", "AS", "T1", "JOIN", "school", "AS", "T2", "ON", "T1.school_id", "=", "T2.school_id", "JOIN", "driver", "AS", "T3", "ON", "T1.driver_id", "=", "T3.driver_id"], "query_toks_no_value": ["select", "t2", ".", "school", ",", "t3", ".", "name", "from", "school_bus", "as", "t1", "join", "school", "as", "t2", "on", "t1", ".", "school_id", "=", "t2", ".", "school_id", "join", "driver", "as", "t3", "on", "t1", ".", "driver_id", "=", "t3", ".", "driver_id"], "question": "Show the school name and driver name for all school buses.", "question_toks": ["Show", "the", "school", "name", "and", "driver", "name", "for", "all", "school", "buses", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "school_bus", "query": "SELECT max(years_working) ,  min(years_working) ,  avg(years_working) FROM school_bus", "query_toks": ["SELECT", "max", "(", "years_working", ")", ",", "min", "(", "years_working", ")", ",", "avg", "(", "years_working", ")", "FROM", "school_bus"], "query_toks_no_value": ["select", "max", "(", "years_working", ")", ",", "min", "(", "years_working", ")", ",", "avg", "(", "years_working", ")", "from", "school_bus"], "question": "What is the maximum, minimum and average years spent working on a school bus?", "question_toks": ["What", "is", "the", "maximum", ",", "minimum", "and", "average", "years", "spent", "working", "on", "a", "school", "bus", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 13, false], null]], [2, [0, [0, 13, false], null]], [5, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "school_bus", "query": "SELECT school ,  TYPE FROM school WHERE school_id NOT IN (SELECT school_id FROM school_bus)", "query_toks": ["SELECT", "school", ",", "TYPE", "FROM", "school", "WHERE", "school_id", "NOT", "IN", "(", "SELECT", "school_id", "FROM", "school_bus", ")"], "query_toks_no_value": ["select", "school", ",", "type", "from", "school", "where", "school_id", "not", "in", "(", "select", "school_id", "from", "school_bus", ")"], "question": "Show the school name and type for schools without a school bus.", "question_toks": ["Show", "the", "school", "name", "and", "type", "for", "schools", "without", "a", "school", "bus", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[true, 8, [0, [0, 6, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "school_bus", "query": "SELECT T2.type ,  count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id GROUP BY T2.type", "query_toks": ["SELECT", "T2.type", ",", "count", "(", "*", ")", "FROM", "school_bus", "AS", "T1", "JOIN", "school", "AS", "T2", "ON", "T1.school_id", "=", "T2.school_id", "GROUP", "BY", "T2.type"], "query_toks_no_value": ["select", "t2", ".", "type", ",", "count", "(", "*", ")", "from", "school_bus", "as", "t1", "join", "school", "as", "t2", "on", "t1", ".", "school_id", "=", "t2", ".", "school_id", "group", "by", "t2", ".", "type"], "question": "Show the type of school and the number of buses for each type.", "question_toks": ["Show", "the", "type", "of", "school", "and", "the", "number", "of", "buses", "for", "each", "type", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_company", "query": "SELECT vehicle_flight_number ,  date ,  pilot FROM flight ORDER BY altitude ASC", "query_toks": ["SELECT", "vehicle_flight_number", ",", "date", ",", "pilot", "FROM", "flight", "ORDER", "BY", "altitude", "ASC"], "query_toks_no_value": ["select", "vehicle_flight_number", ",", "date", ",", "pilot", "from", "flight", "order", "by", "altitude", "asc"], "question": "List the vehicle flight number, date and pilot of all the flights, ordered by altitude.", "question_toks": ["List", "the", "vehicle", "flight", "number", ",", "date", "and", "pilot", "of", "all", "the", "flights", ",", "ordered", "by", "altitude", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 18, false], null]]], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_company", "query": "SELECT id ,  country ,  city ,  name FROM airport ORDER BY name", "query_toks": ["SELECT", "id", ",", "country", ",", "city", ",", "name", "FROM", "airport", "ORDER", "BY", "name"], "query_toks_no_value": ["select", "id", ",", "country", ",", "city", ",", "name", "from", "airport", "order", "by", "name"], "question": "List the id, country, city and name of the airports ordered alphabetically by the name.", "question_toks": ["List", "the", "id", ",", "country", ",", "city", "and", "name", "of", "the", "airports", "ordered", "alphabetically", "by", "the", "name", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 6, false], null]]], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_company", "query": "SELECT T1.name ,  T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id", "query_toks": ["SELECT", "T1.name", ",", "T1.type", "FROM", "operate_company", "AS", "T1", "JOIN", "flight", "AS", "t2", "ON", "T1.id", "=", "T2.company_id"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "type", "from", "operate_company", "as", "t1", "join", "flight", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "company_id"], "question": "What are the names and types of the companies that have ever operated a flight?", "question_toks": ["What", "are", "the", "names", "and", "types", "of", "the", "companies", "that", "have", "ever", "operated", "a", "flight", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 20, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_company", "query": "SELECT T1.id ,  T1.name FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id GROUP BY T1.id HAVING count(*)  >  1", "query_toks": ["SELECT", "T1.id", ",", "T1.name", "FROM", "operate_company", "AS", "T1", "JOIN", "flight", "AS", "t2", "ON", "T1.id", "=", "T2.company_id", "GROUP", "BY", "T1.id", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "name", "from", "operate_company", "as", "t1", "join", "flight", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "company_id", "group", "by", "t1", ".", "id", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the ids and names of the companies that operated more than one flight?", "question_toks": ["What", "are", "the", "ids", "and", "names", "of", "the", "companies", "that", "operated", "more", "than", "one", "flight", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 20, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 7, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_company", "query": "SELECT T1.id ,  T1.name ,  T1.IATA FROM airport AS T1 JOIN flight AS T2 ON T1.id  =  T2.airport_id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.id", ",", "T1.name", ",", "T1.IATA", "FROM", "airport", "AS", "T1", "JOIN", "flight", "AS", "T2", "ON", "T1.id", "=", "T2.airport_id", "GROUP", "BY", "T2.id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "name", ",", "t1", ".", "iata", "from", "airport", "as", "t1", "join", "flight", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "airport_id", "group", "by", "t2", ".", "id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the id, name and IATA code of the airport that had most number of flights?", "question_toks": ["What", "is", "the", "id", ",", "name", "and", "IATA", "code", "of", "the", "airport", "that", "had", "most", "number", "of", "flights", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 19, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_company", "query": "SELECT TYPE ,  count(*) FROM operate_company GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "TYPE", ",", "count", "(", "*", ")", "FROM", "operate_company", "GROUP", "BY", "TYPE", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "type", ",", "count", "(", "*", ")", "from", "operate_company", "group", "by", "type", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the most common company type, and how many are there?", "question_toks": ["What", "is", "the", "most", "common", "company", "type", ",", "and", "how", "many", "are", "there", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_company", "query": "SELECT T3.id ,  count(*) FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id JOIN airport AS T3 ON T2.airport_id  =  T3.id GROUP BY T3.id", "query_toks": ["SELECT", "T3.id", ",", "count", "(", "*", ")", "FROM", "operate_company", "AS", "T1", "JOIN", "flight", "AS", "t2", "ON", "T1.id", "=", "T2.company_id", "JOIN", "airport", "AS", "T3", "ON", "T2.airport_id", "=", "T3.id", "GROUP", "BY", "T3.id"], "query_toks_no_value": ["select", "t3", ".", "id", ",", "count", "(", "*", ")", "from", "operate_company", "as", "t1", "join", "flight", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "company_id", "join", "airport", "as", "t3", "on", "t2", ".", "airport_id", "=", "t3", ".", "id", "group", "by", "t3", ".", "id"], "question": "How many companies operates airlines in each airport?", "question_toks": ["How", "many", "companies", "operates", "airlines", "in", "each", "airport", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 20, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_company", "query": "SELECT count(*) ,  country FROM airport GROUP BY country", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "country", "FROM", "airport", "GROUP", "BY", "country"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "country", "from", "airport", "group", "by", "country"], "question": "how many airports are there in each country?", "question_toks": ["how", "many", "airports", "are", "there", "in", "each", "country", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT account_id ,  account_details FROM Accounts", "query_toks": ["SELECT", "account_id", ",", "account_details", "FROM", "Accounts"], "query_toks_no_value": ["select", "account_id", ",", "account_details", "from", "accounts"], "question": "Show all account ids and account details.", "question_toks": ["Show", "all", "account", "ids", "and", "account", "details", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 22, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT account_id ,  account_details FROM Accounts", "query_toks": ["SELECT", "account_id", ",", "account_details", "FROM", "Accounts"], "query_toks_no_value": ["select", "account_id", ",", "account_details", "from", "accounts"], "question": "What are the ids and details of all accounts?", "question_toks": ["What", "are", "the", "ids", "and", "details", "of", "all", "accounts", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 22, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT STATEMENT_ID ,  statement_details FROM Statements", "query_toks": ["SELECT", "STATEMENT_ID", ",", "statement_details", "FROM", "Statements"], "query_toks_no_value": ["select", "statement_id", ",", "statement_details", "from", "statements"], "question": "List all statement ids and statement details.", "question_toks": ["List", "all", "statement", "ids", "and", "statement", "details", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT STATEMENT_ID ,  statement_details FROM Statements", "query_toks": ["SELECT", "STATEMENT_ID", ",", "statement_details", "FROM", "Statements"], "query_toks_no_value": ["select", "statement_id", ",", "statement_details", "from", "statements"], "question": "What are the ids and details of all statements?", "question_toks": ["What", "are", "the", "ids", "and", "details", "of", "all", "statements", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT T1.statement_id ,  T2.statement_details ,  T1.account_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id", "query_toks": ["SELECT", "T1.statement_id", ",", "T2.statement_details", ",", "T1.account_details", "FROM", "Accounts", "AS", "T1", "JOIN", "Statements", "AS", "T2", "ON", "T1.statement_id", "=", "T2.statement_id"], "query_toks_no_value": ["select", "t1", ".", "statement_id", ",", "t2", ".", "statement_details", ",", "t1", ".", "account_details", "from", "accounts", "as", "t1", "join", "statements", "as", "t2", "on", "t1", ".", "statement_id", "=", "t2", ".", "statement_id"], "question": "Show statement id, statement detail, account detail for accounts.", "question_toks": ["Show", "statement", "id", ",", "statement", "detail", ",", "account", "detail", "for", "accounts", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 21, false], null], [0, 15, false], null]], "table_units": [["table_unit", 6], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 22, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT T1.statement_id ,  T2.statement_details ,  T1.account_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id", "query_toks": ["SELECT", "T1.statement_id", ",", "T2.statement_details", ",", "T1.account_details", "FROM", "Accounts", "AS", "T1", "JOIN", "Statements", "AS", "T2", "ON", "T1.statement_id", "=", "T2.statement_id"], "query_toks_no_value": ["select", "t1", ".", "statement_id", ",", "t2", ".", "statement_details", ",", "t1", ".", "account_details", "from", "accounts", "as", "t1", "join", "statements", "as", "t2", "on", "t1", ".", "statement_id", "=", "t2", ".", "statement_id"], "question": "What are the statement ids, statement details, and account details, for all accounts?", "question_toks": ["What", "are", "the", "statement", "ids", ",", "statement", "details", ",", "and", "account", "details", ",", "for", "all", "accounts", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 21, false], null], [0, 15, false], null]], "table_units": [["table_unit", 6], ["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 22, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT STATEMENT_ID ,  count(*) FROM Accounts GROUP BY STATEMENT_ID", "query_toks": ["SELECT", "STATEMENT_ID", ",", "count", "(", "*", ")", "FROM", "Accounts", "GROUP", "BY", "STATEMENT_ID"], "query_toks_no_value": ["select", "statement_id", ",", "count", "(", "*", ")", "from", "accounts", "group", "by", "statement_id"], "question": "Show all statement id and the number of accounts for each statement.", "question_toks": ["Show", "all", "statement", "id", "and", "the", "number", "of", "accounts", "for", "each", "statement", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 21, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 21, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT STATEMENT_ID ,  count(*) FROM Accounts GROUP BY STATEMENT_ID", "query_toks": ["SELECT", "STATEMENT_ID", ",", "count", "(", "*", ")", "FROM", "Accounts", "GROUP", "BY", "STATEMENT_ID"], "query_toks_no_value": ["select", "statement_id", ",", "count", "(", "*", ")", "from", "accounts", "group", "by", "statement_id"], "question": "What are the different statement ids on accounts, and the number of accounts for each?", "question_toks": ["What", "are", "the", "different", "statement", "ids", "on", "accounts", ",", "and", "the", "number", "of", "accounts", "for", "each", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 6]]}, "groupBy": [[0, 21, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 21, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT T1.statement_id ,  T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.statement_id", ",", "T2.statement_details", "FROM", "Accounts", "AS", "T1", "JOIN", "Statements", "AS", "T2", "ON", "T1.statement_id", "=", "T2.statement_id", "GROUP", "BY", "T1.statement_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "statement_id", ",", "t2", ".", "statement_details", "from", "accounts", "as", "t1", "join", "statements", "as", "t2", "on", "t1", ".", "statement_id", "=", "t2", ".", "statement_id", "group", "by", "t1", ".", "statement_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Show the statement id and the statement detail for the statement with most number of accounts.", "question_toks": ["Show", "the", "statement", "id", "and", "the", "statement", "detail", "for", "the", "statement", "with", "most", "number", "of", "accounts", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 21, false], null], [0, 15, false], null]], "table_units": [["table_unit", 6], ["table_unit", 4]]}, "groupBy": [[0, 21, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT T1.statement_id ,  T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.statement_id", ",", "T2.statement_details", "FROM", "Accounts", "AS", "T1", "JOIN", "Statements", "AS", "T2", "ON", "T1.statement_id", "=", "T2.statement_id", "GROUP", "BY", "T1.statement_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "statement_id", ",", "t2", ".", "statement_details", "from", "accounts", "as", "t1", "join", "statements", "as", "t2", "on", "t1", ".", "statement_id", "=", "t2", ".", "statement_id", "group", "by", "t1", ".", "statement_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the statement id and statement detail for the statement that has the most corresponding accounts?", "question_toks": ["What", "are", "the", "statement", "id", "and", "statement", "detail", "for", "the", "statement", "that", "has", "the", "most", "corresponding", "accounts", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 21, false], null], [0, 15, false], null]], "table_units": [["table_unit", 6], ["table_unit", 4]]}, "groupBy": [[0, 21, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT document_type_code ,  document_name ,  document_description FROM Documents WHERE document_name  =  'Noel CV' OR document_name  =  'King Book'", "query_toks": ["SELECT", "document_type_code", ",", "document_name", ",", "document_description", "FROM", "Documents", "WHERE", "document_name", "=", "'Noel", "CV", "'", "OR", "document_name", "=", "'King", "Book", "'"], "query_toks_no_value": ["select", "document_type_code", ",", "document_name", ",", "document_description", "from", "documents", "where", "document_name", "=", "value", "or", "document_name", "=", "value"], "question": "List the document type code, document name, and document description for the document with name 'Noel CV' or name 'King Book'.", "question_toks": ["List", "the", "document", "type", "code", ",", "document", "name", ",", "and", "document", "description", "for", "the", "document", "with", "name", "'Noel", "CV", "'", "or", "name", "'King", "Book", "'", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"Noel CV\"", null], "or", [false, 2, [0, [0, 12, false], null], "\"King Book\"", null]]}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT document_type_code ,  document_name ,  document_description FROM Documents WHERE document_name  =  'Noel CV' OR document_name  =  'King Book'", "query_toks": ["SELECT", "document_type_code", ",", "document_name", ",", "document_description", "FROM", "Documents", "WHERE", "document_name", "=", "'Noel", "CV", "'", "OR", "document_name", "=", "'King", "Book", "'"], "query_toks_no_value": ["select", "document_type_code", ",", "document_name", ",", "document_description", "from", "documents", "where", "document_name", "=", "value", "or", "document_name", "=", "value"], "question": "What are the type come, name, and description of the document that has either the name 'Noel CV' or 'King Book'?", "question_toks": ["What", "are", "the", "type", "come", ",", "name", ",", "and", "description", "of", "the", "document", "that", "has", "either", "the", "name", "'Noel", "CV", "'", "or", "'King", "Book", "'", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"Noel CV\"", null], "or", [false, 2, [0, [0, 12, false], null], "\"King Book\"", null]]}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT document_id ,  document_name FROM Documents", "query_toks": ["SELECT", "document_id", ",", "document_name", "FROM", "Documents"], "query_toks_no_value": ["select", "document_id", ",", "document_name", "from", "documents"], "question": "Show the ids and names of all documents.", "question_toks": ["Show", "the", "ids", "and", "names", "of", "all", "documents", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT document_id ,  document_name FROM Documents", "query_toks": ["SELECT", "document_id", ",", "document_name", "FROM", "Documents"], "query_toks_no_value": ["select", "document_id", ",", "document_name", "from", "documents"], "question": "What are the ids and names for each of the documents?", "question_toks": ["What", "are", "the", "ids", "and", "names", "for", "each", "of", "the", "documents", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT document_name ,  document_id FROM Documents WHERE document_type_code  =  \"BK\"", "query_toks": ["SELECT", "document_name", ",", "document_id", "FROM", "Documents", "WHERE", "document_type_code", "=", "``", "BK", "''"], "query_toks_no_value": ["select", "document_name", ",", "document_id", "from", "documents", "where", "document_type_code", "=", "value"], "question": "Find names and ids of all documents with document type code BK.", "question_toks": ["Find", "names", "and", "ids", "of", "all", "documents", "with", "document", "type", "code", "BK", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], "\"BK\"", null]]}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT document_name ,  document_id FROM Documents WHERE document_type_code  =  \"BK\"", "query_toks": ["SELECT", "document_name", ",", "document_id", "FROM", "Documents", "WHERE", "document_type_code", "=", "``", "BK", "''"], "query_toks_no_value": ["select", "document_name", ",", "document_id", "from", "documents", "where", "document_type_code", "=", "value"], "question": "What are the names and ids of documents that have the type code BK?", "question_toks": ["What", "are", "the", "names", "and", "ids", "of", "documents", "that", "have", "the", "type", "code", "BK", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], "\"BK\"", null]]}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT count(*) ,  project_id FROM Documents WHERE document_type_code  =  \"BK\" GROUP BY project_id", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "project_id", "FROM", "Documents", "WHERE", "document_type_code", "=", "``", "BK", "''", "GROUP", "BY", "project_id"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "project_id", "from", "documents", "where", "document_type_code", "=", "value", "group", "by", "project_id"], "question": "How many documents are with document type code BK for each product id?", "question_toks": ["How", "many", "documents", "are", "with", "document", "type", "code", "BK", "for", "each", "product", "id", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], "\"BK\"", null]]}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT count(*) ,  project_id FROM Documents WHERE document_type_code  =  \"BK\" GROUP BY project_id", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "project_id", "FROM", "Documents", "WHERE", "document_type_code", "=", "``", "BK", "''", "GROUP", "BY", "project_id"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "project_id", "from", "documents", "where", "document_type_code", "=", "value", "group", "by", "project_id"], "question": "Count the number of documents with the type code BK that correspond to each product id.", "question_toks": ["Count", "the", "number", "of", "documents", "with", "the", "type", "code", "BK", "that", "correspond", "to", "each", "product", "id", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], "\"BK\"", null]]}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT document_name ,  document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'Graph Database project'", "query_toks": ["SELECT", "document_name", ",", "document_date", "FROM", "Documents", "AS", "T1", "JOIN", "projects", "AS", "T2", "ON", "T1.project_id", "=", "T2.project_id", "WHERE", "T2.project_details", "=", "'Graph", "Database", "project", "'"], "query_toks_no_value": ["select", "document_name", ",", "document_date", "from", "documents", "as", "t1", "join", "projects", "as", "t2", "on", "t1", ".", "project_id", "=", "t2", ".", "project_id", "where", "t2", ".", "project_details", "=", "value"], "question": "Show the document name and the document date for all documents on project with details 'Graph Database project'.", "question_toks": ["Show", "the", "document", "name", "and", "the", "document", "date", "for", "all", "documents", "on", "project", "with", "details", "'Graph", "Database", "project", "'", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 6, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"Graph Database project\"", null]]}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT document_name ,  document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'Graph Database project'", "query_toks": ["SELECT", "document_name", ",", "document_date", "FROM", "Documents", "AS", "T1", "JOIN", "projects", "AS", "T2", "ON", "T1.project_id", "=", "T2.project_id", "WHERE", "T2.project_details", "=", "'Graph", "Database", "project", "'"], "query_toks_no_value": ["select", "document_name", ",", "document_date", "from", "documents", "as", "t1", "join", "projects", "as", "t2", "on", "t1", ".", "project_id", "=", "t2", ".", "project_id", "where", "t2", ".", "project_details", "=", "value"], "question": "What are the names and dates for documents corresponding to project that has the details 'Graph Database project'?", "question_toks": ["What", "are", "the", "names", "and", "dates", "for", "documents", "corresponding", "to", "project", "that", "has", "the", "details", "'Graph", "Database", "project", "'", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 10, false], null], [0, 6, false], null]], "table_units": [["table_unit", 3], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 7, false], null], "\"Graph Database project\"", null]]}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT project_id ,  count(*) FROM Documents GROUP BY project_id", "query_toks": ["SELECT", "project_id", ",", "count", "(", "*", ")", "FROM", "Documents", "GROUP", "BY", "project_id"], "query_toks_no_value": ["select", "project_id", ",", "count", "(", "*", ")", "from", "documents", "group", "by", "project_id"], "question": "Show project ids and the number of documents in each project.", "question_toks": ["Show", "project", "ids", "and", "the", "number", "of", "documents", "in", "each", "project", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT project_id ,  count(*) FROM Documents GROUP BY project_id", "query_toks": ["SELECT", "project_id", ",", "count", "(", "*", ")", "FROM", "Documents", "GROUP", "BY", "project_id"], "query_toks_no_value": ["select", "project_id", ",", "count", "(", "*", ")", "from", "documents", "group", "by", "project_id"], "question": "How many documents correspond with each project id?", "question_toks": ["How", "many", "documents", "correspond", "with", "each", "project", "id", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT document_type_code ,  count(*) FROM Documents GROUP BY document_type_code", "query_toks": ["SELECT", "document_type_code", ",", "count", "(", "*", ")", "FROM", "Documents", "GROUP", "BY", "document_type_code"], "query_toks_no_value": ["select", "document_type_code", ",", "count", "(", "*", ")", "from", "documents", "group", "by", "document_type_code"], "question": "List document type codes and the number of documents in each code.", "question_toks": ["List", "document", "type", "codes", "and", "the", "number", "of", "documents", "in", "each", "code", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT document_type_code ,  count(*) FROM Documents GROUP BY document_type_code", "query_toks": ["SELECT", "document_type_code", ",", "count", "(", "*", ")", "FROM", "Documents", "GROUP", "BY", "document_type_code"], "query_toks_no_value": ["select", "document_type_code", ",", "count", "(", "*", ")", "from", "documents", "group", "by", "document_type_code"], "question": "How many documents are there of each type?", "question_toks": ["How", "many", "documents", "are", "there", "of", "each", "type", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 9, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT T1.statement_details ,  T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id  =  T2.document_id WHERE T1.statement_details  =  'Private Project'", "query_toks": ["SELECT", "T1.statement_details", ",", "T2.document_name", "FROM", "Statements", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.statement_id", "=", "T2.document_id", "WHERE", "T1.statement_details", "=", "'Private", "Project", "'"], "query_toks_no_value": ["select", "t1", ".", "statement_details", ",", "t2", ".", "document_name", "from", "statements", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "statement_id", "=", "t2", ".", "document_id", "where", "t1", ".", "statement_details", "=", "value"], "question": "Show the statement detail and the corresponding document name for the statement with detail 'Private Project'.", "question_toks": ["Show", "the", "statement", "detail", "and", "the", "corresponding", "document", "name", "for", "the", "statement", "with", "detail", "'Private", "Project", "'", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null]], "table_units": [["table_unit", 4], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 16, false], null], "\"Private Project\"", null]]}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT T1.statement_details ,  T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id  =  T2.document_id WHERE T1.statement_details  =  'Private Project'", "query_toks": ["SELECT", "T1.statement_details", ",", "T2.document_name", "FROM", "Statements", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.statement_id", "=", "T2.document_id", "WHERE", "T1.statement_details", "=", "'Private", "Project", "'"], "query_toks_no_value": ["select", "t1", ".", "statement_details", ",", "t2", ".", "document_name", "from", "statements", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "statement_id", "=", "t2", ".", "document_id", "where", "t1", ".", "statement_details", "=", "value"], "question": "What are the details for statements with the details 'Private Project', and what are the names of the corresponding documents?", "question_toks": ["What", "are", "the", "details", "for", "statements", "with", "the", "details", "'Private", "Project", "'", ",", "and", "what", "are", "the", "names", "of", "the", "corresponding", "documents", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null]], "table_units": [["table_unit", 4], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 16, false], null], "\"Private Project\"", null]]}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT document_type_code ,  document_type_name ,  document_type_description FROM Ref_document_types", "query_toks": ["SELECT", "document_type_code", ",", "document_type_name", ",", "document_type_description", "FROM", "Ref_document_types"], "query_toks_no_value": ["select", "document_type_code", ",", "document_type_name", ",", "document_type_description", "from", "ref_document_types"], "question": "Show all document type codes, document type names, document type descriptions.", "question_toks": ["Show", "all", "document", "type", "codes", ",", "document", "type", "names", ",", "document", "type", "descriptions", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT document_type_code ,  document_type_name ,  document_type_description FROM Ref_document_types", "query_toks": ["SELECT", "document_type_code", ",", "document_type_name", ",", "document_type_description", "FROM", "Ref_document_types"], "query_toks_no_value": ["select", "document_type_code", ",", "document_type_name", ",", "document_type_description", "from", "ref_document_types"], "question": "What are the codes, names, and descriptions of the different document types?", "question_toks": ["What", "are", "the", "codes", ",", "names", ",", "and", "descriptions", "of", "the", "different", "document", "types", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT T1.document_type_name ,  T1.document_type_description ,  T2.Document_date FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code  =  T2.document_type_code", "query_toks": ["SELECT", "T1.document_type_name", ",", "T1.document_type_description", ",", "T2.Document_date", "FROM", "Ref_document_types", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.document_type_code", "=", "T2.document_type_code"], "query_toks_no_value": ["select", "t1", ".", "document_type_name", ",", "t1", ".", "document_type_description", ",", "t2", ".", "document_date", "from", "ref_document_types", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "document_type_code", "=", "t2", ".", "document_type_code"], "question": "What is the document type name and the document type description and creation date for all the documents?", "question_toks": ["What", "is", "the", "document", "type", "name", "and", "the", "document", "type", "description", "and", "creation", "date", "for", "all", "the", "documents", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT T1.document_type_name ,  T1.document_type_description ,  T2.Document_date FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code  =  T2.document_type_code", "query_toks": ["SELECT", "T1.document_type_name", ",", "T1.document_type_description", ",", "T2.Document_date", "FROM", "Ref_document_types", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.document_type_code", "=", "T2.document_type_code"], "query_toks_no_value": ["select", "t1", ".", "document_type_name", ",", "t1", ".", "document_type_description", ",", "t2", ".", "document_date", "from", "ref_document_types", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "document_type_code", "=", "t2", ".", "document_type_code"], "question": "Return the type name, type description, and date of creation for each document.", "question_toks": ["Return", "the", "type", "name", ",", "type", "description", ",", "and", "date", "of", "creation", "for", "each", "document", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]], "table_units": [["table_unit", 0], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT project_id ,  project_details FROM Projects", "query_toks": ["SELECT", "project_id", ",", "project_details", "FROM", "Projects"], "query_toks_no_value": ["select", "project_id", ",", "project_details", "from", "projects"], "question": "List ids and details for all projects.", "question_toks": ["List", "ids", "and", "details", "for", "all", "projects", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT project_id ,  project_details FROM Projects", "query_toks": ["SELECT", "project_id", ",", "project_details", "FROM", "Projects"], "query_toks_no_value": ["select", "project_id", ",", "project_details", "from", "projects"], "question": "What are the ids and details for each project?", "question_toks": ["What", "are", "the", "ids", "and", "details", "for", "each", "project", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT T1.project_id ,  T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id HAVING count(*)  >  2", "query_toks": ["SELECT", "T1.project_id", ",", "T1.project_details", "FROM", "Projects", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.project_id", "=", "T2.project_id", "GROUP", "BY", "T1.project_id", "HAVING", "count", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "t1", ".", "project_id", ",", "t1", ".", "project_details", "from", "projects", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "project_id", "=", "t2", ".", "project_id", "group", "by", "t1", ".", "project_id", "having", "count", "(", "*", ")", ">", "value"], "question": "What is the project id and detail for the project with at least two documents?", "question_toks": ["What", "is", "the", "project", "id", "and", "detail", "for", "the", "project", "with", "at", "least", "two", "documents", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 10, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 6, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT T1.project_id ,  T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id HAVING count(*)  >  2", "query_toks": ["SELECT", "T1.project_id", ",", "T1.project_details", "FROM", "Projects", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.project_id", "=", "T2.project_id", "GROUP", "BY", "T1.project_id", "HAVING", "count", "(", "*", ")", ">", "2"], "query_toks_no_value": ["select", "t1", ".", "project_id", ",", "t1", ".", "project_details", "from", "projects", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "project_id", "=", "t2", ".", "project_id", "group", "by", "t1", ".", "project_id", "having", "count", "(", "*", ")", ">", "value"], "question": "Return the ids and details corresponding to projects for which there are more than two documents.", "question_toks": ["Return", "the", "ids", "and", "details", "corresponding", "to", "projects", "for", "which", "there", "are", "more", "than", "two", "documents", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 6, false], null], [0, 10, false], null]], "table_units": [["table_unit", 2], ["table_unit", 3]]}, "groupBy": [[0, 6, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT budget_type_code ,  budget_type_description FROM Ref_budget_codes", "query_toks": ["SELECT", "budget_type_code", ",", "budget_type_description", "FROM", "Ref_budget_codes"], "query_toks_no_value": ["select", "budget_type_code", ",", "budget_type_description", "from", "ref_budget_codes"], "question": "List all budget type codes and descriptions.", "question_toks": ["List", "all", "budget", "type", "codes", "and", "descriptions", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT budget_type_code ,  budget_type_description FROM Ref_budget_codes", "query_toks": ["SELECT", "budget_type_code", ",", "budget_type_description", "FROM", "Ref_budget_codes"], "query_toks_no_value": ["select", "budget_type_code", ",", "budget_type_description", "from", "ref_budget_codes"], "question": "What are the type codes and descriptions of each budget type?", "question_toks": ["What", "are", "the", "type", "codes", "and", "descriptions", "of", "each", "budget", "type", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT T2.budget_type_code ,  T2.budget_type_description ,  T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code  =  T2.budget_type_code", "query_toks": ["SELECT", "T2.budget_type_code", ",", "T2.budget_type_description", ",", "T1.document_id", "FROM", "Documents_with_expenses", "AS", "T1", "JOIN", "Ref_budget_codes", "AS", "T2", "ON", "T1.budget_type_code", "=", "T2.budget_type_code"], "query_toks_no_value": ["select", "t2", ".", "budget_type_code", ",", "t2", ".", "budget_type_description", ",", "t1", ".", "document_id", "from", "documents_with_expenses", "as", "t1", "join", "ref_budget_codes", "as", "t2", "on", "t1", ".", "budget_type_code", "=", "t2", ".", "budget_type_code"], "question": "Show the budget type code and description and the corresponding document id.", "question_toks": ["Show", "the", "budget", "type", "code", "and", "description", "and", "the", "corresponding", "document", "id", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 4, false], null]], "table_units": [["table_unit", 5], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT T2.budget_type_code ,  T2.budget_type_description ,  T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code  =  T2.budget_type_code", "query_toks": ["SELECT", "T2.budget_type_code", ",", "T2.budget_type_description", ",", "T1.document_id", "FROM", "Documents_with_expenses", "AS", "T1", "JOIN", "Ref_budget_codes", "AS", "T2", "ON", "T1.budget_type_code", "=", "T2.budget_type_code"], "query_toks_no_value": ["select", "t2", ".", "budget_type_code", ",", "t2", ".", "budget_type_description", ",", "t1", ".", "document_id", "from", "documents_with_expenses", "as", "t1", "join", "ref_budget_codes", "as", "t2", "on", "t1", ".", "budget_type_code", "=", "t2", ".", "budget_type_code"], "question": "Return the budget type codes, budget type descriptions and document ids for documents with expenses.", "question_toks": ["Return", "the", "budget", "type", "codes", ",", "budget", "type", "descriptions", "and", "document", "ids", "for", "documents", "with", "expenses", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 4, false], null]], "table_units": [["table_unit", 5], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT budget_type_code ,  count(*) FROM Documents_with_expenses GROUP BY budget_type_code", "query_toks": ["SELECT", "budget_type_code", ",", "count", "(", "*", ")", "FROM", "Documents_with_expenses", "GROUP", "BY", "budget_type_code"], "query_toks_no_value": ["select", "budget_type_code", ",", "count", "(", "*", ")", "from", "documents_with_expenses", "group", "by", "budget_type_code"], "question": "Show budget type codes and the number of documents in each budget type.", "question_toks": ["Show", "budget", "type", "codes", "and", "the", "number", "of", "documents", "in", "each", "budget", "type", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 18, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 18, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT budget_type_code ,  count(*) FROM Documents_with_expenses GROUP BY budget_type_code", "query_toks": ["SELECT", "budget_type_code", ",", "count", "(", "*", ")", "FROM", "Documents_with_expenses", "GROUP", "BY", "budget_type_code"], "query_toks_no_value": ["select", "budget_type_code", ",", "count", "(", "*", ")", "from", "documents_with_expenses", "group", "by", "budget_type_code"], "question": "What are the different budget type codes, and how many documents are there for each?", "question_toks": ["What", "are", "the", "different", "budget", "type", "codes", ",", "and", "how", "many", "documents", "are", "there", "for", "each", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 5]]}, "groupBy": [[0, 18, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 18, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "scientist_1", "query": "SELECT T1.name ,  T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T2.project ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", ",", "T1.hours", "FROM", "projects", "AS", "T1", "JOIN", "assignedto", "AS", "T2", "ON", "T1.code", "=", "T2.project", "GROUP", "BY", "T2.project", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "hours", "from", "projects", "as", "t1", "join", "assignedto", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "project", "group", "by", "t2", ".", "project", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the name and hours of project that has the most number of scientists.", "question_toks": ["Find", "the", "name", "and", "hours", "of", "project", "that", "has", "the", "most", "number", "of", "scientists", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 7, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "scientist_1", "query": "SELECT T1.name ,  T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T2.project ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", ",", "T1.hours", "FROM", "projects", "AS", "T1", "JOIN", "assignedto", "AS", "T2", "ON", "T1.code", "=", "T2.project", "GROUP", "BY", "T2.project", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "hours", "from", "projects", "as", "t1", "join", "assignedto", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "project", "group", "by", "t2", ".", "project", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name and hours for the project which has the most scientists assigned to it?", "question_toks": ["What", "is", "the", "name", "and", "hours", "for", "the", "project", "which", "has", "the", "most", "scientists", "assigned", "to", "it", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 7, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "scientist_1", "query": "SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T1.name", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.name", "FROM", "projects", "AS", "T1", "JOIN", "assignedto", "AS", "T2", "ON", "T1.code", "=", "T2.project", "GROUP", "BY", "T1.name"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "name", "from", "projects", "as", "t1", "join", "assignedto", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "project", "group", "by", "t1", ".", "name"], "question": "Find the number of scientists involved for each project name.", "question_toks": ["Find", "the", "number", "of", "scientists", "involved", "for", "each", "project", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 7, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "scientist_1", "query": "SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T1.name", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.name", "FROM", "projects", "AS", "T1", "JOIN", "assignedto", "AS", "T2", "ON", "T1.code", "=", "T2.project", "GROUP", "BY", "T1.name"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "name", "from", "projects", "as", "t1", "join", "assignedto", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "project", "group", "by", "t1", ".", "name"], "question": "What are the naems of all the projects, and how many scientists were assigned to each of them?", "question_toks": ["What", "are", "the", "naems", "of", "all", "the", "projects", ",", "and", "how", "many", "scientists", "were", "assigned", "to", "each", "of", "them", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 7, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "scientist_1", "query": "SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project WHERE T1.hours  >  300 GROUP BY T1.name", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.name", "FROM", "projects", "AS", "T1", "JOIN", "assignedto", "AS", "T2", "ON", "T1.code", "=", "T2.project", "WHERE", "T1.hours", ">", "300", "GROUP", "BY", "T1.name"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "name", "from", "projects", "as", "t1", "join", "assignedto", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "project", "where", "t1", ".", "hours", ">", "value", "group", "by", "t1", ".", "name"], "question": "Find the number of scientists involved for the projects that require more than 300 hours.", "question_toks": ["Find", "the", "number", "of", "scientists", "involved", "for", "the", "projects", "that", "require", "more", "than", "300", "hours", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 7, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 5, false], null], 300.0, null]]}}, {"db_id": "scientist_1", "query": "SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project WHERE T1.hours  >  300 GROUP BY T1.name", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.name", "FROM", "projects", "AS", "T1", "JOIN", "assignedto", "AS", "T2", "ON", "T1.code", "=", "T2.project", "WHERE", "T1.hours", ">", "300", "GROUP", "BY", "T1.name"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "name", "from", "projects", "as", "t1", "join", "assignedto", "as", "t2", "on", "t1", ".", "code", "=", "t2", ".", "project", "where", "t1", ".", "hours", ">", "value", "group", "by", "t1", ".", "name"], "question": "What are the names of projects that require more than 300 hours, and how many scientists are assigned to each?", "question_toks": ["What", "are", "the", "names", "of", "projects", "that", "require", "more", "than", "300", "hours", ",", "and", "how", "many", "scientists", "are", "assigned", "to", "each", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 3, false], null], [0, 7, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 5, false], null], 300.0, null]]}}, {"db_id": "scientist_1", "query": "SELECT count(*) ,  T1.name FROM scientists AS T1 JOIN assignedto AS T2 ON T1.ssn  =  T2.scientist GROUP BY T1.name", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.name", "FROM", "scientists", "AS", "T1", "JOIN", "assignedto", "AS", "T2", "ON", "T1.ssn", "=", "T2.scientist", "GROUP", "BY", "T1.name"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "name", "from", "scientists", "as", "t1", "join", "assignedto", "as", "t2", "on", "t1", ".", "ssn", "=", "t2", ".", "scientist", "group", "by", "t1", ".", "name"], "question": "Find the number of projects which each scientist is working on and scientist's name.", "question_toks": ["Find", "the", "number", "of", "projects", "which", "each", "scientist", "is", "working", "on", "and", "scientist", "'s", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "scientist_1", "query": "SELECT count(*) ,  T1.name FROM scientists AS T1 JOIN assignedto AS T2 ON T1.ssn  =  T2.scientist GROUP BY T1.name", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.name", "FROM", "scientists", "AS", "T1", "JOIN", "assignedto", "AS", "T2", "ON", "T1.ssn", "=", "T2.scientist", "GROUP", "BY", "T1.name"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "name", "from", "scientists", "as", "t1", "join", "assignedto", "as", "t2", "on", "t1", ".", "ssn", "=", "t2", ".", "scientist", "group", "by", "t1", ".", "name"], "question": "What are the names of the scientists, and how many projects are each of them working on?", "question_toks": ["What", "are", "the", "names", "of", "the", "scientists", ",", "and", "how", "many", "projects", "are", "each", "of", "them", "working", "on", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "scientist_1", "query": "SELECT T3.ssn ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects)", "query_toks": ["SELECT", "T3.ssn", ",", "T3.name", "FROM", "assignedto", "AS", "T1", "JOIN", "projects", "AS", "T2", "ON", "T1.project", "=", "T2.code", "JOIN", "scientists", "AS", "T3", "ON", "T1.scientist", "=", "T3.SSN", "WHERE", "T2.hours", "=", "(", "SELECT", "max", "(", "hours", ")", "FROM", "projects", ")"], "query_toks_no_value": ["select", "t3", ".", "ssn", ",", "t3", ".", "name", "from", "assignedto", "as", "t1", "join", "projects", "as", "t2", "on", "t1", ".", "project", "=", "t2", ".", "code", "join", "scientists", "as", "t3", "on", "t1", ".", "scientist", "=", "t3", ".", "ssn", "where", "t2", ".", "hours", "=", "(", "select", "max", "(", "hours", ")", "from", "projects", ")"], "question": "Find the SSN and name of scientists who are assigned to the project with the longest hours.", "question_toks": ["Find", "the", "SSN", "and", "name", "of", "scientists", "who", "are", "assigned", "to", "the", "project", "with", "the", "longest", "hours", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 3, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 5, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "scientist_1", "query": "SELECT T3.ssn ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects)", "query_toks": ["SELECT", "T3.ssn", ",", "T3.name", "FROM", "assignedto", "AS", "T1", "JOIN", "projects", "AS", "T2", "ON", "T1.project", "=", "T2.code", "JOIN", "scientists", "AS", "T3", "ON", "T1.scientist", "=", "T3.SSN", "WHERE", "T2.hours", "=", "(", "SELECT", "max", "(", "hours", ")", "FROM", "projects", ")"], "query_toks_no_value": ["select", "t3", ".", "ssn", ",", "t3", ".", "name", "from", "assignedto", "as", "t1", "join", "projects", "as", "t2", "on", "t1", ".", "project", "=", "t2", ".", "code", "join", "scientists", "as", "t3", "on", "t1", ".", "scientist", "=", "t3", ".", "ssn", "where", "t2", ".", "hours", "=", "(", "select", "max", "(", "hours", ")", "from", "projects", ")"], "question": "What are the SSN and names of scientists working on the project with the most hours?", "question_toks": ["What", "are", "the", "SSN", "and", "names", "of", "scientists", "working", "on", "the", "project", "with", "the", "most", "hours", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 3, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 5, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "scientist_1", "query": "SELECT T1.Name ,  T3.Name ,  T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code ORDER BY T3.Name ,  T1.Name", "query_toks": ["SELECT", "T1.Name", ",", "T3.Name", ",", "T3.Hours", "FROM", "Scientists", "AS", "T1", "JOIN", "AssignedTo", "AS", "T2", "ON", "T1.SSN", "=", "T2.Scientist", "JOIN", "Projects", "AS", "T3", "ON", "T2.Project", "=", "T3.Code", "ORDER", "BY", "T3.Name", ",", "T1.Name"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t3", ".", "name", ",", "t3", ".", "hours", "from", "scientists", "as", "t1", "join", "assignedto", "as", "t2", "on", "t1", ".", "ssn", "=", "t2", ".", "scientist", "join", "projects", "as", "t3", "on", "t2", ".", "project", "=", "t3", ".", "code", "order", "by", "t3", ".", "name", ",", "t1", ".", "name"], "question": "List all the scientists' names, their projects' names, and the hours worked by that scientist on each project, in alphabetical order of project name, and then scientist name.", "question_toks": ["List", "all", "the", "scientists", "'", "names", ",", "their", "projects", "'", "names", ",", "and", "the", "hours", "worked", "by", "that", "scientist", "on", "each", "project", ",", "in", "alphabetical", "order", "of", "project", "name", ",", "and", "then", "scientist", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 4, false], null], [0, [0, 2, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "scientist_1", "query": "SELECT T1.Name ,  T3.Name ,  T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code ORDER BY T3.Name ,  T1.Name", "query_toks": ["SELECT", "T1.Name", ",", "T3.Name", ",", "T3.Hours", "FROM", "Scientists", "AS", "T1", "JOIN", "AssignedTo", "AS", "T2", "ON", "T1.SSN", "=", "T2.Scientist", "JOIN", "Projects", "AS", "T3", "ON", "T2.Project", "=", "T3.Code", "ORDER", "BY", "T3.Name", ",", "T1.Name"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t3", ".", "name", ",", "t3", ".", "hours", "from", "scientists", "as", "t1", "join", "assignedto", "as", "t2", "on", "t1", ".", "ssn", "=", "t2", ".", "scientist", "join", "projects", "as", "t3", "on", "t2", ".", "project", "=", "t3", ".", "code", "order", "by", "t3", ".", "name", ",", "t1", ".", "name"], "question": "What are the names of each scientist, the names of the projects that they work on, and the hours for each of those projects, listed in alphabetical order by project name, then scientist name.", "question_toks": ["What", "are", "the", "names", "of", "each", "scientist", ",", "the", "names", "of", "the", "projects", "that", "they", "work", "on", ",", "and", "the", "hours", "for", "each", "of", "those", "projects", ",", "listed", "in", "alphabetical", "order", "by", "project", "name", ",", "then", "scientist", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 4, false], null], [0, [0, 2, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "scientist_1", "query": "SELECT T2.name ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT min(hours) FROM projects)", "query_toks": ["SELECT", "T2.name", ",", "T3.name", "FROM", "assignedto", "AS", "T1", "JOIN", "projects", "AS", "T2", "ON", "T1.project", "=", "T2.code", "JOIN", "scientists", "AS", "T3", "ON", "T1.scientist", "=", "T3.SSN", "WHERE", "T2.hours", "=", "(", "SELECT", "min", "(", "hours", ")", "FROM", "projects", ")"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t3", ".", "name", "from", "assignedto", "as", "t1", "join", "projects", "as", "t2", "on", "t1", ".", "project", "=", "t2", ".", "code", "join", "scientists", "as", "t3", "on", "t1", ".", "scientist", "=", "t3", ".", "ssn", "where", "t2", ".", "hours", "=", "(", "select", "min", "(", "hours", ")", "from", "projects", ")"], "question": "Find name of the project that needs the least amount of time to finish and the name of scientists who worked on it.", "question_toks": ["Find", "name", "of", "the", "project", "that", "needs", "the", "least", "amount", "of", "time", "to", "finish", "and", "the", "name", "of", "scientists", "who", "worked", "on", "it", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 3, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 5, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "scientist_1", "query": "SELECT T2.name ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT min(hours) FROM projects)", "query_toks": ["SELECT", "T2.name", ",", "T3.name", "FROM", "assignedto", "AS", "T1", "JOIN", "projects", "AS", "T2", "ON", "T1.project", "=", "T2.code", "JOIN", "scientists", "AS", "T3", "ON", "T1.scientist", "=", "T3.SSN", "WHERE", "T2.hours", "=", "(", "SELECT", "min", "(", "hours", ")", "FROM", "projects", ")"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t3", ".", "name", "from", "assignedto", "as", "t1", "join", "projects", "as", "t2", "on", "t1", ".", "project", "=", "t2", ".", "code", "join", "scientists", "as", "t3", "on", "t1", ".", "scientist", "=", "t3", ".", "ssn", "where", "t2", ".", "hours", "=", "(", "select", "min", "(", "hours", ")", "from", "projects", ")"], "question": "What is the name of the project that requires the fewest number of hours, and the names of the scientists assigned to it?", "question_toks": ["What", "is", "the", "name", "of", "the", "project", "that", "requires", "the", "fewest", "number", "of", "hours", ",", "and", "the", "names", "of", "the", "scientists", "assigned", "to", "it", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 3, false], null]], "table_units": [["table_unit", 2], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 5, false], null], {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[2, [0, [0, 5, false], null]]]], "union": null, "where": []}, null]]}}, {"db_id": "wine_1", "query": "SELECT Grape ,  Appelation FROM WINE", "query_toks": ["SELECT", "Grape", ",", "Appelation", "FROM", "WINE"], "query_toks_no_value": ["select", "grape", ",", "appelation", "from", "wine"], "question": "List the grapes and appelations of all wines.", "question_toks": ["List", "the", "grapes", "and", "appelations", "of", "all", "wines", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "wine_1", "query": "SELECT Grape ,  Appelation FROM WINE", "query_toks": ["SELECT", "Grape", ",", "Appelation", "FROM", "WINE"], "query_toks_no_value": ["select", "grape", ",", "appelation", "from", "wine"], "question": "What are the grapes and appelations of each wine?", "question_toks": ["What", "are", "the", "grapes", "and", "appelations", "of", "each", "wine", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "wine_1", "query": "SELECT Name ,  Score FROM WINE", "query_toks": ["SELECT", "Name", ",", "Score", "FROM", "WINE"], "query_toks_no_value": ["select", "name", ",", "score", "from", "wine"], "question": "List the names and scores of all wines.", "question_toks": ["List", "the", "names", "and", "scores", "of", "all", "wines", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": []}}, {"db_id": "wine_1", "query": "SELECT Name ,  Score FROM WINE", "query_toks": ["SELECT", "Name", ",", "Score", "FROM", "WINE"], "query_toks_no_value": ["select", "name", ",", "score", "from", "wine"], "question": "What are the names and scores of all wines?", "question_toks": ["What", "are", "the", "names", "and", "scores", "of", "all", "wines", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": []}}, {"db_id": "wine_1", "query": "SELECT Area ,  County FROM APPELLATIONS", "query_toks": ["SELECT", "Area", ",", "County", "FROM", "APPELLATIONS"], "query_toks_no_value": ["select", "area", ",", "county", "from", "appellations"], "question": "List the area and county of all appelations.", "question_toks": ["List", "the", "area", "and", "county", "of", "all", "appelations", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "wine_1", "query": "SELECT Area ,  County FROM APPELLATIONS", "query_toks": ["SELECT", "Area", ",", "County", "FROM", "APPELLATIONS"], "query_toks_no_value": ["select", "area", ",", "county", "from", "appellations"], "question": "What are the areas and counties for all appelations?", "question_toks": ["What", "are", "the", "areas", "and", "counties", "for", "all", "appelations", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "wine_1", "query": "SELECT T2.Name ,   T2.Score FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"White\"", "query_toks": ["SELECT", "T2.Name", ",", "T2.Score", "FROM", "GRAPES", "AS", "T1", "JOIN", "WINE", "AS", "T2", "ON", "T1.Grape", "=", "T2.Grape", "WHERE", "T1.Color", "=", "``", "White", "''"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "score", "from", "grapes", "as", "t1", "join", "wine", "as", "t2", "on", "t1", ".", "grape", "=", "t2", ".", "grape", "where", "t1", ".", "color", "=", "value"], "question": "What are the names and scores of wines that are made of white color grapes?", "question_toks": ["What", "are", "the", "names", "and", "scores", "of", "wines", "that", "are", "made", "of", "white", "color", "grapes", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 2, false], null], [0, 11, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], "\"White\"", null]]}}, {"db_id": "wine_1", "query": "SELECT T2.Name ,   T2.Score FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"White\"", "query_toks": ["SELECT", "T2.Name", ",", "T2.Score", "FROM", "GRAPES", "AS", "T1", "JOIN", "WINE", "AS", "T2", "ON", "T1.Grape", "=", "T2.Grape", "WHERE", "T1.Color", "=", "``", "White", "''"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "score", "from", "grapes", "as", "t1", "join", "wine", "as", "t2", "on", "t1", ".", "grape", "=", "t2", ".", "grape", "where", "t1", ".", "color", "=", "value"], "question": "Give the names and scores of wines made from white grapes.", "question_toks": ["Give", "the", "names", "and", "scores", "of", "wines", "made", "from", "white", "grapes", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 2, false], null], [0, 11, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 18, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], "\"White\"", null]]}}, {"db_id": "wine_1", "query": "SELECT count(*) ,  Grape FROM WINE GROUP BY Grape", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "Grape", "FROM", "WINE", "GROUP", "BY", "Grape"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "grape", "from", "wine", "group", "by", "grape"], "question": "What are the numbers of wines for different grapes?", "question_toks": ["What", "are", "the", "numbers", "of", "wines", "for", "different", "grapes", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 11, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "wine_1", "query": "SELECT count(*) ,  Grape FROM WINE GROUP BY Grape", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "Grape", "FROM", "WINE", "GROUP", "BY", "Grape"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "grape", "from", "wine", "group", "by", "grape"], "question": "How many wines are there for each grape?", "question_toks": ["How", "many", "wines", "are", "there", "for", "each", "grape", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 11, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "wine_1", "query": "SELECT avg(Price) ,  YEAR FROM WINE GROUP BY YEAR", "query_toks": ["SELECT", "avg", "(", "Price", ")", ",", "YEAR", "FROM", "WINE", "GROUP", "BY", "YEAR"], "query_toks_no_value": ["select", "avg", "(", "price", ")", ",", "year", "from", "wine", "group", "by", "year"], "question": "What are the average prices of wines for different years?", "question_toks": ["What", "are", "the", "average", "prices", "of", "wines", "for", "different", "years", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 16, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 17, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": []}}, {"db_id": "wine_1", "query": "SELECT avg(Price) ,  YEAR FROM WINE GROUP BY YEAR", "query_toks": ["SELECT", "avg", "(", "Price", ")", ",", "YEAR", "FROM", "WINE", "GROUP", "BY", "YEAR"], "query_toks_no_value": ["select", "avg", "(", "price", ")", ",", "year", "from", "wine", "group", "by", "year"], "question": "What is the average prices of wines for each each?", "question_toks": ["What", "is", "the", "average", "prices", "of", "wines", "for", "each", "each", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 16, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 17, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": []}}, {"db_id": "wine_1", "query": "SELECT AVG(Price) ,  AVG(Cases) FROM WINE WHERE YEAR  =  2009 AND Grape  =  \"Zinfandel\"", "query_toks": ["SELECT", "AVG", "(", "Price", ")", ",", "AVG", "(", "Cases", ")", "FROM", "WINE", "WHERE", "YEAR", "=", "2009", "AND", "Grape", "=", "``", "Zinfandel", "''"], "query_toks_no_value": ["select", "avg", "(", "price", ")", ",", "avg", "(", "cases", ")", "from", "wine", "where", "year", "=", "value", "and", "grape", "=", "value"], "question": "What are the average prices and cases of wines produced in the year of 2009 and made of Zinfandel grape?", "question_toks": ["What", "are", "the", "average", "prices", "and", "cases", "of", "wines", "produced", "in", "the", "year", "of", "2009", "and", "made", "of", "Zinfandel", "grape", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 17, false], null]], [5, [0, [0, 19, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 16, false], null], 2009.0, null], "and", [false, 2, [0, [0, 11, false], null], "\"Zinfandel\"", null]]}}, {"db_id": "wine_1", "query": "SELECT AVG(Price) ,  AVG(Cases) FROM WINE WHERE YEAR  =  2009 AND Grape  =  \"Zinfandel\"", "query_toks": ["SELECT", "AVG", "(", "Price", ")", ",", "AVG", "(", "Cases", ")", "FROM", "WINE", "WHERE", "YEAR", "=", "2009", "AND", "Grape", "=", "``", "Zinfandel", "''"], "query_toks_no_value": ["select", "avg", "(", "price", ")", ",", "avg", "(", "cases", ")", "from", "wine", "where", "year", "=", "value", "and", "grape", "=", "value"], "question": "Give the average price and case of wines made from Zinfandel grapes in the year 2009.", "question_toks": ["Give", "the", "average", "price", "and", "case", "of", "wines", "made", "from", "Zinfandel", "grapes", "in", "the", "year", "2009", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 17, false], null]], [5, [0, [0, 19, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 16, false], null], 2009.0, null], "and", [false, 2, [0, [0, 11, false], null], "\"Zinfandel\"", null]]}}, {"db_id": "wine_1", "query": "SELECT max(Price) ,  max(Score) FROM WINE WHERE Appelation  =  \"St. Helena\"", "query_toks": ["SELECT", "max", "(", "Price", ")", ",", "max", "(", "Score", ")", "FROM", "WINE", "WHERE", "Appelation", "=", "``", "St.", "Helena", "''"], "query_toks_no_value": ["select", "max", "(", "price", ")", ",", "max", "(", "score", ")", "from", "wine", "where", "appelation", "=", "value"], "question": "What are the maximum price and score of wines produced by St. Helena appelation?", "question_toks": ["What", "are", "the", "maximum", "price", "and", "score", "of", "wines", "produced", "by", "St.", "Helena", "appelation", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 17, false], null]], [1, [0, [0, 18, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 13, false], null], "\"St. Helena\"", null]]}}, {"db_id": "wine_1", "query": "SELECT max(Price) ,  max(Score) FROM WINE WHERE Appelation  =  \"St. Helena\"", "query_toks": ["SELECT", "max", "(", "Price", ")", ",", "max", "(", "Score", ")", "FROM", "WINE", "WHERE", "Appelation", "=", "``", "St.", "Helena", "''"], "query_toks_no_value": ["select", "max", "(", "price", ")", ",", "max", "(", "score", ")", "from", "wine", "where", "appelation", "=", "value"], "question": "Give the maximum price and score for wines produced in the appelation St. Helena.", "question_toks": ["Give", "the", "maximum", "price", "and", "score", "for", "wines", "produced", "in", "the", "appelation", "St.", "Helena", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 17, false], null]], [1, [0, [0, 18, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 13, false], null], "\"St. Helena\"", null]]}}, {"db_id": "wine_1", "query": "SELECT max(Price) ,  max(Score) ,  YEAR FROM WINE GROUP BY YEAR", "query_toks": ["SELECT", "max", "(", "Price", ")", ",", "max", "(", "Score", ")", ",", "YEAR", "FROM", "WINE", "GROUP", "BY", "YEAR"], "query_toks_no_value": ["select", "max", "(", "price", ")", ",", "max", "(", "score", ")", ",", "year", "from", "wine", "group", "by", "year"], "question": "What are the maximum price and score of wines in each year?", "question_toks": ["What", "are", "the", "maximum", "price", "and", "score", "of", "wines", "in", "each", "year", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 16, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 17, false], null]], [1, [0, [0, 18, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": []}}, {"db_id": "wine_1", "query": "SELECT max(Price) ,  max(Score) ,  YEAR FROM WINE GROUP BY YEAR", "query_toks": ["SELECT", "max", "(", "Price", ")", ",", "max", "(", "Score", ")", ",", "YEAR", "FROM", "WINE", "GROUP", "BY", "YEAR"], "query_toks_no_value": ["select", "max", "(", "price", ")", ",", "max", "(", "score", ")", ",", "year", "from", "wine", "group", "by", "year"], "question": "What are the maximum price and score of wines for each year?", "question_toks": ["What", "are", "the", "maximum", "price", "and", "score", "of", "wines", "for", "each", "year", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 16, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 17, false], null]], [1, [0, [0, 18, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": []}}, {"db_id": "wine_1", "query": "SELECT avg(Price) ,  avg(Score) ,  Appelation FROM WINE GROUP BY Appelation", "query_toks": ["SELECT", "avg", "(", "Price", ")", ",", "avg", "(", "Score", ")", ",", "Appelation", "FROM", "WINE", "GROUP", "BY", "Appelation"], "query_toks_no_value": ["select", "avg", "(", "price", ")", ",", "avg", "(", "score", ")", ",", "appelation", "from", "wine", "group", "by", "appelation"], "question": "What are the average price and score of wines grouped by appelation?", "question_toks": ["What", "are", "the", "average", "price", "and", "score", "of", "wines", "grouped", "by", "appelation", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 17, false], null]], [5, [0, [0, 18, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "wine_1", "query": "SELECT avg(Price) ,  avg(Score) ,  Appelation FROM WINE GROUP BY Appelation", "query_toks": ["SELECT", "avg", "(", "Price", ")", ",", "avg", "(", "Score", ")", ",", "Appelation", "FROM", "WINE", "GROUP", "BY", "Appelation"], "query_toks_no_value": ["select", "avg", "(", "price", ")", ",", "avg", "(", "score", ")", ",", "appelation", "from", "wine", "group", "by", "appelation"], "question": "What are the average price and score of wines for each appelation?", "question_toks": ["What", "are", "the", "average", "price", "and", "score", "of", "wines", "for", "each", "appelation", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 13, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 17, false], null]], [5, [0, [0, 18, false], null]], [0, [0, [0, 13, false], null]]]], "union": null, "where": []}}, {"db_id": "wine_1", "query": "SELECT Grape ,  Winery ,  YEAR FROM WINE WHERE Price  >   100 ORDER BY YEAR", "query_toks": ["SELECT", "Grape", ",", "Winery", ",", "YEAR", "FROM", "WINE", "WHERE", "Price", ">", "100", "ORDER", "BY", "YEAR"], "query_toks_no_value": ["select", "grape", ",", "winery", ",", "year", "from", "wine", "where", "price", ">", "value", "order", "by", "year"], "question": "List the grape, winery and year of the wines whose price is bigger than 100 ordered by year.", "question_toks": ["List", "the", "grape", ",", "winery", "and", "year", "of", "the", "wines", "whose", "price", "is", "bigger", "than", "100", "ordered", "by", "year", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 16, false], null]]], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 17, false], null], 100.0, null]]}}, {"db_id": "wine_1", "query": "SELECT Grape ,  Winery ,  YEAR FROM WINE WHERE Price  >   100 ORDER BY YEAR", "query_toks": ["SELECT", "Grape", ",", "Winery", ",", "YEAR", "FROM", "WINE", "WHERE", "Price", ">", "100", "ORDER", "BY", "YEAR"], "query_toks_no_value": ["select", "grape", ",", "winery", ",", "year", "from", "wine", "where", "price", ">", "value", "order", "by", "year"], "question": "What are the grapes, wineries and years for wines with price higher than 100, sorted by year?", "question_toks": ["What", "are", "the", "grapes", ",", "wineries", "and", "years", "for", "wines", "with", "price", "higher", "than", "100", ",", "sorted", "by", "year", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 16, false], null]]], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 17, false], null], 100.0, null]]}}, {"db_id": "wine_1", "query": "SELECT Grape ,  Appelation ,  Name FROM WINE WHERE Score  >  93 ORDER BY Name", "query_toks": ["SELECT", "Grape", ",", "Appelation", ",", "Name", "FROM", "WINE", "WHERE", "Score", ">", "93", "ORDER", "BY", "Name"], "query_toks_no_value": ["select", "grape", ",", "appelation", ",", "name", "from", "wine", "where", "score", ">", "value", "order", "by", "name"], "question": "List the grape, appelation and name of wines whose score is higher than 93 ordered by Name.", "question_toks": ["List", "the", "grape", ",", "appelation", "and", "name", "of", "wines", "whose", "score", "is", "higher", "than", "93", "ordered", "by", "Name", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 15, false], null]]], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 13, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 18, false], null], 93.0, null]]}}, {"db_id": "wine_1", "query": "SELECT Grape ,  Appelation ,  Name FROM WINE WHERE Score  >  93 ORDER BY Name", "query_toks": ["SELECT", "Grape", ",", "Appelation", ",", "Name", "FROM", "WINE", "WHERE", "Score", ">", "93", "ORDER", "BY", "Name"], "query_toks_no_value": ["select", "grape", ",", "appelation", ",", "name", "from", "wine", "where", "score", ">", "value", "order", "by", "name"], "question": "What are the grapes, appelations, and wines with scores above 93, sorted by Name?", "question_toks": ["What", "are", "the", "grapes", ",", "appelations", ",", "and", "wines", "with", "scores", "above", "93", ",", "sorted", "by", "Name", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 15, false], null]]], "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 13, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 18, false], null], 93.0, null]]}}, {"db_id": "train_station", "query": "SELECT name ,  LOCATION ,  number_of_platforms FROM station", "query_toks": ["SELECT", "name", ",", "LOCATION", ",", "number_of_platforms", "FROM", "station"], "query_toks_no_value": ["select", "name", ",", "location", ",", "number_of_platforms", "from", "station"], "question": "Show the name, location, and number of platforms for all stations.", "question_toks": ["Show", "the", "name", ",", "location", ",", "and", "number", "of", "platforms", "for", "all", "stations", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "train_station", "query": "SELECT name ,  total_passengers FROM station WHERE LOCATION != 'London'", "query_toks": ["SELECT", "name", ",", "total_passengers", "FROM", "station", "WHERE", "LOCATION", "!", "=", "'London", "'"], "query_toks_no_value": ["select", "name", ",", "total_passengers", "from", "station", "where", "location", "!", "=", "value"], "question": "Show the names and total passengers for all train stations not in London.", "question_toks": ["Show", "the", "names", "and", "total", "passengers", "for", "all", "train", "stations", "not", "in", "London", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 7, [0, [0, 6, false], null], "\"London\"", null]]}}, {"db_id": "train_station", "query": "SELECT name ,  main_services FROM station ORDER BY total_passengers DESC LIMIT 3", "query_toks": ["SELECT", "name", ",", "main_services", "FROM", "station", "ORDER", "BY", "total_passengers", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "name", ",", "main_services", "from", "station", "order", "by", "total_passengers", "desc", "limit", "value"], "question": "Show the names and main services for train stations that have the top three total number of passengers.", "question_toks": ["Show", "the", "names", "and", "main", "services", "for", "train", "stations", "that", "have", "the", "top", "three", "total", "number", "of", "passengers", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": 3, "orderBy": ["desc", [[0, [0, 5, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 7, false], null]]]], "union": null, "where": []}}, {"db_id": "train_station", "query": "SELECT avg(total_passengers) ,  max(total_passengers) FROM station WHERE LOCATION  =  'London' OR LOCATION  =  'Glasgow'", "query_toks": ["SELECT", "avg", "(", "total_passengers", ")", ",", "max", "(", "total_passengers", ")", "FROM", "station", "WHERE", "LOCATION", "=", "'London", "'", "OR", "LOCATION", "=", "'Glasgow", "'"], "query_toks_no_value": ["select", "avg", "(", "total_passengers", ")", ",", "max", "(", "total_passengers", ")", "from", "station", "where", "location", "=", "value", "or", "location", "=", "value"], "question": "What is the average and maximum number of total passengers for train stations in London or Glasgow?", "question_toks": ["What", "is", "the", "average", "and", "maximum", "number", "of", "total", "passengers", "for", "train", "stations", "in", "London", "or", "Glasgow", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 5, false], null]], [1, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"London\"", null], "or", [false, 2, [0, [0, 6, false], null], "\"Glasgow\"", null]]}}, {"db_id": "train_station", "query": "SELECT LOCATION ,  sum(number_of_platforms) ,  sum(total_passengers) FROM station GROUP BY LOCATION", "query_toks": ["SELECT", "LOCATION", ",", "sum", "(", "number_of_platforms", ")", ",", "sum", "(", "total_passengers", ")", "FROM", "station", "GROUP", "BY", "LOCATION"], "query_toks_no_value": ["select", "location", ",", "sum", "(", "number_of_platforms", ")", ",", "sum", "(", "total_passengers", ")", "from", "station", "group", "by", "location"], "question": "Show all locations and the total number of platforms and passengers for all train stations in each location.", "question_toks": ["Show", "all", "locations", "and", "the", "total", "number", "of", "platforms", "and", "passengers", "for", "all", "train", "stations", "in", "each", "location", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [4, [0, [0, 8, false], null]], [4, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "train_station", "query": "SELECT name ,  TIME ,  service FROM train", "query_toks": ["SELECT", "name", ",", "TIME", ",", "service", "FROM", "train"], "query_toks_no_value": ["select", "name", ",", "time", ",", "service", "from", "train"], "question": "Show the name, time, and service for all trains.", "question_toks": ["Show", "the", "name", ",", "time", ",", "and", "service", "for", "all", "trains", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "train_station", "query": "SELECT name ,  service FROM train ORDER BY TIME", "query_toks": ["SELECT", "name", ",", "service", "FROM", "train", "ORDER", "BY", "TIME"], "query_toks_no_value": ["select", "name", ",", "service", "from", "train", "order", "by", "time"], "question": "Show the name and service for all trains in order by time.", "question_toks": ["Show", "the", "name", "and", "service", "for", "all", "trains", "in", "order", "by", "time", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 11, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "train_station", "query": "SELECT T2.name ,  count(*) FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "train_station", "AS", "T1", "JOIN", "station", "AS", "T2", "ON", "T1.station_id", "=", "T2.station_id", "GROUP", "BY", "T1.station_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "train_station", "as", "t1", "join", "station", "as", "t2", "on", "t1", ".", "station_id", "=", "t2", ".", "station_id", "group", "by", "t1", ".", "station_id"], "question": "Show the station name and number of trains in each station.", "question_toks": ["Show", "the", "station", "name", "and", "number", "of", "trains", "in", "each", "station", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 14, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 14, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "train_station", "query": "SELECT T2.name ,  T3.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id", "query_toks": ["SELECT", "T2.name", ",", "T3.name", "FROM", "train_station", "AS", "T1", "JOIN", "station", "AS", "T2", "ON", "T1.station_id", "=", "T2.station_id", "JOIN", "train", "AS", "T3", "ON", "T3.train_id", "=", "T1.train_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t3", ".", "name", "from", "train_station", "as", "t1", "join", "station", "as", "t2", "on", "t1", ".", "station_id", "=", "t2", ".", "station_id", "join", "train", "as", "t3", "on", "t3", ".", "train_id", "=", "t1", ".", "train_id"], "question": "show the train name and station name for each train.", "question_toks": ["show", "the", "train", "name", "and", "station", "name", "for", "each", "train", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 14, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "train_station", "query": "SELECT T3.name ,  T3.time FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T2.location  =  'London' ORDER BY T3.time DESC", "query_toks": ["SELECT", "T3.name", ",", "T3.time", "FROM", "train_station", "AS", "T1", "JOIN", "station", "AS", "T2", "ON", "T1.station_id", "=", "T2.station_id", "JOIN", "train", "AS", "T3", "ON", "T3.train_id", "=", "T1.train_id", "WHERE", "T2.location", "=", "'London", "'", "ORDER", "BY", "T3.time", "DESC"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t3", ".", "time", "from", "train_station", "as", "t1", "join", "station", "as", "t2", "on", "t1", ".", "station_id", "=", "t2", ".", "station_id", "join", "train", "as", "t3", "on", "t3", ".", "train_id", "=", "t1", ".", "train_id", "where", "t2", ".", "location", "=", "value", "order", "by", "t3", ".", "time", "desc"], "question": "Show all train names and times in stations in London in descending order by train time.", "question_toks": ["Show", "all", "train", "names", "and", "times", "in", "stations", "in", "London", "in", "descending", "order", "by", "train", "time", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 14, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 11, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 6, false], null], "\"London\"", null]]}}, {"db_id": "train_station", "query": "SELECT name ,  LOCATION FROM station ORDER BY Annual_entry_exit ,  Annual_interchanges", "query_toks": ["SELECT", "name", ",", "LOCATION", "FROM", "station", "ORDER", "BY", "Annual_entry_exit", ",", "Annual_interchanges"], "query_toks_no_value": ["select", "name", ",", "location", "from", "station", "order", "by", "annual_entry_exit", ",", "annual_interchanges"], "question": "List the names and locations of all stations ordered by their yearly entry exit and interchange amounts.", "question_toks": ["List", "the", "names", "and", "locations", "of", "all", "stations", "ordered", "by", "their", "yearly", "entry", "exit", "and", "interchange", "amounts", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 3, false], null], [0, [0, 4, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "driving_school", "query": "SELECT first_name ,  middle_name ,  last_name FROM Staff;", "query_toks": ["SELECT", "first_name", ",", "middle_name", ",", "last_name", "FROM", "Staff", ";"], "query_toks_no_value": ["select", "first_name", ",", "middle_name", ",", "last_name", "from", "staff"], "question": "List the first name middle name and last name of all staff.", "question_toks": ["List", "the", "first", "name", "middle", "name", "and", "last", "name", "of", "all", "staff", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "driving_school", "query": "SELECT first_name ,  middle_name ,  last_name FROM Staff;", "query_toks": ["SELECT", "first_name", ",", "middle_name", ",", "last_name", "FROM", "Staff", ";"], "query_toks_no_value": ["select", "first_name", ",", "middle_name", ",", "last_name", "from", "staff"], "question": "What are the first, middle, and last names of all staff?", "question_toks": ["What", "are", "the", "first", ",", "middle", ",", "and", "last", "names", "of", "all", "staff", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "driving_school", "query": "SELECT T1.country ,  T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";", "query_toks": ["SELECT", "T1.country", ",", "T1.state_province_county", "FROM", "Addresses", "AS", "T1", "JOIN", "Staff", "AS", "T2", "ON", "T1.address_id", "=", "T2.staff_address_id", "WHERE", "T2.first_name", "=", "``", "Janessa", "''", "AND", "T2.last_name", "=", "``", "Sawayn", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "country", ",", "t1", ".", "state_province_county", "from", "addresses", "as", "t1", "join", "staff", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "staff_address_id", "where", "t2", ".", "first_name", "=", "value", "and", "t2", ".", "last_name", "=", "value"], "question": "Which country and state does staff with first name as Janessa and last name as Sawayn lived?", "question_toks": ["Which", "country", "and", "state", "does", "staff", "with", "first", "name", "as", "Janessa", "and", "last", "name", "as", "Sawayn", "lived", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Janessa\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"Sawayn\"", null]]}}, {"db_id": "driving_school", "query": "SELECT T1.country ,  T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";", "query_toks": ["SELECT", "T1.country", ",", "T1.state_province_county", "FROM", "Addresses", "AS", "T1", "JOIN", "Staff", "AS", "T2", "ON", "T1.address_id", "=", "T2.staff_address_id", "WHERE", "T2.first_name", "=", "``", "Janessa", "''", "AND", "T2.last_name", "=", "``", "Sawayn", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "country", ",", "t1", ".", "state_province_county", "from", "addresses", "as", "t1", "join", "staff", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "staff_address_id", "where", "t2", ".", "first_name", "=", "value", "and", "t2", ".", "last_name", "=", "value"], "question": "In which country and state does Janessa Sawayn live?", "question_toks": ["In", "which", "country", "and", "state", "does", "Janessa", "Sawayn", "live", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 10, false], null], "\"Janessa\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"Sawayn\"", null]]}}, {"db_id": "driving_school", "query": "SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T1.city = \"Damianfort\";", "query_toks": ["SELECT", "T2.first_name", ",", "T2.last_name", "FROM", "Addresses", "AS", "T1", "JOIN", "Staff", "AS", "T2", "ON", "T1.address_id", "=", "T2.staff_address_id", "WHERE", "T1.city", "=", "``", "Damianfort", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "first_name", ",", "t2", ".", "last_name", "from", "addresses", "as", "t1", "join", "staff", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "staff_address_id", "where", "t1", ".", "city", "=", "value"], "question": "Find out the first name and last name of staff lived in city Damianfort.", "question_toks": ["Find", "out", "the", "first", "name", "and", "last", "name", "of", "staff", "lived", "in", "city", "Damianfort", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], "\"Damianfort\"", null]]}}, {"db_id": "driving_school", "query": "SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T1.city = \"Damianfort\";", "query_toks": ["SELECT", "T2.first_name", ",", "T2.last_name", "FROM", "Addresses", "AS", "T1", "JOIN", "Staff", "AS", "T2", "ON", "T1.address_id", "=", "T2.staff_address_id", "WHERE", "T1.city", "=", "``", "Damianfort", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "first_name", ",", "t2", ".", "last_name", "from", "addresses", "as", "t1", "join", "staff", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "staff_address_id", "where", "t1", ".", "city", "=", "value"], "question": "What is the first and last name of all employees who live in the city Damianfort?", "question_toks": ["What", "is", "the", "first", "and", "last", "name", "of", "all", "employees", "who", "live", "in", "the", "city", "Damianfort", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], "\"Damianfort\"", null]]}}, {"db_id": "driving_school", "query": "SELECT T1.city ,  count(*) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.city ORDER BY count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "T1.city", ",", "count", "(", "*", ")", "FROM", "Addresses", "AS", "T1", "JOIN", "Staff", "AS", "T2", "ON", "T1.address_id", "=", "T2.staff_address_id", "GROUP", "BY", "T1.city", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "city", ",", "count", "(", "*", ")", "from", "addresses", "as", "t1", "join", "staff", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "staff_address_id", "group", "by", "t1", ".", "city", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which city lives most of staffs? List the city name and number of staffs.", "question_toks": ["Which", "city", "lives", "most", "of", "staffs", "?", "List", "the", "city", "name", "and", "number", "of", "staffs", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "driving_school", "query": "SELECT T1.city ,  count(*) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.city ORDER BY count(*) DESC LIMIT 1;", "query_toks": ["SELECT", "T1.city", ",", "count", "(", "*", ")", "FROM", "Addresses", "AS", "T1", "JOIN", "Staff", "AS", "T2", "ON", "T1.address_id", "=", "T2.staff_address_id", "GROUP", "BY", "T1.city", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "city", ",", "count", "(", "*", ")", "from", "addresses", "as", "t1", "join", "staff", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "staff_address_id", "group", "by", "t1", ".", "city", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "In which city do the most employees live and how many of them live there?", "question_toks": ["In", "which", "city", "do", "the", "most", "employees", "live", "and", "how", "many", "of", "them", "live", "there", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 3, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "driving_school", "query": "SELECT first_name ,  last_name FROM Customers;", "query_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "Customers", ";"], "query_toks_no_value": ["select", "first_name", ",", "last_name", "from", "customers"], "question": "List the first name and last name of all customers.", "question_toks": ["List", "the", "first", "name", "and", "last", "name", "of", "all", "customers", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": []}}, {"db_id": "driving_school", "query": "SELECT first_name ,  last_name FROM Customers;", "query_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "Customers", ";"], "query_toks_no_value": ["select", "first_name", ",", "last_name", "from", "customers"], "question": "What are the first and last names for all customers?", "question_toks": ["What", "are", "the", "first", "and", "last", "names", "for", "all", "customers", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": []}}, {"db_id": "driving_school", "query": "SELECT email_address ,  date_of_birth FROM Customers WHERE first_name = \"Carole\"", "query_toks": ["SELECT", "email_address", ",", "date_of_birth", "FROM", "Customers", "WHERE", "first_name", "=", "``", "Carole", "''"], "query_toks_no_value": ["select", "email_address", ",", "date_of_birth", "from", "customers", "where", "first_name", "=", "value"], "question": "List email address and birthday of customer whose first name as Carole.", "question_toks": ["List", "email", "address", "and", "birthday", "of", "customer", "whose", "first", "name", "as", "Carole", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 22, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 23, false], null], "\"Carole\"", null]]}}, {"db_id": "driving_school", "query": "SELECT email_address ,  date_of_birth FROM Customers WHERE first_name = \"Carole\"", "query_toks": ["SELECT", "email_address", ",", "date_of_birth", "FROM", "Customers", "WHERE", "first_name", "=", "``", "Carole", "''"], "query_toks_no_value": ["select", "email_address", ",", "date_of_birth", "from", "customers", "where", "first_name", "=", "value"], "question": "What are the email addresses and date of births for all customers who have a first name of Carole?", "question_toks": ["What", "are", "the", "email", "addresses", "and", "date", "of", "births", "for", "all", "customers", "who", "have", "a", "first", "name", "of", "Carole", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 22, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 23, false], null], "\"Carole\"", null]]}}, {"db_id": "driving_school", "query": "SELECT phone_number ,  email_address FROM Customers WHERE amount_outstanding  >  2000;", "query_toks": ["SELECT", "phone_number", ",", "email_address", "FROM", "Customers", "WHERE", "amount_outstanding", ">", "2000", ";"], "query_toks_no_value": ["select", "phone_number", ",", "email_address", "from", "customers", "where", "amount_outstanding", ">", "value"], "question": "List phone number and email address of customer with more than 2000 outstanding balance.", "question_toks": ["List", "phone", "number", "and", "email", "address", "of", "customer", "with", "more", "than", "2000", "outstanding", "balance", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 27, false], null]], [0, [0, [0, 26, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 25, false], null], 2000.0, null]]}}, {"db_id": "driving_school", "query": "SELECT phone_number ,  email_address FROM Customers WHERE amount_outstanding  >  2000;", "query_toks": ["SELECT", "phone_number", ",", "email_address", "FROM", "Customers", "WHERE", "amount_outstanding", ">", "2000", ";"], "query_toks_no_value": ["select", "phone_number", ",", "email_address", "from", "customers", "where", "amount_outstanding", ">", "value"], "question": "What are the phone numbers and email addresses of all customers who have an outstanding balance of more than 2000?", "question_toks": ["What", "are", "the", "phone", "numbers", "and", "email", "addresses", "of", "all", "customers", "who", "have", "an", "outstanding", "balance", "of", "more", "than", "2000", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 27, false], null]], [0, [0, [0, 26, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 25, false], null], 2000.0, null]]}}, {"db_id": "driving_school", "query": "SELECT customer_status_code ,  cell_mobile_phone_number ,  email_address FROM Customers WHERE first_name = \"Marina\" OR last_name  =  \"Kohler\"", "query_toks": ["SELECT", "customer_status_code", ",", "cell_mobile_phone_number", ",", "email_address", "FROM", "Customers", "WHERE", "first_name", "=", "``", "Marina", "''", "OR", "last_name", "=", "``", "Kohler", "''"], "query_toks_no_value": ["select", "customer_status_code", ",", "cell_mobile_phone_number", ",", "email_address", "from", "customers", "where", "first_name", "=", "value", "or", "last_name", "=", "value"], "question": "What is the status code, mobile phone number and email address of customer with last name as Kohler or first name as Marina?", "question_toks": ["What", "is", "the", "status", "code", ",", "mobile", "phone", "number", "and", "email", "address", "of", "customer", "with", "last", "name", "as", "Kohler", "or", "first", "name", "as", "Marina", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 28, false], null]], [0, [0, [0, 26, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 23, false], null], "\"Marina\"", null], "or", [false, 2, [0, [0, 24, false], null], "\"Kohler\"", null]]}}, {"db_id": "driving_school", "query": "SELECT customer_status_code ,  cell_mobile_phone_number ,  email_address FROM Customers WHERE first_name = \"Marina\" OR last_name  =  \"Kohler\"", "query_toks": ["SELECT", "customer_status_code", ",", "cell_mobile_phone_number", ",", "email_address", "FROM", "Customers", "WHERE", "first_name", "=", "``", "Marina", "''", "OR", "last_name", "=", "``", "Kohler", "''"], "query_toks_no_value": ["select", "customer_status_code", ",", "cell_mobile_phone_number", ",", "email_address", "from", "customers", "where", "first_name", "=", "value", "or", "last_name", "=", "value"], "question": "What is the status code, phone number, and email address of the customer whose last name is Kohler or whose first name is Marina?", "question_toks": ["What", "is", "the", "status", "code", ",", "phone", "number", ",", "and", "email", "address", "of", "the", "customer", "whose", "last", "name", "is", "Kohler", "or", "whose", "first", "name", "is", "Marina", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 28, false], null]], [0, [0, [0, 26, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 23, false], null], "\"Marina\"", null], "or", [false, 2, [0, [0, 24, false], null], "\"Kohler\"", null]]}}, {"db_id": "driving_school", "query": "SELECT customer_status_code , count(*) FROM Customers GROUP BY customer_status_code;", "query_toks": ["SELECT", "customer_status_code", ",", "count", "(", "*", ")", "FROM", "Customers", "GROUP", "BY", "customer_status_code", ";"], "query_toks_no_value": ["select", "customer_status_code", ",", "count", "(", "*", ")", "from", "customers", "group", "by", "customer_status_code"], "question": "List all customer status codes and the number of customers having each status code.", "question_toks": ["List", "all", "customer", "status", "codes", "and", "the", "number", "of", "customers", "having", "each", "status", "code", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 20, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "driving_school", "query": "SELECT customer_status_code , count(*) FROM Customers GROUP BY customer_status_code;", "query_toks": ["SELECT", "customer_status_code", ",", "count", "(", "*", ")", "FROM", "Customers", "GROUP", "BY", "customer_status_code", ";"], "query_toks_no_value": ["select", "customer_status_code", ",", "count", "(", "*", ")", "from", "customers", "group", "by", "customer_status_code"], "question": "For each customer status code, how many customers are classified that way?", "question_toks": ["For", "each", "customer", "status", "code", ",", "how", "many", "customers", "are", "classified", "that", "way", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [[0, 20, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "driving_school", "query": "SELECT max(amount_outstanding) ,  min(amount_outstanding) ,  avg(amount_outstanding) FROM Customers;", "query_toks": ["SELECT", "max", "(", "amount_outstanding", ")", ",", "min", "(", "amount_outstanding", ")", ",", "avg", "(", "amount_outstanding", ")", "FROM", "Customers", ";"], "query_toks_no_value": ["select", "max", "(", "amount_outstanding", ")", ",", "min", "(", "amount_outstanding", ")", ",", "avg", "(", "amount_outstanding", ")", "from", "customers"], "question": "What is maximum, minimum and average amount of outstanding of customer?", "question_toks": ["What", "is", "maximum", ",", "minimum", "and", "average", "amount", "of", "outstanding", "of", "customer", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 25, false], null]], [2, [0, [0, 25, false], null]], [5, [0, [0, 25, false], null]]]], "union": null, "where": []}}, {"db_id": "driving_school", "query": "SELECT max(amount_outstanding) ,  min(amount_outstanding) ,  avg(amount_outstanding) FROM Customers;", "query_toks": ["SELECT", "max", "(", "amount_outstanding", ")", ",", "min", "(", "amount_outstanding", ")", ",", "avg", "(", "amount_outstanding", ")", "FROM", "Customers", ";"], "query_toks_no_value": ["select", "max", "(", "amount_outstanding", ")", ",", "min", "(", "amount_outstanding", ")", ",", "avg", "(", "amount_outstanding", ")", "from", "customers"], "question": "What is the maximum, minimum, and average amount of money outsanding for all customers?", "question_toks": ["What", "is", "the", "maximum", ",", "minimum", ",", "and", "average", "amount", "of", "money", "outsanding", "for", "all", "customers", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 25, false], null]], [2, [0, [0, 25, false], null]], [5, [0, [0, 25, false], null]]]], "union": null, "where": []}}, {"db_id": "driving_school", "query": "SELECT first_name ,  last_name FROM Customers WHERE amount_outstanding BETWEEN 1000 AND 3000;", "query_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "Customers", "WHERE", "amount_outstanding", "BETWEEN", "1000", "AND", "3000", ";"], "query_toks_no_value": ["select", "first_name", ",", "last_name", "from", "customers", "where", "amount_outstanding", "between", "value", "and", "value"], "question": "List the first name and last name of customers have the amount of outstanding between 1000 and 3000.", "question_toks": ["List", "the", "first", "name", "and", "last", "name", "of", "customers", "have", "the", "amount", "of", "outstanding", "between", "1000", "and", "3000", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 1, [0, [0, 25, false], null], 1000.0, 3000.0]]}}, {"db_id": "driving_school", "query": "SELECT first_name ,  last_name FROM Customers WHERE amount_outstanding BETWEEN 1000 AND 3000;", "query_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "Customers", "WHERE", "amount_outstanding", "BETWEEN", "1000", "AND", "3000", ";"], "query_toks_no_value": ["select", "first_name", ",", "last_name", "from", "customers", "where", "amount_outstanding", "between", "value", "and", "value"], "question": "What are the first and last names of all customers with between 1000 and 3000 dollars outstanding?", "question_toks": ["What", "are", "the", "first", "and", "last", "names", "of", "all", "customers", "with", "between", "1000", "and", "3000", "dollars", "outstanding", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 1, [0, [0, 25, false], null], 1000.0, 3000.0]]}}, {"db_id": "driving_school", "query": "SELECT T1.first_name ,  T1.last_name FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T2.city = \"Lockmanfurt\";", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", "FROM", "Customers", "AS", "T1", "JOIN", "Addresses", "AS", "T2", "ON", "T1.customer_address_id", "=", "T2.address_id", "WHERE", "T2.city", "=", "``", "Lockmanfurt", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", "from", "customers", "as", "t1", "join", "addresses", "as", "t2", "on", "t1", ".", "customer_address_id", "=", "t2", ".", "address_id", "where", "t2", ".", "city", "=", "value"], "question": "List first name and last name of customers lived in city Lockmanfurt.", "question_toks": ["List", "first", "name", "and", "last", "name", "of", "customers", "lived", "in", "city", "Lockmanfurt", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 19, false], null], [0, 1, false], null]], "table_units": [["table_unit", 3], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], "\"Lockmanfurt\"", null]]}}, {"db_id": "driving_school", "query": "SELECT T1.first_name ,  T1.last_name FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T2.city = \"Lockmanfurt\";", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", "FROM", "Customers", "AS", "T1", "JOIN", "Addresses", "AS", "T2", "ON", "T1.customer_address_id", "=", "T2.address_id", "WHERE", "T2.city", "=", "``", "Lockmanfurt", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", "from", "customers", "as", "t1", "join", "addresses", "as", "t2", "on", "t1", ".", "customer_address_id", "=", "t2", ".", "address_id", "where", "t2", ".", "city", "=", "value"], "question": "What are the first and last names of all customers who lived in Lockmanfurt?", "question_toks": ["What", "are", "the", "first", "and", "last", "names", "of", "all", "customers", "who", "lived", "in", "Lockmanfurt", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 19, false], null], [0, 1, false], null]], "table_units": [["table_unit", 3], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 3, false], null], "\"Lockmanfurt\"", null]]}}, {"db_id": "driving_school", "query": "SELECT T2.first_name ,  T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2;", "query_toks": ["SELECT", "T2.first_name", ",", "T2.last_name", "FROM", "Customer_Payments", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id", "HAVING", "count", "(", "*", ")", ">", "2", ";"], "query_toks_no_value": ["select", "t2", ".", "first_name", ",", "t2", ".", "last_name", "from", "customer_payments", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id", "having", "count", "(", "*", ")", ">", "value"], "question": "List first name and last name of customers that have more than 2 payments.", "question_toks": ["List", "first", "name", "and", "last", "name", "of", "customers", "that", "have", "more", "than", "2", "payments", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 29, false], null], [0, 18, false], null]], "table_units": [["table_unit", 4], ["table_unit", 3]]}, "groupBy": [[0, 29, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": []}}, {"db_id": "driving_school", "query": "SELECT T2.first_name ,  T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2;", "query_toks": ["SELECT", "T2.first_name", ",", "T2.last_name", "FROM", "Customer_Payments", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T1.customer_id", "HAVING", "count", "(", "*", ")", ">", "2", ";"], "query_toks_no_value": ["select", "t2", ".", "first_name", ",", "t2", ".", "last_name", "from", "customer_payments", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_id", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the first and last names of all customers with more than 2 payments?", "question_toks": ["What", "are", "the", "first", "and", "last", "names", "of", "all", "customers", "with", "more", "than", "2", "payments", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 29, false], null], [0, 18, false], null]], "table_units": [["table_unit", 4], ["table_unit", 3]]}, "groupBy": [[0, 29, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "union": null, "where": []}}, {"db_id": "driving_school", "query": "SELECT payment_method_code ,  count(*) FROM Customer_Payments GROUP BY payment_method_code;", "query_toks": ["SELECT", "payment_method_code", ",", "count", "(", "*", ")", "FROM", "Customer_Payments", "GROUP", "BY", "payment_method_code", ";"], "query_toks_no_value": ["select", "payment_method_code", ",", "count", "(", "*", ")", "from", "customer_payments", "group", "by", "payment_method_code"], "question": "List all payment methods and number of payments using each payment methods.", "question_toks": ["List", "all", "payment", "methods", "and", "number", "of", "payments", "using", "each", "payment", "methods", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 31, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 31, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "driving_school", "query": "SELECT payment_method_code ,  count(*) FROM Customer_Payments GROUP BY payment_method_code;", "query_toks": ["SELECT", "payment_method_code", ",", "count", "(", "*", ")", "FROM", "Customer_Payments", "GROUP", "BY", "payment_method_code", ";"], "query_toks_no_value": ["select", "payment_method_code", ",", "count", "(", "*", ")", "from", "customer_payments", "group", "by", "payment_method_code"], "question": "For each payment method, how many payments were made?", "question_toks": ["For", "each", "payment", "method", ",", "how", "many", "payments", "were", "made", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 31, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 31, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "driving_school", "query": "SELECT T1.vehicle_id ,  T1.vehicle_details FROM Vehicles AS T1 JOIN Lessons AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T1.vehicle_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.vehicle_id", ",", "T1.vehicle_details", "FROM", "Vehicles", "AS", "T1", "JOIN", "Lessons", "AS", "T2", "ON", "T1.vehicle_id", "=", "T2.vehicle_id", "GROUP", "BY", "T1.vehicle_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "vehicle_id", ",", "t1", ".", "vehicle_details", "from", "vehicles", "as", "t1", "join", "lessons", "as", "t2", "on", "t1", ".", "vehicle_id", "=", "t2", ".", "vehicle_id", "group", "by", "t1", ".", "vehicle_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the id and detail of the vehicle used in lessons for most of the times?", "question_toks": ["What", "is", "the", "id", "and", "detail", "of", "the", "vehicle", "used", "in", "lessons", "for", "most", "of", "the", "times", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 16, false], null], [0, 37, false], null]], "table_units": [["table_unit", 2], ["table_unit", 5]]}, "groupBy": [[0, 16, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]]]], "union": null, "where": []}}, {"db_id": "activity_1", "query": "SELECT rank ,  Fname ,  Lname FROM Faculty", "query_toks": ["SELECT", "rank", ",", "Fname", ",", "Lname", "FROM", "Faculty"], "query_toks_no_value": ["select", "rank", ",", "fname", ",", "lname", "from", "faculty"], "question": "Show the rank, first name, and last name for all the faculty.", "question_toks": ["Show", "the", "rank", ",", "first", "name", ",", "and", "last", "name", "for", "all", "the", "faculty", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 17, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": []}}, {"db_id": "activity_1", "query": "SELECT rank ,  Fname ,  Lname FROM Faculty", "query_toks": ["SELECT", "rank", ",", "Fname", ",", "Lname", "FROM", "Faculty"], "query_toks_no_value": ["select", "rank", ",", "fname", ",", "lname", "from", "faculty"], "question": "What are the rank, first name, and last name of the faculty members?", "question_toks": ["What", "are", "the", "rank", ",", "first", "name", ",", "and", "last", "name", "of", "the", "faculty", "members", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 17, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": []}}, {"db_id": "activity_1", "query": "SELECT Fname ,  Lname ,  phone FROM Faculty WHERE Sex  =  'F'", "query_toks": ["SELECT", "Fname", ",", "Lname", ",", "phone", "FROM", "Faculty", "WHERE", "Sex", "=", "'F", "'"], "query_toks_no_value": ["select", "fname", ",", "lname", ",", "phone", "from", "faculty", "where", "sex", "=", "value"], "question": "Show the first name, last name, and phone number for all female faculty members.", "question_toks": ["Show", "the", "first", "name", ",", "last", "name", ",", "and", "phone", "number", "for", "all", "female", "faculty", "members", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 20, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 19, false], null], "\"F\"", null]]}}, {"db_id": "activity_1", "query": "SELECT Fname ,  Lname ,  phone FROM Faculty WHERE Sex  =  'F'", "query_toks": ["SELECT", "Fname", ",", "Lname", ",", "phone", "FROM", "Faculty", "WHERE", "Sex", "=", "'F", "'"], "query_toks_no_value": ["select", "fname", ",", "lname", ",", "phone", "from", "faculty", "where", "sex", "=", "value"], "question": "What are the first name, last name, and phone number of all the female faculty members?", "question_toks": ["What", "are", "the", "first", "name", ",", "last", "name", ",", "and", "phone", "number", "of", "all", "the", "female", "faculty", "members", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 20, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 19, false], null], "\"F\"", null]]}}, {"db_id": "activity_1", "query": "SELECT phone ,  room ,  building FROM Faculty WHERE Fname  =  \"Jerry\" AND Lname  =  \"Prince\"", "query_toks": ["SELECT", "phone", ",", "room", ",", "building", "FROM", "Faculty", "WHERE", "Fname", "=", "``", "Jerry", "''", "AND", "Lname", "=", "``", "Prince", "''"], "query_toks_no_value": ["select", "phone", ",", "room", ",", "building", "from", "faculty", "where", "fname", "=", "value", "and", "lname", "=", "value"], "question": "Show the phone, room, and building for the faculty named Jerry Prince.", "question_toks": ["Show", "the", "phone", ",", "room", ",", "and", "building", "for", "the", "faculty", "named", "Jerry", "Prince", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 21, false], null]], [0, [0, [0, 22, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 17, false], null], "\"Jerry\"", null], "and", [false, 2, [0, [0, 16, false], null], "\"Prince\"", null]]}}, {"db_id": "activity_1", "query": "SELECT phone ,  room ,  building FROM Faculty WHERE Fname  =  \"Jerry\" AND Lname  =  \"Prince\"", "query_toks": ["SELECT", "phone", ",", "room", ",", "building", "FROM", "Faculty", "WHERE", "Fname", "=", "``", "Jerry", "''", "AND", "Lname", "=", "``", "Prince", "''"], "query_toks_no_value": ["select", "phone", ",", "room", ",", "building", "from", "faculty", "where", "fname", "=", "value", "and", "lname", "=", "value"], "question": "What are the phone, room, and building of the faculty member called Jerry Prince?", "question_toks": ["What", "are", "the", "phone", ",", "room", ",", "and", "building", "of", "the", "faculty", "member", "called", "Jerry", "Prince", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 21, false], null]], [0, [0, [0, 22, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 17, false], null], "\"Jerry\"", null], "and", [false, 2, [0, [0, 16, false], null], "\"Prince\"", null]]}}, {"db_id": "activity_1", "query": "SELECT fname ,  lname FROM Faculty WHERE Rank  =  \"Instructor\"", "query_toks": ["SELECT", "fname", ",", "lname", "FROM", "Faculty", "WHERE", "Rank", "=", "``", "Instructor", "''"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "faculty", "where", "rank", "=", "value"], "question": "Show the first name and last name for all the instructors.", "question_toks": ["Show", "the", "first", "name", "and", "last", "name", "for", "all", "the", "instructors", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 18, false], null], "\"Instructor\"", null]]}}, {"db_id": "activity_1", "query": "SELECT fname ,  lname FROM Faculty WHERE Rank  =  \"Instructor\"", "query_toks": ["SELECT", "fname", ",", "lname", "FROM", "Faculty", "WHERE", "Rank", "=", "``", "Instructor", "''"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "faculty", "where", "rank", "=", "value"], "question": "What are the first name and last name of all the instructors?", "question_toks": ["What", "are", "the", "first", "name", "and", "last", "name", "of", "all", "the", "instructors", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 18, false], null], "\"Instructor\"", null]]}}, {"db_id": "activity_1", "query": "SELECT building ,  count(*) FROM Faculty GROUP BY building", "query_toks": ["SELECT", "building", ",", "count", "(", "*", ")", "FROM", "Faculty", "GROUP", "BY", "building"], "query_toks_no_value": ["select", "building", ",", "count", "(", "*", ")", "from", "faculty", "group", "by", "building"], "question": "Show all the buildings along with the number of faculty members the buildings have.", "question_toks": ["Show", "all", "the", "buildings", "along", "with", "the", "number", "of", "faculty", "members", "the", "buildings", "have", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 22, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 22, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "activity_1", "query": "SELECT building ,  count(*) FROM Faculty GROUP BY building", "query_toks": ["SELECT", "building", ",", "count", "(", "*", ")", "FROM", "Faculty", "GROUP", "BY", "building"], "query_toks_no_value": ["select", "building", ",", "count", "(", "*", ")", "from", "faculty", "group", "by", "building"], "question": "How many faculty members does each building have? List the result with the name of the building.", "question_toks": ["How", "many", "faculty", "members", "does", "each", "building", "have", "?", "List", "the", "result", "with", "the", "name", "of", "the", "building", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 22, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 22, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "activity_1", "query": "SELECT rank ,  count(*) FROM Faculty GROUP BY rank", "query_toks": ["SELECT", "rank", ",", "count", "(", "*", ")", "FROM", "Faculty", "GROUP", "BY", "rank"], "query_toks_no_value": ["select", "rank", ",", "count", "(", "*", ")", "from", "faculty", "group", "by", "rank"], "question": "For each faculty rank, show the number of faculty members who have it.", "question_toks": ["For", "each", "faculty", "rank", ",", "show", "the", "number", "of", "faculty", "members", "who", "have", "it", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 18, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 18, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "activity_1", "query": "SELECT rank ,  count(*) FROM Faculty GROUP BY rank", "query_toks": ["SELECT", "rank", ",", "count", "(", "*", ")", "FROM", "Faculty", "GROUP", "BY", "rank"], "query_toks_no_value": ["select", "rank", ",", "count", "(", "*", ")", "from", "faculty", "group", "by", "rank"], "question": "How many faculty members do we have for each faculty rank?", "question_toks": ["How", "many", "faculty", "members", "do", "we", "have", "for", "each", "faculty", "rank", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 18, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 18, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "activity_1", "query": "SELECT rank ,  sex ,  count(*) FROM Faculty GROUP BY rank ,  sex", "query_toks": ["SELECT", "rank", ",", "sex", ",", "count", "(", "*", ")", "FROM", "Faculty", "GROUP", "BY", "rank", ",", "sex"], "query_toks_no_value": ["select", "rank", ",", "sex", ",", "count", "(", "*", ")", "from", "faculty", "group", "by", "rank", ",", "sex"], "question": "Show all the ranks and the number of male and female faculty for each rank.", "question_toks": ["Show", "all", "the", "ranks", "and", "the", "number", "of", "male", "and", "female", "faculty", "for", "each", "rank", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 18, false], [0, 19, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 19, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "activity_1", "query": "SELECT rank ,  sex ,  count(*) FROM Faculty GROUP BY rank ,  sex", "query_toks": ["SELECT", "rank", ",", "sex", ",", "count", "(", "*", ")", "FROM", "Faculty", "GROUP", "BY", "rank", ",", "sex"], "query_toks_no_value": ["select", "rank", ",", "sex", ",", "count", "(", "*", ")", "from", "faculty", "group", "by", "rank", ",", "sex"], "question": "How many faculty members do we have for each rank and gender?", "question_toks": ["How", "many", "faculty", "members", "do", "we", "have", "for", "each", "rank", "and", "gender", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 18, false], [0, 19, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 19, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "activity_1", "query": "SELECT sex ,  count(*) FROM Faculty WHERE rank  =  \"AsstProf\" GROUP BY sex", "query_toks": ["SELECT", "sex", ",", "count", "(", "*", ")", "FROM", "Faculty", "WHERE", "rank", "=", "``", "AsstProf", "''", "GROUP", "BY", "sex"], "query_toks_no_value": ["select", "sex", ",", "count", "(", "*", ")", "from", "faculty", "where", "rank", "=", "value", "group", "by", "sex"], "question": "Show the number of male and female assistant professors.", "question_toks": ["Show", "the", "number", "of", "male", "and", "female", "assistant", "professors", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 18, false], null], "\"AsstProf\"", null]]}}, {"db_id": "activity_1", "query": "SELECT sex ,  count(*) FROM Faculty WHERE rank  =  \"AsstProf\" GROUP BY sex", "query_toks": ["SELECT", "sex", ",", "count", "(", "*", ")", "FROM", "Faculty", "WHERE", "rank", "=", "``", "AsstProf", "''", "GROUP", "BY", "sex"], "query_toks_no_value": ["select", "sex", ",", "count", "(", "*", ")", "from", "faculty", "where", "rank", "=", "value", "group", "by", "sex"], "question": "How many male and female assistant professors do we have?", "question_toks": ["How", "many", "male", "and", "female", "assistant", "professors", "do", "we", "have", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 4]]}, "groupBy": [[0, 19, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 19, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 18, false], null], "\"AsstProf\"", null]]}}, {"db_id": "activity_1", "query": "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T2.fname  =  \"Linda\" AND T2.lname  =  \"Smith\"", "query_toks": ["SELECT", "T1.fname", ",", "T1.lname", "FROM", "Faculty", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.FacID", "=", "T2.advisor", "WHERE", "T2.fname", "=", "``", "Linda", "''", "AND", "T2.lname", "=", "``", "Smith", "''"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "faculty", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "facid", "=", "t2", ".", "advisor", "where", "t2", ".", "fname", "=", "value", "and", "t2", ".", "lname", "=", "value"], "question": "What are the first name and last name of Linda Smith's advisor?", "question_toks": ["What", "are", "the", "first", "name", "and", "last", "name", "of", "Linda", "Smith", "'s", "advisor", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 13, false], null]], "table_units": [["table_unit", 4], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], "\"Linda\"", null], "and", [false, 2, [0, [0, 8, false], null], "\"Smith\"", null]]}}, {"db_id": "activity_1", "query": "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T2.fname  =  \"Linda\" AND T2.lname  =  \"Smith\"", "query_toks": ["SELECT", "T1.fname", ",", "T1.lname", "FROM", "Faculty", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.FacID", "=", "T2.advisor", "WHERE", "T2.fname", "=", "``", "Linda", "''", "AND", "T2.lname", "=", "``", "Smith", "''"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "faculty", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "facid", "=", "t2", ".", "advisor", "where", "t2", ".", "fname", "=", "value", "and", "t2", ".", "lname", "=", "value"], "question": "Who is the advisor of Linda Smith? Give me the first name and last name.", "question_toks": ["Who", "is", "the", "advisor", "of", "Linda", "Smith", "?", "Give", "me", "the", "first", "name", "and", "last", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 13, false], null]], "table_units": [["table_unit", 4], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 9, false], null], "\"Linda\"", null], "and", [false, 2, [0, [0, 8, false], null], "\"Smith\"", null]]}}, {"db_id": "activity_1", "query": "SELECT T2.fname ,  T2.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.fname  =  \"Michael\" AND T1.lname  =  \"Goodrich\"", "query_toks": ["SELECT", "T2.fname", ",", "T2.lname", "FROM", "Faculty", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.FacID", "=", "T2.advisor", "WHERE", "T1.fname", "=", "``", "Michael", "''", "AND", "T1.lname", "=", "``", "Goodrich", "''"], "query_toks_no_value": ["select", "t2", ".", "fname", ",", "t2", ".", "lname", "from", "faculty", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "facid", "=", "t2", ".", "advisor", "where", "t1", ".", "fname", "=", "value", "and", "t1", ".", "lname", "=", "value"], "question": "Show first name and last name for all the students advised by Michael Goodrich.", "question_toks": ["Show", "first", "name", "and", "last", "name", "for", "all", "the", "students", "advised", "by", "Michael", "Goodrich", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 13, false], null]], "table_units": [["table_unit", 4], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 17, false], null], "\"Michael\"", null], "and", [false, 2, [0, [0, 16, false], null], "\"Goodrich\"", null]]}}, {"db_id": "activity_1", "query": "SELECT T2.fname ,  T2.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.fname  =  \"Michael\" AND T1.lname  =  \"Goodrich\"", "query_toks": ["SELECT", "T2.fname", ",", "T2.lname", "FROM", "Faculty", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.FacID", "=", "T2.advisor", "WHERE", "T1.fname", "=", "``", "Michael", "''", "AND", "T1.lname", "=", "``", "Goodrich", "''"], "query_toks_no_value": ["select", "t2", ".", "fname", ",", "t2", ".", "lname", "from", "faculty", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "facid", "=", "t2", ".", "advisor", "where", "t1", ".", "fname", "=", "value", "and", "t1", ".", "lname", "=", "value"], "question": "Which students are advised by Michael Goodrich? Give me their first and last names.", "question_toks": ["Which", "students", "are", "advised", "by", "Michael", "Goodrich", "?", "Give", "me", "their", "first", "and", "last", "names", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 13, false], null]], "table_units": [["table_unit", 4], ["table_unit", 3]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 17, false], null], "\"Michael\"", null], "and", [false, 2, [0, [0, 16, false], null], "\"Goodrich\"", null]]}}, {"db_id": "activity_1", "query": "SELECT T1.FacID ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID", "query_toks": ["SELECT", "T1.FacID", ",", "count", "(", "*", ")", "FROM", "Faculty", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.FacID", "=", "T2.advisor", "GROUP", "BY", "T1.FacID"], "query_toks_no_value": ["select", "t1", ".", "facid", ",", "count", "(", "*", ")", "from", "faculty", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "facid", "=", "t2", ".", "advisor", "group", "by", "t1", ".", "facid"], "question": "Show the faculty id of each faculty member, along with the number of students he or she advises.", "question_toks": ["Show", "the", "faculty", "id", "of", "each", "faculty", "member", ",", "along", "with", "the", "number", "of", "students", "he", "or", "she", "advises", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 13, false], null]], "table_units": [["table_unit", 4], ["table_unit", 3]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "activity_1", "query": "SELECT T1.FacID ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID", "query_toks": ["SELECT", "T1.FacID", ",", "count", "(", "*", ")", "FROM", "Faculty", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.FacID", "=", "T2.advisor", "GROUP", "BY", "T1.FacID"], "query_toks_no_value": ["select", "t1", ".", "facid", ",", "count", "(", "*", ")", "from", "faculty", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "facid", "=", "t2", ".", "advisor", "group", "by", "t1", ".", "facid"], "question": "What are the faculty id and the number of students each faculty has?", "question_toks": ["What", "are", "the", "faculty", "id", "and", "the", "number", "of", "students", "each", "faculty", "has", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 13, false], null]], "table_units": [["table_unit", 4], ["table_unit", 3]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 15, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "activity_1", "query": "SELECT T1.rank ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.rank", "query_toks": ["SELECT", "T1.rank", ",", "count", "(", "*", ")", "FROM", "Faculty", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.FacID", "=", "T2.advisor", "GROUP", "BY", "T1.rank"], "query_toks_no_value": ["select", "t1", ".", "rank", ",", "count", "(", "*", ")", "from", "faculty", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "facid", "=", "t2", ".", "advisor", "group", "by", "t1", ".", "rank"], "question": "Show all the faculty ranks and the number of students advised by each rank.", "question_toks": ["Show", "all", "the", "faculty", "ranks", "and", "the", "number", "of", "students", "advised", "by", "each", "rank", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 13, false], null]], "table_units": [["table_unit", 4], ["table_unit", 3]]}, "groupBy": [[0, 18, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 18, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "activity_1", "query": "SELECT T1.rank ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.rank", "query_toks": ["SELECT", "T1.rank", ",", "count", "(", "*", ")", "FROM", "Faculty", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.FacID", "=", "T2.advisor", "GROUP", "BY", "T1.rank"], "query_toks_no_value": ["select", "t1", ".", "rank", ",", "count", "(", "*", ")", "from", "faculty", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "facid", "=", "t2", ".", "advisor", "group", "by", "t1", ".", "rank"], "question": "How many students are advised by each rank of faculty? List the rank and the number of students.", "question_toks": ["How", "many", "students", "are", "advised", "by", "each", "rank", "of", "faculty", "?", "List", "the", "rank", "and", "the", "number", "of", "students", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 13, false], null]], "table_units": [["table_unit", 4], ["table_unit", 3]]}, "groupBy": [[0, 18, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 18, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "activity_1", "query": "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.fname", ",", "T1.lname", "FROM", "Faculty", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.FacID", "=", "T2.advisor", "GROUP", "BY", "T1.FacID", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "faculty", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "facid", "=", "t2", ".", "advisor", "group", "by", "t1", ".", "facid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What are the first and last name of the faculty who has the most students?", "question_toks": ["What", "are", "the", "first", "and", "last", "name", "of", "the", "faculty", "who", "has", "the", "most", "students", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 13, false], null]], "table_units": [["table_unit", 4], ["table_unit", 3]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": []}}, {"db_id": "activity_1", "query": "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.fname", ",", "T1.lname", "FROM", "Faculty", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.FacID", "=", "T2.advisor", "GROUP", "BY", "T1.FacID", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "faculty", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "facid", "=", "t2", ".", "advisor", "group", "by", "t1", ".", "facid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Give me the the first and last name of the faculty who advises the most students.", "question_toks": ["Give", "me", "the", "the", "first", "and", "last", "name", "of", "the", "faculty", "who", "advises", "the", "most", "students", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 13, false], null]], "table_units": [["table_unit", 4], ["table_unit", 3]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": []}}, {"db_id": "activity_1", "query": "SELECT  T1.fname ,  T1.lname ,  count(*) ,  T1.FacID FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID", "query_toks": ["SELECT", "T1.fname", ",", "T1.lname", ",", "count", "(", "*", ")", ",", "T1.FacID", "FROM", "Faculty", "AS", "T1", "JOIN", "Faculty_participates_in", "AS", "T2", "ON", "T1.facID", "=", "T2.facID", "GROUP", "BY", "T1.FacID"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "lname", ",", "count", "(", "*", ")", ",", "t1", ".", "facid", "from", "faculty", "as", "t1", "join", "faculty_participates_in", "as", "t2", "on", "t1", ".", "facid", "=", "t2", ".", "facid", "group", "by", "t1", ".", "facid"], "question": "Show the first and last name of all the faculty members who participated in some activity, together with the number of activities they participated in.", "question_toks": ["Show", "the", "first", "and", "last", "name", "of", "all", "the", "faculty", "members", "who", "participated", "in", "some", "activity", ",", "together", "with", "the", "number", "of", "activities", "they", "participated", "in", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 5, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 16, false], null]], [3, [0, [0, 0, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": []}}, {"db_id": "activity_1", "query": "SELECT  T1.fname ,  T1.lname ,  count(*) ,  T1.FacID FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID", "query_toks": ["SELECT", "T1.fname", ",", "T1.lname", ",", "count", "(", "*", ")", ",", "T1.FacID", "FROM", "Faculty", "AS", "T1", "JOIN", "Faculty_participates_in", "AS", "T2", "ON", "T1.facID", "=", "T2.facID", "GROUP", "BY", "T1.FacID"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "lname", ",", "count", "(", "*", ")", ",", "t1", ".", "facid", "from", "faculty", "as", "t1", "join", "faculty_participates_in", "as", "t2", "on", "t1", ".", "facid", "=", "t2", ".", "facid", "group", "by", "t1", ".", "facid"], "question": "What is the first and last name of the faculty members who participated in at least one activity? For each of them, also show the number of activities they participated in.", "question_toks": ["What", "is", "the", "first", "and", "last", "name", "of", "the", "faculty", "members", "who", "participated", "in", "at", "least", "one", "activity", "?", "For", "each", "of", "them", ",", "also", "show", "the", "number", "of", "activities", "they", "participated", "in", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 5, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 16, false], null]], [3, [0, [0, 0, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": []}}, {"db_id": "activity_1", "query": "SELECT T1.activity_name ,  count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID", "query_toks": ["SELECT", "T1.activity_name", ",", "count", "(", "*", ")", "FROM", "Activity", "AS", "T1", "JOIN", "Faculty_participates_in", "AS", "T2", "ON", "T1.actID", "=", "T2.actID", "GROUP", "BY", "T1.actID"], "query_toks_no_value": ["select", "t1", ".", "activity_name", ",", "count", "(", "*", ")", "from", "activity", "as", "t1", "join", "faculty_participates_in", "as", "t2", "on", "t1", ".", "actid", "=", "t2", ".", "actid", "group", "by", "t1", ".", "actid"], "question": "Show all the activity names and the number of faculty involved in each activity.", "question_toks": ["Show", "all", "the", "activity", "names", "and", "the", "number", "of", "faculty", "involved", "in", "each", "activity", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "activity_1", "query": "SELECT T1.activity_name ,  count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID", "query_toks": ["SELECT", "T1.activity_name", ",", "count", "(", "*", ")", "FROM", "Activity", "AS", "T1", "JOIN", "Faculty_participates_in", "AS", "T2", "ON", "T1.actID", "=", "T2.actID", "GROUP", "BY", "T1.actID"], "query_toks_no_value": ["select", "t1", ".", "activity_name", ",", "count", "(", "*", ")", "from", "activity", "as", "t1", "join", "faculty_participates_in", "as", "t2", "on", "t1", ".", "actid", "=", "t2", ".", "actid", "group", "by", "t1", ".", "actid"], "question": "How many faculty members participate in each activity? Return the activity names and the number of faculty members.", "question_toks": ["How", "many", "faculty", "members", "participate", "in", "each", "activity", "?", "Return", "the", "activity", "names", "and", "the", "number", "of", "faculty", "members", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "activity_1", "query": "SELECT  T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.fname", ",", "T1.lname", "FROM", "Faculty", "AS", "T1", "JOIN", "Faculty_participates_in", "AS", "T2", "ON", "T1.facID", "=", "T2.facID", "GROUP", "BY", "T1.FacID", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "faculty", "as", "t1", "join", "faculty_participates_in", "as", "t2", "on", "t1", ".", "facid", "=", "t2", ".", "facid", "group", "by", "t1", ".", "facid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the first and last name of the faculty participating in the most activities?", "question_toks": ["What", "is", "the", "first", "and", "last", "name", "of", "the", "faculty", "participating", "in", "the", "most", "activities", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 5, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": []}}, {"db_id": "activity_1", "query": "SELECT  T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.fname", ",", "T1.lname", "FROM", "Faculty", "AS", "T1", "JOIN", "Faculty_participates_in", "AS", "T2", "ON", "T1.facID", "=", "T2.facID", "GROUP", "BY", "T1.FacID", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "faculty", "as", "t1", "join", "faculty_participates_in", "as", "t2", "on", "t1", ".", "facid", "=", "t2", ".", "facid", "group", "by", "t1", ".", "facid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the first and last name of the faculty who is involved in the largest number of activities.", "question_toks": ["Find", "the", "first", "and", "last", "name", "of", "the", "faculty", "who", "is", "involved", "in", "the", "largest", "number", "of", "activities", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 15, false], null], [0, 5, false], null]], "table_units": [["table_unit", 4], ["table_unit", 2]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": []}}, {"db_id": "activity_1", "query": "SELECT T1.fname ,  T1.lname FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.fname", ",", "T1.lname", "FROM", "Student", "AS", "T1", "JOIN", "Participates_in", "AS", "T2", "ON", "T1.StuID", "=", "T2.StuID", "GROUP", "BY", "T1.StuID", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "student", "as", "t1", "join", "participates_in", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "group", "by", "t1", ".", "stuid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the first and last name of the student participating in the most activities?", "question_toks": ["What", "is", "the", "first", "and", "last", "name", "of", "the", "student", "participating", "in", "the", "most", "activities", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 3, false], null]], "table_units": [["table_unit", 3], ["table_unit", 1]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "activity_1", "query": "SELECT T1.fname ,  T1.lname FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.fname", ",", "T1.lname", "FROM", "Student", "AS", "T1", "JOIN", "Participates_in", "AS", "T2", "ON", "T1.StuID", "=", "T2.StuID", "GROUP", "BY", "T1.StuID", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "student", "as", "t1", "join", "participates_in", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "group", "by", "t1", ".", "stuid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Tell me the first and last name of the student who has the most activities.", "question_toks": ["Tell", "me", "the", "first", "and", "last", "name", "of", "the", "student", "who", "has", "the", "most", "activities", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 3, false], null]], "table_units": [["table_unit", 3], ["table_unit", 1]]}, "groupBy": [[0, 7, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_4", "query": "SELECT name ,  city ,  country ,  elevation FROM airports WHERE city  =  'New York'", "query_toks": ["SELECT", "name", ",", "city", ",", "country", ",", "elevation", "FROM", "airports", "WHERE", "city", "=", "'New", "York", "'"], "query_toks_no_value": ["select", "name", ",", "city", ",", "country", ",", "elevation", "from", "airports", "where", "city", "=", "value"], "question": "Find the name, city, country, and altitude (or elevation) of the airports in the city of New York.", "question_toks": ["Find", "the", "name", ",", "city", ",", "country", ",", "and", "altitude", "(", "or", "elevation", ")", "of", "the", "airports", "in", "the", "city", "of", "New", "York", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"New York\"", null]]}}, {"db_id": "flight_4", "query": "SELECT name ,  city ,  country ,  elevation FROM airports WHERE city  =  'New York'", "query_toks": ["SELECT", "name", ",", "city", ",", "country", ",", "elevation", "FROM", "airports", "WHERE", "city", "=", "'New", "York", "'"], "query_toks_no_value": ["select", "name", ",", "city", ",", "country", ",", "elevation", "from", "airports", "where", "city", "=", "value"], "question": "What is the name, city, country, and elevation for every airport in the city of New York?", "question_toks": ["What", "is", "the", "name", ",", "city", ",", "country", ",", "and", "elevation", "for", "every", "airport", "in", "the", "city", "of", "New", "York", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 15, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 11, false], null], "\"New York\"", null]]}}, {"db_id": "flight_4", "query": "SELECT name ,  city ,  country FROM airports ORDER BY elevation LIMIT 1", "query_toks": ["SELECT", "name", ",", "city", ",", "country", "FROM", "airports", "ORDER", "BY", "elevation", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "city", ",", "country", "from", "airports", "order", "by", "elevation", "limit", "value"], "question": "Find the name, city, and country of the airport that has the lowest altitude.", "question_toks": ["Find", "the", "name", ",", "city", ",", "and", "country", "of", "the", "airport", "that", "has", "the", "lowest", "altitude", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 15, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_4", "query": "SELECT name ,  city ,  country FROM airports ORDER BY elevation LIMIT 1", "query_toks": ["SELECT", "name", ",", "city", ",", "country", "FROM", "airports", "ORDER", "BY", "elevation", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "city", ",", "country", "from", "airports", "order", "by", "elevation", "limit", "value"], "question": "What is the name, city, and country of the airport with the lowest altitude?", "question_toks": ["What", "is", "the", "name", ",", "city", ",", "and", "country", "of", "the", "airport", "with", "the", "lowest", "altitude", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 15, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_4", "query": "SELECT name ,  city ,  country FROM airports ORDER BY elevation DESC LIMIT 1", "query_toks": ["SELECT", "name", ",", "city", ",", "country", "FROM", "airports", "ORDER", "BY", "elevation", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "city", ",", "country", "from", "airports", "order", "by", "elevation", "desc", "limit", "value"], "question": "Find the name, city, and country of the airport that has the highest latitude.", "question_toks": ["Find", "the", "name", ",", "city", ",", "and", "country", "of", "the", "airport", "that", "has", "the", "highest", "latitude", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 15, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_4", "query": "SELECT name ,  city ,  country FROM airports ORDER BY elevation DESC LIMIT 1", "query_toks": ["SELECT", "name", ",", "city", ",", "country", "FROM", "airports", "ORDER", "BY", "elevation", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "city", ",", "country", "from", "airports", "order", "by", "elevation", "desc", "limit", "value"], "question": "What is the name, city, and country of the airport with the highest elevation?", "question_toks": ["What", "is", "the", "name", ",", "city", ",", "and", "country", "of", "the", "airport", "with", "the", "highest", "elevation", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 15, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_4", "query": "SELECT T1.name ,  T1.city ,  T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid GROUP BY T2.dst_apid ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", ",", "T1.city", ",", "T2.dst_apid", "FROM", "airports", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.apid", "=", "T2.dst_apid", "GROUP", "BY", "T2.dst_apid", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "city", ",", "t2", ".", "dst_apid", "from", "airports", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "apid", "=", "t2", ".", "dst_apid", "group", "by", "t2", ".", "dst_apid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the name and city of the airport which is the destination of the most number of routes.", "question_toks": ["Find", "the", "name", "and", "city", "of", "the", "airport", "which", "is", "the", "destination", "of", "the", "most", "number", "of", "routes", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 2, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_4", "query": "SELECT T1.name ,  T1.city ,  T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid GROUP BY T2.dst_apid ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", ",", "T1.city", ",", "T2.dst_apid", "FROM", "airports", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.apid", "=", "T2.dst_apid", "GROUP", "BY", "T2.dst_apid", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "city", ",", "t2", ".", "dst_apid", "from", "airports", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "apid", "=", "t2", ".", "dst_apid", "group", "by", "t2", ".", "dst_apid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name and city of the airport that the most routes end at?", "question_toks": ["What", "is", "the", "name", "and", "city", "of", "the", "airport", "that", "the", "most", "routes", "end", "at", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 2, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 2, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_4", "query": "SELECT T1.name ,  T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T2.alid ORDER BY count(*) DESC LIMIT 10", "query_toks": ["SELECT", "T1.name", ",", "T2.alid", "FROM", "airlines", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.alid", "=", "T2.alid", "GROUP", "BY", "T2.alid", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "10"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "alid", "from", "airlines", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "alid", "=", "t2", ".", "alid", "group", "by", "t2", ".", "alid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the names of the top 10 airlines that operate the most number of routes.", "question_toks": ["Find", "the", "names", "of", "the", "top", "10", "airlines", "that", "operate", "the", "most", "number", "of", "routes", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": 10, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_4", "query": "SELECT T1.name ,  T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T2.alid ORDER BY count(*) DESC LIMIT 10", "query_toks": ["SELECT", "T1.name", ",", "T2.alid", "FROM", "airlines", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.alid", "=", "T2.alid", "GROUP", "BY", "T2.alid", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "10"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "alid", "from", "airlines", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "alid", "=", "t2", ".", "alid", "group", "by", "t2", ".", "alid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "For the airline ids with the top 10 most routes operated, what are their names?", "question_toks": ["For", "the", "airline", "ids", "with", "the", "top", "10", "most", "routes", "operated", ",", "what", "are", "their", "names", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": 10, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 6, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_4", "query": "SELECT T1.name ,  T1.city ,  T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T2.src_apid ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", ",", "T1.city", ",", "T2.src_apid", "FROM", "airports", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.apid", "=", "T2.src_apid", "GROUP", "BY", "T2.src_apid", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "city", ",", "t2", ".", "src_apid", "from", "airports", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "apid", "=", "t2", ".", "src_apid", "group", "by", "t2", ".", "src_apid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the name and city of the airport which is the source for the most number of flight routes.", "question_toks": ["Find", "the", "name", "and", "city", "of", "the", "airport", "which", "is", "the", "source", "for", "the", "most", "number", "of", "flight", "routes", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 4, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_4", "query": "SELECT T1.name ,  T1.city ,  T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T2.src_apid ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", ",", "T1.city", ",", "T2.src_apid", "FROM", "airports", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.apid", "=", "T2.src_apid", "GROUP", "BY", "T2.src_apid", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "city", ",", "t2", ".", "src_apid", "from", "airports", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "apid", "=", "t2", ".", "src_apid", "group", "by", "t2", ".", "src_apid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name and city of the airport from most of the routes start?", "question_toks": ["What", "is", "the", "name", "and", "city", "of", "the", "airport", "from", "most", "of", "the", "routes", "start", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 4, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 4, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_4", "query": "SELECT country ,  count(*) FROM airlines GROUP BY country ORDER BY count(*) DESC", "query_toks": ["SELECT", "country", ",", "count", "(", "*", ")", "FROM", "airlines", "GROUP", "BY", "country", "ORDER", "BY", "count", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "country", ",", "count", "(", "*", ")", "from", "airlines", "group", "by", "country", "order", "by", "count", "(", "*", ")", "desc"], "question": "List all countries and their number of airlines in the descending order of number of airlines.", "question_toks": ["List", "all", "countries", "and", "their", "number", "of", "airlines", "in", "the", "descending", "order", "of", "number", "of", "airlines", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 23, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 23, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_4", "query": "SELECT country ,  count(*) FROM airlines GROUP BY country ORDER BY count(*) DESC", "query_toks": ["SELECT", "country", ",", "count", "(", "*", ")", "FROM", "airlines", "GROUP", "BY", "country", "ORDER", "BY", "count", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "country", ",", "count", "(", "*", ")", "from", "airlines", "group", "by", "country", "order", "by", "count", "(", "*", ")", "desc"], "question": "How many airlines operate out of each country in descending order?", "question_toks": ["How", "many", "airlines", "operate", "out", "of", "each", "country", "in", "descending", "order", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 23, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 23, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_4", "query": "SELECT count(*) ,  country FROM airports GROUP BY country ORDER BY count(*) DESC", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "country", "FROM", "airports", "GROUP", "BY", "country", "ORDER", "BY", "count", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "country", "from", "airports", "group", "by", "country", "order", "by", "count", "(", "*", ")", "desc"], "question": "How many airports are there per country? Order the countries by decreasing number of airports.", "question_toks": ["How", "many", "airports", "are", "there", "per", "country", "?", "Order", "the", "countries", "by", "decreasing", "number", "of", "airports", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_4", "query": "SELECT count(*) ,  country FROM airports GROUP BY country ORDER BY count(*) DESC", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "country", "FROM", "airports", "GROUP", "BY", "country", "ORDER", "BY", "count", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "country", "from", "airports", "group", "by", "country", "order", "by", "count", "(", "*", ")", "desc"], "question": "What is the number of airports per country, ordered from most to least?", "question_toks": ["What", "is", "the", "number", "of", "airports", "per", "country", ",", "ordered", "from", "most", "to", "least", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_4", "query": "SELECT count(*) ,  city FROM airports WHERE country  =  'United States' GROUP BY city ORDER BY count(*) DESC", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "city", "FROM", "airports", "WHERE", "country", "=", "'United", "States", "'", "GROUP", "BY", "city", "ORDER", "BY", "count", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "city", "from", "airports", "where", "country", "=", "value", "group", "by", "city", "order", "by", "count", "(", "*", ")", "desc"], "question": "How many airports are there per city in the United States? Order the cities by decreasing number of airports.", "question_toks": ["How", "many", "airports", "are", "there", "per", "city", "in", "the", "United", "States", "?", "Order", "the", "cities", "by", "decreasing", "number", "of", "airports", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 11, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"United States\"", null]]}}, {"db_id": "flight_4", "query": "SELECT count(*) ,  city FROM airports WHERE country  =  'United States' GROUP BY city ORDER BY count(*) DESC", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "city", "FROM", "airports", "WHERE", "country", "=", "'United", "States", "'", "GROUP", "BY", "city", "ORDER", "BY", "count", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "city", "from", "airports", "where", "country", "=", "value", "group", "by", "city", "order", "by", "count", "(", "*", ")", "desc"], "question": "How many airports are there per city in the US ordered from most to least?", "question_toks": ["How", "many", "airports", "are", "there", "per", "city", "in", "the", "US", "ordered", "from", "most", "to", "least", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 11, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 12, false], null], "\"United States\"", null]]}}, {"db_id": "flight_4", "query": "SELECT city ,  count(*) FROM airports GROUP BY city HAVING count(*)  >  1", "query_toks": ["SELECT", "city", ",", "count", "(", "*", ")", "FROM", "airports", "GROUP", "BY", "city", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "city", ",", "count", "(", "*", ")", "from", "airports", "group", "by", "city", "having", "count", "(", "*", ")", ">", "value"], "question": "List the cities which have more than one airport and number of airports.", "question_toks": ["List", "the", "cities", "which", "have", "more", "than", "one", "airport", "and", "number", "of", "airports", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 11, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_4", "query": "SELECT city ,  count(*) FROM airports GROUP BY city HAVING count(*)  >  1", "query_toks": ["SELECT", "city", ",", "count", "(", "*", ")", "FROM", "airports", "GROUP", "BY", "city", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "city", ",", "count", "(", "*", ")", "from", "airports", "group", "by", "city", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the names of all cities with more than one airport and how many airports do they have?", "question_toks": ["What", "are", "the", "names", "of", "all", "cities", "with", "more", "than", "one", "airport", "and", "how", "many", "airports", "do", "they", "have", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 11, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 11, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_4", "query": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.name", "FROM", "airports", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.apid", "=", "T2.src_apid", "GROUP", "BY", "T1.name"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "name", "from", "airports", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "apid", "=", "t2", ".", "src_apid", "group", "by", "t1", ".", "name"], "question": "Find the number of routes for each source airport and the airport name.", "question_toks": ["Find", "the", "number", "of", "routes", "for", "each", "source", "airport", "and", "the", "airport", "name", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 4, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_4", "query": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.name", "FROM", "airports", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.apid", "=", "T2.src_apid", "GROUP", "BY", "T1.name"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "name", "from", "airports", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "apid", "=", "t2", ".", "src_apid", "group", "by", "t1", ".", "name"], "question": "For each airport name, how many routes start at that airport?", "question_toks": ["For", "each", "airport", "name", ",", "how", "many", "routes", "start", "at", "that", "airport", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 4, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_4", "query": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name ORDER BY count(*) DESC", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.name", "FROM", "airports", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.apid", "=", "T2.src_apid", "GROUP", "BY", "T1.name", "ORDER", "BY", "count", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "name", "from", "airports", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "apid", "=", "t2", ".", "src_apid", "group", "by", "t1", ".", "name", "order", "by", "count", "(", "*", ")", "desc"], "question": "Find the number of routes and airport name for each source airport, order the results by decreasing number of routes.", "question_toks": ["Find", "the", "number", "of", "routes", "and", "airport", "name", "for", "each", "source", "airport", ",", "order", "the", "results", "by", "decreasing", "number", "of", "routes", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 4, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_4", "query": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name ORDER BY count(*) DESC", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.name", "FROM", "airports", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.apid", "=", "T2.src_apid", "GROUP", "BY", "T1.name", "ORDER", "BY", "count", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "name", "from", "airports", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "apid", "=", "t2", ".", "src_apid", "group", "by", "t1", ".", "name", "order", "by", "count", "(", "*", ")", "desc"], "question": "For each  airport name, how many routes start at that airport, ordered from most to least?", "question_toks": ["For", "each", "airport", "name", ",", "how", "many", "routes", "start", "at", "that", "airport", ",", "ordered", "from", "most", "to", "least", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 9, false], null], [0, 4, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [[0, 10, false]], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 10, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_4", "query": "SELECT avg(elevation) ,  country FROM airports GROUP BY country", "query_toks": ["SELECT", "avg", "(", "elevation", ")", ",", "country", "FROM", "airports", "GROUP", "BY", "country"], "query_toks_no_value": ["select", "avg", "(", "elevation", ")", ",", "country", "from", "airports", "group", "by", "country"], "question": "Find the average elevation of all airports for each country.", "question_toks": ["Find", "the", "average", "elevation", "of", "all", "airports", "for", "each", "country", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 15, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_4", "query": "SELECT avg(elevation) ,  country FROM airports GROUP BY country", "query_toks": ["SELECT", "avg", "(", "elevation", ")", ",", "country", "FROM", "airports", "GROUP", "BY", "country"], "query_toks_no_value": ["select", "avg", "(", "elevation", ")", ",", "country", "from", "airports", "group", "by", "country"], "question": "For each country, what is the average elevation of that country's airports?", "question_toks": ["For", "each", "country", ",", "what", "is", "the", "average", "elevation", "of", "that", "country", "'s", "airports", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 15, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_4", "query": "SELECT T1.country ,  T1.name ,  count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.country ,  T1.name", "query_toks": ["SELECT", "T1.country", ",", "T1.name", ",", "count", "(", "*", ")", "FROM", "airlines", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.alid", "=", "T2.alid", "GROUP", "BY", "T1.country", ",", "T1.name"], "query_toks_no_value": ["select", "t1", ".", "country", ",", "t1", ".", "name", ",", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "alid", "=", "t2", ".", "alid", "group", "by", "t1", ".", "country", ",", "t1", ".", "name"], "question": "For each country and airline name, how many routes are there?", "question_toks": ["For", "each", "country", "and", "airline", "name", ",", "how", "many", "routes", "are", "there", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 23, false], [0, 19, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 19, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "flight_4", "query": "SELECT T1.country ,  T1.name ,  count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.country ,  T1.name", "query_toks": ["SELECT", "T1.country", ",", "T1.name", ",", "count", "(", "*", ")", "FROM", "airlines", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.alid", "=", "T2.alid", "GROUP", "BY", "T1.country", ",", "T1.name"], "query_toks_no_value": ["select", "t1", ".", "country", ",", "t1", ".", "name", ",", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "alid", "=", "t2", ".", "alid", "group", "by", "t1", ".", "country", ",", "t1", ".", "name"], "question": "What is the total number of routes for each country and airline in that country?", "question_toks": ["What", "is", "the", "total", "number", "of", "routes", "for", "each", "country", "and", "airline", "in", "that", "country", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 18, false], null], [0, 6, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 23, false], [0, 19, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 19, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_orders", "query": "SELECT order_id ,  customer_id FROM orders ORDER BY date_order_placed LIMIT 1", "query_toks": ["SELECT", "order_id", ",", "customer_id", "FROM", "orders", "ORDER", "BY", "date_order_placed", "LIMIT", "1"], "query_toks_no_value": ["select", "order_id", ",", "customer_id", "from", "orders", "order", "by", "date_order_placed", "limit", "value"], "question": "what are the order id and customer id of the oldest order?", "question_toks": ["what", "are", "the", "order", "id", "and", "customer", "id", "of", "the", "oldest", "order", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 10, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_orders", "query": "SELECT order_id ,  customer_id FROM orders ORDER BY date_order_placed LIMIT 1", "query_toks": ["SELECT", "order_id", ",", "customer_id", "FROM", "orders", "ORDER", "BY", "date_order_placed", "LIMIT", "1"], "query_toks_no_value": ["select", "order_id", ",", "customer_id", "from", "orders", "order", "by", "date_order_placed", "limit", "value"], "question": "Find the order id and customer id associated with the oldest order.", "question_toks": ["Find", "the", "order", "id", "and", "customer", "id", "associated", "with", "the", "oldest", "order", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["asc", [[0, [0, 10, false], null]]], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_orders", "query": "SELECT T2.order_id ,  T2.order_status FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"", "query_toks": ["SELECT", "T2.order_id", ",", "T2.order_status", "FROM", "customers", "AS", "T1", "JOIN", "orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T1.customer_name", "=", "``", "Jeramie", "''"], "query_toks_no_value": ["select", "t2", ".", "order_id", ",", "t2", ".", "order_status", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t1", ".", "customer_name", "=", "value"], "question": "Give me a list of id and status of orders which belong to the customer named \"Jeramie\".", "question_toks": ["Give", "me", "a", "list", "of", "id", "and", "status", "of", "orders", "which", "belong", "to", "the", "customer", "named", "``", "Jeramie", "''", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Jeramie\"", null]]}}, {"db_id": "tracking_orders", "query": "SELECT T2.order_id ,  T2.order_status FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"", "query_toks": ["SELECT", "T2.order_id", ",", "T2.order_status", "FROM", "customers", "AS", "T1", "JOIN", "orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T1.customer_name", "=", "``", "Jeramie", "''"], "query_toks_no_value": ["select", "t2", ".", "order_id", ",", "t2", ".", "order_status", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t1", ".", "customer_name", "=", "value"], "question": "Which orders are made by the customer named \"Jeramie\"? Give me the order ids and status.", "question_toks": ["Which", "orders", "are", "made", "by", "the", "customer", "named", "``", "Jeramie", "''", "?", "Give", "me", "the", "order", "ids", "and", "status", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 2, false], null], "\"Jeramie\"", null]]}}, {"db_id": "tracking_orders", "query": "SELECT count(*) ,  T3.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T3.product_id", "FROM", "orders", "AS", "T1", "JOIN", "order_items", "AS", "T2", "JOIN", "products", "AS", "T3", "ON", "T1.order_id", "=", "T2.order_id", "AND", "T2.product_id", "=", "T3.product_id", "GROUP", "BY", "T3.product_id"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t3", ".", "product_id", "from", "orders", "as", "t1", "join", "order_items", "as", "t2", "join", "products", "as", "t3", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "and", "t2", ".", "product_id", "=", "t3", ".", "product_id", "group", "by", "t3", ".", "product_id"], "question": "List the count and id of each product in all the orders.", "question_toks": ["List", "the", "count", "and", "id", "of", "each", "product", "in", "all", "the", "orders", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 17, false], null], "and", [false, 2, [0, [0, 16, false], null], [0, 12, false], null]], "table_units": [["table_unit", 2], ["table_unit", 4], ["table_unit", 3]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_orders", "query": "SELECT count(*) ,  T3.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T3.product_id", "FROM", "orders", "AS", "T1", "JOIN", "order_items", "AS", "T2", "JOIN", "products", "AS", "T3", "ON", "T1.order_id", "=", "T2.order_id", "AND", "T2.product_id", "=", "T3.product_id", "GROUP", "BY", "T3.product_id"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t3", ".", "product_id", "from", "orders", "as", "t1", "join", "order_items", "as", "t2", "join", "products", "as", "t3", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "and", "t2", ".", "product_id", "=", "t3", ".", "product_id", "group", "by", "t3", ".", "product_id"], "question": "For each product, return its id and the number of times it was ordered.", "question_toks": ["For", "each", "product", ",", "return", "its", "id", "and", "the", "number", "of", "times", "it", "was", "ordered", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 17, false], null], "and", [false, 2, [0, [0, 16, false], null], [0, 12, false], null]], "table_units": [["table_unit", 2], ["table_unit", 4], ["table_unit", 3]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 12, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_orders", "query": "SELECT T3.product_name ,  count(*) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id", "query_toks": ["SELECT", "T3.product_name", ",", "count", "(", "*", ")", "FROM", "orders", "AS", "T1", "JOIN", "order_items", "AS", "T2", "JOIN", "products", "AS", "T3", "ON", "T1.order_id", "=", "T2.order_id", "AND", "T2.product_id", "=", "T3.product_id", "GROUP", "BY", "T3.product_id"], "query_toks_no_value": ["select", "t3", ".", "product_name", ",", "count", "(", "*", ")", "from", "orders", "as", "t1", "join", "order_items", "as", "t2", "join", "products", "as", "t3", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "and", "t2", ".", "product_id", "=", "t3", ".", "product_id", "group", "by", "t3", ".", "product_id"], "question": "List the name and count of each product in all orders.", "question_toks": ["List", "the", "name", "and", "count", "of", "each", "product", "in", "all", "orders", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 17, false], null], "and", [false, 2, [0, [0, 16, false], null], [0, 12, false], null]], "table_units": [["table_unit", 2], ["table_unit", 4], ["table_unit", 3]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_orders", "query": "SELECT T3.product_name ,  count(*) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id", "query_toks": ["SELECT", "T3.product_name", ",", "count", "(", "*", ")", "FROM", "orders", "AS", "T1", "JOIN", "order_items", "AS", "T2", "JOIN", "products", "AS", "T3", "ON", "T1.order_id", "=", "T2.order_id", "AND", "T2.product_id", "=", "T3.product_id", "GROUP", "BY", "T3.product_id"], "query_toks_no_value": ["select", "t3", ".", "product_name", ",", "count", "(", "*", ")", "from", "orders", "as", "t1", "join", "order_items", "as", "t2", "join", "products", "as", "t3", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "and", "t2", ".", "product_id", "=", "t3", ".", "product_id", "group", "by", "t3", ".", "product_id"], "question": "For each product, show its name and the number of times it was ordered.", "question_toks": ["For", "each", "product", ",", "show", "its", "name", "and", "the", "number", "of", "times", "it", "was", "ordered", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 7, false], null], [0, 17, false], null], "and", [false, 2, [0, [0, 16, false], null], [0, 12, false], null]], "table_units": [["table_unit", 2], ["table_unit", 4], ["table_unit", 3]]}, "groupBy": [[0, 12, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 13, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_orders", "query": "SELECT T2.customer_name ,  count(*) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T2.customer_name", ",", "count", "(", "*", ")", "FROM", "orders", "AS", "T1", "JOIN", "customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T2.customer_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "customer_name", ",", "count", "(", "*", ")", "from", "orders", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t2", ".", "customer_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "For each customer who has at least two orders, find the customer name and number of orders made.", "question_toks": ["For", "each", "customer", "who", "has", "at", "least", "two", "orders", ",", "find", "the", "customer", "name", "and", "number", "of", "orders", "made", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 1, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "tracking_orders", "query": "SELECT T2.customer_name ,  count(*) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "T2.customer_name", ",", "count", "(", "*", ")", "FROM", "orders", "AS", "T1", "JOIN", "customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "GROUP", "BY", "T2.customer_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "customer_name", ",", "count", "(", "*", ")", "from", "orders", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t2", ".", "customer_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Which customers have made at least two orders? Give me each customer name and number of orders made.", "question_toks": ["Which", "customers", "have", "made", "at", "least", "two", "orders", "?", "Give", "me", "each", "customer", "name", "and", "number", "of", "orders", "made", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]], "table_units": [["table_unit", 2], ["table_unit", 0]]}, "groupBy": [[0, 1, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "architecture", "query": "SELECT name ,  nationality ,  id FROM architect WHERE gender  =  'male' ORDER BY name", "query_toks": ["SELECT", "name", ",", "nationality", ",", "id", "FROM", "architect", "WHERE", "gender", "=", "'male", "'", "ORDER", "BY", "name"], "query_toks_no_value": ["select", "name", ",", "nationality", ",", "id", "from", "architect", "where", "gender", "=", "value", "order", "by", "name"], "question": "List the name, nationality and id of all male architects ordered by their names lexicographically.", "question_toks": ["List", "the", "name", ",", "nationality", "and", "id", "of", "all", "male", "architects", "ordered", "by", "their", "names", "lexicographically", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 2, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 1, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 4, false], null], "\"male\"", null]]}}, {"db_id": "architecture", "query": "SELECT max(T1.length_meters) ,  T2.name FROM bridge AS T1 JOIN architect AS T2 ON T1.architect_id  =  T2.id", "query_toks": ["SELECT", "max", "(", "T1.length_meters", ")", ",", "T2.name", "FROM", "bridge", "AS", "T1", "JOIN", "architect", "AS", "T2", "ON", "T1.architect_id", "=", "T2.id"], "query_toks_no_value": ["select", "max", "(", "t1", ".", "length_meters", ")", ",", "t2", ".", "name", "from", "bridge", "as", "t1", "join", "architect", "as", "t2", "on", "t1", ".", "architect_id", "=", "t2", ".", "id"], "question": "What is the maximum length in meters for the bridges and what are the architects' names?", "question_toks": ["What", "is", "the", "maximum", "length", "in", "meters", "for", "the", "bridges", "and", "what", "are", "the", "architects", "'", "names", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 5, false], null], [0, 1, false], null]], "table_units": [["table_unit", 1], ["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[1, [0, [0, 9, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "architecture", "query": "SELECT name ,  built_year FROM mill WHERE TYPE  =  'Grondzeiler'", "query_toks": ["SELECT", "name", ",", "built_year", "FROM", "mill", "WHERE", "TYPE", "=", "'Grondzeiler", "'"], "query_toks_no_value": ["select", "name", ",", "built_year", "from", "mill", "where", "type", "=", "value"], "question": "What are the names and year of construction for the mills of 'Grondzeiler' type?", "question_toks": ["What", "are", "the", "names", "and", "year", "of", "construction", "for", "the", "mills", "of", "'Grondzeiler", "'", "type", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 16, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 15, false], null], "\"Grondzeiler\"", null]]}}, {"db_id": "architecture", "query": "SELECT DISTINCT T1.name ,  T1.nationality FROM architect AS T1 JOIN mill AS t2 ON T1.id  =  T2.architect_id", "query_toks": ["SELECT", "DISTINCT", "T1.name", ",", "T1.nationality", "FROM", "architect", "AS", "T1", "JOIN", "mill", "AS", "t2", "ON", "T1.id", "=", "T2.architect_id"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", ",", "t1", ".", "nationality", "from", "architect", "as", "t1", "join", "mill", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "architect_id"], "question": "What are the distinct names and nationalities of the architects who have ever built a mill?", "question_toks": ["What", "are", "the", "distinct", "names", "and", "nationalities", "of", "the", "architects", "who", "have", "ever", "built", "a", "mill", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 11, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [true, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "architecture", "query": "SELECT T1.id ,  T1.name FROM architect AS T1 JOIN bridge AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  >=  3", "query_toks": ["SELECT", "T1.id", ",", "T1.name", "FROM", "architect", "AS", "T1", "JOIN", "bridge", "AS", "T2", "ON", "T1.id", "=", "T2.architect_id", "GROUP", "BY", "T1.id", "HAVING", "count", "(", "*", ")", ">", "=", "3"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "name", "from", "architect", "as", "t1", "join", "bridge", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "architect_id", "group", "by", "t1", ".", "id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the ids and names of the architects who built at least 3 bridges ?", "question_toks": ["What", "are", "the", "ids", "and", "names", "of", "the", "architects", "who", "built", "at", "least", "3", "bridges", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 1, false]], "having": [[false, 5, [0, [3, 0, false], null], 3.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "union": null, "where": []}}, {"db_id": "architecture", "query": "SELECT T1.id ,  T1.name ,  T1.nationality FROM architect AS T1 JOIN mill AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.id", ",", "T1.name", ",", "T1.nationality", "FROM", "architect", "AS", "T1", "JOIN", "mill", "AS", "T2", "ON", "T1.id", "=", "T2.architect_id", "GROUP", "BY", "T1.id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "name", ",", "t1", ".", "nationality", "from", "architect", "as", "t1", "join", "mill", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "architect_id", "group", "by", "t1", ".", "id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the id, name and nationality of the architect who built most mills?", "question_toks": ["What", "is", "the", "id", ",", "name", "and", "nationality", "of", "the", "architect", "who", "built", "most", "mills", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 11, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 1, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "architecture", "query": "SELECT T1.id ,  T1.name ,  T1.gender FROM architect AS T1 JOIN bridge AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  =  2 UNION SELECT T1.id ,  T1.name ,  T1.gender FROM architect AS T1 JOIN mill AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  =  1", "query_toks": ["SELECT", "T1.id", ",", "T1.name", ",", "T1.gender", "FROM", "architect", "AS", "T1", "JOIN", "bridge", "AS", "T2", "ON", "T1.id", "=", "T2.architect_id", "GROUP", "BY", "T1.id", "HAVING", "count", "(", "*", ")", "=", "2", "UNION", "SELECT", "T1.id", ",", "T1.name", ",", "T1.gender", "FROM", "architect", "AS", "T1", "JOIN", "mill", "AS", "T2", "ON", "T1.id", "=", "T2.architect_id", "GROUP", "BY", "T1.id", "HAVING", "count", "(", "*", ")", "=", "1"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "name", ",", "t1", ".", "gender", "from", "architect", "as", "t1", "join", "bridge", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "architect_id", "group", "by", "t1", ".", "id", "having", "count", "(", "*", ")", "=", "value", "union", "select", "t1", ".", "id", ",", "t1", ".", "name", ",", "t1", ".", "gender", "from", "architect", "as", "t1", "join", "mill", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "architect_id", "group", "by", "t1", ".", "id", "having", "count", "(", "*", ")", "=", "value"], "question": "What are the ids, names and genders of the architects who built two bridges or one mill?", "question_toks": ["What", "are", "the", "ids", ",", "names", "and", "genders", "of", "the", "architects", "who", "built", "two", "bridges", "or", "one", "mill", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 11, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [[0, 1, false]], "having": [[false, 2, [0, [3, 0, false], null], 2.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "union": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 11, false], null]], "table_units": [["table_unit", 0], ["table_unit", 2]]}, "groupBy": [[0, 1, false]], "having": [[false, 2, [0, [3, 0, false], null], 1.0, null]], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": []}, "where": []}}, {"db_id": "architecture", "query": "SELECT TYPE ,  count(*) FROM mill GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "TYPE", ",", "count", "(", "*", ")", "FROM", "mill", "GROUP", "BY", "TYPE", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "type", ",", "count", "(", "*", ")", "from", "mill", "group", "by", "type", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the most common mill type, and how many are there?", "question_toks": ["What", "is", "the", "most", "common", "mill", "type", ",", "and", "how", "many", "are", "there", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 2]]}, "groupBy": [[0, 15, false]], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [3, 0, false], null]]], "select": [false, [[0, [0, [0, 15, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "culture_company", "query": "SELECT book_title ,  author_or_editor FROM book_club WHERE YEAR  >  1989", "query_toks": ["SELECT", "book_title", ",", "author_or_editor", "FROM", "book_club", "WHERE", "YEAR", ">", "1989"], "query_toks_no_value": ["select", "book_title", ",", "author_or_editor", "from", "book_club", "where", "year", ">", "value"], "question": "show the titles, and authors or editors for all books made after the year 1989.", "question_toks": ["show", "the", "titles", ",", "and", "authors", "or", "editors", "for", "all", "books", "made", "after", "the", "year", "1989", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 2, false], null], 1989.0, null]]}}, {"db_id": "culture_company", "query": "SELECT book_title ,  author_or_editor FROM book_club WHERE YEAR  >  1989", "query_toks": ["SELECT", "book_title", ",", "author_or_editor", "FROM", "book_club", "WHERE", "YEAR", ">", "1989"], "query_toks_no_value": ["select", "book_title", ",", "author_or_editor", "from", "book_club", "where", "year", ">", "value"], "question": "What are the titles and authors or editors that correspond to books made after 1989?", "question_toks": ["What", "are", "the", "titles", "and", "authors", "or", "editors", "that", "correspond", "to", "books", "made", "after", "1989", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 3, false], null]]]], "union": null, "where": [[false, 3, [0, [0, 2, false], null], 1989.0, null]]}}, {"db_id": "culture_company", "query": "SELECT YEAR ,  book_title ,  publisher FROM book_club ORDER BY YEAR DESC", "query_toks": ["SELECT", "YEAR", ",", "book_title", ",", "publisher", "FROM", "book_club", "ORDER", "BY", "YEAR", "DESC"], "query_toks_no_value": ["select", "year", ",", "book_title", ",", "publisher", "from", "book_club", "order", "by", "year", "desc"], "question": "Show the years, book titles, and publishers for all books, in descending order by year.", "question_toks": ["Show", "the", "years", ",", "book", "titles", ",", "and", "publishers", "for", "all", "books", ",", "in", "descending", "order", "by", "year", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 2, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "culture_company", "query": "SELECT YEAR ,  book_title ,  publisher FROM book_club ORDER BY YEAR DESC", "query_toks": ["SELECT", "YEAR", ",", "book_title", ",", "publisher", "FROM", "book_club", "ORDER", "BY", "YEAR", "DESC"], "query_toks_no_value": ["select", "year", ",", "book_title", ",", "publisher", "from", "book_club", "order", "by", "year", "desc"], "question": "What are the years, titles, and publishers for all books, ordered by year descending?", "question_toks": ["What", "are", "the", "years", ",", "titles", ",", "and", "publishers", "for", "all", "books", ",", "ordered", "by", "year", "descending", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["desc", [[0, [0, 2, false], null]]], "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "union": null, "where": []}}, {"db_id": "culture_company", "query": "SELECT publisher ,  count(*) FROM book_club GROUP BY publisher", "query_toks": ["SELECT", "publisher", ",", "count", "(", "*", ")", "FROM", "book_club", "GROUP", "BY", "publisher"], "query_toks_no_value": ["select", "publisher", ",", "count", "(", "*", ")", "from", "book_club", "group", "by", "publisher"], "question": "Show all publishers and the number of books for each publisher.", "question_toks": ["Show", "all", "publishers", "and", "the", "number", "of", "books", "for", "each", "publisher", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "culture_company", "query": "SELECT publisher ,  count(*) FROM book_club GROUP BY publisher", "query_toks": ["SELECT", "publisher", ",", "count", "(", "*", ")", "FROM", "book_club", "GROUP", "BY", "publisher"], "query_toks_no_value": ["select", "publisher", ",", "count", "(", "*", ")", "from", "book_club", "group", "by", "publisher"], "question": "How many books are there for each publisher?", "question_toks": ["How", "many", "books", "are", "there", "for", "each", "publisher", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 5, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "culture_company", "query": "SELECT category ,  count(*) FROM book_club GROUP BY category", "query_toks": ["SELECT", "category", ",", "count", "(", "*", ")", "FROM", "book_club", "GROUP", "BY", "category"], "query_toks_no_value": ["select", "category", ",", "count", "(", "*", ")", "from", "book_club", "group", "by", "category"], "question": "Show all book categories and the number of books in each category.", "question_toks": ["Show", "all", "book", "categories", "and", "the", "number", "of", "books", "in", "each", "category", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "culture_company", "query": "SELECT category ,  count(*) FROM book_club GROUP BY category", "query_toks": ["SELECT", "category", ",", "count", "(", "*", ")", "FROM", "book_club", "GROUP", "BY", "category"], "query_toks_no_value": ["select", "category", ",", "count", "(", "*", ")", "from", "book_club", "group", "by", "category"], "question": "How many books fall into each category?", "question_toks": ["How", "many", "books", "fall", "into", "each", "category", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 0]]}, "groupBy": [[0, 6, false]], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "union": null, "where": []}}, {"db_id": "culture_company", "query": "SELECT title ,  YEAR ,  director FROM movie ORDER BY budget_million", "query_toks": ["SELECT", "title", ",", "YEAR", ",", "director", "FROM", "movie", "ORDER", "BY", "budget_million"], "query_toks_no_value": ["select", "title", ",", "year", ",", "director", "from", "movie", "order", "by", "budget_million"], "question": "Show all movie titles, years, and directors, ordered by budget.", "question_toks": ["Show", "all", "movie", "titles", ",", "years", ",", "and", "directors", ",", "ordered", "by", "budget", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 12, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "culture_company", "query": "SELECT title ,  YEAR ,  director FROM movie ORDER BY budget_million", "query_toks": ["SELECT", "title", ",", "YEAR", ",", "director", "FROM", "movie", "ORDER", "BY", "budget_million"], "query_toks_no_value": ["select", "title", ",", "year", ",", "director", "from", "movie", "order", "by", "budget_million"], "question": "What are the titles, years, and directors of all movies, ordered by budget in millions?", "question_toks": ["What", "are", "the", "titles", ",", "years", ",", "and", "directors", "of", "all", "movies", ",", "ordered", "by", "budget", "in", "millions", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": ["asc", [[0, [0, 12, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": []}}, {"db_id": "culture_company", "query": "SELECT title ,  director FROM movie WHERE YEAR  <=  2000 ORDER BY gross_worldwide DESC LIMIT 1", "query_toks": ["SELECT", "title", ",", "director", "FROM", "movie", "WHERE", "YEAR", "<", "=", "2000", "ORDER", "BY", "gross_worldwide", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "title", ",", "director", "from", "movie", "where", "year", "<", "=", "value", "order", "by", "gross_worldwide", "desc", "limit", "value"], "question": "What is the title and director for the movie with highest worldwide gross in the year 2000 or before?", "question_toks": ["What", "is", "the", "title", "and", "director", "for", "the", "movie", "with", "highest", "worldwide", "gross", "in", "the", "year", "2000", "or", "before", "?"], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 13, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 6, [0, [0, 10, false], null], 2000.0, null]]}}, {"db_id": "culture_company", "query": "SELECT title ,  director FROM movie WHERE YEAR  <=  2000 ORDER BY gross_worldwide DESC LIMIT 1", "query_toks": ["SELECT", "title", ",", "director", "FROM", "movie", "WHERE", "YEAR", "<", "=", "2000", "ORDER", "BY", "gross_worldwide", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "title", ",", "director", "from", "movie", "where", "year", "<", "=", "value", "order", "by", "gross_worldwide", "desc", "limit", "value"], "question": "Return the title and director of the movie released in the year 2000 or earlier that had the highest worldwide gross.", "question_toks": ["Return", "the", "title", "and", "director", "of", "the", "movie", "released", "in", "the", "year", "2000", "or", "earlier", "that", "had", "the", "highest", "worldwide", "gross", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 13, false], null]]], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 11, false], null]]]], "union": null, "where": [[false, 6, [0, [0, 10, false], null], 2000.0, null]]}}, {"db_id": "culture_company", "query": "SELECT avg(budget_million) ,  max(budget_million) ,  min(budget_million) FROM movie WHERE YEAR  <  2000", "query_toks": ["SELECT", "avg", "(", "budget_million", ")", ",", "max", "(", "budget_million", ")", ",", "min", "(", "budget_million", ")", "FROM", "movie", "WHERE", "YEAR", "<", "2000"], "query_toks_no_value": ["select", "avg", "(", "budget_million", ")", ",", "max", "(", "budget_million", ")", ",", "min", "(", "budget_million", ")", "from", "movie", "where", "year", "<", "value"], "question": "What is the average, maximum, and minimum budget for all movies before 2000.", "question_toks": ["What", "is", "the", "average", ",", "maximum", ",", "and", "minimum", "budget", "for", "all", "movies", "before", "2000", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 12, false], null]], [1, [0, [0, 12, false], null]], [2, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 10, false], null], 2000.0, null]]}}, {"db_id": "culture_company", "query": "SELECT avg(budget_million) ,  max(budget_million) ,  min(budget_million) FROM movie WHERE YEAR  <  2000", "query_toks": ["SELECT", "avg", "(", "budget_million", ")", ",", "max", "(", "budget_million", ")", ",", "min", "(", "budget_million", ")", "FROM", "movie", "WHERE", "YEAR", "<", "2000"], "query_toks_no_value": ["select", "avg", "(", "budget_million", ")", ",", "max", "(", "budget_million", ")", ",", "min", "(", "budget_million", ")", "from", "movie", "where", "year", "<", "value"], "question": "Return the average, maximum, and minimum budgets in millions for movies made before the year 2000.", "question_toks": ["Return", "the", "average", ",", "maximum", ",", "and", "minimum", "budgets", "in", "millions", "for", "movies", "made", "before", "the", "year", "2000", "."], "sql": {"except": null, "from": {"conds": [], "table_units": [["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[5, [0, [0, 12, false], null]], [1, [0, [0, 12, false], null]], [2, [0, [0, 12, false], null]]]], "union": null, "where": [[false, 4, [0, [0, 10, false], null], 2000.0, null]]}}, {"db_id": "culture_company", "query": "SELECT T1.title ,  T3.book_title FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id JOIN book_club AS T3 ON T3.book_club_id  =  T2.book_club_id WHERE T2.incorporated_in  =  'China'", "query_toks": ["SELECT", "T1.title", ",", "T3.book_title", "FROM", "movie", "AS", "T1", "JOIN", "culture_company", "AS", "T2", "ON", "T1.movie_id", "=", "T2.movie_id", "JOIN", "book_club", "AS", "T3", "ON", "T3.book_club_id", "=", "T2.book_club_id", "WHERE", "T2.incorporated_in", "=", "'China", "'"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t3", ".", "book_title", "from", "movie", "as", "t1", "join", "culture_company", "as", "t2", "on", "t1", ".", "movie_id", "=", "t2", ".", "movie_id", "join", "book_club", "as", "t3", "on", "t3", ".", "book_club_id", "=", "t2", ".", "book_club_id", "where", "t2", ".", "incorporated_in", "=", "value"], "question": "Show the movie titles and book titles for all companies in China.", "question_toks": ["Show", "the", "movie", "titles", "and", "book", "titles", "for", "all", "companies", "in", "China", "."], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 19, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 16, false], null], "\"China\"", null]]}}, {"db_id": "culture_company", "query": "SELECT T1.title ,  T3.book_title FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id JOIN book_club AS T3 ON T3.book_club_id  =  T2.book_club_id WHERE T2.incorporated_in  =  'China'", "query_toks": ["SELECT", "T1.title", ",", "T3.book_title", "FROM", "movie", "AS", "T1", "JOIN", "culture_company", "AS", "T2", "ON", "T1.movie_id", "=", "T2.movie_id", "JOIN", "book_club", "AS", "T3", "ON", "T3.book_club_id", "=", "T2.book_club_id", "WHERE", "T2.incorporated_in", "=", "'China", "'"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t3", ".", "book_title", "from", "movie", "as", "t1", "join", "culture_company", "as", "t2", "on", "t1", ".", "movie_id", "=", "t2", ".", "movie_id", "join", "book_club", "as", "t3", "on", "t3", ".", "book_club_id", "=", "t2", ".", "book_club_id", "where", "t2", ".", "incorporated_in", "=", "value"], "question": "What are the titles of movies and books corresponding to companies incorporated in China?", "question_toks": ["What", "are", "the", "titles", "of", "movies", "and", "books", "corresponding", "to", "companies", "incorporated", "in", "China", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 8, false], null], [0, 19, false], null]], "table_units": [["table_unit", 1], ["table_unit", 2]]}, "groupBy": [], "having": [], "intersect": null, "limit": null, "orderBy": [], "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 4, false], null]]]], "union": null, "where": [[false, 2, [0, [0, 16, false], null], "\"China\"", null]]}}]